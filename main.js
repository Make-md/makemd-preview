/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __toBinary = /* @__PURE__ */ (() => {
  var table = new Uint8Array(128);
  for (var i4 = 0; i4 < 64; i4++)
    table[i4 < 26 ? i4 + 65 : i4 < 52 ? i4 + 71 : i4 < 62 ? i4 - 4 : i4 * 4 - 205] = i4;
  return (base64) => {
    var n2 = base64.length, bytes = new Uint8Array((n2 - (base64[n2 - 1] == "=") - (base64[n2 - 2] == "=")) * 3 / 4 | 0);
    for (var i5 = 0, j4 = 0; i5 < n2; ) {
      var c0 = table[base64.charCodeAt(i5++)], c1 = table[base64.charCodeAt(i5++)];
      var c22 = table[base64.charCodeAt(i5++)], c32 = table[base64.charCodeAt(i5++)];
      bytes[j4++] = c0 << 2 | c1 >> 4;
      bytes[j4++] = c1 << 4 | c22 >> 2;
      bytes[j4++] = c22 << 6 | c32;
    }
    return bytes;
  };
})();

// node_modules/preact/dist/preact.module.js
function h(n2, l3) {
  for (var u4 in l3)
    n2[u4] = l3[u4];
  return n2;
}
function v(n2) {
  var l3 = n2.parentNode;
  l3 && l3.removeChild(n2);
}
function y(l3, u4, i4) {
  var t4, r3, o3, f4 = {};
  for (o3 in u4)
    "key" == o3 ? t4 = u4[o3] : "ref" == o3 ? r3 = u4[o3] : f4[o3] = u4[o3];
  if (arguments.length > 2 && (f4.children = arguments.length > 3 ? n.call(arguments, 2) : i4), "function" == typeof l3 && null != l3.defaultProps)
    for (o3 in l3.defaultProps)
      void 0 === f4[o3] && (f4[o3] = l3.defaultProps[o3]);
  return p(l3, f4, t4, r3, null);
}
function p(n2, i4, t4, r3, o3) {
  var f4 = { type: n2, props: i4, key: t4, ref: r3, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: null == o3 ? ++u : o3 };
  return null == o3 && null != l.vnode && l.vnode(f4), f4;
}
function d() {
  return { current: null };
}
function _(n2) {
  return n2.children;
}
function k(n2, l3) {
  this.props = n2, this.context = l3;
}
function b(n2, l3) {
  if (null == l3)
    return n2.__ ? b(n2.__, n2.__.__k.indexOf(n2) + 1) : null;
  for (var u4; l3 < n2.__k.length; l3++)
    if (null != (u4 = n2.__k[l3]) && null != u4.__e)
      return u4.__e;
  return "function" == typeof n2.type ? b(n2) : null;
}
function g(n2) {
  var l3, u4;
  if (null != (n2 = n2.__) && null != n2.__c) {
    for (n2.__e = n2.__c.base = null, l3 = 0; l3 < n2.__k.length; l3++)
      if (null != (u4 = n2.__k[l3]) && null != u4.__e) {
        n2.__e = n2.__c.base = u4.__e;
        break;
      }
    return g(n2);
  }
}
function m(n2) {
  (!n2.__d && (n2.__d = true) && t.push(n2) && !w.__r++ || r !== l.debounceRendering) && ((r = l.debounceRendering) || o)(w);
}
function w() {
  var n2, l3, u4, i4, r3, o3, e4, c4;
  for (t.sort(f); n2 = t.shift(); )
    n2.__d && (l3 = t.length, i4 = void 0, r3 = void 0, e4 = (o3 = (u4 = n2).__v).__e, (c4 = u4.__P) && (i4 = [], (r3 = h({}, o3)).__v = o3.__v + 1, L(c4, o3, r3, u4.__n, void 0 !== c4.ownerSVGElement, null != o3.__h ? [e4] : null, i4, null == e4 ? b(o3) : e4, o3.__h), M(i4, o3), o3.__e != e4 && g(o3)), t.length > l3 && t.sort(f));
  w.__r = 0;
}
function x(n2, l3, u4, i4, t4, r3, o3, f4, e4, a5) {
  var h5, v3, y5, d5, k5, g4, m5, w5 = i4 && i4.__k || s, x5 = w5.length;
  for (u4.__k = [], h5 = 0; h5 < l3.length; h5++)
    if (null != (d5 = u4.__k[h5] = null == (d5 = l3[h5]) || "boolean" == typeof d5 || "function" == typeof d5 ? null : "string" == typeof d5 || "number" == typeof d5 || "bigint" == typeof d5 ? p(null, d5, null, null, d5) : Array.isArray(d5) ? p(_, { children: d5 }, null, null, null) : d5.__b > 0 ? p(d5.type, d5.props, d5.key, d5.ref ? d5.ref : null, d5.__v) : d5)) {
      if (d5.__ = u4, d5.__b = u4.__b + 1, null === (y5 = w5[h5]) || y5 && d5.key == y5.key && d5.type === y5.type)
        w5[h5] = void 0;
      else
        for (v3 = 0; v3 < x5; v3++) {
          if ((y5 = w5[v3]) && d5.key == y5.key && d5.type === y5.type) {
            w5[v3] = void 0;
            break;
          }
          y5 = null;
        }
      L(n2, d5, y5 = y5 || c, t4, r3, o3, f4, e4, a5), k5 = d5.__e, (v3 = d5.ref) && y5.ref != v3 && (m5 || (m5 = []), y5.ref && m5.push(y5.ref, null, d5), m5.push(v3, d5.__c || k5, d5)), null != k5 ? (null == g4 && (g4 = k5), "function" == typeof d5.type && d5.__k === y5.__k ? d5.__d = e4 = A(d5, e4, n2) : e4 = C(n2, d5, y5, w5, k5, e4), "function" == typeof u4.type && (u4.__d = e4)) : e4 && y5.__e == e4 && e4.parentNode != n2 && (e4 = b(y5));
    }
  for (u4.__e = g4, h5 = x5; h5--; )
    null != w5[h5] && ("function" == typeof u4.type && null != w5[h5].__e && w5[h5].__e == u4.__d && (u4.__d = $(i4).nextSibling), S(w5[h5], w5[h5]));
  if (m5)
    for (h5 = 0; h5 < m5.length; h5++)
      O(m5[h5], m5[++h5], m5[++h5]);
}
function A(n2, l3, u4) {
  for (var i4, t4 = n2.__k, r3 = 0; t4 && r3 < t4.length; r3++)
    (i4 = t4[r3]) && (i4.__ = n2, l3 = "function" == typeof i4.type ? A(i4, l3, u4) : C(u4, i4, i4, t4, i4.__e, l3));
  return l3;
}
function P(n2, l3) {
  return l3 = l3 || [], null == n2 || "boolean" == typeof n2 || (Array.isArray(n2) ? n2.some(function(n3) {
    P(n3, l3);
  }) : l3.push(n2)), l3;
}
function C(n2, l3, u4, i4, t4, r3) {
  var o3, f4, e4;
  if (void 0 !== l3.__d)
    o3 = l3.__d, l3.__d = void 0;
  else if (null == u4 || t4 != r3 || null == t4.parentNode)
    n:
      if (null == r3 || r3.parentNode !== n2)
        n2.appendChild(t4), o3 = null;
      else {
        for (f4 = r3, e4 = 0; (f4 = f4.nextSibling) && e4 < i4.length; e4 += 1)
          if (f4 == t4)
            break n;
        n2.insertBefore(t4, r3), o3 = r3;
      }
  return void 0 !== o3 ? o3 : t4.nextSibling;
}
function $(n2) {
  var l3, u4, i4;
  if (null == n2.type || "string" == typeof n2.type)
    return n2.__e;
  if (n2.__k) {
    for (l3 = n2.__k.length - 1; l3 >= 0; l3--)
      if ((u4 = n2.__k[l3]) && (i4 = $(u4)))
        return i4;
  }
  return null;
}
function H(n2, l3, u4, i4, t4) {
  var r3;
  for (r3 in u4)
    "children" === r3 || "key" === r3 || r3 in l3 || T(n2, r3, null, u4[r3], i4);
  for (r3 in l3)
    t4 && "function" != typeof l3[r3] || "children" === r3 || "key" === r3 || "value" === r3 || "checked" === r3 || u4[r3] === l3[r3] || T(n2, r3, l3[r3], u4[r3], i4);
}
function I(n2, l3, u4) {
  "-" === l3[0] ? n2.setProperty(l3, null == u4 ? "" : u4) : n2[l3] = null == u4 ? "" : "number" != typeof u4 || a.test(l3) ? u4 : u4 + "px";
}
function T(n2, l3, u4, i4, t4) {
  var r3;
  n:
    if ("style" === l3)
      if ("string" == typeof u4)
        n2.style.cssText = u4;
      else {
        if ("string" == typeof i4 && (n2.style.cssText = i4 = ""), i4)
          for (l3 in i4)
            u4 && l3 in u4 || I(n2.style, l3, "");
        if (u4)
          for (l3 in u4)
            i4 && u4[l3] === i4[l3] || I(n2.style, l3, u4[l3]);
      }
    else if ("o" === l3[0] && "n" === l3[1])
      r3 = l3 !== (l3 = l3.replace(/Capture$/, "")), l3 = l3.toLowerCase() in n2 ? l3.toLowerCase().slice(2) : l3.slice(2), n2.l || (n2.l = {}), n2.l[l3 + r3] = u4, u4 ? i4 || n2.addEventListener(l3, r3 ? z : j, r3) : n2.removeEventListener(l3, r3 ? z : j, r3);
    else if ("dangerouslySetInnerHTML" !== l3) {
      if (t4)
        l3 = l3.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
      else if ("width" !== l3 && "height" !== l3 && "href" !== l3 && "list" !== l3 && "form" !== l3 && "tabIndex" !== l3 && "download" !== l3 && l3 in n2)
        try {
          n2[l3] = null == u4 ? "" : u4;
          break n;
        } catch (n3) {
        }
      "function" == typeof u4 || (null == u4 || false === u4 && -1 == l3.indexOf("-") ? n2.removeAttribute(l3) : n2.setAttribute(l3, u4));
    }
}
function j(n2) {
  return this.l[n2.type + false](l.event ? l.event(n2) : n2);
}
function z(n2) {
  return this.l[n2.type + true](l.event ? l.event(n2) : n2);
}
function L(n2, u4, i4, t4, r3, o3, f4, e4, c4) {
  var s5, a5, v3, y5, p3, d5, b4, g4, m5, w5, A4, P4, C3, $3, H5, I4 = u4.type;
  if (void 0 !== u4.constructor)
    return null;
  null != i4.__h && (c4 = i4.__h, e4 = u4.__e = i4.__e, u4.__h = null, o3 = [e4]), (s5 = l.__b) && s5(u4);
  try {
    n:
      if ("function" == typeof I4) {
        if (g4 = u4.props, m5 = (s5 = I4.contextType) && t4[s5.__c], w5 = s5 ? m5 ? m5.props.value : s5.__ : t4, i4.__c ? b4 = (a5 = u4.__c = i4.__c).__ = a5.__E : ("prototype" in I4 && I4.prototype.render ? u4.__c = a5 = new I4(g4, w5) : (u4.__c = a5 = new k(g4, w5), a5.constructor = I4, a5.render = q), m5 && m5.sub(a5), a5.props = g4, a5.state || (a5.state = {}), a5.context = w5, a5.__n = t4, v3 = a5.__d = true, a5.__h = [], a5._sb = []), null == a5.__s && (a5.__s = a5.state), null != I4.getDerivedStateFromProps && (a5.__s == a5.state && (a5.__s = h({}, a5.__s)), h(a5.__s, I4.getDerivedStateFromProps(g4, a5.__s))), y5 = a5.props, p3 = a5.state, a5.__v = u4, v3)
          null == I4.getDerivedStateFromProps && null != a5.componentWillMount && a5.componentWillMount(), null != a5.componentDidMount && a5.__h.push(a5.componentDidMount);
        else {
          if (null == I4.getDerivedStateFromProps && g4 !== y5 && null != a5.componentWillReceiveProps && a5.componentWillReceiveProps(g4, w5), !a5.__e && null != a5.shouldComponentUpdate && false === a5.shouldComponentUpdate(g4, a5.__s, w5) || u4.__v === i4.__v) {
            for (u4.__v !== i4.__v && (a5.props = g4, a5.state = a5.__s, a5.__d = false), a5.__e = false, u4.__e = i4.__e, u4.__k = i4.__k, u4.__k.forEach(function(n3) {
              n3 && (n3.__ = u4);
            }), A4 = 0; A4 < a5._sb.length; A4++)
              a5.__h.push(a5._sb[A4]);
            a5._sb = [], a5.__h.length && f4.push(a5);
            break n;
          }
          null != a5.componentWillUpdate && a5.componentWillUpdate(g4, a5.__s, w5), null != a5.componentDidUpdate && a5.__h.push(function() {
            a5.componentDidUpdate(y5, p3, d5);
          });
        }
        if (a5.context = w5, a5.props = g4, a5.__P = n2, P4 = l.__r, C3 = 0, "prototype" in I4 && I4.prototype.render) {
          for (a5.state = a5.__s, a5.__d = false, P4 && P4(u4), s5 = a5.render(a5.props, a5.state, a5.context), $3 = 0; $3 < a5._sb.length; $3++)
            a5.__h.push(a5._sb[$3]);
          a5._sb = [];
        } else
          do {
            a5.__d = false, P4 && P4(u4), s5 = a5.render(a5.props, a5.state, a5.context), a5.state = a5.__s;
          } while (a5.__d && ++C3 < 25);
        a5.state = a5.__s, null != a5.getChildContext && (t4 = h(h({}, t4), a5.getChildContext())), v3 || null == a5.getSnapshotBeforeUpdate || (d5 = a5.getSnapshotBeforeUpdate(y5, p3)), H5 = null != s5 && s5.type === _ && null == s5.key ? s5.props.children : s5, x(n2, Array.isArray(H5) ? H5 : [H5], u4, i4, t4, r3, o3, f4, e4, c4), a5.base = u4.__e, u4.__h = null, a5.__h.length && f4.push(a5), b4 && (a5.__E = a5.__ = null), a5.__e = false;
      } else
        null == o3 && u4.__v === i4.__v ? (u4.__k = i4.__k, u4.__e = i4.__e) : u4.__e = N(i4.__e, u4, i4, t4, r3, o3, f4, c4);
    (s5 = l.diffed) && s5(u4);
  } catch (n3) {
    u4.__v = null, (c4 || null != o3) && (u4.__e = e4, u4.__h = !!c4, o3[o3.indexOf(e4)] = null), l.__e(n3, u4, i4);
  }
}
function M(n2, u4) {
  l.__c && l.__c(u4, n2), n2.some(function(u5) {
    try {
      n2 = u5.__h, u5.__h = [], n2.some(function(n3) {
        n3.call(u5);
      });
    } catch (n3) {
      l.__e(n3, u5.__v);
    }
  });
}
function N(l3, u4, i4, t4, r3, o3, f4, e4) {
  var s5, a5, h5, y5 = i4.props, p3 = u4.props, d5 = u4.type, _12 = 0;
  if ("svg" === d5 && (r3 = true), null != o3) {
    for (; _12 < o3.length; _12++)
      if ((s5 = o3[_12]) && "setAttribute" in s5 == !!d5 && (d5 ? s5.localName === d5 : 3 === s5.nodeType)) {
        l3 = s5, o3[_12] = null;
        break;
      }
  }
  if (null == l3) {
    if (null === d5)
      return document.createTextNode(p3);
    l3 = r3 ? document.createElementNS("http://www.w3.org/2000/svg", d5) : document.createElement(d5, p3.is && p3), o3 = null, e4 = false;
  }
  if (null === d5)
    y5 === p3 || e4 && l3.data === p3 || (l3.data = p3);
  else {
    if (o3 = o3 && n.call(l3.childNodes), a5 = (y5 = i4.props || c).dangerouslySetInnerHTML, h5 = p3.dangerouslySetInnerHTML, !e4) {
      if (null != o3)
        for (y5 = {}, _12 = 0; _12 < l3.attributes.length; _12++)
          y5[l3.attributes[_12].name] = l3.attributes[_12].value;
      (h5 || a5) && (h5 && (a5 && h5.__html == a5.__html || h5.__html === l3.innerHTML) || (l3.innerHTML = h5 && h5.__html || ""));
    }
    if (H(l3, p3, y5, r3, e4), h5)
      u4.__k = [];
    else if (_12 = u4.props.children, x(l3, Array.isArray(_12) ? _12 : [_12], u4, i4, t4, r3 && "foreignObject" !== d5, o3, f4, o3 ? o3[0] : i4.__k && b(i4, 0), e4), null != o3)
      for (_12 = o3.length; _12--; )
        null != o3[_12] && v(o3[_12]);
    e4 || ("value" in p3 && void 0 !== (_12 = p3.value) && (_12 !== l3.value || "progress" === d5 && !_12 || "option" === d5 && _12 !== y5.value) && T(l3, "value", _12, y5.value, false), "checked" in p3 && void 0 !== (_12 = p3.checked) && _12 !== l3.checked && T(l3, "checked", _12, y5.checked, false));
  }
  return l3;
}
function O(n2, u4, i4) {
  try {
    "function" == typeof n2 ? n2(u4) : n2.current = u4;
  } catch (n3) {
    l.__e(n3, i4);
  }
}
function S(n2, u4, i4) {
  var t4, r3;
  if (l.unmount && l.unmount(n2), (t4 = n2.ref) && (t4.current && t4.current !== n2.__e || O(t4, null, u4)), null != (t4 = n2.__c)) {
    if (t4.componentWillUnmount)
      try {
        t4.componentWillUnmount();
      } catch (n3) {
        l.__e(n3, u4);
      }
    t4.base = t4.__P = null, n2.__c = void 0;
  }
  if (t4 = n2.__k)
    for (r3 = 0; r3 < t4.length; r3++)
      t4[r3] && S(t4[r3], u4, i4 || "function" != typeof n2.type);
  i4 || null == n2.__e || v(n2.__e), n2.__ = n2.__e = n2.__d = void 0;
}
function q(n2, l3, u4) {
  return this.constructor(n2, u4);
}
function B(u4, i4, t4) {
  var r3, o3, f4;
  l.__ && l.__(u4, i4), o3 = (r3 = "function" == typeof t4) ? null : t4 && t4.__k || i4.__k, f4 = [], L(i4, u4 = (!r3 && t4 || i4).__k = y(_, null, [u4]), o3 || c, c, void 0 !== i4.ownerSVGElement, !r3 && t4 ? [t4] : o3 ? null : i4.firstChild ? n.call(i4.childNodes) : null, f4, !r3 && t4 ? t4 : o3 ? o3.__e : i4.firstChild, r3), M(f4, u4);
}
function D(n2, l3) {
  B(n2, l3, D);
}
function E(l3, u4, i4) {
  var t4, r3, o3, f4 = h({}, l3.props);
  for (o3 in u4)
    "key" == o3 ? t4 = u4[o3] : "ref" == o3 ? r3 = u4[o3] : f4[o3] = u4[o3];
  return arguments.length > 2 && (f4.children = arguments.length > 3 ? n.call(arguments, 2) : i4), p(l3.type, f4, t4 || l3.key, r3 || l3.ref, null);
}
function F(n2, l3) {
  var u4 = { __c: l3 = "__cC" + e++, __: n2, Consumer: function(n3, l4) {
    return n3.children(l4);
  }, Provider: function(n3) {
    var u5, i4;
    return this.getChildContext || (u5 = [], (i4 = {})[l3] = this, this.getChildContext = function() {
      return i4;
    }, this.shouldComponentUpdate = function(n4) {
      this.props.value !== n4.value && u5.some(function(n5) {
        n5.__e = true, m(n5);
      });
    }, this.sub = function(n4) {
      u5.push(n4);
      var l4 = n4.componentWillUnmount;
      n4.componentWillUnmount = function() {
        u5.splice(u5.indexOf(n4), 1), l4 && l4.call(n4);
      };
    }), n3.children;
  } };
  return u4.Provider.__ = u4.Consumer.contextType = u4;
}
var n, l, u, i, t, r, o, f, e, c, s, a;
var init_preact_module = __esm({
  "node_modules/preact/dist/preact.module.js"() {
    c = {};
    s = [];
    a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
    n = s.slice, l = { __e: function(n2, l3, u4, i4) {
      for (var t4, r3, o3; l3 = l3.__; )
        if ((t4 = l3.__c) && !t4.__)
          try {
            if ((r3 = t4.constructor) && null != r3.getDerivedStateFromError && (t4.setState(r3.getDerivedStateFromError(n2)), o3 = t4.__d), null != t4.componentDidCatch && (t4.componentDidCatch(n2, i4 || {}), o3 = t4.__d), o3)
              return t4.__E = t4;
          } catch (l4) {
            n2 = l4;
          }
      throw n2;
    } }, u = 0, i = function(n2) {
      return null != n2 && void 0 === n2.constructor;
    }, k.prototype.setState = function(n2, l3) {
      var u4;
      u4 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), "function" == typeof n2 && (n2 = n2(h({}, u4), this.props)), n2 && h(u4, n2), null != n2 && this.__v && (l3 && this._sb.push(l3), m(this));
    }, k.prototype.forceUpdate = function(n2) {
      this.__v && (this.__e = true, n2 && this.__h.push(n2), m(this));
    }, k.prototype.render = _, t = [], o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n2, l3) {
      return n2.__v.__b - l3.__v.__b;
    }, w.__r = 0, e = 0;
  }
});

// node_modules/preact/hooks/dist/hooks.module.js
function d2(t4, u4) {
  l.__h && l.__h(r2, t4, o2 || u4), o2 = 0;
  var i4 = r2.__H || (r2.__H = { __: [], __h: [] });
  return t4 >= i4.__.length && i4.__.push({ __V: c2 }), i4.__[t4];
}
function h2(n2) {
  return o2 = 1, s2(B2, n2);
}
function s2(n2, u4, i4) {
  var o3 = d2(t2++, 2);
  if (o3.t = n2, !o3.__c && (o3.__ = [i4 ? i4(u4) : B2(void 0, u4), function(n3) {
    var t4 = o3.__N ? o3.__N[0] : o3.__[0], r3 = o3.t(t4, n3);
    t4 !== r3 && (o3.__N = [r3, o3.__[1]], o3.__c.setState({}));
  }], o3.__c = r2, !r2.u)) {
    var f4 = function(n3, t4, r3) {
      if (!o3.__c.__H)
        return true;
      var u5 = o3.__c.__H.__.filter(function(n4) {
        return n4.__c;
      });
      if (u5.every(function(n4) {
        return !n4.__N;
      }))
        return !c4 || c4.call(this, n3, t4, r3);
      var i5 = false;
      return u5.forEach(function(n4) {
        if (n4.__N) {
          var t5 = n4.__[0];
          n4.__ = n4.__N, n4.__N = void 0, t5 !== n4.__[0] && (i5 = true);
        }
      }), !(!i5 && o3.__c.props === n3) && (!c4 || c4.call(this, n3, t4, r3));
    };
    r2.u = true;
    var c4 = r2.shouldComponentUpdate, e4 = r2.componentWillUpdate;
    r2.componentWillUpdate = function(n3, t4, r3) {
      if (this.__e) {
        var u5 = c4;
        c4 = void 0, f4(n3, t4, r3), c4 = u5;
      }
      e4 && e4.call(this, n3, t4, r3);
    }, r2.shouldComponentUpdate = f4;
  }
  return o3.__N || o3.__;
}
function p2(u4, i4) {
  var o3 = d2(t2++, 3);
  !l.__s && z2(o3.__H, i4) && (o3.__ = u4, o3.i = i4, r2.__H.__h.push(o3));
}
function y2(u4, i4) {
  var o3 = d2(t2++, 4);
  !l.__s && z2(o3.__H, i4) && (o3.__ = u4, o3.i = i4, r2.__h.push(o3));
}
function _2(n2) {
  return o2 = 5, F2(function() {
    return { current: n2 };
  }, []);
}
function A2(n2, t4, r3) {
  o2 = 6, y2(function() {
    return "function" == typeof n2 ? (n2(t4()), function() {
      return n2(null);
    }) : n2 ? (n2.current = t4(), function() {
      return n2.current = null;
    }) : void 0;
  }, null == r3 ? r3 : r3.concat(n2));
}
function F2(n2, r3) {
  var u4 = d2(t2++, 7);
  return z2(u4.__H, r3) ? (u4.__V = n2(), u4.i = r3, u4.__h = n2, u4.__V) : u4.__;
}
function T2(n2, t4) {
  return o2 = 8, F2(function() {
    return n2;
  }, t4);
}
function q2(n2) {
  var u4 = r2.context[n2.__c], i4 = d2(t2++, 9);
  return i4.c = n2, u4 ? (null == i4.__ && (i4.__ = true, u4.sub(r2)), u4.props.value) : n2.__;
}
function x2(t4, r3) {
  l.useDebugValue && l.useDebugValue(r3 ? r3(t4) : t4);
}
function P2(n2) {
  var u4 = d2(t2++, 10), i4 = h2();
  return u4.__ = n2, r2.componentDidCatch || (r2.componentDidCatch = function(n3, t4) {
    u4.__ && u4.__(n3, t4), i4[1](n3);
  }), [i4[0], function() {
    i4[1](void 0);
  }];
}
function V() {
  var n2 = d2(t2++, 11);
  if (!n2.__) {
    for (var u4 = r2.__v; null !== u4 && !u4.__m && null !== u4.__; )
      u4 = u4.__;
    var i4 = u4.__m || (u4.__m = [0, 0]);
    n2.__ = "P" + i4[0] + "-" + i4[1]++;
  }
  return n2.__;
}
function b2() {
  for (var t4; t4 = f2.shift(); )
    if (t4.__P && t4.__H)
      try {
        t4.__H.__h.forEach(k2), t4.__H.__h.forEach(w2), t4.__H.__h = [];
      } catch (r3) {
        t4.__H.__h = [], l.__e(r3, t4.__v);
      }
}
function j2(n2) {
  var t4, r3 = function() {
    clearTimeout(u4), g2 && cancelAnimationFrame(t4), setTimeout(n2);
  }, u4 = setTimeout(r3, 100);
  g2 && (t4 = requestAnimationFrame(r3));
}
function k2(n2) {
  var t4 = r2, u4 = n2.__c;
  "function" == typeof u4 && (n2.__c = void 0, u4()), r2 = t4;
}
function w2(n2) {
  var t4 = r2;
  n2.__c = n2.__(), r2 = t4;
}
function z2(n2, t4) {
  return !n2 || n2.length !== t4.length || t4.some(function(t5, r3) {
    return t5 !== n2[r3];
  });
}
function B2(n2, t4) {
  return "function" == typeof t4 ? t4(n2) : t4;
}
var t2, r2, u2, i2, o2, f2, c2, e2, a2, v2, l2, m2, g2;
var init_hooks_module = __esm({
  "node_modules/preact/hooks/dist/hooks.module.js"() {
    init_preact_module();
    o2 = 0;
    f2 = [];
    c2 = [];
    e2 = l.__b;
    a2 = l.__r;
    v2 = l.diffed;
    l2 = l.__c;
    m2 = l.unmount;
    l.__b = function(n2) {
      r2 = null, e2 && e2(n2);
    }, l.__r = function(n2) {
      a2 && a2(n2), t2 = 0;
      var i4 = (r2 = n2.__c).__H;
      i4 && (u2 === r2 ? (i4.__h = [], r2.__h = [], i4.__.forEach(function(n3) {
        n3.__N && (n3.__ = n3.__N), n3.__V = c2, n3.__N = n3.i = void 0;
      })) : (i4.__h.forEach(k2), i4.__h.forEach(w2), i4.__h = [])), u2 = r2;
    }, l.diffed = function(t4) {
      v2 && v2(t4);
      var o3 = t4.__c;
      o3 && o3.__H && (o3.__H.__h.length && (1 !== f2.push(o3) && i2 === l.requestAnimationFrame || ((i2 = l.requestAnimationFrame) || j2)(b2)), o3.__H.__.forEach(function(n2) {
        n2.i && (n2.__H = n2.i), n2.__V !== c2 && (n2.__ = n2.__V), n2.i = void 0, n2.__V = c2;
      })), u2 = r2 = null;
    }, l.__c = function(t4, r3) {
      r3.some(function(t5) {
        try {
          t5.__h.forEach(k2), t5.__h = t5.__h.filter(function(n2) {
            return !n2.__ || w2(n2);
          });
        } catch (u4) {
          r3.some(function(n2) {
            n2.__h && (n2.__h = []);
          }), r3 = [], l.__e(u4, t5.__v);
        }
      }), l2 && l2(t4, r3);
    }, l.unmount = function(t4) {
      m2 && m2(t4);
      var r3, u4 = t4.__c;
      u4 && u4.__H && (u4.__H.__.forEach(function(n2) {
        try {
          k2(n2);
        } catch (n3) {
          r3 = n3;
        }
      }), u4.__H = void 0, r3 && l.__e(r3, u4.__v));
    };
    g2 = "function" == typeof requestAnimationFrame;
  }
});

// node_modules/preact/compat/dist/compat.module.js
var compat_module_exports = {};
__export(compat_module_exports, {
  Children: () => O2,
  Component: () => k,
  Fragment: () => _,
  PureComponent: () => w3,
  StrictMode: () => mn,
  Suspense: () => D2,
  SuspenseList: () => V2,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: () => ln,
  cloneElement: () => sn,
  createContext: () => F,
  createElement: () => y,
  createFactory: () => fn,
  createPortal: () => z3,
  createRef: () => d,
  default: () => Cn,
  findDOMNode: () => vn,
  flushSync: () => pn,
  forwardRef: () => k3,
  hydrate: () => J,
  isValidElement: () => an,
  lazy: () => M2,
  memo: () => x3,
  render: () => G,
  startTransition: () => yn,
  unmountComponentAtNode: () => hn,
  unstable_batchedUpdates: () => dn,
  useCallback: () => T2,
  useContext: () => q2,
  useDebugValue: () => x2,
  useDeferredValue: () => _n,
  useEffect: () => p2,
  useErrorBoundary: () => P2,
  useId: () => V,
  useImperativeHandle: () => A2,
  useInsertionEffect: () => Sn,
  useLayoutEffect: () => y2,
  useMemo: () => F2,
  useReducer: () => s2,
  useRef: () => _2,
  useState: () => h2,
  useSyncExternalStore: () => gn,
  useTransition: () => bn,
  version: () => cn
});
function g3(n2, t4) {
  for (var e4 in t4)
    n2[e4] = t4[e4];
  return n2;
}
function C2(n2, t4) {
  for (var e4 in n2)
    if ("__source" !== e4 && !(e4 in t4))
      return true;
  for (var r3 in t4)
    if ("__source" !== r3 && n2[r3] !== t4[r3])
      return true;
  return false;
}
function E2(n2, t4) {
  return n2 === t4 && (0 !== n2 || 1 / n2 == 1 / t4) || n2 != n2 && t4 != t4;
}
function w3(n2) {
  this.props = n2;
}
function x3(n2, e4) {
  function r3(n3) {
    var t4 = this.props.ref, r4 = t4 == n3.ref;
    return !r4 && t4 && (t4.call ? t4(null) : t4.current = null), e4 ? !e4(this.props, n3) || !r4 : C2(this.props, n3);
  }
  function u4(e5) {
    return this.shouldComponentUpdate = r3, y(n2, e5);
  }
  return u4.displayName = "Memo(" + (n2.displayName || n2.name) + ")", u4.prototype.isReactComponent = true, u4.__f = true, u4;
}
function k3(n2) {
  function t4(t5) {
    var e4 = g3({}, t5);
    return delete e4.ref, n2(e4, t5.ref || null);
  }
  return t4.$$typeof = N2, t4.render = t4, t4.prototype.isReactComponent = t4.__f = true, t4.displayName = "ForwardRef(" + (n2.displayName || n2.name) + ")", t4;
}
function L2(n2, t4, e4) {
  return n2 && (n2.__c && n2.__c.__H && (n2.__c.__H.__.forEach(function(n3) {
    "function" == typeof n3.__c && n3.__c();
  }), n2.__c.__H = null), null != (n2 = g3({}, n2)).__c && (n2.__c.__P === e4 && (n2.__c.__P = t4), n2.__c = null), n2.__k = n2.__k && n2.__k.map(function(n3) {
    return L2(n3, t4, e4);
  })), n2;
}
function U(n2, t4, e4) {
  return n2 && (n2.__v = null, n2.__k = n2.__k && n2.__k.map(function(n3) {
    return U(n3, t4, e4);
  }), n2.__c && n2.__c.__P === t4 && (n2.__e && e4.insertBefore(n2.__e, n2.__d), n2.__c.__e = true, n2.__c.__P = e4)), n2;
}
function D2() {
  this.__u = 0, this.t = null, this.__b = null;
}
function F3(n2) {
  var t4 = n2.__.__c;
  return t4 && t4.__a && t4.__a(n2);
}
function M2(n2) {
  var e4, r3, u4;
  function o3(o4) {
    if (e4 || (e4 = n2()).then(function(n3) {
      r3 = n3.default || n3;
    }, function(n3) {
      u4 = n3;
    }), u4)
      throw u4;
    if (!r3)
      throw e4;
    return y(r3, o4);
  }
  return o3.displayName = "Lazy", o3.__f = true, o3;
}
function V2() {
  this.u = null, this.o = null;
}
function P3(n2) {
  return this.getChildContext = function() {
    return n2.context;
  }, n2.children;
}
function j3(n2) {
  var e4 = this, r3 = n2.i;
  e4.componentWillUnmount = function() {
    B(null, e4.l), e4.l = null, e4.i = null;
  }, e4.i && e4.i !== r3 && e4.componentWillUnmount(), n2.__v ? (e4.l || (e4.i = r3, e4.l = { nodeType: 1, parentNode: r3, childNodes: [], appendChild: function(n3) {
    this.childNodes.push(n3), e4.i.appendChild(n3);
  }, insertBefore: function(n3, t4) {
    this.childNodes.push(n3), e4.i.appendChild(n3);
  }, removeChild: function(n3) {
    this.childNodes.splice(this.childNodes.indexOf(n3) >>> 1, 1), e4.i.removeChild(n3);
  } }), B(y(P3, { context: e4.context }, n2.__v), e4.l)) : e4.l && e4.componentWillUnmount();
}
function z3(n2, e4) {
  var r3 = y(j3, { __v: n2, i: e4 });
  return r3.containerInfo = e4, r3;
}
function G(n2, t4, e4) {
  return null == t4.__k && (t4.textContent = ""), B(n2, t4), "function" == typeof e4 && e4(), n2 ? n2.__c : null;
}
function J(n2, t4, e4) {
  return D(n2, t4), "function" == typeof e4 && e4(), n2 ? n2.__c : null;
}
function Q() {
}
function X() {
  return this.cancelBubble;
}
function nn() {
  return this.defaultPrevented;
}
function fn(n2) {
  return y.bind(null, n2);
}
function an(n2) {
  return !!n2 && n2.$$typeof === B3;
}
function sn(n2) {
  return an(n2) ? E.apply(null, arguments) : n2;
}
function hn(n2) {
  return !!n2.__k && (B(null, n2), true);
}
function vn(n2) {
  return n2 && (n2.base || 1 === n2.nodeType && n2) || null;
}
function yn(n2) {
  n2();
}
function _n(n2) {
  return n2;
}
function bn() {
  return [false, yn];
}
function gn(n2, t4) {
  var e4 = t4(), r3 = h2({ h: { __: e4, v: t4 } }), u4 = r3[0].h, o3 = r3[1];
  return y2(function() {
    u4.__ = e4, u4.v = t4, E2(u4.__, t4()) || o3({ h: u4 });
  }, [n2, e4, t4]), p2(function() {
    return E2(u4.__, u4.v()) || o3({ h: u4 }), n2(function() {
      E2(u4.__, u4.v()) || o3({ h: u4 });
    });
  }, [n2]), e4;
}
var R, N2, A3, O2, T3, I2, W, B3, H2, Z, Y, $2, q3, K, tn, en, rn, un, on, ln, cn, dn, pn, mn, Sn, Cn;
var init_compat_module = __esm({
  "node_modules/preact/compat/dist/compat.module.js"() {
    init_preact_module();
    init_preact_module();
    init_hooks_module();
    init_hooks_module();
    (w3.prototype = new k()).isPureReactComponent = true, w3.prototype.shouldComponentUpdate = function(n2, t4) {
      return C2(this.props, n2) || C2(this.state, t4);
    };
    R = l.__b;
    l.__b = function(n2) {
      n2.type && n2.type.__f && n2.ref && (n2.props.ref = n2.ref, n2.ref = null), R && R(n2);
    };
    N2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
    A3 = function(n2, t4) {
      return null == n2 ? null : P(P(n2).map(t4));
    };
    O2 = { map: A3, forEach: A3, count: function(n2) {
      return n2 ? P(n2).length : 0;
    }, only: function(n2) {
      var t4 = P(n2);
      if (1 !== t4.length)
        throw "Children.only";
      return t4[0];
    }, toArray: P };
    T3 = l.__e;
    l.__e = function(n2, t4, e4, r3) {
      if (n2.then) {
        for (var u4, o3 = t4; o3 = o3.__; )
          if ((u4 = o3.__c) && u4.__c)
            return null == t4.__e && (t4.__e = e4.__e, t4.__k = e4.__k), u4.__c(n2, t4);
      }
      T3(n2, t4, e4, r3);
    };
    I2 = l.unmount;
    l.unmount = function(n2) {
      var t4 = n2.__c;
      t4 && t4.__R && t4.__R(), t4 && true === n2.__h && (n2.type = null), I2 && I2(n2);
    }, (D2.prototype = new k()).__c = function(n2, t4) {
      var e4 = t4.__c, r3 = this;
      null == r3.t && (r3.t = []), r3.t.push(e4);
      var u4 = F3(r3.__v), o3 = false, i4 = function() {
        o3 || (o3 = true, e4.__R = null, u4 ? u4(l3) : l3());
      };
      e4.__R = i4;
      var l3 = function() {
        if (!--r3.__u) {
          if (r3.state.__a) {
            var n3 = r3.state.__a;
            r3.__v.__k[0] = U(n3, n3.__c.__P, n3.__c.__O);
          }
          var t5;
          for (r3.setState({ __a: r3.__b = null }); t5 = r3.t.pop(); )
            t5.forceUpdate();
        }
      }, c4 = true === t4.__h;
      r3.__u++ || c4 || r3.setState({ __a: r3.__b = r3.__v.__k[0] }), n2.then(i4, i4);
    }, D2.prototype.componentWillUnmount = function() {
      this.t = [];
    }, D2.prototype.render = function(n2, e4) {
      if (this.__b) {
        if (this.__v.__k) {
          var r3 = document.createElement("div"), o3 = this.__v.__k[0].__c;
          this.__v.__k[0] = L2(this.__b, r3, o3.__O = o3.__P);
        }
        this.__b = null;
      }
      var i4 = e4.__a && y(_, null, n2.fallback);
      return i4 && (i4.__h = null), [y(_, null, e4.__a ? null : n2.children), i4];
    };
    W = function(n2, t4, e4) {
      if (++e4[1] === e4[0] && n2.o.delete(t4), n2.props.revealOrder && ("t" !== n2.props.revealOrder[0] || !n2.o.size))
        for (e4 = n2.u; e4; ) {
          for (; e4.length > 3; )
            e4.pop()();
          if (e4[1] < e4[0])
            break;
          n2.u = e4 = e4[2];
        }
    };
    (V2.prototype = new k()).__a = function(n2) {
      var t4 = this, e4 = F3(t4.__v), r3 = t4.o.get(n2);
      return r3[0]++, function(u4) {
        var o3 = function() {
          t4.props.revealOrder ? (r3.push(u4), W(t4, n2, r3)) : u4();
        };
        e4 ? e4(o3) : o3();
      };
    }, V2.prototype.render = function(n2) {
      this.u = null, this.o = /* @__PURE__ */ new Map();
      var t4 = P(n2.children);
      n2.revealOrder && "b" === n2.revealOrder[0] && t4.reverse();
      for (var e4 = t4.length; e4--; )
        this.o.set(t4[e4], this.u = [1, 0, this.u]);
      return n2.children;
    }, V2.prototype.componentDidUpdate = V2.prototype.componentDidMount = function() {
      var n2 = this;
      this.o.forEach(function(t4, e4) {
        W(n2, e4, t4);
      });
    };
    B3 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
    H2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
    Z = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;
    Y = /[A-Z0-9]/g;
    $2 = "undefined" != typeof document;
    q3 = function(n2) {
      return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/ : /fil|che|ra/).test(n2);
    };
    k.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(t4) {
      Object.defineProperty(k.prototype, t4, { configurable: true, get: function() {
        return this["UNSAFE_" + t4];
      }, set: function(n2) {
        Object.defineProperty(this, t4, { configurable: true, writable: true, value: n2 });
      } });
    });
    K = l.event;
    l.event = function(n2) {
      return K && (n2 = K(n2)), n2.persist = Q, n2.isPropagationStopped = X, n2.isDefaultPrevented = nn, n2.nativeEvent = n2;
    };
    en = { configurable: true, get: function() {
      return this.class;
    } };
    rn = l.vnode;
    l.vnode = function(n2) {
      var t4 = n2.type, e4 = n2.props, u4 = e4;
      if ("string" == typeof t4) {
        for (var o3 in u4 = {}, e4) {
          var i4 = e4[o3];
          if (!("value" === o3 && "defaultValue" in e4 && null == i4 || $2 && "children" === o3 && "noscript" === t4)) {
            var l3 = o3.toLowerCase();
            "defaultValue" === o3 && "value" in e4 && null == e4.value ? o3 = "value" : "download" === o3 && true === i4 ? i4 = "" : "ondoubleclick" === l3 ? o3 = "ondblclick" : "onchange" !== l3 || "input" !== t4 && "textarea" !== t4 || q3(e4.type) ? "onfocus" === l3 ? o3 = "onfocusin" : "onblur" === l3 ? o3 = "onfocusout" : Z.test(o3) ? o3 = l3 : -1 === t4.indexOf("-") && H2.test(o3) ? o3 = o3.replace(Y, "-$&").toLowerCase() : null === i4 && (i4 = void 0) : l3 = o3 = "oninput", "oninput" === l3 && u4[o3 = l3] && (o3 = "oninputCapture"), u4[o3] = i4;
          }
        }
        "select" == t4 && u4.multiple && Array.isArray(u4.value) && (u4.value = P(e4.children).forEach(function(n3) {
          n3.props.selected = -1 != u4.value.indexOf(n3.props.value);
        })), "select" == t4 && null != u4.defaultValue && (u4.value = P(e4.children).forEach(function(n3) {
          n3.props.selected = u4.multiple ? -1 != u4.defaultValue.indexOf(n3.props.value) : u4.defaultValue == n3.props.value;
        })), n2.props = u4, e4.class != e4.className && (en.enumerable = "className" in e4, null != e4.className && (u4.class = e4.className), Object.defineProperty(u4, "className", en));
      }
      n2.$$typeof = B3, rn && rn(n2);
    };
    un = l.__r;
    l.__r = function(n2) {
      un && un(n2), tn = n2.__c;
    };
    on = l.diffed;
    l.diffed = function(n2) {
      on && on(n2);
      var t4 = n2.props, e4 = n2.__e;
      null != e4 && "textarea" === n2.type && "value" in t4 && t4.value !== e4.value && (e4.value = null == t4.value ? "" : t4.value), tn = null;
    };
    ln = { ReactCurrentDispatcher: { current: { readContext: function(n2) {
      return tn.__n[n2.__c].props.value;
    } } } };
    cn = "17.0.2";
    dn = function(n2, t4) {
      return n2(t4);
    };
    pn = function(n2, t4) {
      return n2(t4);
    };
    mn = _;
    Sn = y2;
    Cn = { useState: h2, useId: V, useReducer: s2, useEffect: p2, useLayoutEffect: y2, useInsertionEffect: Sn, useTransition: bn, useDeferredValue: _n, useSyncExternalStore: gn, startTransition: yn, useRef: _2, useImperativeHandle: A2, useMemo: F2, useCallback: T2, useContext: q2, useDebugValue: x2, version: "17.0.2", Children: O2, render: G, hydrate: J, unmountComponentAtNode: hn, createPortal: z3, createElement: y, createContext: F, createFactory: fn, cloneElement: sn, createRef: d, Fragment: _, isValidElement: an, findDOMNode: vn, Component: k, PureComponent: w3, memo: x3, forwardRef: k3, flushSync: pn, unstable_batchedUpdates: dn, StrictMode: mn, Suspense: D2, SuspenseList: V2, lazy: M2, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ln };
  }
});

// node_modules/lodash/lodash.js
var require_lodash = __commonJS({
  "node_modules/lodash/lodash.js"(exports2, module2) {
    (function() {
      var undefined2;
      var VERSION = "4.17.21";
      var LARGE_ARRAY_SIZE2 = 200;
      var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT4 = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
      var HASH_UNDEFINED4 = "__lodash_hash_undefined__";
      var MAX_MEMOIZE_SIZE2 = 500;
      var PLACEHOLDER = "__lodash_placeholder__";
      var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
      var COMPARE_PARTIAL_FLAG7 = 1, COMPARE_UNORDERED_FLAG5 = 2;
      var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
      var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
      var HOT_COUNT2 = 800, HOT_SPAN2 = 16;
      var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
      var INFINITY3 = 1 / 0, MAX_SAFE_INTEGER3 = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN2 = 0 / 0;
      var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
      var wrapFlags = [
        ["ary", WRAP_ARY_FLAG],
        ["bind", WRAP_BIND_FLAG],
        ["bindKey", WRAP_BIND_KEY_FLAG],
        ["curry", WRAP_CURRY_FLAG],
        ["curryRight", WRAP_CURRY_RIGHT_FLAG],
        ["flip", WRAP_FLIP_FLAG],
        ["partial", WRAP_PARTIAL_FLAG],
        ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
        ["rearg", WRAP_REARG_FLAG]
      ];
      var argsTag4 = "[object Arguments]", arrayTag3 = "[object Array]", asyncTag2 = "[object AsyncFunction]", boolTag3 = "[object Boolean]", dateTag3 = "[object Date]", domExcTag = "[object DOMException]", errorTag3 = "[object Error]", funcTag3 = "[object Function]", genTag2 = "[object GeneratorFunction]", mapTag4 = "[object Map]", numberTag3 = "[object Number]", nullTag2 = "[object Null]", objectTag5 = "[object Object]", promiseTag2 = "[object Promise]", proxyTag2 = "[object Proxy]", regexpTag3 = "[object RegExp]", setTag4 = "[object Set]", stringTag3 = "[object String]", symbolTag3 = "[object Symbol]", undefinedTag2 = "[object Undefined]", weakMapTag3 = "[object WeakMap]", weakSetTag = "[object WeakSet]";
      var arrayBufferTag3 = "[object ArrayBuffer]", dataViewTag4 = "[object DataView]", float32Tag2 = "[object Float32Array]", float64Tag2 = "[object Float64Array]", int8Tag2 = "[object Int8Array]", int16Tag2 = "[object Int16Array]", int32Tag2 = "[object Int32Array]", uint8Tag2 = "[object Uint8Array]", uint8ClampedTag2 = "[object Uint8ClampedArray]", uint16Tag2 = "[object Uint16Array]", uint32Tag2 = "[object Uint32Array]";
      var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
      var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
      var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
      var reIsDeepProp2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp2 = /^\w*$/, rePropName2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar2.source);
      var reTrimStart2 = /^\s+/;
      var reWhitespace2 = /\s/;
      var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
      var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
      var reEscapeChar2 = /\\(\\)?/g;
      var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
      var reFlags = /\w*$/;
      var reIsBadHex2 = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary2 = /^0b[01]+$/i;
      var reIsHostCtor2 = /^\[object .+?Constructor\]$/;
      var reIsOctal2 = /^0o[0-7]+$/i;
      var reIsUint2 = /^(?:0|[1-9]\d*)$/;
      var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
      var reNoMatch = /($^)/;
      var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
      var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
      var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
      var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
      var reApos = RegExp(rsApos, "g");
      var reComboMark = RegExp(rsCombo, "g");
      var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
      var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
      ].join("|"), "g");
      var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
      var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ];
      var templateCounter = -1;
      var typedArrayTags2 = {};
      typedArrayTags2[float32Tag2] = typedArrayTags2[float64Tag2] = typedArrayTags2[int8Tag2] = typedArrayTags2[int16Tag2] = typedArrayTags2[int32Tag2] = typedArrayTags2[uint8Tag2] = typedArrayTags2[uint8ClampedTag2] = typedArrayTags2[uint16Tag2] = typedArrayTags2[uint32Tag2] = true;
      typedArrayTags2[argsTag4] = typedArrayTags2[arrayTag3] = typedArrayTags2[arrayBufferTag3] = typedArrayTags2[boolTag3] = typedArrayTags2[dataViewTag4] = typedArrayTags2[dateTag3] = typedArrayTags2[errorTag3] = typedArrayTags2[funcTag3] = typedArrayTags2[mapTag4] = typedArrayTags2[numberTag3] = typedArrayTags2[objectTag5] = typedArrayTags2[regexpTag3] = typedArrayTags2[setTag4] = typedArrayTags2[stringTag3] = typedArrayTags2[weakMapTag3] = false;
      var cloneableTags = {};
      cloneableTags[argsTag4] = cloneableTags[arrayTag3] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag2] = cloneableTags[float64Tag2] = cloneableTags[int8Tag2] = cloneableTags[int16Tag2] = cloneableTags[int32Tag2] = cloneableTags[mapTag4] = cloneableTags[numberTag3] = cloneableTags[objectTag5] = cloneableTags[regexpTag3] = cloneableTags[setTag4] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag2] = cloneableTags[uint8ClampedTag2] = cloneableTags[uint16Tag2] = cloneableTags[uint32Tag2] = true;
      cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
      var deburredLetters = {
        "\xC0": "A",
        "\xC1": "A",
        "\xC2": "A",
        "\xC3": "A",
        "\xC4": "A",
        "\xC5": "A",
        "\xE0": "a",
        "\xE1": "a",
        "\xE2": "a",
        "\xE3": "a",
        "\xE4": "a",
        "\xE5": "a",
        "\xC7": "C",
        "\xE7": "c",
        "\xD0": "D",
        "\xF0": "d",
        "\xC8": "E",
        "\xC9": "E",
        "\xCA": "E",
        "\xCB": "E",
        "\xE8": "e",
        "\xE9": "e",
        "\xEA": "e",
        "\xEB": "e",
        "\xCC": "I",
        "\xCD": "I",
        "\xCE": "I",
        "\xCF": "I",
        "\xEC": "i",
        "\xED": "i",
        "\xEE": "i",
        "\xEF": "i",
        "\xD1": "N",
        "\xF1": "n",
        "\xD2": "O",
        "\xD3": "O",
        "\xD4": "O",
        "\xD5": "O",
        "\xD6": "O",
        "\xD8": "O",
        "\xF2": "o",
        "\xF3": "o",
        "\xF4": "o",
        "\xF5": "o",
        "\xF6": "o",
        "\xF8": "o",
        "\xD9": "U",
        "\xDA": "U",
        "\xDB": "U",
        "\xDC": "U",
        "\xF9": "u",
        "\xFA": "u",
        "\xFB": "u",
        "\xFC": "u",
        "\xDD": "Y",
        "\xFD": "y",
        "\xFF": "y",
        "\xC6": "Ae",
        "\xE6": "ae",
        "\xDE": "Th",
        "\xFE": "th",
        "\xDF": "ss",
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
      };
      var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      };
      var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      };
      var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      };
      var freeParseFloat = parseFloat, freeParseInt2 = parseInt;
      var freeGlobal2 = typeof global == "object" && global && global.Object === Object && global;
      var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
      var root2 = freeGlobal2 || freeSelf2 || Function("return this")();
      var freeExports4 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule4 = freeExports4 && typeof module2 == "object" && module2 && !module2.nodeType && module2;
      var moduleExports4 = freeModule4 && freeModule4.exports === freeExports4;
      var freeProcess2 = moduleExports4 && freeGlobal2.process;
      var nodeUtil2 = function() {
        try {
          var types2 = freeModule4 && freeModule4.require && freeModule4.require("util").types;
          if (types2) {
            return types2;
          }
          return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
        } catch (e4) {
        }
      }();
      var nodeIsArrayBuffer = nodeUtil2 && nodeUtil2.isArrayBuffer, nodeIsDate = nodeUtil2 && nodeUtil2.isDate, nodeIsMap = nodeUtil2 && nodeUtil2.isMap, nodeIsRegExp = nodeUtil2 && nodeUtil2.isRegExp, nodeIsSet = nodeUtil2 && nodeUtil2.isSet, nodeIsTypedArray2 = nodeUtil2 && nodeUtil2.isTypedArray;
      function apply2(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          var value = array[index];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      function arrayEach2(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (iteratee(array[index], index, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while (length--) {
          if (iteratee(array[length], length, array) === false) {
            break;
          }
        }
        return array;
      }
      function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (!predicate(array[index], index, array)) {
            return false;
          }
        }
        return true;
      }
      function arrayFilter2(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (predicate(value, index, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
      }
      function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (comparator(value, array[index])) {
            return true;
          }
        }
        return false;
      }
      function arrayMap2(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index < length) {
          result[index] = iteratee(array[index], index, array);
        }
        return result;
      }
      function arrayPush2(array, values) {
        var index = -1, length = values.length, offset2 = array.length;
        while (++index < length) {
          array[offset2 + index] = values[index];
        }
        return array;
      }
      function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[++index];
        }
        while (++index < length) {
          accumulator = iteratee(accumulator, array[index], index, array);
        }
        return accumulator;
      }
      function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) {
          accumulator = array[--length];
        }
        while (length--) {
          accumulator = iteratee(accumulator, array[length], length, array);
        }
        return accumulator;
      }
      function arraySome2(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while (++index < length) {
          if (predicate(array[index], index, array)) {
            return true;
          }
        }
        return false;
      }
      var asciiSize = baseProperty2("length");
      function asciiToArray(string) {
        return string.split("");
      }
      function asciiWords(string) {
        return string.match(reAsciiWord) || [];
      }
      function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key2, collection2) {
          if (predicate(value, key2, collection2)) {
            result = key2;
            return false;
          }
        });
        return result;
      }
      function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while (fromRight ? index-- : ++index < length) {
          if (predicate(array[index], index, array)) {
            return index;
          }
        }
        return -1;
      }
      function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
      }
      function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (comparator(array[index], value)) {
            return index;
          }
        }
        return -1;
      }
      function baseIsNaN(value) {
        return value !== value;
      }
      function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN2;
      }
      function baseProperty2(key2) {
        return function(object) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function basePropertyOf(object) {
        return function(key2) {
          return object == null ? undefined2 : object[key2];
        };
      }
      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection2) {
          accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
        });
        return accumulator;
      }
      function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while (length--) {
          array[length] = array[length].value;
        }
        return array;
      }
      function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while (++index < length) {
          var current2 = iteratee(array[index]);
          if (current2 !== undefined2) {
            result = result === undefined2 ? current2 : result + current2;
          }
        }
        return result;
      }
      function baseTimes2(n2, iteratee) {
        var index = -1, result = Array(n2);
        while (++index < n2) {
          result[index] = iteratee(index);
        }
        return result;
      }
      function baseToPairs(object, props2) {
        return arrayMap2(props2, function(key2) {
          return [key2, object[key2]];
        });
      }
      function baseTrim2(string) {
        return string ? string.slice(0, trimmedEndIndex2(string) + 1).replace(reTrimStart2, "") : string;
      }
      function baseUnary2(func) {
        return function(value) {
          return func(value);
        };
      }
      function baseValues(object, props2) {
        return arrayMap2(props2, function(key2) {
          return object[key2];
        });
      }
      function cacheHas2(cache, key2) {
        return cache.has(key2);
      }
      function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
        }
        return index;
      }
      function countHolders(array, placeholder2) {
        var length = array.length, result = 0;
        while (length--) {
          if (array[length] === placeholder2) {
            ++result;
          }
        }
        return result;
      }
      var deburrLetter = basePropertyOf(deburredLetters);
      var escapeHtmlChar = basePropertyOf(htmlEscapes);
      function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
      }
      function getValue2(object, key2) {
        return object == null ? undefined2 : object[key2];
      }
      function hasUnicode(string) {
        return reHasUnicode.test(string);
      }
      function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
      }
      function iteratorToArray(iterator) {
        var data2, result = [];
        while (!(data2 = iterator.next()).done) {
          result.push(data2.value);
        }
        return result;
      }
      function mapToArray2(map2) {
        var index = -1, result = Array(map2.size);
        map2.forEach(function(value, key2) {
          result[++index] = [key2, value];
        });
        return result;
      }
      function overArg2(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      function replaceHolders(array, placeholder2) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while (++index < length) {
          var value = array[index];
          if (value === placeholder2 || value === PLACEHOLDER) {
            array[index] = PLACEHOLDER;
            result[resIndex++] = index;
          }
        }
        return result;
      }
      function setToArray2(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = value;
        });
        return result;
      }
      function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
          result[++index] = [value, value];
        });
        return result;
      }
      function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while (++index < length) {
          if (array[index] === value) {
            return index;
          }
        }
        return -1;
      }
      function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while (index--) {
          if (array[index] === value) {
            return index;
          }
        }
        return index;
      }
      function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
      }
      function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
      }
      function trimmedEndIndex2(string) {
        var index = string.length;
        while (index-- && reWhitespace2.test(string.charAt(index))) {
        }
        return index;
      }
      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
      function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while (reUnicode.test(string)) {
          ++result;
        }
        return result;
      }
      function unicodeToArray(string) {
        return string.match(reUnicode) || [];
      }
      function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
      }
      var runInContext = function runInContext2(context) {
        context = context == null ? root2 : _12.defaults(root2.Object(), context, _12.pick(root2, contextProps));
        var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
        var arrayProto2 = Array2.prototype, funcProto4 = Function2.prototype, objectProto16 = Object2.prototype;
        var coreJsData2 = context["__core-js_shared__"];
        var funcToString4 = funcProto4.toString;
        var hasOwnProperty14 = objectProto16.hasOwnProperty;
        var idCounter2 = 0;
        var maskSrcKey2 = function() {
          var uid = /[^.]+$/.exec(coreJsData2 && coreJsData2.keys && coreJsData2.keys.IE_PROTO || "");
          return uid ? "Symbol(src)_1." + uid : "";
        }();
        var nativeObjectToString3 = objectProto16.toString;
        var objectCtorString2 = funcToString4.call(Object2);
        var oldDash = root2._;
        var reIsNative2 = RegExp2(
          "^" + funcToString4.call(hasOwnProperty14).replace(reRegExpChar2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        );
        var Buffer4 = moduleExports4 ? context.Buffer : undefined2, Symbol3 = context.Symbol, Uint8Array3 = context.Uint8Array, allocUnsafe2 = Buffer4 ? Buffer4.allocUnsafe : undefined2, getPrototype2 = overArg2(Object2.getPrototypeOf, Object2), objectCreate2 = Object2.create, propertyIsEnumerable3 = objectProto16.propertyIsEnumerable, splice2 = arrayProto2.splice, spreadableSymbol = Symbol3 ? Symbol3.isConcatSpreadable : undefined2, symIterator = Symbol3 ? Symbol3.iterator : undefined2, symToStringTag3 = Symbol3 ? Symbol3.toStringTag : undefined2;
        var defineProperty2 = function() {
          try {
            var func = getNative2(Object2, "defineProperty");
            func({}, "", {});
            return func;
          } catch (e4) {
          }
        }();
        var ctxClearTimeout = context.clearTimeout !== root2.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root2.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root2.setTimeout && context.setTimeout;
        var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols2 = Object2.getOwnPropertySymbols, nativeIsBuffer2 = Buffer4 ? Buffer4.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto2.join, nativeKeys2 = overArg2(Object2.keys, Object2), nativeMax3 = Math2.max, nativeMin2 = Math2.min, nativeNow2 = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto2.reverse;
        var DataView2 = getNative2(context, "DataView"), Map3 = getNative2(context, "Map"), Promise3 = getNative2(context, "Promise"), Set3 = getNative2(context, "Set"), WeakMap3 = getNative2(context, "WeakMap"), nativeCreate2 = getNative2(Object2, "create");
        var metaMap = WeakMap3 && new WeakMap3();
        var realNames = {};
        var dataViewCtorString2 = toSource2(DataView2), mapCtorString2 = toSource2(Map3), promiseCtorString2 = toSource2(Promise3), setCtorString2 = toSource2(Set3), weakMapCtorString2 = toSource2(WeakMap3);
        var symbolProto3 = Symbol3 ? Symbol3.prototype : undefined2, symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : undefined2, symbolToString2 = symbolProto3 ? symbolProto3.toString : undefined2;
        function lodash(value) {
          if (isObjectLike2(value) && !isArray3(value) && !(value instanceof LazyWrapper)) {
            if (value instanceof LodashWrapper) {
              return value;
            }
            if (hasOwnProperty14.call(value, "__wrapped__")) {
              return wrapperClone(value);
            }
          }
          return new LodashWrapper(value);
        }
        var baseCreate2 = function() {
          function object() {
          }
          return function(proto) {
            if (!isObject3(proto)) {
              return {};
            }
            if (objectCreate2) {
              return objectCreate2(proto);
            }
            object.prototype = proto;
            var result2 = new object();
            object.prototype = undefined2;
            return result2;
          };
        }();
        function baseLodash() {
        }
        function LodashWrapper(value, chainAll) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__chain__ = !!chainAll;
          this.__index__ = 0;
          this.__values__ = undefined2;
        }
        lodash.templateSettings = {
          "escape": reEscape,
          "evaluate": reEvaluate,
          "interpolate": reInterpolate,
          "variable": "",
          "imports": {
            "_": lodash
          }
        };
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate2(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        function LazyWrapper(value) {
          this.__wrapped__ = value;
          this.__actions__ = [];
          this.__dir__ = 1;
          this.__filtered__ = false;
          this.__iteratees__ = [];
          this.__takeCount__ = MAX_ARRAY_LENGTH;
          this.__views__ = [];
        }
        function lazyClone() {
          var result2 = new LazyWrapper(this.__wrapped__);
          result2.__actions__ = copyArray2(this.__actions__);
          result2.__dir__ = this.__dir__;
          result2.__filtered__ = this.__filtered__;
          result2.__iteratees__ = copyArray2(this.__iteratees__);
          result2.__takeCount__ = this.__takeCount__;
          result2.__views__ = copyArray2(this.__views__);
          return result2;
        }
        function lazyReverse() {
          if (this.__filtered__) {
            var result2 = new LazyWrapper(this);
            result2.__dir__ = -1;
            result2.__filtered__ = true;
          } else {
            result2 = this.clone();
            result2.__dir__ *= -1;
          }
          return result2;
        }
        function lazyValue() {
          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray3(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin2(length, this.__takeCount__);
          if (!isArr || !isRight && arrLength == length && takeCount == length) {
            return baseWrapperValue(array, this.__actions__);
          }
          var result2 = [];
          outer:
            while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data2 = iteratees[iterIndex], iteratee2 = data2.iteratee, type = data2.type, computed = iteratee2(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result2[resIndex++] = value;
            }
          return result2;
        }
        LazyWrapper.prototype = baseCreate2(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        function Hash2(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function hashClear2() {
          this.__data__ = nativeCreate2 ? nativeCreate2(null) : {};
          this.size = 0;
        }
        function hashDelete2(key2) {
          var result2 = this.has(key2) && delete this.__data__[key2];
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function hashGet2(key2) {
          var data2 = this.__data__;
          if (nativeCreate2) {
            var result2 = data2[key2];
            return result2 === HASH_UNDEFINED4 ? undefined2 : result2;
          }
          return hasOwnProperty14.call(data2, key2) ? data2[key2] : undefined2;
        }
        function hashHas2(key2) {
          var data2 = this.__data__;
          return nativeCreate2 ? data2[key2] !== undefined2 : hasOwnProperty14.call(data2, key2);
        }
        function hashSet2(key2, value) {
          var data2 = this.__data__;
          this.size += this.has(key2) ? 0 : 1;
          data2[key2] = nativeCreate2 && value === undefined2 ? HASH_UNDEFINED4 : value;
          return this;
        }
        Hash2.prototype.clear = hashClear2;
        Hash2.prototype["delete"] = hashDelete2;
        Hash2.prototype.get = hashGet2;
        Hash2.prototype.has = hashHas2;
        Hash2.prototype.set = hashSet2;
        function ListCache2(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function listCacheClear2() {
          this.__data__ = [];
          this.size = 0;
        }
        function listCacheDelete2(key2) {
          var data2 = this.__data__, index = assocIndexOf2(data2, key2);
          if (index < 0) {
            return false;
          }
          var lastIndex = data2.length - 1;
          if (index == lastIndex) {
            data2.pop();
          } else {
            splice2.call(data2, index, 1);
          }
          --this.size;
          return true;
        }
        function listCacheGet2(key2) {
          var data2 = this.__data__, index = assocIndexOf2(data2, key2);
          return index < 0 ? undefined2 : data2[index][1];
        }
        function listCacheHas2(key2) {
          return assocIndexOf2(this.__data__, key2) > -1;
        }
        function listCacheSet2(key2, value) {
          var data2 = this.__data__, index = assocIndexOf2(data2, key2);
          if (index < 0) {
            ++this.size;
            data2.push([key2, value]);
          } else {
            data2[index][1] = value;
          }
          return this;
        }
        ListCache2.prototype.clear = listCacheClear2;
        ListCache2.prototype["delete"] = listCacheDelete2;
        ListCache2.prototype.get = listCacheGet2;
        ListCache2.prototype.has = listCacheHas2;
        ListCache2.prototype.set = listCacheSet2;
        function MapCache2(entries) {
          var index = -1, length = entries == null ? 0 : entries.length;
          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }
        function mapCacheClear2() {
          this.size = 0;
          this.__data__ = {
            "hash": new Hash2(),
            "map": new (Map3 || ListCache2)(),
            "string": new Hash2()
          };
        }
        function mapCacheDelete2(key2) {
          var result2 = getMapData2(this, key2)["delete"](key2);
          this.size -= result2 ? 1 : 0;
          return result2;
        }
        function mapCacheGet2(key2) {
          return getMapData2(this, key2).get(key2);
        }
        function mapCacheHas2(key2) {
          return getMapData2(this, key2).has(key2);
        }
        function mapCacheSet2(key2, value) {
          var data2 = getMapData2(this, key2), size2 = data2.size;
          data2.set(key2, value);
          this.size += data2.size == size2 ? 0 : 1;
          return this;
        }
        MapCache2.prototype.clear = mapCacheClear2;
        MapCache2.prototype["delete"] = mapCacheDelete2;
        MapCache2.prototype.get = mapCacheGet2;
        MapCache2.prototype.has = mapCacheHas2;
        MapCache2.prototype.set = mapCacheSet2;
        function SetCache2(values2) {
          var index = -1, length = values2 == null ? 0 : values2.length;
          this.__data__ = new MapCache2();
          while (++index < length) {
            this.add(values2[index]);
          }
        }
        function setCacheAdd2(value) {
          this.__data__.set(value, HASH_UNDEFINED4);
          return this;
        }
        function setCacheHas2(value) {
          return this.__data__.has(value);
        }
        SetCache2.prototype.add = SetCache2.prototype.push = setCacheAdd2;
        SetCache2.prototype.has = setCacheHas2;
        function Stack2(entries) {
          var data2 = this.__data__ = new ListCache2(entries);
          this.size = data2.size;
        }
        function stackClear2() {
          this.__data__ = new ListCache2();
          this.size = 0;
        }
        function stackDelete2(key2) {
          var data2 = this.__data__, result2 = data2["delete"](key2);
          this.size = data2.size;
          return result2;
        }
        function stackGet2(key2) {
          return this.__data__.get(key2);
        }
        function stackHas2(key2) {
          return this.__data__.has(key2);
        }
        function stackSet2(key2, value) {
          var data2 = this.__data__;
          if (data2 instanceof ListCache2) {
            var pairs = data2.__data__;
            if (!Map3 || pairs.length < LARGE_ARRAY_SIZE2 - 1) {
              pairs.push([key2, value]);
              this.size = ++data2.size;
              return this;
            }
            data2 = this.__data__ = new MapCache2(pairs);
          }
          data2.set(key2, value);
          this.size = data2.size;
          return this;
        }
        Stack2.prototype.clear = stackClear2;
        Stack2.prototype["delete"] = stackDelete2;
        Stack2.prototype.get = stackGet2;
        Stack2.prototype.has = stackHas2;
        Stack2.prototype.set = stackSet2;
        function arrayLikeKeys2(value, inherited) {
          var isArr = isArray3(value), isArg = !isArr && isArguments2(value), isBuff = !isArr && !isArg && isBuffer2(value), isType = !isArr && !isArg && !isBuff && isTypedArray2(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes2(value.length, String2) : [], length = result2.length;
          for (var key2 in value) {
            if ((inherited || hasOwnProperty14.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex2(key2, length)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function arraySample(array) {
          var length = array.length;
          return length ? array[baseRandom(0, length - 1)] : undefined2;
        }
        function arraySampleSize(array, n2) {
          return shuffleSelf(copyArray2(array), baseClamp(n2, 0, array.length));
        }
        function arrayShuffle(array) {
          return shuffleSelf(copyArray2(array));
        }
        function assignMergeValue2(object, key2, value) {
          if (value !== undefined2 && !eq2(object[key2], value) || value === undefined2 && !(key2 in object)) {
            baseAssignValue2(object, key2, value);
          }
        }
        function assignValue2(object, key2, value) {
          var objValue = object[key2];
          if (!(hasOwnProperty14.call(object, key2) && eq2(objValue, value)) || value === undefined2 && !(key2 in object)) {
            baseAssignValue2(object, key2, value);
          }
        }
        function assocIndexOf2(array, key2) {
          var length = array.length;
          while (length--) {
            if (eq2(array[length][0], key2)) {
              return length;
            }
          }
          return -1;
        }
        function baseAggregator(collection, setter, iteratee2, accumulator) {
          baseEach2(collection, function(value, key2, collection2) {
            setter(accumulator, value, iteratee2(value), collection2);
          });
          return accumulator;
        }
        function baseAssign(object, source) {
          return object && copyObject2(source, keys2(source), object);
        }
        function baseAssignIn(object, source) {
          return object && copyObject2(source, keysIn2(source), object);
        }
        function baseAssignValue2(object, key2, value) {
          if (key2 == "__proto__" && defineProperty2) {
            defineProperty2(object, key2, {
              "configurable": true,
              "enumerable": true,
              "value": value,
              "writable": true
            });
          } else {
            object[key2] = value;
          }
        }
        function baseAt(object, paths) {
          var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
          while (++index < length) {
            result2[index] = skip ? undefined2 : get4(object, paths[index]);
          }
          return result2;
        }
        function baseClamp(number, lower, upper) {
          if (number === number) {
            if (upper !== undefined2) {
              number = number <= upper ? number : upper;
            }
            if (lower !== undefined2) {
              number = number >= lower ? number : lower;
            }
          }
          return number;
        }
        function baseClone(value, bitmask, customizer, key2, object, stack) {
          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
          if (customizer) {
            result2 = object ? customizer(value, key2, object, stack) : customizer(value);
          }
          if (result2 !== undefined2) {
            return result2;
          }
          if (!isObject3(value)) {
            return value;
          }
          var isArr = isArray3(value);
          if (isArr) {
            result2 = initCloneArray(value);
            if (!isDeep) {
              return copyArray2(value, result2);
            }
          } else {
            var tag = getTag2(value), isFunc = tag == funcTag3 || tag == genTag2;
            if (isBuffer2(value)) {
              return cloneBuffer2(value, isDeep);
            }
            if (tag == objectTag5 || tag == argsTag4 || isFunc && !object) {
              result2 = isFlat || isFunc ? {} : initCloneObject2(value);
              if (!isDeep) {
                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result2 = initCloneByTag(value, tag, isDeep);
            }
          }
          stack || (stack = new Stack2());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result2);
          if (isSet(value)) {
            value.forEach(function(subValue) {
              result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
          } else if (isMap(value)) {
            value.forEach(function(subValue, key3) {
              result2.set(key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
            });
          }
          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys2 : isFlat ? keysIn2 : keys2;
          var props2 = isArr ? undefined2 : keysFunc(value);
          arrayEach2(props2 || value, function(subValue, key3) {
            if (props2) {
              key3 = subValue;
              subValue = value[key3];
            }
            assignValue2(result2, key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
          });
          return result2;
        }
        function baseConforms(source) {
          var props2 = keys2(source);
          return function(object) {
            return baseConformsTo(object, source, props2);
          };
        }
        function baseConformsTo(object, source, props2) {
          var length = props2.length;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (length--) {
            var key2 = props2[length], predicate = source[key2], value = object[key2];
            if (value === undefined2 && !(key2 in object) || !predicate(value)) {
              return false;
            }
          }
          return true;
        }
        function baseDelay(func, wait, args) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          return setTimeout2(function() {
            func.apply(undefined2, args);
          }, wait);
        }
        function baseDifference(array, values2, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
          if (!length) {
            return result2;
          }
          if (iteratee2) {
            values2 = arrayMap2(values2, baseUnary2(iteratee2));
          }
          if (comparator) {
            includes2 = arrayIncludesWith;
            isCommon = false;
          } else if (values2.length >= LARGE_ARRAY_SIZE2) {
            includes2 = cacheHas2;
            isCommon = false;
            values2 = new SetCache2(values2);
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values2[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result2.push(value);
              } else if (!includes2(values2, computed, comparator)) {
                result2.push(value);
              }
            }
          return result2;
        }
        var baseEach2 = createBaseEach2(baseForOwn2);
        var baseEachRight = createBaseEach2(baseForOwnRight, true);
        function baseEvery(collection, predicate) {
          var result2 = true;
          baseEach2(collection, function(value, index, collection2) {
            result2 = !!predicate(value, index, collection2);
            return result2;
          });
          return result2;
        }
        function baseExtremum(array, iteratee2, comparator) {
          var index = -1, length = array.length;
          while (++index < length) {
            var value = array[index], current2 = iteratee2(value);
            if (current2 != null && (computed === undefined2 ? current2 === current2 && !isSymbol2(current2) : comparator(current2, computed))) {
              var computed = current2, result2 = value;
            }
          }
          return result2;
        }
        function baseFill(array, value, start, end) {
          var length = array.length;
          start = toInteger2(start);
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end === undefined2 || end > length ? length : toInteger2(end);
          if (end < 0) {
            end += length;
          }
          end = start > end ? 0 : toLength(end);
          while (start < end) {
            array[start++] = value;
          }
          return array;
        }
        function baseFilter(collection, predicate) {
          var result2 = [];
          baseEach2(collection, function(value, index, collection2) {
            if (predicate(value, index, collection2)) {
              result2.push(value);
            }
          });
          return result2;
        }
        function baseFlatten(array, depth, predicate, isStrict, result2) {
          var index = -1, length = array.length;
          predicate || (predicate = isFlattenable);
          result2 || (result2 = []);
          while (++index < length) {
            var value = array[index];
            if (depth > 0 && predicate(value)) {
              if (depth > 1) {
                baseFlatten(value, depth - 1, predicate, isStrict, result2);
              } else {
                arrayPush2(result2, value);
              }
            } else if (!isStrict) {
              result2[result2.length] = value;
            }
          }
          return result2;
        }
        var baseFor2 = createBaseFor2();
        var baseForRight = createBaseFor2(true);
        function baseForOwn2(object, iteratee2) {
          return object && baseFor2(object, iteratee2, keys2);
        }
        function baseForOwnRight(object, iteratee2) {
          return object && baseForRight(object, iteratee2, keys2);
        }
        function baseFunctions(object, props2) {
          return arrayFilter2(props2, function(key2) {
            return isFunction3(object[key2]);
          });
        }
        function baseGet2(object, path) {
          path = castPath2(path, object);
          var index = 0, length = path.length;
          while (object != null && index < length) {
            object = object[toKey2(path[index++])];
          }
          return index && index == length ? object : undefined2;
        }
        function baseGetAllKeys2(object, keysFunc, symbolsFunc) {
          var result2 = keysFunc(object);
          return isArray3(object) ? result2 : arrayPush2(result2, symbolsFunc(object));
        }
        function baseGetTag2(value) {
          if (value == null) {
            return value === undefined2 ? undefinedTag2 : nullTag2;
          }
          return symToStringTag3 && symToStringTag3 in Object2(value) ? getRawTag2(value) : objectToString2(value);
        }
        function baseGt(value, other) {
          return value > other;
        }
        function baseHas(object, key2) {
          return object != null && hasOwnProperty14.call(object, key2);
        }
        function baseHasIn2(object, key2) {
          return object != null && key2 in Object2(object);
        }
        function baseInRange(number, start, end) {
          return number >= nativeMin2(start, end) && number < nativeMax3(start, end);
        }
        function baseIntersection(arrays, iteratee2, comparator) {
          var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
          while (othIndex--) {
            var array = arrays[othIndex];
            if (othIndex && iteratee2) {
              array = arrayMap2(array, baseUnary2(iteratee2));
            }
            maxLength = nativeMin2(array.length, maxLength);
            caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache2(othIndex && array) : undefined2;
          }
          array = arrays[0];
          var index = -1, seen = caches[0];
          outer:
            while (++index < length && result2.length < maxLength) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas2(seen, computed) : includes2(result2, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas2(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseInverter(object, setter, iteratee2, accumulator) {
          baseForOwn2(object, function(value, key2, object2) {
            setter(accumulator, iteratee2(value), key2, object2);
          });
          return accumulator;
        }
        function baseInvoke(object, path, args) {
          path = castPath2(path, object);
          object = parent(object, path);
          var func = object == null ? object : object[toKey2(last(path))];
          return func == null ? undefined2 : apply2(func, object, args);
        }
        function baseIsArguments2(value) {
          return isObjectLike2(value) && baseGetTag2(value) == argsTag4;
        }
        function baseIsArrayBuffer(value) {
          return isObjectLike2(value) && baseGetTag2(value) == arrayBufferTag3;
        }
        function baseIsDate(value) {
          return isObjectLike2(value) && baseGetTag2(value) == dateTag3;
        }
        function baseIsEqual2(value, other, bitmask, customizer, stack) {
          if (value === other) {
            return true;
          }
          if (value == null || other == null || !isObjectLike2(value) && !isObjectLike2(other)) {
            return value !== value && other !== other;
          }
          return baseIsEqualDeep2(value, other, bitmask, customizer, baseIsEqual2, stack);
        }
        function baseIsEqualDeep2(object, other, bitmask, customizer, equalFunc, stack) {
          var objIsArr = isArray3(object), othIsArr = isArray3(other), objTag = objIsArr ? arrayTag3 : getTag2(object), othTag = othIsArr ? arrayTag3 : getTag2(other);
          objTag = objTag == argsTag4 ? objectTag5 : objTag;
          othTag = othTag == argsTag4 ? objectTag5 : othTag;
          var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
          if (isSameTag && isBuffer2(object)) {
            if (!isBuffer2(other)) {
              return false;
            }
            objIsArr = true;
            objIsObj = false;
          }
          if (isSameTag && !objIsObj) {
            stack || (stack = new Stack2());
            return objIsArr || isTypedArray2(object) ? equalArrays2(object, other, bitmask, customizer, equalFunc, stack) : equalByTag2(object, other, objTag, bitmask, customizer, equalFunc, stack);
          }
          if (!(bitmask & COMPARE_PARTIAL_FLAG7)) {
            var objIsWrapped = objIsObj && hasOwnProperty14.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty14.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
              stack || (stack = new Stack2());
              return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
          }
          if (!isSameTag) {
            return false;
          }
          stack || (stack = new Stack2());
          return equalObjects2(object, other, bitmask, customizer, equalFunc, stack);
        }
        function baseIsMap(value) {
          return isObjectLike2(value) && getTag2(value) == mapTag4;
        }
        function baseIsMatch2(object, source, matchData, customizer) {
          var index = matchData.length, length = index, noCustomizer = !customizer;
          if (object == null) {
            return !length;
          }
          object = Object2(object);
          while (index--) {
            var data2 = matchData[index];
            if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
              return false;
            }
          }
          while (++index < length) {
            data2 = matchData[index];
            var key2 = data2[0], objValue = object[key2], srcValue = data2[1];
            if (noCustomizer && data2[2]) {
              if (objValue === undefined2 && !(key2 in object)) {
                return false;
              }
            } else {
              var stack = new Stack2();
              if (customizer) {
                var result2 = customizer(objValue, srcValue, key2, object, source, stack);
              }
              if (!(result2 === undefined2 ? baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG7 | COMPARE_UNORDERED_FLAG5, customizer, stack) : result2)) {
                return false;
              }
            }
          }
          return true;
        }
        function baseIsNative2(value) {
          if (!isObject3(value) || isMasked2(value)) {
            return false;
          }
          var pattern = isFunction3(value) ? reIsNative2 : reIsHostCtor2;
          return pattern.test(toSource2(value));
        }
        function baseIsRegExp(value) {
          return isObjectLike2(value) && baseGetTag2(value) == regexpTag3;
        }
        function baseIsSet(value) {
          return isObjectLike2(value) && getTag2(value) == setTag4;
        }
        function baseIsTypedArray2(value) {
          return isObjectLike2(value) && isLength2(value.length) && !!typedArrayTags2[baseGetTag2(value)];
        }
        function baseIteratee2(value) {
          if (typeof value == "function") {
            return value;
          }
          if (value == null) {
            return identity2;
          }
          if (typeof value == "object") {
            return isArray3(value) ? baseMatchesProperty2(value[0], value[1]) : baseMatches2(value);
          }
          return property2(value);
        }
        function baseKeys2(object) {
          if (!isPrototype2(object)) {
            return nativeKeys2(object);
          }
          var result2 = [];
          for (var key2 in Object2(object)) {
            if (hasOwnProperty14.call(object, key2) && key2 != "constructor") {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseKeysIn2(object) {
          if (!isObject3(object)) {
            return nativeKeysIn2(object);
          }
          var isProto = isPrototype2(object), result2 = [];
          for (var key2 in object) {
            if (!(key2 == "constructor" && (isProto || !hasOwnProperty14.call(object, key2)))) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function baseLt(value, other) {
          return value < other;
        }
        function baseMap2(collection, iteratee2) {
          var index = -1, result2 = isArrayLike2(collection) ? Array2(collection.length) : [];
          baseEach2(collection, function(value, key2, collection2) {
            result2[++index] = iteratee2(value, key2, collection2);
          });
          return result2;
        }
        function baseMatches2(source) {
          var matchData = getMatchData2(source);
          if (matchData.length == 1 && matchData[0][2]) {
            return matchesStrictComparable2(matchData[0][0], matchData[0][1]);
          }
          return function(object) {
            return object === source || baseIsMatch2(object, source, matchData);
          };
        }
        function baseMatchesProperty2(path, srcValue) {
          if (isKey2(path) && isStrictComparable2(srcValue)) {
            return matchesStrictComparable2(toKey2(path), srcValue);
          }
          return function(object) {
            var objValue = get4(object, path);
            return objValue === undefined2 && objValue === srcValue ? hasIn2(object, path) : baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG7 | COMPARE_UNORDERED_FLAG5);
          };
        }
        function baseMerge2(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          baseFor2(source, function(srcValue, key2) {
            stack || (stack = new Stack2());
            if (isObject3(srcValue)) {
              baseMergeDeep2(object, source, key2, srcIndex, baseMerge2, customizer, stack);
            } else {
              var newValue = customizer ? customizer(safeGet2(object, key2), srcValue, key2 + "", object, source, stack) : undefined2;
              if (newValue === undefined2) {
                newValue = srcValue;
              }
              assignMergeValue2(object, key2, newValue);
            }
          }, keysIn2);
        }
        function baseMergeDeep2(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
          var objValue = safeGet2(object, key2), srcValue = safeGet2(source, key2), stacked = stack.get(srcValue);
          if (stacked) {
            assignMergeValue2(object, key2, stacked);
            return;
          }
          var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : undefined2;
          var isCommon = newValue === undefined2;
          if (isCommon) {
            var isArr = isArray3(srcValue), isBuff = !isArr && isBuffer2(srcValue), isTyped = !isArr && !isBuff && isTypedArray2(srcValue);
            newValue = srcValue;
            if (isArr || isBuff || isTyped) {
              if (isArray3(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject2(objValue)) {
                newValue = copyArray2(objValue);
              } else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer2(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray2(srcValue, true);
              } else {
                newValue = [];
              }
            } else if (isPlainObject2(srcValue) || isArguments2(srcValue)) {
              newValue = objValue;
              if (isArguments2(objValue)) {
                newValue = toPlainObject2(objValue);
              } else if (!isObject3(objValue) || isFunction3(objValue)) {
                newValue = initCloneObject2(srcValue);
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack["delete"](srcValue);
          }
          assignMergeValue2(object, key2, newValue);
        }
        function baseNth(array, n2) {
          var length = array.length;
          if (!length) {
            return;
          }
          n2 += n2 < 0 ? length : 0;
          return isIndex2(n2, length) ? array[n2] : undefined2;
        }
        function baseOrderBy(collection, iteratees, orders) {
          if (iteratees.length) {
            iteratees = arrayMap2(iteratees, function(iteratee2) {
              if (isArray3(iteratee2)) {
                return function(value) {
                  return baseGet2(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                };
              }
              return iteratee2;
            });
          } else {
            iteratees = [identity2];
          }
          var index = -1;
          iteratees = arrayMap2(iteratees, baseUnary2(getIteratee()));
          var result2 = baseMap2(collection, function(value, key2, collection2) {
            var criteria = arrayMap2(iteratees, function(iteratee2) {
              return iteratee2(value);
            });
            return { "criteria": criteria, "index": ++index, "value": value };
          });
          return baseSortBy(result2, function(object, other) {
            return compareMultiple(object, other, orders);
          });
        }
        function basePick(object, paths) {
          return basePickBy(object, paths, function(value, path) {
            return hasIn2(object, path);
          });
        }
        function basePickBy(object, paths, predicate) {
          var index = -1, length = paths.length, result2 = {};
          while (++index < length) {
            var path = paths[index], value = baseGet2(object, path);
            if (predicate(value, path)) {
              baseSet(result2, castPath2(path, object), value);
            }
          }
          return result2;
        }
        function basePropertyDeep2(path) {
          return function(object) {
            return baseGet2(object, path);
          };
        }
        function basePullAll(array, values2, iteratee2, comparator) {
          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
          if (array === values2) {
            values2 = copyArray2(values2);
          }
          if (iteratee2) {
            seen = arrayMap2(array, baseUnary2(iteratee2));
          }
          while (++index < length) {
            var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
            while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
              if (seen !== array) {
                splice2.call(seen, fromIndex, 1);
              }
              splice2.call(array, fromIndex, 1);
            }
          }
          return array;
        }
        function basePullAt(array, indexes) {
          var length = array ? indexes.length : 0, lastIndex = length - 1;
          while (length--) {
            var index = indexes[length];
            if (length == lastIndex || index !== previous) {
              var previous = index;
              if (isIndex2(index)) {
                splice2.call(array, index, 1);
              } else {
                baseUnset(array, index);
              }
            }
          }
          return array;
        }
        function baseRandom(lower, upper) {
          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        function baseRange(start, end, step, fromRight) {
          var index = -1, length = nativeMax3(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
          while (length--) {
            result2[fromRight ? length : ++index] = start;
            start += step;
          }
          return result2;
        }
        function baseRepeat(string, n2) {
          var result2 = "";
          if (!string || n2 < 1 || n2 > MAX_SAFE_INTEGER3) {
            return result2;
          }
          do {
            if (n2 % 2) {
              result2 += string;
            }
            n2 = nativeFloor(n2 / 2);
            if (n2) {
              string += string;
            }
          } while (n2);
          return result2;
        }
        function baseRest2(func, start) {
          return setToString2(overRest2(func, start, identity2), func + "");
        }
        function baseSample(collection) {
          return arraySample(values(collection));
        }
        function baseSampleSize(collection, n2) {
          var array = values(collection);
          return shuffleSelf(array, baseClamp(n2, 0, array.length));
        }
        function baseSet(object, path, value, customizer) {
          if (!isObject3(object)) {
            return object;
          }
          path = castPath2(path, object);
          var index = -1, length = path.length, lastIndex = length - 1, nested = object;
          while (nested != null && ++index < length) {
            var key2 = toKey2(path[index]), newValue = value;
            if (key2 === "__proto__" || key2 === "constructor" || key2 === "prototype") {
              return object;
            }
            if (index != lastIndex) {
              var objValue = nested[key2];
              newValue = customizer ? customizer(objValue, key2, nested) : undefined2;
              if (newValue === undefined2) {
                newValue = isObject3(objValue) ? objValue : isIndex2(path[index + 1]) ? [] : {};
              }
            }
            assignValue2(nested, key2, newValue);
            nested = nested[key2];
          }
          return object;
        }
        var baseSetData = !metaMap ? identity2 : function(func, data2) {
          metaMap.set(func, data2);
          return func;
        };
        var baseSetToString2 = !defineProperty2 ? identity2 : function(func, string) {
          return defineProperty2(func, "toString", {
            "configurable": true,
            "enumerable": false,
            "value": constant2(string),
            "writable": true
          });
        };
        function baseShuffle(collection) {
          return shuffleSelf(values(collection));
        }
        function baseSlice(array, start, end) {
          var index = -1, length = array.length;
          if (start < 0) {
            start = -start > length ? 0 : length + start;
          }
          end = end > length ? length : end;
          if (end < 0) {
            end += length;
          }
          length = start > end ? 0 : end - start >>> 0;
          start >>>= 0;
          var result2 = Array2(length);
          while (++index < length) {
            result2[index] = array[index + start];
          }
          return result2;
        }
        function baseSome(collection, predicate) {
          var result2;
          baseEach2(collection, function(value, index, collection2) {
            result2 = predicate(value, index, collection2);
            return !result2;
          });
          return !!result2;
        }
        function baseSortedIndex(array, value, retHighest) {
          var low = 0, high = array == null ? low : array.length;
          if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
            while (low < high) {
              var mid = low + high >>> 1, computed = array[mid];
              if (computed !== null && !isSymbol2(computed) && (retHighest ? computed <= value : computed < value)) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return high;
          }
          return baseSortedIndexBy(array, value, identity2, retHighest);
        }
        function baseSortedIndexBy(array, value, iteratee2, retHighest) {
          var low = 0, high = array == null ? 0 : array.length;
          if (high === 0) {
            return 0;
          }
          value = iteratee2(value);
          var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol2(value), valIsUndefined = value === undefined2;
          while (low < high) {
            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol2(computed);
            if (valIsNaN) {
              var setLow = retHighest || othIsReflexive;
            } else if (valIsUndefined) {
              setLow = othIsReflexive && (retHighest || othIsDefined);
            } else if (valIsNull) {
              setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
            } else if (valIsSymbol) {
              setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
            } else if (othIsNull || othIsSymbol) {
              setLow = false;
            } else {
              setLow = retHighest ? computed <= value : computed < value;
            }
            if (setLow) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }
          return nativeMin2(high, MAX_ARRAY_INDEX);
        }
        function baseSortedUniq(array, iteratee2) {
          var index = -1, length = array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
            if (!index || !eq2(computed, seen)) {
              var seen = computed;
              result2[resIndex++] = value === 0 ? 0 : value;
            }
          }
          return result2;
        }
        function baseToNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol2(value)) {
            return NAN2;
          }
          return +value;
        }
        function baseToString2(value) {
          if (typeof value == "string") {
            return value;
          }
          if (isArray3(value)) {
            return arrayMap2(value, baseToString2) + "";
          }
          if (isSymbol2(value)) {
            return symbolToString2 ? symbolToString2.call(value) : "";
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
        }
        function baseUniq(array, iteratee2, comparator) {
          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
          if (comparator) {
            isCommon = false;
            includes2 = arrayIncludesWith;
          } else if (length >= LARGE_ARRAY_SIZE2) {
            var set2 = iteratee2 ? null : createSet(array);
            if (set2) {
              return setToArray2(set2);
            }
            isCommon = false;
            includes2 = cacheHas2;
            seen = new SetCache2();
          } else {
            seen = iteratee2 ? [] : result2;
          }
          outer:
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee2) {
                  seen.push(computed);
                }
                result2.push(value);
              } else if (!includes2(seen, computed, comparator)) {
                if (seen !== result2) {
                  seen.push(computed);
                }
                result2.push(value);
              }
            }
          return result2;
        }
        function baseUnset(object, path) {
          path = castPath2(path, object);
          object = parent(object, path);
          return object == null || delete object[toKey2(last(path))];
        }
        function baseUpdate(object, path, updater, customizer) {
          return baseSet(object, path, updater(baseGet2(object, path)), customizer);
        }
        function baseWhile(array, predicate, isDrop, fromRight) {
          var length = array.length, index = fromRight ? length : -1;
          while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
          }
          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        function baseWrapperValue(value, actions) {
          var result2 = value;
          if (result2 instanceof LazyWrapper) {
            result2 = result2.value();
          }
          return arrayReduce(actions, function(result3, action) {
            return action.func.apply(action.thisArg, arrayPush2([result3], action.args));
          }, result2);
        }
        function baseXor(arrays, iteratee2, comparator) {
          var length = arrays.length;
          if (length < 2) {
            return length ? baseUniq(arrays[0]) : [];
          }
          var index = -1, result2 = Array2(length);
          while (++index < length) {
            var array = arrays[index], othIndex = -1;
            while (++othIndex < length) {
              if (othIndex != index) {
                result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
              }
            }
          }
          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
        }
        function baseZipObject(props2, values2, assignFunc) {
          var index = -1, length = props2.length, valsLength = values2.length, result2 = {};
          while (++index < length) {
            var value = index < valsLength ? values2[index] : undefined2;
            assignFunc(result2, props2[index], value);
          }
          return result2;
        }
        function castArrayLikeObject(value) {
          return isArrayLikeObject2(value) ? value : [];
        }
        function castFunction2(value) {
          return typeof value == "function" ? value : identity2;
        }
        function castPath2(value, object) {
          if (isArray3(value)) {
            return value;
          }
          return isKey2(value, object) ? [value] : stringToPath2(toString5(value));
        }
        var castRest = baseRest2;
        function castSlice(array, start, end) {
          var length = array.length;
          end = end === undefined2 ? length : end;
          return !start && end >= length ? array : baseSlice(array, start, end);
        }
        var clearTimeout2 = ctxClearTimeout || function(id2) {
          return root2.clearTimeout(id2);
        };
        function cloneBuffer2(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length, result2 = allocUnsafe2 ? allocUnsafe2(length) : new buffer.constructor(length);
          buffer.copy(result2);
          return result2;
        }
        function cloneArrayBuffer2(arrayBuffer) {
          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array3(result2).set(new Uint8Array3(arrayBuffer));
          return result2;
        }
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer2(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        function cloneRegExp(regexp) {
          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result2.lastIndex = regexp.lastIndex;
          return result2;
        }
        function cloneSymbol(symbol) {
          return symbolValueOf2 ? Object2(symbolValueOf2.call(symbol)) : {};
        }
        function cloneTypedArray2(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer2(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        function compareAscending(value, other) {
          if (value !== other) {
            var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol2(value);
            var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol2(other);
            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
              return 1;
            }
            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
              return -1;
            }
          }
          return 0;
        }
        function compareMultiple(object, other, orders) {
          var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
          while (++index < length) {
            var result2 = compareAscending(objCriteria[index], othCriteria[index]);
            if (result2) {
              if (index >= ordersLength) {
                return result2;
              }
              var order = orders[index];
              return result2 * (order == "desc" ? -1 : 1);
            }
          }
          return object.index - other.index;
        }
        function composeArgs(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax3(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
          while (++leftIndex < leftLength) {
            result2[leftIndex] = partials[leftIndex];
          }
          while (++argsIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[holders[argsIndex]] = args[argsIndex];
            }
          }
          while (rangeLength--) {
            result2[leftIndex++] = args[argsIndex++];
          }
          return result2;
        }
        function composeArgsRight(args, partials, holders, isCurried) {
          var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax3(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
          while (++argsIndex < rangeLength) {
            result2[argsIndex] = args[argsIndex];
          }
          var offset2 = argsIndex;
          while (++rightIndex < rightLength) {
            result2[offset2 + rightIndex] = partials[rightIndex];
          }
          while (++holdersIndex < holdersLength) {
            if (isUncurried || argsIndex < argsLength) {
              result2[offset2 + holders[holdersIndex]] = args[argsIndex++];
            }
          }
          return result2;
        }
        function copyArray2(source, array) {
          var index = -1, length = source.length;
          array || (array = Array2(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }
        function copyObject2(source, props2, object, customizer) {
          var isNew = !object;
          object || (object = {});
          var index = -1, length = props2.length;
          while (++index < length) {
            var key2 = props2[index];
            var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : undefined2;
            if (newValue === undefined2) {
              newValue = source[key2];
            }
            if (isNew) {
              baseAssignValue2(object, key2, newValue);
            } else {
              assignValue2(object, key2, newValue);
            }
          }
          return object;
        }
        function copySymbols(source, object) {
          return copyObject2(source, getSymbols2(source), object);
        }
        function copySymbolsIn(source, object) {
          return copyObject2(source, getSymbolsIn(source), object);
        }
        function createAggregator(setter, initializer) {
          return function(collection, iteratee2) {
            var func = isArray3(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
          };
        }
        function createAssigner2(assigner) {
          return baseRest2(function(object, sources) {
            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
            customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
            if (guard && isIterateeCall2(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined2 : customizer;
              length = 1;
            }
            object = Object2(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }
        function createBaseEach2(eachFunc, fromRight) {
          return function(collection, iteratee2) {
            if (collection == null) {
              return collection;
            }
            if (!isArrayLike2(collection)) {
              return eachFunc(collection, iteratee2);
            }
            var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
            while (fromRight ? index-- : ++index < length) {
              if (iteratee2(iterable[index], index, iterable) === false) {
                break;
              }
            }
            return collection;
          };
        }
        function createBaseFor2(fromRight) {
          return function(object, iteratee2, keysFunc) {
            var index = -1, iterable = Object2(object), props2 = keysFunc(object), length = props2.length;
            while (length--) {
              var key2 = props2[fromRight ? length : ++index];
              if (iteratee2(iterable[key2], key2, iterable) === false) {
                break;
              }
            }
            return object;
          };
        }
        function createBind(func, bitmask, thisArg) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
            return fn2.apply(isBind ? thisArg : this, arguments);
          }
          return wrapper;
        }
        function createCaseFirst(methodName) {
          return function(string) {
            string = toString5(string);
            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
            var chr = strSymbols ? strSymbols[0] : string.charAt(0);
            var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
            return chr[methodName]() + trailing;
          };
        }
        function createCompounder(callback) {
          return function(string) {
            return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
          };
        }
        function createCtor(Ctor) {
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return new Ctor();
              case 1:
                return new Ctor(args[0]);
              case 2:
                return new Ctor(args[0], args[1]);
              case 3:
                return new Ctor(args[0], args[1], args[2]);
              case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);
              case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
              case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
              case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
            }
            var thisBinding = baseCreate2(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
            return isObject3(result2) ? result2 : thisBinding;
          };
        }
        function createCurry(func, bitmask, arity) {
          var Ctor = createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length, placeholder2 = getHolder(wrapper);
            while (index--) {
              args[index] = arguments[index];
            }
            var holders = length < 3 && args[0] !== placeholder2 && args[length - 1] !== placeholder2 ? [] : replaceHolders(args, placeholder2);
            length -= holders.length;
            if (length < arity) {
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                undefined2,
                args,
                holders,
                undefined2,
                undefined2,
                arity - length
              );
            }
            var fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
            return apply2(fn2, this, args);
          }
          return wrapper;
        }
        function createFind(findIndexFunc) {
          return function(collection, predicate, fromIndex) {
            var iterable = Object2(collection);
            if (!isArrayLike2(collection)) {
              var iteratee2 = getIteratee(predicate, 3);
              collection = keys2(collection);
              predicate = function(key2) {
                return iteratee2(iterable[key2], key2, iterable);
              };
            }
            var index = findIndexFunc(collection, predicate, fromIndex);
            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
          };
        }
        function createFlow(fromRight) {
          return flatRest(function(funcs) {
            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
            if (fromRight) {
              funcs.reverse();
            }
            while (index--) {
              var func = funcs[index];
              if (typeof func != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT4);
              }
              if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                var wrapper = new LodashWrapper([], true);
              }
            }
            index = wrapper ? index : length;
            while (++index < length) {
              func = funcs[index];
              var funcName = getFuncName(func), data2 = funcName == "wrapper" ? getData(func) : undefined2;
              if (data2 && isLaziable(data2[0]) && data2[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data2[4].length && data2[9] == 1) {
                wrapper = wrapper[getFuncName(data2[0])].apply(wrapper, data2[3]);
              } else {
                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
            }
            return function() {
              var args = arguments, value = args[0];
              if (wrapper && args.length == 1 && isArray3(value)) {
                return wrapper.plant(value).value();
              }
              var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
              while (++index2 < length) {
                result2 = funcs[index2].call(this, result2);
              }
              return result2;
            };
          });
        }
        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
          function wrapper() {
            var length = arguments.length, args = Array2(length), index = length;
            while (index--) {
              args[index] = arguments[index];
            }
            if (isCurried) {
              var placeholder2 = getHolder(wrapper), holdersCount = countHolders(args, placeholder2);
            }
            if (partials) {
              args = composeArgs(args, partials, holders, isCurried);
            }
            if (partialsRight) {
              args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
            }
            length -= holdersCount;
            if (isCurried && length < arity) {
              var newHolders = replaceHolders(args, placeholder2);
              return createRecurry(
                func,
                bitmask,
                createHybrid,
                wrapper.placeholder,
                thisArg,
                args,
                newHolders,
                argPos,
                ary2,
                arity - length
              );
            }
            var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
            length = args.length;
            if (argPos) {
              args = reorder(args, argPos);
            } else if (isFlip && length > 1) {
              args.reverse();
            }
            if (isAry && ary2 < length) {
              args.length = ary2;
            }
            if (this && this !== root2 && this instanceof wrapper) {
              fn2 = Ctor || createCtor(fn2);
            }
            return fn2.apply(thisBinding, args);
          }
          return wrapper;
        }
        function createInverter(setter, toIteratee) {
          return function(object, iteratee2) {
            return baseInverter(object, setter, toIteratee(iteratee2), {});
          };
        }
        function createMathOperation(operator, defaultValue2) {
          return function(value, other) {
            var result2;
            if (value === undefined2 && other === undefined2) {
              return defaultValue2;
            }
            if (value !== undefined2) {
              result2 = value;
            }
            if (other !== undefined2) {
              if (result2 === undefined2) {
                return other;
              }
              if (typeof value == "string" || typeof other == "string") {
                value = baseToString2(value);
                other = baseToString2(other);
              } else {
                value = baseToNumber(value);
                other = baseToNumber(other);
              }
              result2 = operator(value, other);
            }
            return result2;
          };
        }
        function createOver(arrayFunc) {
          return flatRest(function(iteratees) {
            iteratees = arrayMap2(iteratees, baseUnary2(getIteratee()));
            return baseRest2(function(args) {
              var thisArg = this;
              return arrayFunc(iteratees, function(iteratee2) {
                return apply2(iteratee2, thisArg, args);
              });
            });
          });
        }
        function createPadding(length, chars) {
          chars = chars === undefined2 ? " " : baseToString2(chars);
          var charsLength = chars.length;
          if (charsLength < 2) {
            return charsLength ? baseRepeat(chars, length) : chars;
          }
          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
        }
        function createPartial(func, bitmask, thisArg, partials) {
          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
          function wrapper() {
            var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
            while (++leftIndex < leftLength) {
              args[leftIndex] = partials[leftIndex];
            }
            while (argsLength--) {
              args[leftIndex++] = arguments[++argsIndex];
            }
            return apply2(fn2, isBind ? thisArg : this, args);
          }
          return wrapper;
        }
        function createRange(fromRight) {
          return function(start, end, step) {
            if (step && typeof step != "number" && isIterateeCall2(start, end, step)) {
              end = step = undefined2;
            }
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
            return baseRange(start, end, step, fromRight);
          };
        }
        function createRelationalOperation(operator) {
          return function(value, other) {
            if (!(typeof value == "string" && typeof other == "string")) {
              value = toNumber2(value);
              other = toNumber2(other);
            }
            return operator(value, other);
          };
        }
        function createRecurry(func, bitmask, wrapFunc, placeholder2, thisArg, partials, holders, argPos, ary2, arity) {
          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
          bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
          if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
            bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
          }
          var newData = [
            func,
            bitmask,
            thisArg,
            newPartials,
            newHolders,
            newPartialsRight,
            newHoldersRight,
            argPos,
            ary2,
            arity
          ];
          var result2 = wrapFunc.apply(undefined2, newData);
          if (isLaziable(func)) {
            setData(result2, newData);
          }
          result2.placeholder = placeholder2;
          return setWrapToString(result2, func, bitmask);
        }
        function createRound(methodName) {
          var func = Math2[methodName];
          return function(number, precision) {
            number = toNumber2(number);
            precision = precision == null ? 0 : nativeMin2(toInteger2(precision), 292);
            if (precision && nativeIsFinite(number)) {
              var pair = (toString5(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
              pair = (toString5(value) + "e").split("e");
              return +(pair[0] + "e" + (+pair[1] - precision));
            }
            return func(number);
          };
        }
        var createSet = !(Set3 && 1 / setToArray2(new Set3([, -0]))[1] == INFINITY3) ? noop3 : function(values2) {
          return new Set3(values2);
        };
        function createToPairs(keysFunc) {
          return function(object) {
            var tag = getTag2(object);
            if (tag == mapTag4) {
              return mapToArray2(object);
            }
            if (tag == setTag4) {
              return setToPairs(object);
            }
            return baseToPairs(object, keysFunc(object));
          };
        }
        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
          if (!isBindKey && typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          var length = partials ? partials.length : 0;
          if (!length) {
            bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
            partials = holders = undefined2;
          }
          ary2 = ary2 === undefined2 ? ary2 : nativeMax3(toInteger2(ary2), 0);
          arity = arity === undefined2 ? arity : toInteger2(arity);
          length -= holders ? holders.length : 0;
          if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
            var partialsRight = partials, holdersRight = holders;
            partials = holders = undefined2;
          }
          var data2 = isBindKey ? undefined2 : getData(func);
          var newData = [
            func,
            bitmask,
            thisArg,
            partials,
            holders,
            partialsRight,
            holdersRight,
            argPos,
            ary2,
            arity
          ];
          if (data2) {
            mergeData(newData, data2);
          }
          func = newData[0];
          bitmask = newData[1];
          thisArg = newData[2];
          partials = newData[3];
          holders = newData[4];
          arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
          if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
            bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
          }
          if (!bitmask || bitmask == WRAP_BIND_FLAG) {
            var result2 = createBind(func, bitmask, thisArg);
          } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
            result2 = createCurry(func, bitmask, arity);
          } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
            result2 = createPartial(func, bitmask, thisArg, partials);
          } else {
            result2 = createHybrid.apply(undefined2, newData);
          }
          var setter = data2 ? baseSetData : setData;
          return setWrapToString(setter(result2, newData), func, bitmask);
        }
        function customDefaultsAssignIn(objValue, srcValue, key2, object) {
          if (objValue === undefined2 || eq2(objValue, objectProto16[key2]) && !hasOwnProperty14.call(object, key2)) {
            return srcValue;
          }
          return objValue;
        }
        function customDefaultsMerge(objValue, srcValue, key2, object, source, stack) {
          if (isObject3(objValue) && isObject3(srcValue)) {
            stack.set(srcValue, objValue);
            baseMerge2(objValue, srcValue, undefined2, customDefaultsMerge, stack);
            stack["delete"](srcValue);
          }
          return objValue;
        }
        function customOmitClone(value) {
          return isPlainObject2(value) ? undefined2 : value;
        }
        function equalArrays2(array, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG7, arrLength = array.length, othLength = other.length;
          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
            return false;
          }
          var arrStacked = stack.get(array);
          var othStacked = stack.get(other);
          if (arrStacked && othStacked) {
            return arrStacked == other && othStacked == array;
          }
          var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG5 ? new SetCache2() : undefined2;
          stack.set(array, other);
          stack.set(other, array);
          while (++index < arrLength) {
            var arrValue = array[index], othValue = other[index];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            }
            if (compared !== undefined2) {
              if (compared) {
                continue;
              }
              result2 = false;
              break;
            }
            if (seen) {
              if (!arraySome2(other, function(othValue2, othIndex) {
                if (!cacheHas2(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
                result2 = false;
                break;
              }
            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              result2 = false;
              break;
            }
          }
          stack["delete"](array);
          stack["delete"](other);
          return result2;
        }
        function equalByTag2(object, other, tag, bitmask, customizer, equalFunc, stack) {
          switch (tag) {
            case dataViewTag4:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                return false;
              }
              object = object.buffer;
              other = other.buffer;
            case arrayBufferTag3:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array3(object), new Uint8Array3(other))) {
                return false;
              }
              return true;
            case boolTag3:
            case dateTag3:
            case numberTag3:
              return eq2(+object, +other);
            case errorTag3:
              return object.name == other.name && object.message == other.message;
            case regexpTag3:
            case stringTag3:
              return object == other + "";
            case mapTag4:
              var convert = mapToArray2;
            case setTag4:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG7;
              convert || (convert = setToArray2);
              if (object.size != other.size && !isPartial) {
                return false;
              }
              var stacked = stack.get(object);
              if (stacked) {
                return stacked == other;
              }
              bitmask |= COMPARE_UNORDERED_FLAG5;
              stack.set(object, other);
              var result2 = equalArrays2(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result2;
            case symbolTag3:
              if (symbolValueOf2) {
                return symbolValueOf2.call(object) == symbolValueOf2.call(other);
              }
          }
          return false;
        }
        function equalObjects2(object, other, bitmask, customizer, equalFunc, stack) {
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG7, objProps = getAllKeys2(object), objLength = objProps.length, othProps = getAllKeys2(other), othLength = othProps.length;
          if (objLength != othLength && !isPartial) {
            return false;
          }
          var index = objLength;
          while (index--) {
            var key2 = objProps[index];
            if (!(isPartial ? key2 in other : hasOwnProperty14.call(other, key2))) {
              return false;
            }
          }
          var objStacked = stack.get(object);
          var othStacked = stack.get(other);
          if (objStacked && othStacked) {
            return objStacked == other && othStacked == object;
          }
          var result2 = true;
          stack.set(object, other);
          stack.set(other, object);
          var skipCtor = isPartial;
          while (++index < objLength) {
            key2 = objProps[index];
            var objValue = object[key2], othValue = other[key2];
            if (customizer) {
              var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
            }
            if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
              result2 = false;
              break;
            }
            skipCtor || (skipCtor = key2 == "constructor");
          }
          if (result2 && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
              result2 = false;
            }
          }
          stack["delete"](object);
          stack["delete"](other);
          return result2;
        }
        function flatRest(func) {
          return setToString2(overRest2(func, undefined2, flatten2), func + "");
        }
        function getAllKeys2(object) {
          return baseGetAllKeys2(object, keys2, getSymbols2);
        }
        function getAllKeysIn(object) {
          return baseGetAllKeys2(object, keysIn2, getSymbolsIn);
        }
        var getData = !metaMap ? noop3 : function(func) {
          return metaMap.get(func);
        };
        function getFuncName(func) {
          var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty14.call(realNames, result2) ? array.length : 0;
          while (length--) {
            var data2 = array[length], otherFunc = data2.func;
            if (otherFunc == null || otherFunc == func) {
              return data2.name;
            }
          }
          return result2;
        }
        function getHolder(func) {
          var object = hasOwnProperty14.call(lodash, "placeholder") ? lodash : func;
          return object.placeholder;
        }
        function getIteratee() {
          var result2 = lodash.iteratee || iteratee;
          result2 = result2 === iteratee ? baseIteratee2 : result2;
          return arguments.length ? result2(arguments[0], arguments[1]) : result2;
        }
        function getMapData2(map3, key2) {
          var data2 = map3.__data__;
          return isKeyable2(key2) ? data2[typeof key2 == "string" ? "string" : "hash"] : data2.map;
        }
        function getMatchData2(object) {
          var result2 = keys2(object), length = result2.length;
          while (length--) {
            var key2 = result2[length], value = object[key2];
            result2[length] = [key2, value, isStrictComparable2(value)];
          }
          return result2;
        }
        function getNative2(object, key2) {
          var value = getValue2(object, key2);
          return baseIsNative2(value) ? value : undefined2;
        }
        function getRawTag2(value) {
          var isOwn = hasOwnProperty14.call(value, symToStringTag3), tag = value[symToStringTag3];
          try {
            value[symToStringTag3] = undefined2;
            var unmasked = true;
          } catch (e4) {
          }
          var result2 = nativeObjectToString3.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag3] = tag;
            } else {
              delete value[symToStringTag3];
            }
          }
          return result2;
        }
        var getSymbols2 = !nativeGetSymbols2 ? stubArray2 : function(object) {
          if (object == null) {
            return [];
          }
          object = Object2(object);
          return arrayFilter2(nativeGetSymbols2(object), function(symbol) {
            return propertyIsEnumerable3.call(object, symbol);
          });
        };
        var getSymbolsIn = !nativeGetSymbols2 ? stubArray2 : function(object) {
          var result2 = [];
          while (object) {
            arrayPush2(result2, getSymbols2(object));
            object = getPrototype2(object);
          }
          return result2;
        };
        var getTag2 = baseGetTag2;
        if (DataView2 && getTag2(new DataView2(new ArrayBuffer(1))) != dataViewTag4 || Map3 && getTag2(new Map3()) != mapTag4 || Promise3 && getTag2(Promise3.resolve()) != promiseTag2 || Set3 && getTag2(new Set3()) != setTag4 || WeakMap3 && getTag2(new WeakMap3()) != weakMapTag3) {
          getTag2 = function(value) {
            var result2 = baseGetTag2(value), Ctor = result2 == objectTag5 ? value.constructor : undefined2, ctorString = Ctor ? toSource2(Ctor) : "";
            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString2:
                  return dataViewTag4;
                case mapCtorString2:
                  return mapTag4;
                case promiseCtorString2:
                  return promiseTag2;
                case setCtorString2:
                  return setTag4;
                case weakMapCtorString2:
                  return weakMapTag3;
              }
            }
            return result2;
          };
        }
        function getView(start, end, transforms) {
          var index = -1, length = transforms.length;
          while (++index < length) {
            var data2 = transforms[index], size2 = data2.size;
            switch (data2.type) {
              case "drop":
                start += size2;
                break;
              case "dropRight":
                end -= size2;
                break;
              case "take":
                end = nativeMin2(end, start + size2);
                break;
              case "takeRight":
                start = nativeMax3(start, end - size2);
                break;
            }
          }
          return { "start": start, "end": end };
        }
        function getWrapDetails(source) {
          var match2 = source.match(reWrapDetails);
          return match2 ? match2[1].split(reSplitDetails) : [];
        }
        function hasPath2(object, path, hasFunc) {
          path = castPath2(path, object);
          var index = -1, length = path.length, result2 = false;
          while (++index < length) {
            var key2 = toKey2(path[index]);
            if (!(result2 = object != null && hasFunc(object, key2))) {
              break;
            }
            object = object[key2];
          }
          if (result2 || ++index != length) {
            return result2;
          }
          length = object == null ? 0 : object.length;
          return !!length && isLength2(length) && isIndex2(key2, length) && (isArray3(object) || isArguments2(object));
        }
        function initCloneArray(array) {
          var length = array.length, result2 = new array.constructor(length);
          if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
            result2.index = array.index;
            result2.input = array.input;
          }
          return result2;
        }
        function initCloneObject2(object) {
          return typeof object.constructor == "function" && !isPrototype2(object) ? baseCreate2(getPrototype2(object)) : {};
        }
        function initCloneByTag(object, tag, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag3:
              return cloneArrayBuffer2(object);
            case boolTag3:
            case dateTag3:
              return new Ctor(+object);
            case dataViewTag4:
              return cloneDataView(object, isDeep);
            case float32Tag2:
            case float64Tag2:
            case int8Tag2:
            case int16Tag2:
            case int32Tag2:
            case uint8Tag2:
            case uint8ClampedTag2:
            case uint16Tag2:
            case uint32Tag2:
              return cloneTypedArray2(object, isDeep);
            case mapTag4:
              return new Ctor();
            case numberTag3:
            case stringTag3:
              return new Ctor(object);
            case regexpTag3:
              return cloneRegExp(object);
            case setTag4:
              return new Ctor();
            case symbolTag3:
              return cloneSymbol(object);
          }
        }
        function insertWrapDetails(source, details) {
          var length = details.length;
          if (!length) {
            return source;
          }
          var lastIndex = length - 1;
          details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
          details = details.join(length > 2 ? ", " : " ");
          return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        function isFlattenable(value) {
          return isArray3(value) || isArguments2(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        function isIndex2(value, length) {
          var type = typeof value;
          length = length == null ? MAX_SAFE_INTEGER3 : length;
          return !!length && (type == "number" || type != "symbol" && reIsUint2.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }
        function isIterateeCall2(value, index, object) {
          if (!isObject3(object)) {
            return false;
          }
          var type = typeof index;
          if (type == "number" ? isArrayLike2(object) && isIndex2(index, object.length) : type == "string" && index in object) {
            return eq2(object[index], value);
          }
          return false;
        }
        function isKey2(value, object) {
          if (isArray3(value)) {
            return false;
          }
          var type = typeof value;
          if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol2(value)) {
            return true;
          }
          return reIsPlainProp2.test(value) || !reIsDeepProp2.test(value) || object != null && value in Object2(object);
        }
        function isKeyable2(value) {
          var type = typeof value;
          return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        function isLaziable(func) {
          var funcName = getFuncName(func), other = lodash[funcName];
          if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
            return false;
          }
          if (func === other) {
            return true;
          }
          var data2 = getData(other);
          return !!data2 && func === data2[0];
        }
        function isMasked2(func) {
          return !!maskSrcKey2 && maskSrcKey2 in func;
        }
        var isMaskable = coreJsData2 ? isFunction3 : stubFalse2;
        function isPrototype2(value) {
          var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto16;
          return value === proto;
        }
        function isStrictComparable2(value) {
          return value === value && !isObject3(value);
        }
        function matchesStrictComparable2(key2, srcValue) {
          return function(object) {
            if (object == null) {
              return false;
            }
            return object[key2] === srcValue && (srcValue !== undefined2 || key2 in Object2(object));
          };
        }
        function memoizeCapped2(func) {
          var result2 = memoize2(func, function(key2) {
            if (cache.size === MAX_MEMOIZE_SIZE2) {
              cache.clear();
            }
            return key2;
          });
          var cache = result2.cache;
          return result2;
        }
        function mergeData(data2, source) {
          var bitmask = data2[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
          var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data2[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
          if (!(isCommon || isCombo)) {
            return data2;
          }
          if (srcBitmask & WRAP_BIND_FLAG) {
            data2[2] = source[2];
            newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
          }
          var value = source[3];
          if (value) {
            var partials = data2[3];
            data2[3] = partials ? composeArgs(partials, value, source[4]) : value;
            data2[4] = partials ? replaceHolders(data2[3], PLACEHOLDER) : source[4];
          }
          value = source[5];
          if (value) {
            partials = data2[5];
            data2[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
            data2[6] = partials ? replaceHolders(data2[5], PLACEHOLDER) : source[6];
          }
          value = source[7];
          if (value) {
            data2[7] = value;
          }
          if (srcBitmask & WRAP_ARY_FLAG) {
            data2[8] = data2[8] == null ? source[8] : nativeMin2(data2[8], source[8]);
          }
          if (data2[9] == null) {
            data2[9] = source[9];
          }
          data2[0] = source[0];
          data2[1] = newBitmask;
          return data2;
        }
        function nativeKeysIn2(object) {
          var result2 = [];
          if (object != null) {
            for (var key2 in Object2(object)) {
              result2.push(key2);
            }
          }
          return result2;
        }
        function objectToString2(value) {
          return nativeObjectToString3.call(value);
        }
        function overRest2(func, start, transform2) {
          start = nativeMax3(start === undefined2 ? func.length - 1 : start, 0);
          return function() {
            var args = arguments, index = -1, length = nativeMax3(args.length - start, 0), array = Array2(length);
            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array2(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = transform2(array);
            return apply2(func, this, otherArgs);
          };
        }
        function parent(object, path) {
          return path.length < 2 ? object : baseGet2(object, baseSlice(path, 0, -1));
        }
        function reorder(array, indexes) {
          var arrLength = array.length, length = nativeMin2(indexes.length, arrLength), oldArray = copyArray2(array);
          while (length--) {
            var index = indexes[length];
            array[length] = isIndex2(index, arrLength) ? oldArray[index] : undefined2;
          }
          return array;
        }
        function safeGet2(object, key2) {
          if (key2 === "constructor" && typeof object[key2] === "function") {
            return;
          }
          if (key2 == "__proto__") {
            return;
          }
          return object[key2];
        }
        var setData = shortOut2(baseSetData);
        var setTimeout2 = ctxSetTimeout || function(func, wait) {
          return root2.setTimeout(func, wait);
        };
        var setToString2 = shortOut2(baseSetToString2);
        function setWrapToString(wrapper, reference, bitmask) {
          var source = reference + "";
          return setToString2(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        function shortOut2(func) {
          var count2 = 0, lastCalled = 0;
          return function() {
            var stamp = nativeNow2(), remaining = HOT_SPAN2 - (stamp - lastCalled);
            lastCalled = stamp;
            if (remaining > 0) {
              if (++count2 >= HOT_COUNT2) {
                return arguments[0];
              }
            } else {
              count2 = 0;
            }
            return func.apply(undefined2, arguments);
          };
        }
        function shuffleSelf(array, size2) {
          var index = -1, length = array.length, lastIndex = length - 1;
          size2 = size2 === undefined2 ? length : size2;
          while (++index < size2) {
            var rand = baseRandom(index, lastIndex), value = array[rand];
            array[rand] = array[index];
            array[index] = value;
          }
          array.length = size2;
          return array;
        }
        var stringToPath2 = memoizeCapped2(function(string) {
          var result2 = [];
          if (string.charCodeAt(0) === 46) {
            result2.push("");
          }
          string.replace(rePropName2, function(match2, number, quote, subString) {
            result2.push(quote ? subString.replace(reEscapeChar2, "$1") : number || match2);
          });
          return result2;
        });
        function toKey2(value) {
          if (typeof value == "string" || isSymbol2(value)) {
            return value;
          }
          var result2 = value + "";
          return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
        }
        function toSource2(func) {
          if (func != null) {
            try {
              return funcToString4.call(func);
            } catch (e4) {
            }
            try {
              return func + "";
            } catch (e4) {
            }
          }
          return "";
        }
        function updateWrapDetails(details, bitmask) {
          arrayEach2(wrapFlags, function(pair) {
            var value = "_." + pair[0];
            if (bitmask & pair[1] && !arrayIncludes(details, value)) {
              details.push(value);
            }
          });
          return details.sort();
        }
        function wrapperClone(wrapper) {
          if (wrapper instanceof LazyWrapper) {
            return wrapper.clone();
          }
          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
          result2.__actions__ = copyArray2(wrapper.__actions__);
          result2.__index__ = wrapper.__index__;
          result2.__values__ = wrapper.__values__;
          return result2;
        }
        function chunk(array, size2, guard) {
          if (guard ? isIterateeCall2(array, size2, guard) : size2 === undefined2) {
            size2 = 1;
          } else {
            size2 = nativeMax3(toInteger2(size2), 0);
          }
          var length = array == null ? 0 : array.length;
          if (!length || size2 < 1) {
            return [];
          }
          var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
          while (index < length) {
            result2[resIndex++] = baseSlice(array, index, index += size2);
          }
          return result2;
        }
        function compact(array) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
          while (++index < length) {
            var value = array[index];
            if (value) {
              result2[resIndex++] = value;
            }
          }
          return result2;
        }
        function concat() {
          var length = arguments.length;
          if (!length) {
            return [];
          }
          var args = Array2(length - 1), array = arguments[0], index = length;
          while (index--) {
            args[index - 1] = arguments[index];
          }
          return arrayPush2(isArray3(array) ? copyArray2(array) : [array], baseFlatten(args, 1));
        }
        var difference = baseRest2(function(array, values2) {
          return isArrayLikeObject2(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject2, true)) : [];
        });
        var differenceBy = baseRest2(function(array, values2) {
          var iteratee2 = last(values2);
          if (isArrayLikeObject2(iteratee2)) {
            iteratee2 = undefined2;
          }
          return isArrayLikeObject2(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject2, true), getIteratee(iteratee2, 2)) : [];
        });
        var differenceWith = baseRest2(function(array, values2) {
          var comparator = last(values2);
          if (isArrayLikeObject2(comparator)) {
            comparator = undefined2;
          }
          return isArrayLikeObject2(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject2, true), undefined2, comparator) : [];
        });
        function drop(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          return baseSlice(array, n2 < 0 ? 0 : n2, length);
        }
        function dropRight(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          n2 = length - n2;
          return baseSlice(array, 0, n2 < 0 ? 0 : n2);
        }
        function dropRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        function dropWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        function fill(array, value, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (start && typeof start != "number" && isIterateeCall2(array, value, start)) {
            start = 0;
            end = length;
          }
          return baseFill(array, value, start, end);
        }
        function findIndex2(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger2(fromIndex);
          if (index < 0) {
            index = nativeMax3(length + index, 0);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        function findLastIndex(array, predicate, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length - 1;
          if (fromIndex !== undefined2) {
            index = toInteger2(fromIndex);
            index = fromIndex < 0 ? nativeMax3(length + index, 0) : nativeMin2(index, length - 1);
          }
          return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        function flatten2(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, 1) : [];
        }
        function flattenDeep(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseFlatten(array, INFINITY3) : [];
        }
        function flattenDepth(array, depth) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          depth = depth === undefined2 ? 1 : toInteger2(depth);
          return baseFlatten(array, depth);
        }
        function fromPairs(pairs) {
          var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
          while (++index < length) {
            var pair = pairs[index];
            result2[pair[0]] = pair[1];
          }
          return result2;
        }
        function head(array) {
          return array && array.length ? array[0] : undefined2;
        }
        function indexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = fromIndex == null ? 0 : toInteger2(fromIndex);
          if (index < 0) {
            index = nativeMax3(length + index, 0);
          }
          return baseIndexOf(array, value, index);
        }
        function initial(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 0, -1) : [];
        }
        var intersection = baseRest2(function(arrays) {
          var mapped = arrayMap2(arrays, castArrayLikeObject);
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        var intersectionBy = baseRest2(function(arrays) {
          var iteratee2 = last(arrays), mapped = arrayMap2(arrays, castArrayLikeObject);
          if (iteratee2 === last(mapped)) {
            iteratee2 = undefined2;
          } else {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
        });
        var intersectionWith = baseRest2(function(arrays) {
          var comparator = last(arrays), mapped = arrayMap2(arrays, castArrayLikeObject);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          if (comparator) {
            mapped.pop();
          }
          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
        });
        function join(array, separator) {
          return array == null ? "" : nativeJoin.call(array, separator);
        }
        function last(array) {
          var length = array == null ? 0 : array.length;
          return length ? array[length - 1] : undefined2;
        }
        function lastIndexOf(array, value, fromIndex) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return -1;
          }
          var index = length;
          if (fromIndex !== undefined2) {
            index = toInteger2(fromIndex);
            index = index < 0 ? nativeMax3(length + index, 0) : nativeMin2(index, length - 1);
          }
          return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        function nth(array, n2) {
          return array && array.length ? baseNth(array, toInteger2(n2)) : undefined2;
        }
        var pull = baseRest2(pullAll);
        function pullAll(array, values2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
        }
        function pullAllBy(array, values2, iteratee2) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
        }
        function pullAllWith(array, values2, comparator) {
          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
        }
        var pullAt = flatRest(function(array, indexes) {
          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
          basePullAt(array, arrayMap2(indexes, function(index) {
            return isIndex2(index, length) ? +index : index;
          }).sort(compareAscending));
          return result2;
        });
        function remove(array, predicate) {
          var result2 = [];
          if (!(array && array.length)) {
            return result2;
          }
          var index = -1, indexes = [], length = array.length;
          predicate = getIteratee(predicate, 3);
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result2.push(value);
              indexes.push(index);
            }
          }
          basePullAt(array, indexes);
          return result2;
        }
        function reverse(array) {
          return array == null ? array : nativeReverse.call(array);
        }
        function slice(array, start, end) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          if (end && typeof end != "number" && isIterateeCall2(array, start, end)) {
            start = 0;
            end = length;
          } else {
            start = start == null ? 0 : toInteger2(start);
            end = end === undefined2 ? length : toInteger2(end);
          }
          return baseSlice(array, start, end);
        }
        function sortedIndex(array, value) {
          return baseSortedIndex(array, value);
        }
        function sortedIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
        }
        function sortedIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value);
            if (index < length && eq2(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedLastIndex(array, value) {
          return baseSortedIndex(array, value, true);
        }
        function sortedLastIndexBy(array, value, iteratee2) {
          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
        }
        function sortedLastIndexOf(array, value) {
          var length = array == null ? 0 : array.length;
          if (length) {
            var index = baseSortedIndex(array, value, true) - 1;
            if (eq2(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function sortedUniq(array) {
          return array && array.length ? baseSortedUniq(array) : [];
        }
        function sortedUniqBy(array, iteratee2) {
          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function tail(array) {
          var length = array == null ? 0 : array.length;
          return length ? baseSlice(array, 1, length) : [];
        }
        function take(array, n2, guard) {
          if (!(array && array.length)) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          return baseSlice(array, 0, n2 < 0 ? 0 : n2);
        }
        function takeRight(array, n2, guard) {
          var length = array == null ? 0 : array.length;
          if (!length) {
            return [];
          }
          n2 = guard || n2 === undefined2 ? 1 : toInteger2(n2);
          n2 = length - n2;
          return baseSlice(array, n2 < 0 ? 0 : n2, length);
        }
        function takeRightWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        function takeWhile(array, predicate) {
          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        var union = baseRest2(function(arrays) {
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject2, true));
        });
        var unionBy = baseRest2(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject2(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject2, true), getIteratee(iteratee2, 2));
        });
        var unionWith = baseRest2(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject2, true), undefined2, comparator);
        });
        function uniq3(array) {
          return array && array.length ? baseUniq(array) : [];
        }
        function uniqBy(array, iteratee2) {
          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
        }
        function uniqWith(array, comparator) {
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return array && array.length ? baseUniq(array, undefined2, comparator) : [];
        }
        function unzip(array) {
          if (!(array && array.length)) {
            return [];
          }
          var length = 0;
          array = arrayFilter2(array, function(group) {
            if (isArrayLikeObject2(group)) {
              length = nativeMax3(group.length, length);
              return true;
            }
          });
          return baseTimes2(length, function(index) {
            return arrayMap2(array, baseProperty2(index));
          });
        }
        function unzipWith(array, iteratee2) {
          if (!(array && array.length)) {
            return [];
          }
          var result2 = unzip(array);
          if (iteratee2 == null) {
            return result2;
          }
          return arrayMap2(result2, function(group) {
            return apply2(iteratee2, undefined2, group);
          });
        }
        var without = baseRest2(function(array, values2) {
          return isArrayLikeObject2(array) ? baseDifference(array, values2) : [];
        });
        var xor = baseRest2(function(arrays) {
          return baseXor(arrayFilter2(arrays, isArrayLikeObject2));
        });
        var xorBy = baseRest2(function(arrays) {
          var iteratee2 = last(arrays);
          if (isArrayLikeObject2(iteratee2)) {
            iteratee2 = undefined2;
          }
          return baseXor(arrayFilter2(arrays, isArrayLikeObject2), getIteratee(iteratee2, 2));
        });
        var xorWith = baseRest2(function(arrays) {
          var comparator = last(arrays);
          comparator = typeof comparator == "function" ? comparator : undefined2;
          return baseXor(arrayFilter2(arrays, isArrayLikeObject2), undefined2, comparator);
        });
        var zip = baseRest2(unzip);
        function zipObject(props2, values2) {
          return baseZipObject(props2 || [], values2 || [], assignValue2);
        }
        function zipObjectDeep(props2, values2) {
          return baseZipObject(props2 || [], values2 || [], baseSet);
        }
        var zipWith = baseRest2(function(arrays) {
          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
          iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
          return unzipWith(arrays, iteratee2);
        });
        function chain(value) {
          var result2 = lodash(value);
          result2.__chain__ = true;
          return result2;
        }
        function tap(value, interceptor) {
          interceptor(value);
          return value;
        }
        function thru(value, interceptor) {
          return interceptor(value);
        }
        var wrapperAt = flatRest(function(paths) {
          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
            return baseAt(object, paths);
          };
          if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex2(start)) {
            return this.thru(interceptor);
          }
          value = value.slice(start, +start + (length ? 1 : 0));
          value.__actions__.push({
            "func": thru,
            "args": [interceptor],
            "thisArg": undefined2
          });
          return new LodashWrapper(value, this.__chain__).thru(function(array) {
            if (length && !array.length) {
              array.push(undefined2);
            }
            return array;
          });
        });
        function wrapperChain() {
          return chain(this);
        }
        function wrapperCommit() {
          return new LodashWrapper(this.value(), this.__chain__);
        }
        function wrapperNext() {
          if (this.__values__ === undefined2) {
            this.__values__ = toArray(this.value());
          }
          var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
          return { "done": done, "value": value };
        }
        function wrapperToIterator() {
          return this;
        }
        function wrapperPlant(value) {
          var result2, parent2 = this;
          while (parent2 instanceof baseLodash) {
            var clone3 = wrapperClone(parent2);
            clone3.__index__ = 0;
            clone3.__values__ = undefined2;
            if (result2) {
              previous.__wrapped__ = clone3;
            } else {
              result2 = clone3;
            }
            var previous = clone3;
            parent2 = parent2.__wrapped__;
          }
          previous.__wrapped__ = value;
          return result2;
        }
        function wrapperReverse() {
          var value = this.__wrapped__;
          if (value instanceof LazyWrapper) {
            var wrapped = value;
            if (this.__actions__.length) {
              wrapped = new LazyWrapper(this);
            }
            wrapped = wrapped.reverse();
            wrapped.__actions__.push({
              "func": thru,
              "args": [reverse],
              "thisArg": undefined2
            });
            return new LodashWrapper(wrapped, this.__chain__);
          }
          return this.thru(reverse);
        }
        function wrapperValue() {
          return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        var countBy = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty14.call(result2, key2)) {
            ++result2[key2];
          } else {
            baseAssignValue2(result2, key2, 1);
          }
        });
        function every(collection, predicate, guard) {
          var func = isArray3(collection) ? arrayEvery : baseEvery;
          if (guard && isIterateeCall2(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        function filter(collection, predicate) {
          var func = isArray3(collection) ? arrayFilter2 : baseFilter;
          return func(collection, getIteratee(predicate, 3));
        }
        var find = createFind(findIndex2);
        var findLast = createFind(findLastIndex);
        function flatMap(collection, iteratee2) {
          return baseFlatten(map2(collection, iteratee2), 1);
        }
        function flatMapDeep(collection, iteratee2) {
          return baseFlatten(map2(collection, iteratee2), INFINITY3);
        }
        function flatMapDepth(collection, iteratee2, depth) {
          depth = depth === undefined2 ? 1 : toInteger2(depth);
          return baseFlatten(map2(collection, iteratee2), depth);
        }
        function forEach2(collection, iteratee2) {
          var func = isArray3(collection) ? arrayEach2 : baseEach2;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function forEachRight(collection, iteratee2) {
          var func = isArray3(collection) ? arrayEachRight : baseEachRight;
          return func(collection, getIteratee(iteratee2, 3));
        }
        var groupBy2 = createAggregator(function(result2, value, key2) {
          if (hasOwnProperty14.call(result2, key2)) {
            result2[key2].push(value);
          } else {
            baseAssignValue2(result2, key2, [value]);
          }
        });
        function includes(collection, value, fromIndex, guard) {
          collection = isArrayLike2(collection) ? collection : values(collection);
          fromIndex = fromIndex && !guard ? toInteger2(fromIndex) : 0;
          var length = collection.length;
          if (fromIndex < 0) {
            fromIndex = nativeMax3(length + fromIndex, 0);
          }
          return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        var invokeMap = baseRest2(function(collection, path, args) {
          var index = -1, isFunc = typeof path == "function", result2 = isArrayLike2(collection) ? Array2(collection.length) : [];
          baseEach2(collection, function(value) {
            result2[++index] = isFunc ? apply2(path, value, args) : baseInvoke(value, path, args);
          });
          return result2;
        });
        var keyBy = createAggregator(function(result2, value, key2) {
          baseAssignValue2(result2, key2, value);
        });
        function map2(collection, iteratee2) {
          var func = isArray3(collection) ? arrayMap2 : baseMap2;
          return func(collection, getIteratee(iteratee2, 3));
        }
        function orderBy(collection, iteratees, orders, guard) {
          if (collection == null) {
            return [];
          }
          if (!isArray3(iteratees)) {
            iteratees = iteratees == null ? [] : [iteratees];
          }
          orders = guard ? undefined2 : orders;
          if (!isArray3(orders)) {
            orders = orders == null ? [] : [orders];
          }
          return baseOrderBy(collection, iteratees, orders);
        }
        var partition = createAggregator(function(result2, value, key2) {
          result2[key2 ? 0 : 1].push(value);
        }, function() {
          return [[], []];
        });
        function reduce(collection, iteratee2, accumulator) {
          var func = isArray3(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach2);
        }
        function reduceRight(collection, iteratee2, accumulator) {
          var func = isArray3(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
        }
        function reject(collection, predicate) {
          var func = isArray3(collection) ? arrayFilter2 : baseFilter;
          return func(collection, negate(getIteratee(predicate, 3)));
        }
        function sample(collection) {
          var func = isArray3(collection) ? arraySample : baseSample;
          return func(collection);
        }
        function sampleSize(collection, n2, guard) {
          if (guard ? isIterateeCall2(collection, n2, guard) : n2 === undefined2) {
            n2 = 1;
          } else {
            n2 = toInteger2(n2);
          }
          var func = isArray3(collection) ? arraySampleSize : baseSampleSize;
          return func(collection, n2);
        }
        function shuffle(collection) {
          var func = isArray3(collection) ? arrayShuffle : baseShuffle;
          return func(collection);
        }
        function size(collection) {
          if (collection == null) {
            return 0;
          }
          if (isArrayLike2(collection)) {
            return isString(collection) ? stringSize(collection) : collection.length;
          }
          var tag = getTag2(collection);
          if (tag == mapTag4 || tag == setTag4) {
            return collection.size;
          }
          return baseKeys2(collection).length;
        }
        function some(collection, predicate, guard) {
          var func = isArray3(collection) ? arraySome2 : baseSome;
          if (guard && isIterateeCall2(collection, predicate, guard)) {
            predicate = undefined2;
          }
          return func(collection, getIteratee(predicate, 3));
        }
        var sortBy = baseRest2(function(collection, iteratees) {
          if (collection == null) {
            return [];
          }
          var length = iteratees.length;
          if (length > 1 && isIterateeCall2(collection, iteratees[0], iteratees[1])) {
            iteratees = [];
          } else if (length > 2 && isIterateeCall2(iteratees[0], iteratees[1], iteratees[2])) {
            iteratees = [iteratees[0]];
          }
          return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        var now2 = ctxNow || function() {
          return root2.Date.now();
        };
        function after(n2, func) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          n2 = toInteger2(n2);
          return function() {
            if (--n2 < 1) {
              return func.apply(this, arguments);
            }
          };
        }
        function ary(func, n2, guard) {
          n2 = guard ? undefined2 : n2;
          n2 = func && n2 == null ? func.length : n2;
          return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n2);
        }
        function before(n2, func) {
          var result2;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          n2 = toInteger2(n2);
          return function() {
            if (--n2 > 0) {
              result2 = func.apply(this, arguments);
            }
            if (n2 <= 1) {
              func = undefined2;
            }
            return result2;
          };
        }
        var bind = baseRest2(function(func, thisArg, partials) {
          var bitmask = WRAP_BIND_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bind));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(func, bitmask, thisArg, partials, holders);
        });
        var bindKey = baseRest2(function(object, key2, partials) {
          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
          if (partials.length) {
            var holders = replaceHolders(partials, getHolder(bindKey));
            bitmask |= WRAP_PARTIAL_FLAG;
          }
          return createWrap(key2, bitmask, object, partials, holders);
        });
        function curry(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curry.placeholder;
          return result2;
        }
        function curryRight(func, arity, guard) {
          arity = guard ? undefined2 : arity;
          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
          result2.placeholder = curryRight.placeholder;
          return result2;
        }
        function debounce6(func, wait, options) {
          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          wait = toNumber2(wait) || 0;
          if (isObject3(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing ? nativeMax3(toNumber2(options.maxWait) || 0, wait) : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          function invokeFunc(time) {
            var args = lastArgs, thisArg = lastThis;
            lastArgs = lastThis = undefined2;
            lastInvokeTime = time;
            result2 = func.apply(thisArg, args);
            return result2;
          }
          function leadingEdge(time) {
            lastInvokeTime = time;
            timerId = setTimeout2(timerExpired, wait);
            return leading ? invokeFunc(time) : result2;
          }
          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
            return maxing ? nativeMin2(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
          }
          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
            return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
          }
          function timerExpired() {
            var time = now2();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            timerId = setTimeout2(timerExpired, remainingWait(time));
          }
          function trailingEdge(time) {
            timerId = undefined2;
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined2;
            return result2;
          }
          function cancel() {
            if (timerId !== undefined2) {
              clearTimeout2(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined2;
          }
          function flush() {
            return timerId === undefined2 ? result2 : trailingEdge(now2());
          }
          function debounced() {
            var time = now2(), isInvoking = shouldInvoke(time);
            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;
            if (isInvoking) {
              if (timerId === undefined2) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                clearTimeout2(timerId);
                timerId = setTimeout2(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined2) {
              timerId = setTimeout2(timerExpired, wait);
            }
            return result2;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }
        var defer = baseRest2(function(func, args) {
          return baseDelay(func, 1, args);
        });
        var delay = baseRest2(function(func, wait, args) {
          return baseDelay(func, toNumber2(wait) || 0, args);
        });
        function flip2(func) {
          return createWrap(func, WRAP_FLIP_FLAG);
        }
        function memoize2(func, resolver) {
          if (typeof func != "function" || resolver != null && typeof resolver != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          var memoized = function() {
            var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
            if (cache.has(key2)) {
              return cache.get(key2);
            }
            var result2 = func.apply(this, args);
            memoized.cache = cache.set(key2, result2) || cache;
            return result2;
          };
          memoized.cache = new (memoize2.Cache || MapCache2)();
          return memoized;
        }
        memoize2.Cache = MapCache2;
        function negate(predicate) {
          if (typeof predicate != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          return function() {
            var args = arguments;
            switch (args.length) {
              case 0:
                return !predicate.call(this);
              case 1:
                return !predicate.call(this, args[0]);
              case 2:
                return !predicate.call(this, args[0], args[1]);
              case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
            }
            return !predicate.apply(this, args);
          };
        }
        function once(func) {
          return before(2, func);
        }
        var overArgs = castRest(function(func, transforms) {
          transforms = transforms.length == 1 && isArray3(transforms[0]) ? arrayMap2(transforms[0], baseUnary2(getIteratee())) : arrayMap2(baseFlatten(transforms, 1), baseUnary2(getIteratee()));
          var funcsLength = transforms.length;
          return baseRest2(function(args) {
            var index = -1, length = nativeMin2(args.length, funcsLength);
            while (++index < length) {
              args[index] = transforms[index].call(this, args[index]);
            }
            return apply2(func, this, args);
          });
        });
        var partial = baseRest2(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partial));
          return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
        });
        var partialRight = baseRest2(function(func, partials) {
          var holders = replaceHolders(partials, getHolder(partialRight));
          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
        });
        var rearg = flatRest(function(func, indexes) {
          return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
        });
        function rest(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          start = start === undefined2 ? start : toInteger2(start);
          return baseRest2(func, start);
        }
        function spread(func, start) {
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          start = start == null ? 0 : nativeMax3(toInteger2(start), 0);
          return baseRest2(function(args) {
            var array = args[start], otherArgs = castSlice(args, 0, start);
            if (array) {
              arrayPush2(otherArgs, array);
            }
            return apply2(func, this, otherArgs);
          });
        }
        function throttle2(func, wait, options) {
          var leading = true, trailing = true;
          if (typeof func != "function") {
            throw new TypeError2(FUNC_ERROR_TEXT4);
          }
          if (isObject3(options)) {
            leading = "leading" in options ? !!options.leading : leading;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }
          return debounce6(func, wait, {
            "leading": leading,
            "maxWait": wait,
            "trailing": trailing
          });
        }
        function unary(func) {
          return ary(func, 1);
        }
        function wrap(value, wrapper) {
          return partial(castFunction2(wrapper), value);
        }
        function castArray() {
          if (!arguments.length) {
            return [];
          }
          var value = arguments[0];
          return isArray3(value) ? value : [value];
        }
        function clone2(value) {
          return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        function cloneWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        function cloneDeep(value) {
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        function cloneDeepWith(value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        function conformsTo(object, source) {
          return source == null || baseConformsTo(object, source, keys2(source));
        }
        function eq2(value, other) {
          return value === other || value !== value && other !== other;
        }
        var gt = createRelationalOperation(baseGt);
        var gte = createRelationalOperation(function(value, other) {
          return value >= other;
        });
        var isArguments2 = baseIsArguments2(function() {
          return arguments;
        }()) ? baseIsArguments2 : function(value) {
          return isObjectLike2(value) && hasOwnProperty14.call(value, "callee") && !propertyIsEnumerable3.call(value, "callee");
        };
        var isArray3 = Array2.isArray;
        var isArrayBuffer = nodeIsArrayBuffer ? baseUnary2(nodeIsArrayBuffer) : baseIsArrayBuffer;
        function isArrayLike2(value) {
          return value != null && isLength2(value.length) && !isFunction3(value);
        }
        function isArrayLikeObject2(value) {
          return isObjectLike2(value) && isArrayLike2(value);
        }
        function isBoolean(value) {
          return value === true || value === false || isObjectLike2(value) && baseGetTag2(value) == boolTag3;
        }
        var isBuffer2 = nativeIsBuffer2 || stubFalse2;
        var isDate2 = nodeIsDate ? baseUnary2(nodeIsDate) : baseIsDate;
        function isElement(value) {
          return isObjectLike2(value) && value.nodeType === 1 && !isPlainObject2(value);
        }
        function isEmpty(value) {
          if (value == null) {
            return true;
          }
          if (isArrayLike2(value) && (isArray3(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer2(value) || isTypedArray2(value) || isArguments2(value))) {
            return !value.length;
          }
          var tag = getTag2(value);
          if (tag == mapTag4 || tag == setTag4) {
            return !value.size;
          }
          if (isPrototype2(value)) {
            return !baseKeys2(value).length;
          }
          for (var key2 in value) {
            if (hasOwnProperty14.call(value, key2)) {
              return false;
            }
          }
          return true;
        }
        function isEqual2(value, other) {
          return baseIsEqual2(value, other);
        }
        function isEqualWith(value, other, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          var result2 = customizer ? customizer(value, other) : undefined2;
          return result2 === undefined2 ? baseIsEqual2(value, other, undefined2, customizer) : !!result2;
        }
        function isError(value) {
          if (!isObjectLike2(value)) {
            return false;
          }
          var tag = baseGetTag2(value);
          return tag == errorTag3 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject2(value);
        }
        function isFinite2(value) {
          return typeof value == "number" && nativeIsFinite(value);
        }
        function isFunction3(value) {
          if (!isObject3(value)) {
            return false;
          }
          var tag = baseGetTag2(value);
          return tag == funcTag3 || tag == genTag2 || tag == asyncTag2 || tag == proxyTag2;
        }
        function isInteger(value) {
          return typeof value == "number" && value == toInteger2(value);
        }
        function isLength2(value) {
          return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER3;
        }
        function isObject3(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }
        function isObjectLike2(value) {
          return value != null && typeof value == "object";
        }
        var isMap = nodeIsMap ? baseUnary2(nodeIsMap) : baseIsMap;
        function isMatch2(object, source) {
          return object === source || baseIsMatch2(object, source, getMatchData2(source));
        }
        function isMatchWith(object, source, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return baseIsMatch2(object, source, getMatchData2(source), customizer);
        }
        function isNaN2(value) {
          return isNumber(value) && value != +value;
        }
        function isNative(value) {
          if (isMaskable(value)) {
            throw new Error2(CORE_ERROR_TEXT);
          }
          return baseIsNative2(value);
        }
        function isNull(value) {
          return value === null;
        }
        function isNil(value) {
          return value == null;
        }
        function isNumber(value) {
          return typeof value == "number" || isObjectLike2(value) && baseGetTag2(value) == numberTag3;
        }
        function isPlainObject2(value) {
          if (!isObjectLike2(value) || baseGetTag2(value) != objectTag5) {
            return false;
          }
          var proto = getPrototype2(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty14.call(proto, "constructor") && proto.constructor;
          return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString4.call(Ctor) == objectCtorString2;
        }
        var isRegExp = nodeIsRegExp ? baseUnary2(nodeIsRegExp) : baseIsRegExp;
        function isSafeInteger(value) {
          return isInteger(value) && value >= -MAX_SAFE_INTEGER3 && value <= MAX_SAFE_INTEGER3;
        }
        var isSet = nodeIsSet ? baseUnary2(nodeIsSet) : baseIsSet;
        function isString(value) {
          return typeof value == "string" || !isArray3(value) && isObjectLike2(value) && baseGetTag2(value) == stringTag3;
        }
        function isSymbol2(value) {
          return typeof value == "symbol" || isObjectLike2(value) && baseGetTag2(value) == symbolTag3;
        }
        var isTypedArray2 = nodeIsTypedArray2 ? baseUnary2(nodeIsTypedArray2) : baseIsTypedArray2;
        function isUndefined2(value) {
          return value === undefined2;
        }
        function isWeakMap(value) {
          return isObjectLike2(value) && getTag2(value) == weakMapTag3;
        }
        function isWeakSet(value) {
          return isObjectLike2(value) && baseGetTag2(value) == weakSetTag;
        }
        var lt = createRelationalOperation(baseLt);
        var lte = createRelationalOperation(function(value, other) {
          return value <= other;
        });
        function toArray(value) {
          if (!value) {
            return [];
          }
          if (isArrayLike2(value)) {
            return isString(value) ? stringToArray(value) : copyArray2(value);
          }
          if (symIterator && value[symIterator]) {
            return iteratorToArray(value[symIterator]());
          }
          var tag = getTag2(value), func = tag == mapTag4 ? mapToArray2 : tag == setTag4 ? setToArray2 : values;
          return func(value);
        }
        function toFinite(value) {
          if (!value) {
            return value === 0 ? value : 0;
          }
          value = toNumber2(value);
          if (value === INFINITY3 || value === -INFINITY3) {
            var sign = value < 0 ? -1 : 1;
            return sign * MAX_INTEGER;
          }
          return value === value ? value : 0;
        }
        function toInteger2(value) {
          var result2 = toFinite(value), remainder = result2 % 1;
          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
        }
        function toLength(value) {
          return value ? baseClamp(toInteger2(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        function toNumber2(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol2(value)) {
            return NAN2;
          }
          if (isObject3(value)) {
            var other = typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject3(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = baseTrim2(value);
          var isBinary = reIsBinary2.test(value);
          return isBinary || reIsOctal2.test(value) ? freeParseInt2(value.slice(2), isBinary ? 2 : 8) : reIsBadHex2.test(value) ? NAN2 : +value;
        }
        function toPlainObject2(value) {
          return copyObject2(value, keysIn2(value));
        }
        function toSafeInteger(value) {
          return value ? baseClamp(toInteger2(value), -MAX_SAFE_INTEGER3, MAX_SAFE_INTEGER3) : value === 0 ? value : 0;
        }
        function toString5(value) {
          return value == null ? "" : baseToString2(value);
        }
        var assign2 = createAssigner2(function(object, source) {
          if (isPrototype2(source) || isArrayLike2(source)) {
            copyObject2(source, keys2(source), object);
            return;
          }
          for (var key2 in source) {
            if (hasOwnProperty14.call(source, key2)) {
              assignValue2(object, key2, source[key2]);
            }
          }
        });
        var assignIn = createAssigner2(function(object, source) {
          copyObject2(source, keysIn2(source), object);
        });
        var assignInWith = createAssigner2(function(object, source, srcIndex, customizer) {
          copyObject2(source, keysIn2(source), object, customizer);
        });
        var assignWith = createAssigner2(function(object, source, srcIndex, customizer) {
          copyObject2(source, keys2(source), object, customizer);
        });
        var at2 = flatRest(baseAt);
        function create(prototype, properties2) {
          var result2 = baseCreate2(prototype);
          return properties2 == null ? result2 : baseAssign(result2, properties2);
        }
        var defaults = baseRest2(function(object, sources) {
          object = Object2(object);
          var index = -1;
          var length = sources.length;
          var guard = length > 2 ? sources[2] : undefined2;
          if (guard && isIterateeCall2(sources[0], sources[1], guard)) {
            length = 1;
          }
          while (++index < length) {
            var source = sources[index];
            var props2 = keysIn2(source);
            var propsIndex = -1;
            var propsLength = props2.length;
            while (++propsIndex < propsLength) {
              var key2 = props2[propsIndex];
              var value = object[key2];
              if (value === undefined2 || eq2(value, objectProto16[key2]) && !hasOwnProperty14.call(object, key2)) {
                object[key2] = source[key2];
              }
            }
          }
          return object;
        });
        var defaultsDeep = baseRest2(function(args) {
          args.push(undefined2, customDefaultsMerge);
          return apply2(mergeWith, undefined2, args);
        });
        function findKey2(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn2);
        }
        function findLastKey(object, predicate) {
          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        function forIn(object, iteratee2) {
          return object == null ? object : baseFor2(object, getIteratee(iteratee2, 3), keysIn2);
        }
        function forInRight(object, iteratee2) {
          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn2);
        }
        function forOwn(object, iteratee2) {
          return object && baseForOwn2(object, getIteratee(iteratee2, 3));
        }
        function forOwnRight(object, iteratee2) {
          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
        }
        function functions(object) {
          return object == null ? [] : baseFunctions(object, keys2(object));
        }
        function functionsIn(object) {
          return object == null ? [] : baseFunctions(object, keysIn2(object));
        }
        function get4(object, path, defaultValue2) {
          var result2 = object == null ? undefined2 : baseGet2(object, path);
          return result2 === undefined2 ? defaultValue2 : result2;
        }
        function has(object, path) {
          return object != null && hasPath2(object, path, baseHas);
        }
        function hasIn2(object, path) {
          return object != null && hasPath2(object, path, baseHasIn2);
        }
        var invert = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString3.call(value);
          }
          result2[value] = key2;
        }, constant2(identity2));
        var invertBy = createInverter(function(result2, value, key2) {
          if (value != null && typeof value.toString != "function") {
            value = nativeObjectToString3.call(value);
          }
          if (hasOwnProperty14.call(result2, value)) {
            result2[value].push(key2);
          } else {
            result2[value] = [key2];
          }
        }, getIteratee);
        var invoke = baseRest2(baseInvoke);
        function keys2(object) {
          return isArrayLike2(object) ? arrayLikeKeys2(object) : baseKeys2(object);
        }
        function keysIn2(object) {
          return isArrayLike2(object) ? arrayLikeKeys2(object, true) : baseKeysIn2(object);
        }
        function mapKeys(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn2(object, function(value, key2, object2) {
            baseAssignValue2(result2, iteratee2(value, key2, object2), value);
          });
          return result2;
        }
        function mapValues(object, iteratee2) {
          var result2 = {};
          iteratee2 = getIteratee(iteratee2, 3);
          baseForOwn2(object, function(value, key2, object2) {
            baseAssignValue2(result2, key2, iteratee2(value, key2, object2));
          });
          return result2;
        }
        var merge2 = createAssigner2(function(object, source, srcIndex) {
          baseMerge2(object, source, srcIndex);
        });
        var mergeWith = createAssigner2(function(object, source, srcIndex, customizer) {
          baseMerge2(object, source, srcIndex, customizer);
        });
        var omit = flatRest(function(object, paths) {
          var result2 = {};
          if (object == null) {
            return result2;
          }
          var isDeep = false;
          paths = arrayMap2(paths, function(path) {
            path = castPath2(path, object);
            isDeep || (isDeep = path.length > 1);
            return path;
          });
          copyObject2(object, getAllKeysIn(object), result2);
          if (isDeep) {
            result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
          }
          var length = paths.length;
          while (length--) {
            baseUnset(result2, paths[length]);
          }
          return result2;
        });
        function omitBy(object, predicate) {
          return pickBy(object, negate(getIteratee(predicate)));
        }
        var pick = flatRest(function(object, paths) {
          return object == null ? {} : basePick(object, paths);
        });
        function pickBy(object, predicate) {
          if (object == null) {
            return {};
          }
          var props2 = arrayMap2(getAllKeysIn(object), function(prop) {
            return [prop];
          });
          predicate = getIteratee(predicate);
          return basePickBy(object, props2, function(value, path) {
            return predicate(value, path[0]);
          });
        }
        function result(object, path, defaultValue2) {
          path = castPath2(path, object);
          var index = -1, length = path.length;
          if (!length) {
            length = 1;
            object = undefined2;
          }
          while (++index < length) {
            var value = object == null ? undefined2 : object[toKey2(path[index])];
            if (value === undefined2) {
              index = length;
              value = defaultValue2;
            }
            object = isFunction3(value) ? value.call(object) : value;
          }
          return object;
        }
        function set(object, path, value) {
          return object == null ? object : baseSet(object, path, value);
        }
        function setWith(object, path, value, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseSet(object, path, value, customizer);
        }
        var toPairs = createToPairs(keys2);
        var toPairsIn = createToPairs(keysIn2);
        function transform(object, iteratee2, accumulator) {
          var isArr = isArray3(object), isArrLike = isArr || isBuffer2(object) || isTypedArray2(object);
          iteratee2 = getIteratee(iteratee2, 4);
          if (accumulator == null) {
            var Ctor = object && object.constructor;
            if (isArrLike) {
              accumulator = isArr ? new Ctor() : [];
            } else if (isObject3(object)) {
              accumulator = isFunction3(Ctor) ? baseCreate2(getPrototype2(object)) : {};
            } else {
              accumulator = {};
            }
          }
          (isArrLike ? arrayEach2 : baseForOwn2)(object, function(value, index, object2) {
            return iteratee2(accumulator, value, index, object2);
          });
          return accumulator;
        }
        function unset(object, path) {
          return object == null ? true : baseUnset(object, path);
        }
        function update(object, path, updater) {
          return object == null ? object : baseUpdate(object, path, castFunction2(updater));
        }
        function updateWith(object, path, updater, customizer) {
          customizer = typeof customizer == "function" ? customizer : undefined2;
          return object == null ? object : baseUpdate(object, path, castFunction2(updater), customizer);
        }
        function values(object) {
          return object == null ? [] : baseValues(object, keys2(object));
        }
        function valuesIn(object) {
          return object == null ? [] : baseValues(object, keysIn2(object));
        }
        function clamp2(number, lower, upper) {
          if (upper === undefined2) {
            upper = lower;
            lower = undefined2;
          }
          if (upper !== undefined2) {
            upper = toNumber2(upper);
            upper = upper === upper ? upper : 0;
          }
          if (lower !== undefined2) {
            lower = toNumber2(lower);
            lower = lower === lower ? lower : 0;
          }
          return baseClamp(toNumber2(number), lower, upper);
        }
        function inRange(number, start, end) {
          start = toFinite(start);
          if (end === undefined2) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          number = toNumber2(number);
          return baseInRange(number, start, end);
        }
        function random(lower, upper, floating) {
          if (floating && typeof floating != "boolean" && isIterateeCall2(lower, upper, floating)) {
            upper = floating = undefined2;
          }
          if (floating === undefined2) {
            if (typeof upper == "boolean") {
              floating = upper;
              upper = undefined2;
            } else if (typeof lower == "boolean") {
              floating = lower;
              lower = undefined2;
            }
          }
          if (lower === undefined2 && upper === undefined2) {
            lower = 0;
            upper = 1;
          } else {
            lower = toFinite(lower);
            if (upper === undefined2) {
              upper = lower;
              lower = 0;
            } else {
              upper = toFinite(upper);
            }
          }
          if (lower > upper) {
            var temp = lower;
            lower = upper;
            upper = temp;
          }
          if (floating || lower % 1 || upper % 1) {
            var rand = nativeRandom();
            return nativeMin2(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
          }
          return baseRandom(lower, upper);
        }
        var camelCase = createCompounder(function(result2, word, index) {
          word = word.toLowerCase();
          return result2 + (index ? capitalize(word) : word);
        });
        function capitalize(string) {
          return upperFirst(toString5(string).toLowerCase());
        }
        function deburr(string) {
          string = toString5(string);
          return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        function endsWith(string, target, position) {
          string = toString5(string);
          target = baseToString2(target);
          var length = string.length;
          position = position === undefined2 ? length : baseClamp(toInteger2(position), 0, length);
          var end = position;
          position -= target.length;
          return position >= 0 && string.slice(position, end) == target;
        }
        function escape(string) {
          string = toString5(string);
          return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        function escapeRegExp(string) {
          string = toString5(string);
          return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
        }
        var kebabCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "-" : "") + word.toLowerCase();
        });
        var lowerCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toLowerCase();
        });
        var lowerFirst = createCaseFirst("toLowerCase");
        function pad(string, length, chars) {
          string = toString5(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          if (!length || strLength >= length) {
            return string;
          }
          var mid = (length - strLength) / 2;
          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        function padEnd(string, length, chars) {
          string = toString5(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        function padStart(string, length, chars) {
          string = toString5(string);
          length = toInteger2(length);
          var strLength = length ? stringSize(string) : 0;
          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        function parseInt2(string, radix, guard) {
          if (guard || radix == null) {
            radix = 0;
          } else if (radix) {
            radix = +radix;
          }
          return nativeParseInt(toString5(string).replace(reTrimStart2, ""), radix || 0);
        }
        function repeat(string, n2, guard) {
          if (guard ? isIterateeCall2(string, n2, guard) : n2 === undefined2) {
            n2 = 1;
          } else {
            n2 = toInteger2(n2);
          }
          return baseRepeat(toString5(string), n2);
        }
        function replace() {
          var args = arguments, string = toString5(args[0]);
          return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        var snakeCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? "_" : "") + word.toLowerCase();
        });
        function split(string, separator, limit) {
          if (limit && typeof limit != "number" && isIterateeCall2(string, separator, limit)) {
            separator = limit = undefined2;
          }
          limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
          if (!limit) {
            return [];
          }
          string = toString5(string);
          if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
            separator = baseToString2(separator);
            if (!separator && hasUnicode(string)) {
              return castSlice(stringToArray(string), 0, limit);
            }
          }
          return string.split(separator, limit);
        }
        var startCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + upperFirst(word);
        });
        function startsWith(string, target, position) {
          string = toString5(string);
          position = position == null ? 0 : baseClamp(toInteger2(position), 0, string.length);
          target = baseToString2(target);
          return string.slice(position, position + target.length) == target;
        }
        function template(string, options, guard) {
          var settings = lodash.templateSettings;
          if (guard && isIterateeCall2(string, options, guard)) {
            options = undefined2;
          }
          string = toString5(string);
          options = assignInWith({}, options, settings, customDefaultsAssignIn);
          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys2(imports), importsValues = baseValues(imports, importsKeys);
          var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
          var reDelimiters = RegExp2(
            (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
            "g"
          );
          var sourceURL = "//# sourceURL=" + (hasOwnProperty14.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
          string.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset2) {
            interpolateValue || (interpolateValue = esTemplateValue);
            source += string.slice(index, offset2).replace(reUnescapedString, escapeStringChar);
            if (escapeValue) {
              isEscaping = true;
              source += "' +\n__e(" + escapeValue + ") +\n'";
            }
            if (evaluateValue) {
              isEvaluating = true;
              source += "';\n" + evaluateValue + ";\n__p += '";
            }
            if (interpolateValue) {
              source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
            }
            index = offset2 + match2.length;
            return match2;
          });
          source += "';\n";
          var variable = hasOwnProperty14.call(options, "variable") && options.variable;
          if (!variable) {
            source = "with (obj) {\n" + source + "\n}\n";
          } else if (reForbiddenIdentifierChars.test(variable)) {
            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
          }
          source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
          source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
          var result2 = attempt(function() {
            return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
          });
          result2.source = source;
          if (isError(result2)) {
            throw result2;
          }
          return result2;
        }
        function toLower(value) {
          return toString5(value).toLowerCase();
        }
        function toUpper(value) {
          return toString5(value).toUpperCase();
        }
        function trim(string, chars, guard) {
          string = toString5(string);
          if (string && (guard || chars === undefined2)) {
            return baseTrim2(string);
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
          return castSlice(strSymbols, start, end).join("");
        }
        function trimEnd(string, chars, guard) {
          string = toString5(string);
          if (string && (guard || chars === undefined2)) {
            return string.slice(0, trimmedEndIndex2(string) + 1);
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
          return castSlice(strSymbols, 0, end).join("");
        }
        function trimStart(string, chars, guard) {
          string = toString5(string);
          if (string && (guard || chars === undefined2)) {
            return string.replace(reTrimStart2, "");
          }
          if (!string || !(chars = baseToString2(chars))) {
            return string;
          }
          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
          return castSlice(strSymbols, start).join("");
        }
        function truncate(string, options) {
          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
          if (isObject3(options)) {
            var separator = "separator" in options ? options.separator : separator;
            length = "length" in options ? toInteger2(options.length) : length;
            omission = "omission" in options ? baseToString2(options.omission) : omission;
          }
          string = toString5(string);
          var strLength = string.length;
          if (hasUnicode(string)) {
            var strSymbols = stringToArray(string);
            strLength = strSymbols.length;
          }
          if (length >= strLength) {
            return string;
          }
          var end = length - stringSize(omission);
          if (end < 1) {
            return omission;
          }
          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
          if (separator === undefined2) {
            return result2 + omission;
          }
          if (strSymbols) {
            end += result2.length - end;
          }
          if (isRegExp(separator)) {
            if (string.slice(end).search(separator)) {
              var match2, substring = result2;
              if (!separator.global) {
                separator = RegExp2(separator.source, toString5(reFlags.exec(separator)) + "g");
              }
              separator.lastIndex = 0;
              while (match2 = separator.exec(substring)) {
                var newEnd = match2.index;
              }
              result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
            }
          } else if (string.indexOf(baseToString2(separator), end) != end) {
            var index = result2.lastIndexOf(separator);
            if (index > -1) {
              result2 = result2.slice(0, index);
            }
          }
          return result2 + omission;
        }
        function unescape(string) {
          string = toString5(string);
          return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        var upperCase = createCompounder(function(result2, word, index) {
          return result2 + (index ? " " : "") + word.toUpperCase();
        });
        var upperFirst = createCaseFirst("toUpperCase");
        function words(string, pattern, guard) {
          string = toString5(string);
          pattern = guard ? undefined2 : pattern;
          if (pattern === undefined2) {
            return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
          }
          return string.match(pattern) || [];
        }
        var attempt = baseRest2(function(func, args) {
          try {
            return apply2(func, undefined2, args);
          } catch (e4) {
            return isError(e4) ? e4 : new Error2(e4);
          }
        });
        var bindAll = flatRest(function(object, methodNames) {
          arrayEach2(methodNames, function(key2) {
            key2 = toKey2(key2);
            baseAssignValue2(object, key2, bind(object[key2], object));
          });
          return object;
        });
        function cond(pairs) {
          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
          pairs = !length ? [] : arrayMap2(pairs, function(pair) {
            if (typeof pair[1] != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT4);
            }
            return [toIteratee(pair[0]), pair[1]];
          });
          return baseRest2(function(args) {
            var index = -1;
            while (++index < length) {
              var pair = pairs[index];
              if (apply2(pair[0], this, args)) {
                return apply2(pair[1], this, args);
              }
            }
          });
        }
        function conforms(source) {
          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        function constant2(value) {
          return function() {
            return value;
          };
        }
        function defaultTo(value, defaultValue2) {
          return value == null || value !== value ? defaultValue2 : value;
        }
        var flow = createFlow();
        var flowRight = createFlow(true);
        function identity2(value) {
          return value;
        }
        function iteratee(func) {
          return baseIteratee2(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        function matches(source) {
          return baseMatches2(baseClone(source, CLONE_DEEP_FLAG));
        }
        function matchesProperty(path, srcValue) {
          return baseMatchesProperty2(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        var method = baseRest2(function(path, args) {
          return function(object) {
            return baseInvoke(object, path, args);
          };
        });
        var methodOf = baseRest2(function(object, args) {
          return function(path) {
            return baseInvoke(object, path, args);
          };
        });
        function mixin(object, source, options) {
          var props2 = keys2(source), methodNames = baseFunctions(source, props2);
          if (options == null && !(isObject3(source) && (methodNames.length || !props2.length))) {
            options = source;
            source = object;
            object = this;
            methodNames = baseFunctions(source, keys2(source));
          }
          var chain2 = !(isObject3(options) && "chain" in options) || !!options.chain, isFunc = isFunction3(object);
          arrayEach2(methodNames, function(methodName) {
            var func = source[methodName];
            object[methodName] = func;
            if (isFunc) {
              object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain2 || chainAll) {
                  var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray2(this.__actions__);
                  actions.push({ "func": func, "args": arguments, "thisArg": object });
                  result2.__chain__ = chainAll;
                  return result2;
                }
                return func.apply(object, arrayPush2([this.value()], arguments));
              };
            }
          });
          return object;
        }
        function noConflict() {
          if (root2._ === this) {
            root2._ = oldDash;
          }
          return this;
        }
        function noop3() {
        }
        function nthArg(n2) {
          n2 = toInteger2(n2);
          return baseRest2(function(args) {
            return baseNth(args, n2);
          });
        }
        var over = createOver(arrayMap2);
        var overEvery = createOver(arrayEvery);
        var overSome = createOver(arraySome2);
        function property2(path) {
          return isKey2(path) ? baseProperty2(toKey2(path)) : basePropertyDeep2(path);
        }
        function propertyOf(object) {
          return function(path) {
            return object == null ? undefined2 : baseGet2(object, path);
          };
        }
        var range = createRange();
        var rangeRight = createRange(true);
        function stubArray2() {
          return [];
        }
        function stubFalse2() {
          return false;
        }
        function stubObject() {
          return {};
        }
        function stubString() {
          return "";
        }
        function stubTrue() {
          return true;
        }
        function times(n2, iteratee2) {
          n2 = toInteger2(n2);
          if (n2 < 1 || n2 > MAX_SAFE_INTEGER3) {
            return [];
          }
          var index = MAX_ARRAY_LENGTH, length = nativeMin2(n2, MAX_ARRAY_LENGTH);
          iteratee2 = getIteratee(iteratee2);
          n2 -= MAX_ARRAY_LENGTH;
          var result2 = baseTimes2(length, iteratee2);
          while (++index < n2) {
            iteratee2(index);
          }
          return result2;
        }
        function toPath(value) {
          if (isArray3(value)) {
            return arrayMap2(value, toKey2);
          }
          return isSymbol2(value) ? [value] : copyArray2(stringToPath2(toString5(value)));
        }
        function uniqueId3(prefix) {
          var id2 = ++idCounter2;
          return toString5(prefix) + id2;
        }
        var add2 = createMathOperation(function(augend, addend) {
          return augend + addend;
        }, 0);
        var ceil = createRound("ceil");
        var divide = createMathOperation(function(dividend, divisor) {
          return dividend / divisor;
        }, 1);
        var floor = createRound("floor");
        function max3(array) {
          return array && array.length ? baseExtremum(array, identity2, baseGt) : undefined2;
        }
        function maxBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
        }
        function mean2(array) {
          return baseMean(array, identity2);
        }
        function meanBy(array, iteratee2) {
          return baseMean(array, getIteratee(iteratee2, 2));
        }
        function min3(array) {
          return array && array.length ? baseExtremum(array, identity2, baseLt) : undefined2;
        }
        function minBy(array, iteratee2) {
          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
        }
        var multiply = createMathOperation(function(multiplier, multiplicand) {
          return multiplier * multiplicand;
        }, 1);
        var round = createRound("round");
        var subtract2 = createMathOperation(function(minuend, subtrahend) {
          return minuend - subtrahend;
        }, 0);
        function sum2(array) {
          return array && array.length ? baseSum(array, identity2) : 0;
        }
        function sumBy(array, iteratee2) {
          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
        }
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign2;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at2;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant2;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce6;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten2;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip2;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy2;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys2;
        lodash.keysIn = keysIn2;
        lodash.map = map2;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize2;
        lodash.merge = merge2;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property2;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle2;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject2;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq3;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        mixin(lodash, lodash);
        lodash.add = add2;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp2;
        lodash.clone = clone2;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq2;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex2;
        lodash.findKey = findKey2;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach2;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get4;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn2;
        lodash.head = head;
        lodash.identity = identity2;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments2;
        lodash.isArray = isArray3;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike2;
        lodash.isArrayLikeObject = isArrayLikeObject2;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer2;
        lodash.isDate = isDate2;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual2;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite2;
        lodash.isFunction = isFunction3;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength2;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch2;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN2;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject3;
        lodash.isObjectLike = isObjectLike2;
        lodash.isPlainObject = isPlainObject2;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol2;
        lodash.isTypedArray = isTypedArray2;
        lodash.isUndefined = isUndefined2;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max3;
        lodash.maxBy = maxBy;
        lodash.mean = mean2;
        lodash.meanBy = meanBy;
        lodash.min = min3;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray2;
        lodash.stubFalse = stubFalse2;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop3;
        lodash.now = now2;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt2;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext2;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract2;
        lodash.sum = sum2;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger2;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber2;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString5;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId3;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        lodash.each = forEach2;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
          var source = {};
          baseForOwn2(lodash, function(func, methodName) {
            if (!hasOwnProperty14.call(lodash.prototype, methodName)) {
              source[methodName] = func;
            }
          });
          return source;
        }(), { "chain": false });
        lodash.VERSION = VERSION;
        arrayEach2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
          lodash[methodName].placeholder = lodash;
        });
        arrayEach2(["drop", "take"], function(methodName, index) {
          LazyWrapper.prototype[methodName] = function(n2) {
            n2 = n2 === undefined2 ? 1 : nativeMax3(toInteger2(n2), 0);
            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
            if (result2.__filtered__) {
              result2.__takeCount__ = nativeMin2(n2, result2.__takeCount__);
            } else {
              result2.__views__.push({
                "size": nativeMin2(n2, MAX_ARRAY_LENGTH),
                "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
              });
            }
            return result2;
          };
          LazyWrapper.prototype[methodName + "Right"] = function(n2) {
            return this.reverse()[methodName](n2).reverse();
          };
        });
        arrayEach2(["filter", "map", "takeWhile"], function(methodName, index) {
          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
          LazyWrapper.prototype[methodName] = function(iteratee2) {
            var result2 = this.clone();
            result2.__iteratees__.push({
              "iteratee": getIteratee(iteratee2, 3),
              "type": type
            });
            result2.__filtered__ = result2.__filtered__ || isFilter;
            return result2;
          };
        });
        arrayEach2(["head", "last"], function(methodName, index) {
          var takeName = "take" + (index ? "Right" : "");
          LazyWrapper.prototype[methodName] = function() {
            return this[takeName](1).value()[0];
          };
        });
        arrayEach2(["initial", "tail"], function(methodName, index) {
          var dropName = "drop" + (index ? "" : "Right");
          LazyWrapper.prototype[methodName] = function() {
            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
          };
        });
        LazyWrapper.prototype.compact = function() {
          return this.filter(identity2);
        };
        LazyWrapper.prototype.find = function(predicate) {
          return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
          return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest2(function(path, args) {
          if (typeof path == "function") {
            return new LazyWrapper(this);
          }
          return this.map(function(value) {
            return baseInvoke(value, path, args);
          });
        });
        LazyWrapper.prototype.reject = function(predicate) {
          return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
          start = toInteger2(start);
          var result2 = this;
          if (result2.__filtered__ && (start > 0 || end < 0)) {
            return new LazyWrapper(result2);
          }
          if (start < 0) {
            result2 = result2.takeRight(-start);
          } else if (start) {
            result2 = result2.drop(start);
          }
          if (end !== undefined2) {
            end = toInteger2(end);
            result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
          }
          return result2;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
          return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
          return this.take(MAX_ARRAY_LENGTH);
        };
        baseForOwn2(LazyWrapper.prototype, function(func, methodName) {
          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
          if (!lodashFunc) {
            return;
          }
          lodash.prototype[methodName] = function() {
            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray3(value);
            var interceptor = function(value2) {
              var result3 = lodashFunc.apply(lodash, arrayPush2([value2], args));
              return isTaker && chainAll ? result3[0] : result3;
            };
            if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
              isLazy = useLazy = false;
            }
            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
            if (!retUnwrapped && useLazy) {
              value = onlyLazy ? value : new LazyWrapper(this);
              var result2 = func.apply(value, args);
              result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined2 });
              return new LodashWrapper(result2, chainAll);
            }
            if (isUnwrapped && onlyLazy) {
              return func.apply(this, args);
            }
            result2 = this.thru(interceptor);
            return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
          };
        });
        arrayEach2(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
          var func = arrayProto2[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
          lodash.prototype[methodName] = function() {
            var args = arguments;
            if (retUnwrapped && !this.__chain__) {
              var value = this.value();
              return func.apply(isArray3(value) ? value : [], args);
            }
            return this[chainName](function(value2) {
              return func.apply(isArray3(value2) ? value2 : [], args);
            });
          };
        });
        baseForOwn2(LazyWrapper.prototype, function(func, methodName) {
          var lodashFunc = lodash[methodName];
          if (lodashFunc) {
            var key2 = lodashFunc.name + "";
            if (!hasOwnProperty14.call(realNames, key2)) {
              realNames[key2] = [];
            }
            realNames[key2].push({ "name": methodName, "func": lodashFunc });
          }
        });
        realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
          "name": "wrapper",
          "func": undefined2
        }];
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) {
          lodash.prototype[symIterator] = wrapperToIterator;
        }
        return lodash;
      };
      var _12 = runInContext();
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        root2._ = _12;
        define(function() {
          return _12;
        });
      } else if (freeModule4) {
        (freeModule4.exports = _12)._ = _12;
        freeExports4._ = _12;
      } else {
        root2._ = _12;
      }
    }).call(exports2);
  }
});

// node_modules/fuzzysort/fuzzysort.js
var require_fuzzysort = __commonJS({
  "node_modules/fuzzysort/fuzzysort.js"(exports2, module2) {
    ((root2, UMD) => {
      if (typeof define === "function" && define.amd)
        define([], UMD);
      else if (typeof module2 === "object" && module2.exports)
        module2.exports = UMD();
      else
        root2["fuzzysort"] = UMD();
    })(exports2, (_12) => {
      "use strict";
      var single = (search, target) => {
        if (search == "farzher")
          return { target: "farzher was here (^-^*)/", score: 0, _indexes: [0] };
        if (!search || !target)
          return NULL;
        var preparedSearch = getPreparedSearch(search);
        if (!isObj(target))
          target = getPrepared(target);
        var searchBitflags = preparedSearch.bitflags;
        if ((searchBitflags & target._bitflags) !== searchBitflags)
          return NULL;
        return algorithm(preparedSearch, target);
      };
      var go = (search, targets, options) => {
        if (search == "farzher")
          return [{ target: "farzher was here (^-^*)/", score: 0, _indexes: [0], obj: targets ? targets[0] : NULL }];
        if (!search)
          return options && options.all ? all(search, targets, options) : noResults;
        var preparedSearch = getPreparedSearch(search);
        var searchBitflags = preparedSearch.bitflags;
        var containsSpace = preparedSearch.containsSpace;
        var threshold = options && options.threshold || INT_MIN;
        var limit = options && options["limit"] || INT_MAX;
        var resultsLen = 0;
        var limitedCount = 0;
        var targetsLen = targets.length;
        if (options && options.key) {
          var key2 = options.key;
          for (var i4 = 0; i4 < targetsLen; ++i4) {
            var obj = targets[i4];
            var target = getValue2(obj, key2);
            if (!target)
              continue;
            if (!isObj(target))
              target = getPrepared(target);
            if ((searchBitflags & target._bitflags) !== searchBitflags)
              continue;
            var result = algorithm(preparedSearch, target);
            if (result === NULL)
              continue;
            if (result.score < threshold)
              continue;
            result = { target: result.target, _targetLower: "", _targetLowerCodes: NULL, _nextBeginningIndexes: NULL, _bitflags: 0, score: result.score, _indexes: result._indexes, obj };
            if (resultsLen < limit) {
              q5.add(result);
              ++resultsLen;
            } else {
              ++limitedCount;
              if (result.score > q5.peek().score)
                q5.replaceTop(result);
            }
          }
        } else if (options && options.keys) {
          var scoreFn = options["scoreFn"] || defaultScoreFn;
          var keys2 = options.keys;
          var keysLen = keys2.length;
          for (var i4 = 0; i4 < targetsLen; ++i4) {
            var obj = targets[i4];
            var objResults = new Array(keysLen);
            for (var keyI = 0; keyI < keysLen; ++keyI) {
              var key2 = keys2[keyI];
              var target = getValue2(obj, key2);
              if (!target) {
                objResults[keyI] = NULL;
                continue;
              }
              if (!isObj(target))
                target = getPrepared(target);
              if ((searchBitflags & target._bitflags) !== searchBitflags)
                objResults[keyI] = NULL;
              else
                objResults[keyI] = algorithm(preparedSearch, target);
            }
            objResults.obj = obj;
            var score = scoreFn(objResults);
            if (score === NULL)
              continue;
            if (score < threshold)
              continue;
            objResults.score = score;
            if (resultsLen < limit) {
              q5.add(objResults);
              ++resultsLen;
            } else {
              ++limitedCount;
              if (score > q5.peek().score)
                q5.replaceTop(objResults);
            }
          }
        } else {
          for (var i4 = 0; i4 < targetsLen; ++i4) {
            var target = targets[i4];
            if (!target)
              continue;
            if (!isObj(target))
              target = getPrepared(target);
            if ((searchBitflags & target._bitflags) !== searchBitflags)
              continue;
            var result = algorithm(preparedSearch, target);
            if (result === NULL)
              continue;
            if (result.score < threshold)
              continue;
            if (resultsLen < limit) {
              q5.add(result);
              ++resultsLen;
            } else {
              ++limitedCount;
              if (result.score > q5.peek().score)
                q5.replaceTop(result);
            }
          }
        }
        if (resultsLen === 0)
          return noResults;
        var results = new Array(resultsLen);
        for (var i4 = resultsLen - 1; i4 >= 0; --i4)
          results[i4] = q5.poll();
        results.total = resultsLen + limitedCount;
        return results;
      };
      var highlight = (result, hOpen, hClose) => {
        if (typeof hOpen === "function")
          return highlightCallback(result, hOpen);
        if (result === NULL)
          return NULL;
        if (hOpen === void 0)
          hOpen = "<b>";
        if (hClose === void 0)
          hClose = "</b>";
        var highlighted = "";
        var matchesIndex = 0;
        var opened = false;
        var target = result.target;
        var targetLen = target.length;
        var indexes2 = result._indexes;
        indexes2 = indexes2.slice(0, indexes2.len).sort((a5, b4) => a5 - b4);
        for (var i4 = 0; i4 < targetLen; ++i4) {
          var char = target[i4];
          if (indexes2[matchesIndex] === i4) {
            ++matchesIndex;
            if (!opened) {
              opened = true;
              highlighted += hOpen;
            }
            if (matchesIndex === indexes2.length) {
              highlighted += char + hClose + target.substr(i4 + 1);
              break;
            }
          } else {
            if (opened) {
              opened = false;
              highlighted += hClose;
            }
          }
          highlighted += char;
        }
        return highlighted;
      };
      var highlightCallback = (result, cb) => {
        if (result === NULL)
          return NULL;
        var target = result.target;
        var targetLen = target.length;
        var indexes2 = result._indexes;
        indexes2 = indexes2.slice(0, indexes2.len).sort((a5, b4) => a5 - b4);
        var highlighted = "";
        var matchI = 0;
        var indexesI = 0;
        var opened = false;
        var result = [];
        for (var i4 = 0; i4 < targetLen; ++i4) {
          var char = target[i4];
          if (indexes2[indexesI] === i4) {
            ++indexesI;
            if (!opened) {
              opened = true;
              result.push(highlighted);
              highlighted = "";
            }
            if (indexesI === indexes2.length) {
              highlighted += char;
              result.push(cb(highlighted, matchI++));
              highlighted = "";
              result.push(target.substr(i4 + 1));
              break;
            }
          } else {
            if (opened) {
              opened = false;
              result.push(cb(highlighted, matchI++));
              highlighted = "";
            }
          }
          highlighted += char;
        }
        return result;
      };
      var indexes = (result) => result._indexes.slice(0, result._indexes.len).sort((a5, b4) => a5 - b4);
      var prepare = (target) => {
        if (typeof target !== "string")
          target = "";
        var info = prepareLowerInfo(target);
        return { "target": target, _targetLower: info._lower, _targetLowerCodes: info.lowerCodes, _nextBeginningIndexes: NULL, _bitflags: info.bitflags, "score": NULL, _indexes: [0], "obj": NULL };
      };
      var prepareSearch = (search) => {
        if (typeof search !== "string")
          search = "";
        search = search.trim();
        var info = prepareLowerInfo(search);
        var spaceSearches = [];
        if (info.containsSpace) {
          var searches = search.split(/\s+/);
          searches = [...new Set(searches)];
          for (var i4 = 0; i4 < searches.length; i4++) {
            if (searches[i4] === "")
              continue;
            var _info = prepareLowerInfo(searches[i4]);
            spaceSearches.push({ lowerCodes: _info.lowerCodes, _lower: searches[i4].toLowerCase(), containsSpace: false });
          }
        }
        return { lowerCodes: info.lowerCodes, bitflags: info.bitflags, containsSpace: info.containsSpace, _lower: info._lower, spaceSearches };
      };
      var getPrepared = (target) => {
        if (target.length > 999)
          return prepare(target);
        var targetPrepared = preparedCache.get(target);
        if (targetPrepared !== void 0)
          return targetPrepared;
        targetPrepared = prepare(target);
        preparedCache.set(target, targetPrepared);
        return targetPrepared;
      };
      var getPreparedSearch = (search) => {
        if (search.length > 999)
          return prepareSearch(search);
        var searchPrepared = preparedSearchCache.get(search);
        if (searchPrepared !== void 0)
          return searchPrepared;
        searchPrepared = prepareSearch(search);
        preparedSearchCache.set(search, searchPrepared);
        return searchPrepared;
      };
      var all = (search, targets, options) => {
        var results = [];
        results.total = targets.length;
        var limit = options && options.limit || INT_MAX;
        if (options && options.key) {
          for (var i4 = 0; i4 < targets.length; i4++) {
            var obj = targets[i4];
            var target = getValue2(obj, options.key);
            if (!target)
              continue;
            if (!isObj(target))
              target = getPrepared(target);
            target.score = INT_MIN;
            target._indexes.len = 0;
            var result = target;
            result = { target: result.target, _targetLower: "", _targetLowerCodes: NULL, _nextBeginningIndexes: NULL, _bitflags: 0, score: target.score, _indexes: NULL, obj };
            results.push(result);
            if (results.length >= limit)
              return results;
          }
        } else if (options && options.keys) {
          for (var i4 = 0; i4 < targets.length; i4++) {
            var obj = targets[i4];
            var objResults = new Array(options.keys.length);
            for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {
              var target = getValue2(obj, options.keys[keyI]);
              if (!target) {
                objResults[keyI] = NULL;
                continue;
              }
              if (!isObj(target))
                target = getPrepared(target);
              target.score = INT_MIN;
              target._indexes.len = 0;
              objResults[keyI] = target;
            }
            objResults.obj = obj;
            objResults.score = INT_MIN;
            results.push(objResults);
            if (results.length >= limit)
              return results;
          }
        } else {
          for (var i4 = 0; i4 < targets.length; i4++) {
            var target = targets[i4];
            if (!target)
              continue;
            if (!isObj(target))
              target = getPrepared(target);
            target.score = INT_MIN;
            target._indexes.len = 0;
            results.push(target);
            if (results.length >= limit)
              return results;
          }
        }
        return results;
      };
      var algorithm = (preparedSearch, prepared, allowSpaces = false) => {
        if (allowSpaces === false && preparedSearch.containsSpace)
          return algorithmSpaces(preparedSearch, prepared);
        var searchLower = preparedSearch._lower;
        var searchLowerCodes = preparedSearch.lowerCodes;
        var searchLowerCode = searchLowerCodes[0];
        var targetLowerCodes = prepared._targetLowerCodes;
        var searchLen = searchLowerCodes.length;
        var targetLen = targetLowerCodes.length;
        var searchI = 0;
        var targetI = 0;
        var matchesSimpleLen = 0;
        for (; ; ) {
          var isMatch2 = searchLowerCode === targetLowerCodes[targetI];
          if (isMatch2) {
            matchesSimple[matchesSimpleLen++] = targetI;
            ++searchI;
            if (searchI === searchLen)
              break;
            searchLowerCode = searchLowerCodes[searchI];
          }
          ++targetI;
          if (targetI >= targetLen)
            return NULL;
        }
        var searchI = 0;
        var successStrict = false;
        var matchesStrictLen = 0;
        var nextBeginningIndexes = prepared._nextBeginningIndexes;
        if (nextBeginningIndexes === NULL)
          nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target);
        var firstPossibleI = targetI = matchesSimple[0] === 0 ? 0 : nextBeginningIndexes[matchesSimple[0] - 1];
        var backtrackCount = 0;
        if (targetI !== targetLen)
          for (; ; ) {
            if (targetI >= targetLen) {
              if (searchI <= 0)
                break;
              ++backtrackCount;
              if (backtrackCount > 200)
                break;
              --searchI;
              var lastMatch = matchesStrict[--matchesStrictLen];
              targetI = nextBeginningIndexes[lastMatch];
            } else {
              var isMatch2 = searchLowerCodes[searchI] === targetLowerCodes[targetI];
              if (isMatch2) {
                matchesStrict[matchesStrictLen++] = targetI;
                ++searchI;
                if (searchI === searchLen) {
                  successStrict = true;
                  break;
                }
                ++targetI;
              } else {
                targetI = nextBeginningIndexes[targetI];
              }
            }
          }
        var substringIndex = prepared._targetLower.indexOf(searchLower, matchesSimple[0]);
        var isSubstring = ~substringIndex;
        if (isSubstring && !successStrict) {
          for (var i4 = 0; i4 < matchesSimpleLen; ++i4)
            matchesSimple[i4] = substringIndex + i4;
        }
        var isSubstringBeginning = false;
        if (isSubstring) {
          isSubstringBeginning = prepared._nextBeginningIndexes[substringIndex - 1] === substringIndex;
        }
        {
          if (successStrict) {
            var matchesBest = matchesStrict;
            var matchesBestLen = matchesStrictLen;
          } else {
            var matchesBest = matchesSimple;
            var matchesBestLen = matchesSimpleLen;
          }
          var score = 0;
          var extraMatchGroupCount = 0;
          for (var i4 = 1; i4 < searchLen; ++i4) {
            if (matchesBest[i4] - matchesBest[i4 - 1] !== 1) {
              score -= matchesBest[i4];
              ++extraMatchGroupCount;
            }
          }
          var unmatchedDistance = matchesBest[searchLen - 1] - matchesBest[0] - (searchLen - 1);
          score -= (12 + unmatchedDistance) * extraMatchGroupCount;
          if (matchesBest[0] !== 0)
            score -= matchesBest[0] * matchesBest[0] * 0.2;
          if (!successStrict) {
            score *= 1e3;
          } else {
            var uniqueBeginningIndexes = 1;
            for (var i4 = nextBeginningIndexes[0]; i4 < targetLen; i4 = nextBeginningIndexes[i4])
              ++uniqueBeginningIndexes;
            if (uniqueBeginningIndexes > 24)
              score *= (uniqueBeginningIndexes - 24) * 10;
          }
          if (isSubstring)
            score /= 1 + searchLen * searchLen * 1;
          if (isSubstringBeginning)
            score /= 1 + searchLen * searchLen * 1;
          score -= targetLen - searchLen;
          prepared.score = score;
          for (var i4 = 0; i4 < matchesBestLen; ++i4)
            prepared._indexes[i4] = matchesBest[i4];
          prepared._indexes.len = matchesBestLen;
          return prepared;
        }
      };
      var algorithmSpaces = (preparedSearch, target) => {
        var seen_indexes = /* @__PURE__ */ new Set();
        var score = 0;
        var result = NULL;
        var first_seen_index_last_search = 0;
        var searches = preparedSearch.spaceSearches;
        for (var i4 = 0; i4 < searches.length; ++i4) {
          var search = searches[i4];
          result = algorithm(search, target);
          if (result === NULL)
            return NULL;
          score += result.score;
          if (result._indexes[0] < first_seen_index_last_search) {
            score -= first_seen_index_last_search - result._indexes[0];
          }
          first_seen_index_last_search = result._indexes[0];
          for (var j4 = 0; j4 < result._indexes.len; ++j4)
            seen_indexes.add(result._indexes[j4]);
        }
        var allowSpacesResult = algorithm(preparedSearch, target, true);
        if (allowSpacesResult !== NULL && allowSpacesResult.score > score) {
          return allowSpacesResult;
        }
        result.score = score;
        var i4 = 0;
        for (let index of seen_indexes)
          result._indexes[i4++] = index;
        result._indexes.len = i4;
        return result;
      };
      var prepareLowerInfo = (str) => {
        var strLen = str.length;
        var lower = str.toLowerCase();
        var lowerCodes = [];
        var bitflags = 0;
        var containsSpace = false;
        for (var i4 = 0; i4 < strLen; ++i4) {
          var lowerCode = lowerCodes[i4] = lower.charCodeAt(i4);
          if (lowerCode === 32) {
            containsSpace = true;
            continue;
          }
          var bit = lowerCode >= 97 && lowerCode <= 122 ? lowerCode - 97 : lowerCode >= 48 && lowerCode <= 57 ? 26 : lowerCode <= 127 ? 30 : 31;
          bitflags |= 1 << bit;
        }
        return { lowerCodes, bitflags, containsSpace, _lower: lower };
      };
      var prepareBeginningIndexes = (target) => {
        var targetLen = target.length;
        var beginningIndexes = [];
        var beginningIndexesLen = 0;
        var wasUpper = false;
        var wasAlphanum = false;
        for (var i4 = 0; i4 < targetLen; ++i4) {
          var targetCode = target.charCodeAt(i4);
          var isUpper = targetCode >= 65 && targetCode <= 90;
          var isAlphanum = isUpper || targetCode >= 97 && targetCode <= 122 || targetCode >= 48 && targetCode <= 57;
          var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum;
          wasUpper = isUpper;
          wasAlphanum = isAlphanum;
          if (isBeginning)
            beginningIndexes[beginningIndexesLen++] = i4;
        }
        return beginningIndexes;
      };
      var prepareNextBeginningIndexes = (target) => {
        var targetLen = target.length;
        var beginningIndexes = prepareBeginningIndexes(target);
        var nextBeginningIndexes = [];
        var lastIsBeginning = beginningIndexes[0];
        var lastIsBeginningI = 0;
        for (var i4 = 0; i4 < targetLen; ++i4) {
          if (lastIsBeginning > i4) {
            nextBeginningIndexes[i4] = lastIsBeginning;
          } else {
            lastIsBeginning = beginningIndexes[++lastIsBeginningI];
            nextBeginningIndexes[i4] = lastIsBeginning === void 0 ? targetLen : lastIsBeginning;
          }
        }
        return nextBeginningIndexes;
      };
      var cleanup = () => {
        preparedCache.clear();
        preparedSearchCache.clear();
        matchesSimple = [];
        matchesStrict = [];
      };
      var preparedCache = /* @__PURE__ */ new Map();
      var preparedSearchCache = /* @__PURE__ */ new Map();
      var matchesSimple = [];
      var matchesStrict = [];
      var defaultScoreFn = (a5) => {
        var max3 = INT_MIN;
        var len = a5.length;
        for (var i4 = 0; i4 < len; ++i4) {
          var result = a5[i4];
          if (result === NULL)
            continue;
          var score = result.score;
          if (score > max3)
            max3 = score;
        }
        if (max3 === INT_MIN)
          return NULL;
        return max3;
      };
      var getValue2 = (obj, prop) => {
        var tmp = obj[prop];
        if (tmp !== void 0)
          return tmp;
        var segs = prop;
        if (!Array.isArray(prop))
          segs = prop.split(".");
        var len = segs.length;
        var i4 = -1;
        while (obj && ++i4 < len)
          obj = obj[segs[i4]];
        return obj;
      };
      var isObj = (x5) => {
        return typeof x5 === "object";
      };
      var INT_MAX = Infinity;
      var INT_MIN = -INT_MAX;
      var noResults = [];
      noResults.total = 0;
      var NULL = null;
      var fastpriorityqueue = (r3) => {
        var e4 = [], o3 = 0, a5 = {}, v3 = (r4) => {
          for (var a6 = 0, v4 = e4[a6], c4 = 1; c4 < o3; ) {
            var s5 = c4 + 1;
            a6 = c4, s5 < o3 && e4[s5].score < e4[c4].score && (a6 = s5), e4[a6 - 1 >> 1] = e4[a6], c4 = 1 + (a6 << 1);
          }
          for (var f4 = a6 - 1 >> 1; a6 > 0 && v4.score < e4[f4].score; f4 = (a6 = f4) - 1 >> 1)
            e4[a6] = e4[f4];
          e4[a6] = v4;
        };
        return a5.add = (r4) => {
          var a6 = o3;
          e4[o3++] = r4;
          for (var v4 = a6 - 1 >> 1; a6 > 0 && r4.score < e4[v4].score; v4 = (a6 = v4) - 1 >> 1)
            e4[a6] = e4[v4];
          e4[a6] = r4;
        }, a5.poll = (r4) => {
          if (0 !== o3) {
            var a6 = e4[0];
            return e4[0] = e4[--o3], v3(), a6;
          }
        }, a5.peek = (r4) => {
          if (0 !== o3)
            return e4[0];
        }, a5.replaceTop = (r4) => {
          e4[0] = r4, v3();
        }, a5;
      };
      var q5 = fastpriorityqueue();
      return { "single": single, "go": go, "highlight": highlight, "prepare": prepare, "indexes": indexes, "cleanup": cleanup };
    });
  }
});

// node_modules/he/he.js
var require_he = __commonJS({
  "node_modules/he/he.js"(exports2, module2) {
    (function(root2) {
      var freeExports4 = typeof exports2 == "object" && exports2;
      var freeModule4 = typeof module2 == "object" && module2 && module2.exports == freeExports4 && module2;
      var freeGlobal2 = typeof global == "object" && global;
      if (freeGlobal2.global === freeGlobal2 || freeGlobal2.window === freeGlobal2) {
        root2 = freeGlobal2;
      }
      var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
      var regexAsciiWhitelist = /[\x01-\x7F]/g;
      var regexBmpWhitelist = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g;
      var regexEncodeNonAscii = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g;
      var encodeMap = { "\xAD": "shy", "\u200C": "zwnj", "\u200D": "zwj", "\u200E": "lrm", "\u2063": "ic", "\u2062": "it", "\u2061": "af", "\u200F": "rlm", "\u200B": "ZeroWidthSpace", "\u2060": "NoBreak", "\u0311": "DownBreve", "\u20DB": "tdot", "\u20DC": "DotDot", "	": "Tab", "\n": "NewLine", "\u2008": "puncsp", "\u205F": "MediumSpace", "\u2009": "thinsp", "\u200A": "hairsp", "\u2004": "emsp13", "\u2002": "ensp", "\u2005": "emsp14", "\u2003": "emsp", "\u2007": "numsp", "\xA0": "nbsp", "\u205F\u200A": "ThickSpace", "\u203E": "oline", "_": "lowbar", "\u2010": "dash", "\u2013": "ndash", "\u2014": "mdash", "\u2015": "horbar", ",": "comma", ";": "semi", "\u204F": "bsemi", ":": "colon", "\u2A74": "Colone", "!": "excl", "\xA1": "iexcl", "?": "quest", "\xBF": "iquest", ".": "period", "\u2025": "nldr", "\u2026": "mldr", "\xB7": "middot", "'": "apos", "\u2018": "lsquo", "\u2019": "rsquo", "\u201A": "sbquo", "\u2039": "lsaquo", "\u203A": "rsaquo", '"': "quot", "\u201C": "ldquo", "\u201D": "rdquo", "\u201E": "bdquo", "\xAB": "laquo", "\xBB": "raquo", "(": "lpar", ")": "rpar", "[": "lsqb", "]": "rsqb", "{": "lcub", "}": "rcub", "\u2308": "lceil", "\u2309": "rceil", "\u230A": "lfloor", "\u230B": "rfloor", "\u2985": "lopar", "\u2986": "ropar", "\u298B": "lbrke", "\u298C": "rbrke", "\u298D": "lbrkslu", "\u298E": "rbrksld", "\u298F": "lbrksld", "\u2990": "rbrkslu", "\u2991": "langd", "\u2992": "rangd", "\u2993": "lparlt", "\u2994": "rpargt", "\u2995": "gtlPar", "\u2996": "ltrPar", "\u27E6": "lobrk", "\u27E7": "robrk", "\u27E8": "lang", "\u27E9": "rang", "\u27EA": "Lang", "\u27EB": "Rang", "\u27EC": "loang", "\u27ED": "roang", "\u2772": "lbbrk", "\u2773": "rbbrk", "\u2016": "Vert", "\xA7": "sect", "\xB6": "para", "@": "commat", "*": "ast", "/": "sol", "undefined": null, "&": "amp", "#": "num", "%": "percnt", "\u2030": "permil", "\u2031": "pertenk", "\u2020": "dagger", "\u2021": "Dagger", "\u2022": "bull", "\u2043": "hybull", "\u2032": "prime", "\u2033": "Prime", "\u2034": "tprime", "\u2057": "qprime", "\u2035": "bprime", "\u2041": "caret", "`": "grave", "\xB4": "acute", "\u02DC": "tilde", "^": "Hat", "\xAF": "macr", "\u02D8": "breve", "\u02D9": "dot", "\xA8": "die", "\u02DA": "ring", "\u02DD": "dblac", "\xB8": "cedil", "\u02DB": "ogon", "\u02C6": "circ", "\u02C7": "caron", "\xB0": "deg", "\xA9": "copy", "\xAE": "reg", "\u2117": "copysr", "\u2118": "wp", "\u211E": "rx", "\u2127": "mho", "\u2129": "iiota", "\u2190": "larr", "\u219A": "nlarr", "\u2192": "rarr", "\u219B": "nrarr", "\u2191": "uarr", "\u2193": "darr", "\u2194": "harr", "\u21AE": "nharr", "\u2195": "varr", "\u2196": "nwarr", "\u2197": "nearr", "\u2198": "searr", "\u2199": "swarr", "\u219D": "rarrw", "\u219D\u0338": "nrarrw", "\u219E": "Larr", "\u219F": "Uarr", "\u21A0": "Rarr", "\u21A1": "Darr", "\u21A2": "larrtl", "\u21A3": "rarrtl", "\u21A4": "mapstoleft", "\u21A5": "mapstoup", "\u21A6": "map", "\u21A7": "mapstodown", "\u21A9": "larrhk", "\u21AA": "rarrhk", "\u21AB": "larrlp", "\u21AC": "rarrlp", "\u21AD": "harrw", "\u21B0": "lsh", "\u21B1": "rsh", "\u21B2": "ldsh", "\u21B3": "rdsh", "\u21B5": "crarr", "\u21B6": "cularr", "\u21B7": "curarr", "\u21BA": "olarr", "\u21BB": "orarr", "\u21BC": "lharu", "\u21BD": "lhard", "\u21BE": "uharr", "\u21BF": "uharl", "\u21C0": "rharu", "\u21C1": "rhard", "\u21C2": "dharr", "\u21C3": "dharl", "\u21C4": "rlarr", "\u21C5": "udarr", "\u21C6": "lrarr", "\u21C7": "llarr", "\u21C8": "uuarr", "\u21C9": "rrarr", "\u21CA": "ddarr", "\u21CB": "lrhar", "\u21CC": "rlhar", "\u21D0": "lArr", "\u21CD": "nlArr", "\u21D1": "uArr", "\u21D2": "rArr", "\u21CF": "nrArr", "\u21D3": "dArr", "\u21D4": "iff", "\u21CE": "nhArr", "\u21D5": "vArr", "\u21D6": "nwArr", "\u21D7": "neArr", "\u21D8": "seArr", "\u21D9": "swArr", "\u21DA": "lAarr", "\u21DB": "rAarr", "\u21DD": "zigrarr", "\u21E4": "larrb", "\u21E5": "rarrb", "\u21F5": "duarr", "\u21FD": "loarr", "\u21FE": "roarr", "\u21FF": "hoarr", "\u2200": "forall", "\u2201": "comp", "\u2202": "part", "\u2202\u0338": "npart", "\u2203": "exist", "\u2204": "nexist", "\u2205": "empty", "\u2207": "Del", "\u2208": "in", "\u2209": "notin", "\u220B": "ni", "\u220C": "notni", "\u03F6": "bepsi", "\u220F": "prod", "\u2210": "coprod", "\u2211": "sum", "+": "plus", "\xB1": "pm", "\xF7": "div", "\xD7": "times", "<": "lt", "\u226E": "nlt", "<\u20D2": "nvlt", "=": "equals", "\u2260": "ne", "=\u20E5": "bne", "\u2A75": "Equal", ">": "gt", "\u226F": "ngt", ">\u20D2": "nvgt", "\xAC": "not", "|": "vert", "\xA6": "brvbar", "\u2212": "minus", "\u2213": "mp", "\u2214": "plusdo", "\u2044": "frasl", "\u2216": "setmn", "\u2217": "lowast", "\u2218": "compfn", "\u221A": "Sqrt", "\u221D": "prop", "\u221E": "infin", "\u221F": "angrt", "\u2220": "ang", "\u2220\u20D2": "nang", "\u2221": "angmsd", "\u2222": "angsph", "\u2223": "mid", "\u2224": "nmid", "\u2225": "par", "\u2226": "npar", "\u2227": "and", "\u2228": "or", "\u2229": "cap", "\u2229\uFE00": "caps", "\u222A": "cup", "\u222A\uFE00": "cups", "\u222B": "int", "\u222C": "Int", "\u222D": "tint", "\u2A0C": "qint", "\u222E": "oint", "\u222F": "Conint", "\u2230": "Cconint", "\u2231": "cwint", "\u2232": "cwconint", "\u2233": "awconint", "\u2234": "there4", "\u2235": "becaus", "\u2236": "ratio", "\u2237": "Colon", "\u2238": "minusd", "\u223A": "mDDot", "\u223B": "homtht", "\u223C": "sim", "\u2241": "nsim", "\u223C\u20D2": "nvsim", "\u223D": "bsim", "\u223D\u0331": "race", "\u223E": "ac", "\u223E\u0333": "acE", "\u223F": "acd", "\u2240": "wr", "\u2242": "esim", "\u2242\u0338": "nesim", "\u2243": "sime", "\u2244": "nsime", "\u2245": "cong", "\u2247": "ncong", "\u2246": "simne", "\u2248": "ap", "\u2249": "nap", "\u224A": "ape", "\u224B": "apid", "\u224B\u0338": "napid", "\u224C": "bcong", "\u224D": "CupCap", "\u226D": "NotCupCap", "\u224D\u20D2": "nvap", "\u224E": "bump", "\u224E\u0338": "nbump", "\u224F": "bumpe", "\u224F\u0338": "nbumpe", "\u2250": "doteq", "\u2250\u0338": "nedot", "\u2251": "eDot", "\u2252": "efDot", "\u2253": "erDot", "\u2254": "colone", "\u2255": "ecolon", "\u2256": "ecir", "\u2257": "cire", "\u2259": "wedgeq", "\u225A": "veeeq", "\u225C": "trie", "\u225F": "equest", "\u2261": "equiv", "\u2262": "nequiv", "\u2261\u20E5": "bnequiv", "\u2264": "le", "\u2270": "nle", "\u2264\u20D2": "nvle", "\u2265": "ge", "\u2271": "nge", "\u2265\u20D2": "nvge", "\u2266": "lE", "\u2266\u0338": "nlE", "\u2267": "gE", "\u2267\u0338": "ngE", "\u2268\uFE00": "lvnE", "\u2268": "lnE", "\u2269": "gnE", "\u2269\uFE00": "gvnE", "\u226A": "ll", "\u226A\u0338": "nLtv", "\u226A\u20D2": "nLt", "\u226B": "gg", "\u226B\u0338": "nGtv", "\u226B\u20D2": "nGt", "\u226C": "twixt", "\u2272": "lsim", "\u2274": "nlsim", "\u2273": "gsim", "\u2275": "ngsim", "\u2276": "lg", "\u2278": "ntlg", "\u2277": "gl", "\u2279": "ntgl", "\u227A": "pr", "\u2280": "npr", "\u227B": "sc", "\u2281": "nsc", "\u227C": "prcue", "\u22E0": "nprcue", "\u227D": "sccue", "\u22E1": "nsccue", "\u227E": "prsim", "\u227F": "scsim", "\u227F\u0338": "NotSucceedsTilde", "\u2282": "sub", "\u2284": "nsub", "\u2282\u20D2": "vnsub", "\u2283": "sup", "\u2285": "nsup", "\u2283\u20D2": "vnsup", "\u2286": "sube", "\u2288": "nsube", "\u2287": "supe", "\u2289": "nsupe", "\u228A\uFE00": "vsubne", "\u228A": "subne", "\u228B\uFE00": "vsupne", "\u228B": "supne", "\u228D": "cupdot", "\u228E": "uplus", "\u228F": "sqsub", "\u228F\u0338": "NotSquareSubset", "\u2290": "sqsup", "\u2290\u0338": "NotSquareSuperset", "\u2291": "sqsube", "\u22E2": "nsqsube", "\u2292": "sqsupe", "\u22E3": "nsqsupe", "\u2293": "sqcap", "\u2293\uFE00": "sqcaps", "\u2294": "sqcup", "\u2294\uFE00": "sqcups", "\u2295": "oplus", "\u2296": "ominus", "\u2297": "otimes", "\u2298": "osol", "\u2299": "odot", "\u229A": "ocir", "\u229B": "oast", "\u229D": "odash", "\u229E": "plusb", "\u229F": "minusb", "\u22A0": "timesb", "\u22A1": "sdotb", "\u22A2": "vdash", "\u22AC": "nvdash", "\u22A3": "dashv", "\u22A4": "top", "\u22A5": "bot", "\u22A7": "models", "\u22A8": "vDash", "\u22AD": "nvDash", "\u22A9": "Vdash", "\u22AE": "nVdash", "\u22AA": "Vvdash", "\u22AB": "VDash", "\u22AF": "nVDash", "\u22B0": "prurel", "\u22B2": "vltri", "\u22EA": "nltri", "\u22B3": "vrtri", "\u22EB": "nrtri", "\u22B4": "ltrie", "\u22EC": "nltrie", "\u22B4\u20D2": "nvltrie", "\u22B5": "rtrie", "\u22ED": "nrtrie", "\u22B5\u20D2": "nvrtrie", "\u22B6": "origof", "\u22B7": "imof", "\u22B8": "mumap", "\u22B9": "hercon", "\u22BA": "intcal", "\u22BB": "veebar", "\u22BD": "barvee", "\u22BE": "angrtvb", "\u22BF": "lrtri", "\u22C0": "Wedge", "\u22C1": "Vee", "\u22C2": "xcap", "\u22C3": "xcup", "\u22C4": "diam", "\u22C5": "sdot", "\u22C6": "Star", "\u22C7": "divonx", "\u22C8": "bowtie", "\u22C9": "ltimes", "\u22CA": "rtimes", "\u22CB": "lthree", "\u22CC": "rthree", "\u22CD": "bsime", "\u22CE": "cuvee", "\u22CF": "cuwed", "\u22D0": "Sub", "\u22D1": "Sup", "\u22D2": "Cap", "\u22D3": "Cup", "\u22D4": "fork", "\u22D5": "epar", "\u22D6": "ltdot", "\u22D7": "gtdot", "\u22D8": "Ll", "\u22D8\u0338": "nLl", "\u22D9": "Gg", "\u22D9\u0338": "nGg", "\u22DA\uFE00": "lesg", "\u22DA": "leg", "\u22DB": "gel", "\u22DB\uFE00": "gesl", "\u22DE": "cuepr", "\u22DF": "cuesc", "\u22E6": "lnsim", "\u22E7": "gnsim", "\u22E8": "prnsim", "\u22E9": "scnsim", "\u22EE": "vellip", "\u22EF": "ctdot", "\u22F0": "utdot", "\u22F1": "dtdot", "\u22F2": "disin", "\u22F3": "isinsv", "\u22F4": "isins", "\u22F5": "isindot", "\u22F5\u0338": "notindot", "\u22F6": "notinvc", "\u22F7": "notinvb", "\u22F9": "isinE", "\u22F9\u0338": "notinE", "\u22FA": "nisd", "\u22FB": "xnis", "\u22FC": "nis", "\u22FD": "notnivc", "\u22FE": "notnivb", "\u2305": "barwed", "\u2306": "Barwed", "\u230C": "drcrop", "\u230D": "dlcrop", "\u230E": "urcrop", "\u230F": "ulcrop", "\u2310": "bnot", "\u2312": "profline", "\u2313": "profsurf", "\u2315": "telrec", "\u2316": "target", "\u231C": "ulcorn", "\u231D": "urcorn", "\u231E": "dlcorn", "\u231F": "drcorn", "\u2322": "frown", "\u2323": "smile", "\u232D": "cylcty", "\u232E": "profalar", "\u2336": "topbot", "\u233D": "ovbar", "\u233F": "solbar", "\u237C": "angzarr", "\u23B0": "lmoust", "\u23B1": "rmoust", "\u23B4": "tbrk", "\u23B5": "bbrk", "\u23B6": "bbrktbrk", "\u23DC": "OverParenthesis", "\u23DD": "UnderParenthesis", "\u23DE": "OverBrace", "\u23DF": "UnderBrace", "\u23E2": "trpezium", "\u23E7": "elinters", "\u2423": "blank", "\u2500": "boxh", "\u2502": "boxv", "\u250C": "boxdr", "\u2510": "boxdl", "\u2514": "boxur", "\u2518": "boxul", "\u251C": "boxvr", "\u2524": "boxvl", "\u252C": "boxhd", "\u2534": "boxhu", "\u253C": "boxvh", "\u2550": "boxH", "\u2551": "boxV", "\u2552": "boxdR", "\u2553": "boxDr", "\u2554": "boxDR", "\u2555": "boxdL", "\u2556": "boxDl", "\u2557": "boxDL", "\u2558": "boxuR", "\u2559": "boxUr", "\u255A": "boxUR", "\u255B": "boxuL", "\u255C": "boxUl", "\u255D": "boxUL", "\u255E": "boxvR", "\u255F": "boxVr", "\u2560": "boxVR", "\u2561": "boxvL", "\u2562": "boxVl", "\u2563": "boxVL", "\u2564": "boxHd", "\u2565": "boxhD", "\u2566": "boxHD", "\u2567": "boxHu", "\u2568": "boxhU", "\u2569": "boxHU", "\u256A": "boxvH", "\u256B": "boxVh", "\u256C": "boxVH", "\u2580": "uhblk", "\u2584": "lhblk", "\u2588": "block", "\u2591": "blk14", "\u2592": "blk12", "\u2593": "blk34", "\u25A1": "squ", "\u25AA": "squf", "\u25AB": "EmptyVerySmallSquare", "\u25AD": "rect", "\u25AE": "marker", "\u25B1": "fltns", "\u25B3": "xutri", "\u25B4": "utrif", "\u25B5": "utri", "\u25B8": "rtrif", "\u25B9": "rtri", "\u25BD": "xdtri", "\u25BE": "dtrif", "\u25BF": "dtri", "\u25C2": "ltrif", "\u25C3": "ltri", "\u25CA": "loz", "\u25CB": "cir", "\u25EC": "tridot", "\u25EF": "xcirc", "\u25F8": "ultri", "\u25F9": "urtri", "\u25FA": "lltri", "\u25FB": "EmptySmallSquare", "\u25FC": "FilledSmallSquare", "\u2605": "starf", "\u2606": "star", "\u260E": "phone", "\u2640": "female", "\u2642": "male", "\u2660": "spades", "\u2663": "clubs", "\u2665": "hearts", "\u2666": "diams", "\u266A": "sung", "\u2713": "check", "\u2717": "cross", "\u2720": "malt", "\u2736": "sext", "\u2758": "VerticalSeparator", "\u27C8": "bsolhsub", "\u27C9": "suphsol", "\u27F5": "xlarr", "\u27F6": "xrarr", "\u27F7": "xharr", "\u27F8": "xlArr", "\u27F9": "xrArr", "\u27FA": "xhArr", "\u27FC": "xmap", "\u27FF": "dzigrarr", "\u2902": "nvlArr", "\u2903": "nvrArr", "\u2904": "nvHarr", "\u2905": "Map", "\u290C": "lbarr", "\u290D": "rbarr", "\u290E": "lBarr", "\u290F": "rBarr", "\u2910": "RBarr", "\u2911": "DDotrahd", "\u2912": "UpArrowBar", "\u2913": "DownArrowBar", "\u2916": "Rarrtl", "\u2919": "latail", "\u291A": "ratail", "\u291B": "lAtail", "\u291C": "rAtail", "\u291D": "larrfs", "\u291E": "rarrfs", "\u291F": "larrbfs", "\u2920": "rarrbfs", "\u2923": "nwarhk", "\u2924": "nearhk", "\u2925": "searhk", "\u2926": "swarhk", "\u2927": "nwnear", "\u2928": "toea", "\u2929": "tosa", "\u292A": "swnwar", "\u2933": "rarrc", "\u2933\u0338": "nrarrc", "\u2935": "cudarrr", "\u2936": "ldca", "\u2937": "rdca", "\u2938": "cudarrl", "\u2939": "larrpl", "\u293C": "curarrm", "\u293D": "cularrp", "\u2945": "rarrpl", "\u2948": "harrcir", "\u2949": "Uarrocir", "\u294A": "lurdshar", "\u294B": "ldrushar", "\u294E": "LeftRightVector", "\u294F": "RightUpDownVector", "\u2950": "DownLeftRightVector", "\u2951": "LeftUpDownVector", "\u2952": "LeftVectorBar", "\u2953": "RightVectorBar", "\u2954": "RightUpVectorBar", "\u2955": "RightDownVectorBar", "\u2956": "DownLeftVectorBar", "\u2957": "DownRightVectorBar", "\u2958": "LeftUpVectorBar", "\u2959": "LeftDownVectorBar", "\u295A": "LeftTeeVector", "\u295B": "RightTeeVector", "\u295C": "RightUpTeeVector", "\u295D": "RightDownTeeVector", "\u295E": "DownLeftTeeVector", "\u295F": "DownRightTeeVector", "\u2960": "LeftUpTeeVector", "\u2961": "LeftDownTeeVector", "\u2962": "lHar", "\u2963": "uHar", "\u2964": "rHar", "\u2965": "dHar", "\u2966": "luruhar", "\u2967": "ldrdhar", "\u2968": "ruluhar", "\u2969": "rdldhar", "\u296A": "lharul", "\u296B": "llhard", "\u296C": "rharul", "\u296D": "lrhard", "\u296E": "udhar", "\u296F": "duhar", "\u2970": "RoundImplies", "\u2971": "erarr", "\u2972": "simrarr", "\u2973": "larrsim", "\u2974": "rarrsim", "\u2975": "rarrap", "\u2976": "ltlarr", "\u2978": "gtrarr", "\u2979": "subrarr", "\u297B": "suplarr", "\u297C": "lfisht", "\u297D": "rfisht", "\u297E": "ufisht", "\u297F": "dfisht", "\u299A": "vzigzag", "\u299C": "vangrt", "\u299D": "angrtvbd", "\u29A4": "ange", "\u29A5": "range", "\u29A6": "dwangle", "\u29A7": "uwangle", "\u29A8": "angmsdaa", "\u29A9": "angmsdab", "\u29AA": "angmsdac", "\u29AB": "angmsdad", "\u29AC": "angmsdae", "\u29AD": "angmsdaf", "\u29AE": "angmsdag", "\u29AF": "angmsdah", "\u29B0": "bemptyv", "\u29B1": "demptyv", "\u29B2": "cemptyv", "\u29B3": "raemptyv", "\u29B4": "laemptyv", "\u29B5": "ohbar", "\u29B6": "omid", "\u29B7": "opar", "\u29B9": "operp", "\u29BB": "olcross", "\u29BC": "odsold", "\u29BE": "olcir", "\u29BF": "ofcir", "\u29C0": "olt", "\u29C1": "ogt", "\u29C2": "cirscir", "\u29C3": "cirE", "\u29C4": "solb", "\u29C5": "bsolb", "\u29C9": "boxbox", "\u29CD": "trisb", "\u29CE": "rtriltri", "\u29CF": "LeftTriangleBar", "\u29CF\u0338": "NotLeftTriangleBar", "\u29D0": "RightTriangleBar", "\u29D0\u0338": "NotRightTriangleBar", "\u29DC": "iinfin", "\u29DD": "infintie", "\u29DE": "nvinfin", "\u29E3": "eparsl", "\u29E4": "smeparsl", "\u29E5": "eqvparsl", "\u29EB": "lozf", "\u29F4": "RuleDelayed", "\u29F6": "dsol", "\u2A00": "xodot", "\u2A01": "xoplus", "\u2A02": "xotime", "\u2A04": "xuplus", "\u2A06": "xsqcup", "\u2A0D": "fpartint", "\u2A10": "cirfnint", "\u2A11": "awint", "\u2A12": "rppolint", "\u2A13": "scpolint", "\u2A14": "npolint", "\u2A15": "pointint", "\u2A16": "quatint", "\u2A17": "intlarhk", "\u2A22": "pluscir", "\u2A23": "plusacir", "\u2A24": "simplus", "\u2A25": "plusdu", "\u2A26": "plussim", "\u2A27": "plustwo", "\u2A29": "mcomma", "\u2A2A": "minusdu", "\u2A2D": "loplus", "\u2A2E": "roplus", "\u2A2F": "Cross", "\u2A30": "timesd", "\u2A31": "timesbar", "\u2A33": "smashp", "\u2A34": "lotimes", "\u2A35": "rotimes", "\u2A36": "otimesas", "\u2A37": "Otimes", "\u2A38": "odiv", "\u2A39": "triplus", "\u2A3A": "triminus", "\u2A3B": "tritime", "\u2A3C": "iprod", "\u2A3F": "amalg", "\u2A40": "capdot", "\u2A42": "ncup", "\u2A43": "ncap", "\u2A44": "capand", "\u2A45": "cupor", "\u2A46": "cupcap", "\u2A47": "capcup", "\u2A48": "cupbrcap", "\u2A49": "capbrcup", "\u2A4A": "cupcup", "\u2A4B": "capcap", "\u2A4C": "ccups", "\u2A4D": "ccaps", "\u2A50": "ccupssm", "\u2A53": "And", "\u2A54": "Or", "\u2A55": "andand", "\u2A56": "oror", "\u2A57": "orslope", "\u2A58": "andslope", "\u2A5A": "andv", "\u2A5B": "orv", "\u2A5C": "andd", "\u2A5D": "ord", "\u2A5F": "wedbar", "\u2A66": "sdote", "\u2A6A": "simdot", "\u2A6D": "congdot", "\u2A6D\u0338": "ncongdot", "\u2A6E": "easter", "\u2A6F": "apacir", "\u2A70": "apE", "\u2A70\u0338": "napE", "\u2A71": "eplus", "\u2A72": "pluse", "\u2A73": "Esim", "\u2A77": "eDDot", "\u2A78": "equivDD", "\u2A79": "ltcir", "\u2A7A": "gtcir", "\u2A7B": "ltquest", "\u2A7C": "gtquest", "\u2A7D": "les", "\u2A7D\u0338": "nles", "\u2A7E": "ges", "\u2A7E\u0338": "nges", "\u2A7F": "lesdot", "\u2A80": "gesdot", "\u2A81": "lesdoto", "\u2A82": "gesdoto", "\u2A83": "lesdotor", "\u2A84": "gesdotol", "\u2A85": "lap", "\u2A86": "gap", "\u2A87": "lne", "\u2A88": "gne", "\u2A89": "lnap", "\u2A8A": "gnap", "\u2A8B": "lEg", "\u2A8C": "gEl", "\u2A8D": "lsime", "\u2A8E": "gsime", "\u2A8F": "lsimg", "\u2A90": "gsiml", "\u2A91": "lgE", "\u2A92": "glE", "\u2A93": "lesges", "\u2A94": "gesles", "\u2A95": "els", "\u2A96": "egs", "\u2A97": "elsdot", "\u2A98": "egsdot", "\u2A99": "el", "\u2A9A": "eg", "\u2A9D": "siml", "\u2A9E": "simg", "\u2A9F": "simlE", "\u2AA0": "simgE", "\u2AA1": "LessLess", "\u2AA1\u0338": "NotNestedLessLess", "\u2AA2": "GreaterGreater", "\u2AA2\u0338": "NotNestedGreaterGreater", "\u2AA4": "glj", "\u2AA5": "gla", "\u2AA6": "ltcc", "\u2AA7": "gtcc", "\u2AA8": "lescc", "\u2AA9": "gescc", "\u2AAA": "smt", "\u2AAB": "lat", "\u2AAC": "smte", "\u2AAC\uFE00": "smtes", "\u2AAD": "late", "\u2AAD\uFE00": "lates", "\u2AAE": "bumpE", "\u2AAF": "pre", "\u2AAF\u0338": "npre", "\u2AB0": "sce", "\u2AB0\u0338": "nsce", "\u2AB3": "prE", "\u2AB4": "scE", "\u2AB5": "prnE", "\u2AB6": "scnE", "\u2AB7": "prap", "\u2AB8": "scap", "\u2AB9": "prnap", "\u2ABA": "scnap", "\u2ABB": "Pr", "\u2ABC": "Sc", "\u2ABD": "subdot", "\u2ABE": "supdot", "\u2ABF": "subplus", "\u2AC0": "supplus", "\u2AC1": "submult", "\u2AC2": "supmult", "\u2AC3": "subedot", "\u2AC4": "supedot", "\u2AC5": "subE", "\u2AC5\u0338": "nsubE", "\u2AC6": "supE", "\u2AC6\u0338": "nsupE", "\u2AC7": "subsim", "\u2AC8": "supsim", "\u2ACB\uFE00": "vsubnE", "\u2ACB": "subnE", "\u2ACC\uFE00": "vsupnE", "\u2ACC": "supnE", "\u2ACF": "csub", "\u2AD0": "csup", "\u2AD1": "csube", "\u2AD2": "csupe", "\u2AD3": "subsup", "\u2AD4": "supsub", "\u2AD5": "subsub", "\u2AD6": "supsup", "\u2AD7": "suphsub", "\u2AD8": "supdsub", "\u2AD9": "forkv", "\u2ADA": "topfork", "\u2ADB": "mlcp", "\u2AE4": "Dashv", "\u2AE6": "Vdashl", "\u2AE7": "Barv", "\u2AE8": "vBar", "\u2AE9": "vBarv", "\u2AEB": "Vbar", "\u2AEC": "Not", "\u2AED": "bNot", "\u2AEE": "rnmid", "\u2AEF": "cirmid", "\u2AF0": "midcir", "\u2AF1": "topcir", "\u2AF2": "nhpar", "\u2AF3": "parsim", "\u2AFD": "parsl", "\u2AFD\u20E5": "nparsl", "\u266D": "flat", "\u266E": "natur", "\u266F": "sharp", "\xA4": "curren", "\xA2": "cent", "$": "dollar", "\xA3": "pound", "\xA5": "yen", "\u20AC": "euro", "\xB9": "sup1", "\xBD": "half", "\u2153": "frac13", "\xBC": "frac14", "\u2155": "frac15", "\u2159": "frac16", "\u215B": "frac18", "\xB2": "sup2", "\u2154": "frac23", "\u2156": "frac25", "\xB3": "sup3", "\xBE": "frac34", "\u2157": "frac35", "\u215C": "frac38", "\u2158": "frac45", "\u215A": "frac56", "\u215D": "frac58", "\u215E": "frac78", "\u{1D4B6}": "ascr", "\u{1D552}": "aopf", "\u{1D51E}": "afr", "\u{1D538}": "Aopf", "\u{1D504}": "Afr", "\u{1D49C}": "Ascr", "\xAA": "ordf", "\xE1": "aacute", "\xC1": "Aacute", "\xE0": "agrave", "\xC0": "Agrave", "\u0103": "abreve", "\u0102": "Abreve", "\xE2": "acirc", "\xC2": "Acirc", "\xE5": "aring", "\xC5": "angst", "\xE4": "auml", "\xC4": "Auml", "\xE3": "atilde", "\xC3": "Atilde", "\u0105": "aogon", "\u0104": "Aogon", "\u0101": "amacr", "\u0100": "Amacr", "\xE6": "aelig", "\xC6": "AElig", "\u{1D4B7}": "bscr", "\u{1D553}": "bopf", "\u{1D51F}": "bfr", "\u{1D539}": "Bopf", "\u212C": "Bscr", "\u{1D505}": "Bfr", "\u{1D520}": "cfr", "\u{1D4B8}": "cscr", "\u{1D554}": "copf", "\u212D": "Cfr", "\u{1D49E}": "Cscr", "\u2102": "Copf", "\u0107": "cacute", "\u0106": "Cacute", "\u0109": "ccirc", "\u0108": "Ccirc", "\u010D": "ccaron", "\u010C": "Ccaron", "\u010B": "cdot", "\u010A": "Cdot", "\xE7": "ccedil", "\xC7": "Ccedil", "\u2105": "incare", "\u{1D521}": "dfr", "\u2146": "dd", "\u{1D555}": "dopf", "\u{1D4B9}": "dscr", "\u{1D49F}": "Dscr", "\u{1D507}": "Dfr", "\u2145": "DD", "\u{1D53B}": "Dopf", "\u010F": "dcaron", "\u010E": "Dcaron", "\u0111": "dstrok", "\u0110": "Dstrok", "\xF0": "eth", "\xD0": "ETH", "\u2147": "ee", "\u212F": "escr", "\u{1D522}": "efr", "\u{1D556}": "eopf", "\u2130": "Escr", "\u{1D508}": "Efr", "\u{1D53C}": "Eopf", "\xE9": "eacute", "\xC9": "Eacute", "\xE8": "egrave", "\xC8": "Egrave", "\xEA": "ecirc", "\xCA": "Ecirc", "\u011B": "ecaron", "\u011A": "Ecaron", "\xEB": "euml", "\xCB": "Euml", "\u0117": "edot", "\u0116": "Edot", "\u0119": "eogon", "\u0118": "Eogon", "\u0113": "emacr", "\u0112": "Emacr", "\u{1D523}": "ffr", "\u{1D557}": "fopf", "\u{1D4BB}": "fscr", "\u{1D509}": "Ffr", "\u{1D53D}": "Fopf", "\u2131": "Fscr", "\uFB00": "fflig", "\uFB03": "ffilig", "\uFB04": "ffllig", "\uFB01": "filig", "fj": "fjlig", "\uFB02": "fllig", "\u0192": "fnof", "\u210A": "gscr", "\u{1D558}": "gopf", "\u{1D524}": "gfr", "\u{1D4A2}": "Gscr", "\u{1D53E}": "Gopf", "\u{1D50A}": "Gfr", "\u01F5": "gacute", "\u011F": "gbreve", "\u011E": "Gbreve", "\u011D": "gcirc", "\u011C": "Gcirc", "\u0121": "gdot", "\u0120": "Gdot", "\u0122": "Gcedil", "\u{1D525}": "hfr", "\u210E": "planckh", "\u{1D4BD}": "hscr", "\u{1D559}": "hopf", "\u210B": "Hscr", "\u210C": "Hfr", "\u210D": "Hopf", "\u0125": "hcirc", "\u0124": "Hcirc", "\u210F": "hbar", "\u0127": "hstrok", "\u0126": "Hstrok", "\u{1D55A}": "iopf", "\u{1D526}": "ifr", "\u{1D4BE}": "iscr", "\u2148": "ii", "\u{1D540}": "Iopf", "\u2110": "Iscr", "\u2111": "Im", "\xED": "iacute", "\xCD": "Iacute", "\xEC": "igrave", "\xCC": "Igrave", "\xEE": "icirc", "\xCE": "Icirc", "\xEF": "iuml", "\xCF": "Iuml", "\u0129": "itilde", "\u0128": "Itilde", "\u0130": "Idot", "\u012F": "iogon", "\u012E": "Iogon", "\u012B": "imacr", "\u012A": "Imacr", "\u0133": "ijlig", "\u0132": "IJlig", "\u0131": "imath", "\u{1D4BF}": "jscr", "\u{1D55B}": "jopf", "\u{1D527}": "jfr", "\u{1D4A5}": "Jscr", "\u{1D50D}": "Jfr", "\u{1D541}": "Jopf", "\u0135": "jcirc", "\u0134": "Jcirc", "\u0237": "jmath", "\u{1D55C}": "kopf", "\u{1D4C0}": "kscr", "\u{1D528}": "kfr", "\u{1D4A6}": "Kscr", "\u{1D542}": "Kopf", "\u{1D50E}": "Kfr", "\u0137": "kcedil", "\u0136": "Kcedil", "\u{1D529}": "lfr", "\u{1D4C1}": "lscr", "\u2113": "ell", "\u{1D55D}": "lopf", "\u2112": "Lscr", "\u{1D50F}": "Lfr", "\u{1D543}": "Lopf", "\u013A": "lacute", "\u0139": "Lacute", "\u013E": "lcaron", "\u013D": "Lcaron", "\u013C": "lcedil", "\u013B": "Lcedil", "\u0142": "lstrok", "\u0141": "Lstrok", "\u0140": "lmidot", "\u013F": "Lmidot", "\u{1D52A}": "mfr", "\u{1D55E}": "mopf", "\u{1D4C2}": "mscr", "\u{1D510}": "Mfr", "\u{1D544}": "Mopf", "\u2133": "Mscr", "\u{1D52B}": "nfr", "\u{1D55F}": "nopf", "\u{1D4C3}": "nscr", "\u2115": "Nopf", "\u{1D4A9}": "Nscr", "\u{1D511}": "Nfr", "\u0144": "nacute", "\u0143": "Nacute", "\u0148": "ncaron", "\u0147": "Ncaron", "\xF1": "ntilde", "\xD1": "Ntilde", "\u0146": "ncedil", "\u0145": "Ncedil", "\u2116": "numero", "\u014B": "eng", "\u014A": "ENG", "\u{1D560}": "oopf", "\u{1D52C}": "ofr", "\u2134": "oscr", "\u{1D4AA}": "Oscr", "\u{1D512}": "Ofr", "\u{1D546}": "Oopf", "\xBA": "ordm", "\xF3": "oacute", "\xD3": "Oacute", "\xF2": "ograve", "\xD2": "Ograve", "\xF4": "ocirc", "\xD4": "Ocirc", "\xF6": "ouml", "\xD6": "Ouml", "\u0151": "odblac", "\u0150": "Odblac", "\xF5": "otilde", "\xD5": "Otilde", "\xF8": "oslash", "\xD8": "Oslash", "\u014D": "omacr", "\u014C": "Omacr", "\u0153": "oelig", "\u0152": "OElig", "\u{1D52D}": "pfr", "\u{1D4C5}": "pscr", "\u{1D561}": "popf", "\u2119": "Popf", "\u{1D513}": "Pfr", "\u{1D4AB}": "Pscr", "\u{1D562}": "qopf", "\u{1D52E}": "qfr", "\u{1D4C6}": "qscr", "\u{1D4AC}": "Qscr", "\u{1D514}": "Qfr", "\u211A": "Qopf", "\u0138": "kgreen", "\u{1D52F}": "rfr", "\u{1D563}": "ropf", "\u{1D4C7}": "rscr", "\u211B": "Rscr", "\u211C": "Re", "\u211D": "Ropf", "\u0155": "racute", "\u0154": "Racute", "\u0159": "rcaron", "\u0158": "Rcaron", "\u0157": "rcedil", "\u0156": "Rcedil", "\u{1D564}": "sopf", "\u{1D4C8}": "sscr", "\u{1D530}": "sfr", "\u{1D54A}": "Sopf", "\u{1D516}": "Sfr", "\u{1D4AE}": "Sscr", "\u24C8": "oS", "\u015B": "sacute", "\u015A": "Sacute", "\u015D": "scirc", "\u015C": "Scirc", "\u0161": "scaron", "\u0160": "Scaron", "\u015F": "scedil", "\u015E": "Scedil", "\xDF": "szlig", "\u{1D531}": "tfr", "\u{1D4C9}": "tscr", "\u{1D565}": "topf", "\u{1D4AF}": "Tscr", "\u{1D517}": "Tfr", "\u{1D54B}": "Topf", "\u0165": "tcaron", "\u0164": "Tcaron", "\u0163": "tcedil", "\u0162": "Tcedil", "\u2122": "trade", "\u0167": "tstrok", "\u0166": "Tstrok", "\u{1D4CA}": "uscr", "\u{1D566}": "uopf", "\u{1D532}": "ufr", "\u{1D54C}": "Uopf", "\u{1D518}": "Ufr", "\u{1D4B0}": "Uscr", "\xFA": "uacute", "\xDA": "Uacute", "\xF9": "ugrave", "\xD9": "Ugrave", "\u016D": "ubreve", "\u016C": "Ubreve", "\xFB": "ucirc", "\xDB": "Ucirc", "\u016F": "uring", "\u016E": "Uring", "\xFC": "uuml", "\xDC": "Uuml", "\u0171": "udblac", "\u0170": "Udblac", "\u0169": "utilde", "\u0168": "Utilde", "\u0173": "uogon", "\u0172": "Uogon", "\u016B": "umacr", "\u016A": "Umacr", "\u{1D533}": "vfr", "\u{1D567}": "vopf", "\u{1D4CB}": "vscr", "\u{1D519}": "Vfr", "\u{1D54D}": "Vopf", "\u{1D4B1}": "Vscr", "\u{1D568}": "wopf", "\u{1D4CC}": "wscr", "\u{1D534}": "wfr", "\u{1D4B2}": "Wscr", "\u{1D54E}": "Wopf", "\u{1D51A}": "Wfr", "\u0175": "wcirc", "\u0174": "Wcirc", "\u{1D535}": "xfr", "\u{1D4CD}": "xscr", "\u{1D569}": "xopf", "\u{1D54F}": "Xopf", "\u{1D51B}": "Xfr", "\u{1D4B3}": "Xscr", "\u{1D536}": "yfr", "\u{1D4CE}": "yscr", "\u{1D56A}": "yopf", "\u{1D4B4}": "Yscr", "\u{1D51C}": "Yfr", "\u{1D550}": "Yopf", "\xFD": "yacute", "\xDD": "Yacute", "\u0177": "ycirc", "\u0176": "Ycirc", "\xFF": "yuml", "\u0178": "Yuml", "\u{1D4CF}": "zscr", "\u{1D537}": "zfr", "\u{1D56B}": "zopf", "\u2128": "Zfr", "\u2124": "Zopf", "\u{1D4B5}": "Zscr", "\u017A": "zacute", "\u0179": "Zacute", "\u017E": "zcaron", "\u017D": "Zcaron", "\u017C": "zdot", "\u017B": "Zdot", "\u01B5": "imped", "\xFE": "thorn", "\xDE": "THORN", "\u0149": "napos", "\u03B1": "alpha", "\u0391": "Alpha", "\u03B2": "beta", "\u0392": "Beta", "\u03B3": "gamma", "\u0393": "Gamma", "\u03B4": "delta", "\u0394": "Delta", "\u03B5": "epsi", "\u03F5": "epsiv", "\u0395": "Epsilon", "\u03DD": "gammad", "\u03DC": "Gammad", "\u03B6": "zeta", "\u0396": "Zeta", "\u03B7": "eta", "\u0397": "Eta", "\u03B8": "theta", "\u03D1": "thetav", "\u0398": "Theta", "\u03B9": "iota", "\u0399": "Iota", "\u03BA": "kappa", "\u03F0": "kappav", "\u039A": "Kappa", "\u03BB": "lambda", "\u039B": "Lambda", "\u03BC": "mu", "\xB5": "micro", "\u039C": "Mu", "\u03BD": "nu", "\u039D": "Nu", "\u03BE": "xi", "\u039E": "Xi", "\u03BF": "omicron", "\u039F": "Omicron", "\u03C0": "pi", "\u03D6": "piv", "\u03A0": "Pi", "\u03C1": "rho", "\u03F1": "rhov", "\u03A1": "Rho", "\u03C3": "sigma", "\u03A3": "Sigma", "\u03C2": "sigmaf", "\u03C4": "tau", "\u03A4": "Tau", "\u03C5": "upsi", "\u03A5": "Upsilon", "\u03D2": "Upsi", "\u03C6": "phi", "\u03D5": "phiv", "\u03A6": "Phi", "\u03C7": "chi", "\u03A7": "Chi", "\u03C8": "psi", "\u03A8": "Psi", "\u03C9": "omega", "\u03A9": "ohm", "\u0430": "acy", "\u0410": "Acy", "\u0431": "bcy", "\u0411": "Bcy", "\u0432": "vcy", "\u0412": "Vcy", "\u0433": "gcy", "\u0413": "Gcy", "\u0453": "gjcy", "\u0403": "GJcy", "\u0434": "dcy", "\u0414": "Dcy", "\u0452": "djcy", "\u0402": "DJcy", "\u0435": "iecy", "\u0415": "IEcy", "\u0451": "iocy", "\u0401": "IOcy", "\u0454": "jukcy", "\u0404": "Jukcy", "\u0436": "zhcy", "\u0416": "ZHcy", "\u0437": "zcy", "\u0417": "Zcy", "\u0455": "dscy", "\u0405": "DScy", "\u0438": "icy", "\u0418": "Icy", "\u0456": "iukcy", "\u0406": "Iukcy", "\u0457": "yicy", "\u0407": "YIcy", "\u0439": "jcy", "\u0419": "Jcy", "\u0458": "jsercy", "\u0408": "Jsercy", "\u043A": "kcy", "\u041A": "Kcy", "\u045C": "kjcy", "\u040C": "KJcy", "\u043B": "lcy", "\u041B": "Lcy", "\u0459": "ljcy", "\u0409": "LJcy", "\u043C": "mcy", "\u041C": "Mcy", "\u043D": "ncy", "\u041D": "Ncy", "\u045A": "njcy", "\u040A": "NJcy", "\u043E": "ocy", "\u041E": "Ocy", "\u043F": "pcy", "\u041F": "Pcy", "\u0440": "rcy", "\u0420": "Rcy", "\u0441": "scy", "\u0421": "Scy", "\u0442": "tcy", "\u0422": "Tcy", "\u045B": "tshcy", "\u040B": "TSHcy", "\u0443": "ucy", "\u0423": "Ucy", "\u045E": "ubrcy", "\u040E": "Ubrcy", "\u0444": "fcy", "\u0424": "Fcy", "\u0445": "khcy", "\u0425": "KHcy", "\u0446": "tscy", "\u0426": "TScy", "\u0447": "chcy", "\u0427": "CHcy", "\u045F": "dzcy", "\u040F": "DZcy", "\u0448": "shcy", "\u0428": "SHcy", "\u0449": "shchcy", "\u0429": "SHCHcy", "\u044A": "hardcy", "\u042A": "HARDcy", "\u044B": "ycy", "\u042B": "Ycy", "\u044C": "softcy", "\u042C": "SOFTcy", "\u044D": "ecy", "\u042D": "Ecy", "\u044E": "yucy", "\u042E": "YUcy", "\u044F": "yacy", "\u042F": "YAcy", "\u2135": "aleph", "\u2136": "beth", "\u2137": "gimel", "\u2138": "daleth" };
      var regexEscape = /["&'<>`]/g;
      var escapeMap = {
        '"': "&quot;",
        "&": "&amp;",
        "'": "&#x27;",
        "<": "&lt;",
        ">": "&gt;",
        "`": "&#x60;"
      };
      var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;
      var regexInvalidRawCodePoint = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
      var regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;
      var decodeMap = { "aacute": "\xE1", "Aacute": "\xC1", "abreve": "\u0103", "Abreve": "\u0102", "ac": "\u223E", "acd": "\u223F", "acE": "\u223E\u0333", "acirc": "\xE2", "Acirc": "\xC2", "acute": "\xB4", "acy": "\u0430", "Acy": "\u0410", "aelig": "\xE6", "AElig": "\xC6", "af": "\u2061", "afr": "\u{1D51E}", "Afr": "\u{1D504}", "agrave": "\xE0", "Agrave": "\xC0", "alefsym": "\u2135", "aleph": "\u2135", "alpha": "\u03B1", "Alpha": "\u0391", "amacr": "\u0101", "Amacr": "\u0100", "amalg": "\u2A3F", "amp": "&", "AMP": "&", "and": "\u2227", "And": "\u2A53", "andand": "\u2A55", "andd": "\u2A5C", "andslope": "\u2A58", "andv": "\u2A5A", "ang": "\u2220", "ange": "\u29A4", "angle": "\u2220", "angmsd": "\u2221", "angmsdaa": "\u29A8", "angmsdab": "\u29A9", "angmsdac": "\u29AA", "angmsdad": "\u29AB", "angmsdae": "\u29AC", "angmsdaf": "\u29AD", "angmsdag": "\u29AE", "angmsdah": "\u29AF", "angrt": "\u221F", "angrtvb": "\u22BE", "angrtvbd": "\u299D", "angsph": "\u2222", "angst": "\xC5", "angzarr": "\u237C", "aogon": "\u0105", "Aogon": "\u0104", "aopf": "\u{1D552}", "Aopf": "\u{1D538}", "ap": "\u2248", "apacir": "\u2A6F", "ape": "\u224A", "apE": "\u2A70", "apid": "\u224B", "apos": "'", "ApplyFunction": "\u2061", "approx": "\u2248", "approxeq": "\u224A", "aring": "\xE5", "Aring": "\xC5", "ascr": "\u{1D4B6}", "Ascr": "\u{1D49C}", "Assign": "\u2254", "ast": "*", "asymp": "\u2248", "asympeq": "\u224D", "atilde": "\xE3", "Atilde": "\xC3", "auml": "\xE4", "Auml": "\xC4", "awconint": "\u2233", "awint": "\u2A11", "backcong": "\u224C", "backepsilon": "\u03F6", "backprime": "\u2035", "backsim": "\u223D", "backsimeq": "\u22CD", "Backslash": "\u2216", "Barv": "\u2AE7", "barvee": "\u22BD", "barwed": "\u2305", "Barwed": "\u2306", "barwedge": "\u2305", "bbrk": "\u23B5", "bbrktbrk": "\u23B6", "bcong": "\u224C", "bcy": "\u0431", "Bcy": "\u0411", "bdquo": "\u201E", "becaus": "\u2235", "because": "\u2235", "Because": "\u2235", "bemptyv": "\u29B0", "bepsi": "\u03F6", "bernou": "\u212C", "Bernoullis": "\u212C", "beta": "\u03B2", "Beta": "\u0392", "beth": "\u2136", "between": "\u226C", "bfr": "\u{1D51F}", "Bfr": "\u{1D505}", "bigcap": "\u22C2", "bigcirc": "\u25EF", "bigcup": "\u22C3", "bigodot": "\u2A00", "bigoplus": "\u2A01", "bigotimes": "\u2A02", "bigsqcup": "\u2A06", "bigstar": "\u2605", "bigtriangledown": "\u25BD", "bigtriangleup": "\u25B3", "biguplus": "\u2A04", "bigvee": "\u22C1", "bigwedge": "\u22C0", "bkarow": "\u290D", "blacklozenge": "\u29EB", "blacksquare": "\u25AA", "blacktriangle": "\u25B4", "blacktriangledown": "\u25BE", "blacktriangleleft": "\u25C2", "blacktriangleright": "\u25B8", "blank": "\u2423", "blk12": "\u2592", "blk14": "\u2591", "blk34": "\u2593", "block": "\u2588", "bne": "=\u20E5", "bnequiv": "\u2261\u20E5", "bnot": "\u2310", "bNot": "\u2AED", "bopf": "\u{1D553}", "Bopf": "\u{1D539}", "bot": "\u22A5", "bottom": "\u22A5", "bowtie": "\u22C8", "boxbox": "\u29C9", "boxdl": "\u2510", "boxdL": "\u2555", "boxDl": "\u2556", "boxDL": "\u2557", "boxdr": "\u250C", "boxdR": "\u2552", "boxDr": "\u2553", "boxDR": "\u2554", "boxh": "\u2500", "boxH": "\u2550", "boxhd": "\u252C", "boxhD": "\u2565", "boxHd": "\u2564", "boxHD": "\u2566", "boxhu": "\u2534", "boxhU": "\u2568", "boxHu": "\u2567", "boxHU": "\u2569", "boxminus": "\u229F", "boxplus": "\u229E", "boxtimes": "\u22A0", "boxul": "\u2518", "boxuL": "\u255B", "boxUl": "\u255C", "boxUL": "\u255D", "boxur": "\u2514", "boxuR": "\u2558", "boxUr": "\u2559", "boxUR": "\u255A", "boxv": "\u2502", "boxV": "\u2551", "boxvh": "\u253C", "boxvH": "\u256A", "boxVh": "\u256B", "boxVH": "\u256C", "boxvl": "\u2524", "boxvL": "\u2561", "boxVl": "\u2562", "boxVL": "\u2563", "boxvr": "\u251C", "boxvR": "\u255E", "boxVr": "\u255F", "boxVR": "\u2560", "bprime": "\u2035", "breve": "\u02D8", "Breve": "\u02D8", "brvbar": "\xA6", "bscr": "\u{1D4B7}", "Bscr": "\u212C", "bsemi": "\u204F", "bsim": "\u223D", "bsime": "\u22CD", "bsol": "\\", "bsolb": "\u29C5", "bsolhsub": "\u27C8", "bull": "\u2022", "bullet": "\u2022", "bump": "\u224E", "bumpe": "\u224F", "bumpE": "\u2AAE", "bumpeq": "\u224F", "Bumpeq": "\u224E", "cacute": "\u0107", "Cacute": "\u0106", "cap": "\u2229", "Cap": "\u22D2", "capand": "\u2A44", "capbrcup": "\u2A49", "capcap": "\u2A4B", "capcup": "\u2A47", "capdot": "\u2A40", "CapitalDifferentialD": "\u2145", "caps": "\u2229\uFE00", "caret": "\u2041", "caron": "\u02C7", "Cayleys": "\u212D", "ccaps": "\u2A4D", "ccaron": "\u010D", "Ccaron": "\u010C", "ccedil": "\xE7", "Ccedil": "\xC7", "ccirc": "\u0109", "Ccirc": "\u0108", "Cconint": "\u2230", "ccups": "\u2A4C", "ccupssm": "\u2A50", "cdot": "\u010B", "Cdot": "\u010A", "cedil": "\xB8", "Cedilla": "\xB8", "cemptyv": "\u29B2", "cent": "\xA2", "centerdot": "\xB7", "CenterDot": "\xB7", "cfr": "\u{1D520}", "Cfr": "\u212D", "chcy": "\u0447", "CHcy": "\u0427", "check": "\u2713", "checkmark": "\u2713", "chi": "\u03C7", "Chi": "\u03A7", "cir": "\u25CB", "circ": "\u02C6", "circeq": "\u2257", "circlearrowleft": "\u21BA", "circlearrowright": "\u21BB", "circledast": "\u229B", "circledcirc": "\u229A", "circleddash": "\u229D", "CircleDot": "\u2299", "circledR": "\xAE", "circledS": "\u24C8", "CircleMinus": "\u2296", "CirclePlus": "\u2295", "CircleTimes": "\u2297", "cire": "\u2257", "cirE": "\u29C3", "cirfnint": "\u2A10", "cirmid": "\u2AEF", "cirscir": "\u29C2", "ClockwiseContourIntegral": "\u2232", "CloseCurlyDoubleQuote": "\u201D", "CloseCurlyQuote": "\u2019", "clubs": "\u2663", "clubsuit": "\u2663", "colon": ":", "Colon": "\u2237", "colone": "\u2254", "Colone": "\u2A74", "coloneq": "\u2254", "comma": ",", "commat": "@", "comp": "\u2201", "compfn": "\u2218", "complement": "\u2201", "complexes": "\u2102", "cong": "\u2245", "congdot": "\u2A6D", "Congruent": "\u2261", "conint": "\u222E", "Conint": "\u222F", "ContourIntegral": "\u222E", "copf": "\u{1D554}", "Copf": "\u2102", "coprod": "\u2210", "Coproduct": "\u2210", "copy": "\xA9", "COPY": "\xA9", "copysr": "\u2117", "CounterClockwiseContourIntegral": "\u2233", "crarr": "\u21B5", "cross": "\u2717", "Cross": "\u2A2F", "cscr": "\u{1D4B8}", "Cscr": "\u{1D49E}", "csub": "\u2ACF", "csube": "\u2AD1", "csup": "\u2AD0", "csupe": "\u2AD2", "ctdot": "\u22EF", "cudarrl": "\u2938", "cudarrr": "\u2935", "cuepr": "\u22DE", "cuesc": "\u22DF", "cularr": "\u21B6", "cularrp": "\u293D", "cup": "\u222A", "Cup": "\u22D3", "cupbrcap": "\u2A48", "cupcap": "\u2A46", "CupCap": "\u224D", "cupcup": "\u2A4A", "cupdot": "\u228D", "cupor": "\u2A45", "cups": "\u222A\uFE00", "curarr": "\u21B7", "curarrm": "\u293C", "curlyeqprec": "\u22DE", "curlyeqsucc": "\u22DF", "curlyvee": "\u22CE", "curlywedge": "\u22CF", "curren": "\xA4", "curvearrowleft": "\u21B6", "curvearrowright": "\u21B7", "cuvee": "\u22CE", "cuwed": "\u22CF", "cwconint": "\u2232", "cwint": "\u2231", "cylcty": "\u232D", "dagger": "\u2020", "Dagger": "\u2021", "daleth": "\u2138", "darr": "\u2193", "dArr": "\u21D3", "Darr": "\u21A1", "dash": "\u2010", "dashv": "\u22A3", "Dashv": "\u2AE4", "dbkarow": "\u290F", "dblac": "\u02DD", "dcaron": "\u010F", "Dcaron": "\u010E", "dcy": "\u0434", "Dcy": "\u0414", "dd": "\u2146", "DD": "\u2145", "ddagger": "\u2021", "ddarr": "\u21CA", "DDotrahd": "\u2911", "ddotseq": "\u2A77", "deg": "\xB0", "Del": "\u2207", "delta": "\u03B4", "Delta": "\u0394", "demptyv": "\u29B1", "dfisht": "\u297F", "dfr": "\u{1D521}", "Dfr": "\u{1D507}", "dHar": "\u2965", "dharl": "\u21C3", "dharr": "\u21C2", "DiacriticalAcute": "\xB4", "DiacriticalDot": "\u02D9", "DiacriticalDoubleAcute": "\u02DD", "DiacriticalGrave": "`", "DiacriticalTilde": "\u02DC", "diam": "\u22C4", "diamond": "\u22C4", "Diamond": "\u22C4", "diamondsuit": "\u2666", "diams": "\u2666", "die": "\xA8", "DifferentialD": "\u2146", "digamma": "\u03DD", "disin": "\u22F2", "div": "\xF7", "divide": "\xF7", "divideontimes": "\u22C7", "divonx": "\u22C7", "djcy": "\u0452", "DJcy": "\u0402", "dlcorn": "\u231E", "dlcrop": "\u230D", "dollar": "$", "dopf": "\u{1D555}", "Dopf": "\u{1D53B}", "dot": "\u02D9", "Dot": "\xA8", "DotDot": "\u20DC", "doteq": "\u2250", "doteqdot": "\u2251", "DotEqual": "\u2250", "dotminus": "\u2238", "dotplus": "\u2214", "dotsquare": "\u22A1", "doublebarwedge": "\u2306", "DoubleContourIntegral": "\u222F", "DoubleDot": "\xA8", "DoubleDownArrow": "\u21D3", "DoubleLeftArrow": "\u21D0", "DoubleLeftRightArrow": "\u21D4", "DoubleLeftTee": "\u2AE4", "DoubleLongLeftArrow": "\u27F8", "DoubleLongLeftRightArrow": "\u27FA", "DoubleLongRightArrow": "\u27F9", "DoubleRightArrow": "\u21D2", "DoubleRightTee": "\u22A8", "DoubleUpArrow": "\u21D1", "DoubleUpDownArrow": "\u21D5", "DoubleVerticalBar": "\u2225", "downarrow": "\u2193", "Downarrow": "\u21D3", "DownArrow": "\u2193", "DownArrowBar": "\u2913", "DownArrowUpArrow": "\u21F5", "DownBreve": "\u0311", "downdownarrows": "\u21CA", "downharpoonleft": "\u21C3", "downharpoonright": "\u21C2", "DownLeftRightVector": "\u2950", "DownLeftTeeVector": "\u295E", "DownLeftVector": "\u21BD", "DownLeftVectorBar": "\u2956", "DownRightTeeVector": "\u295F", "DownRightVector": "\u21C1", "DownRightVectorBar": "\u2957", "DownTee": "\u22A4", "DownTeeArrow": "\u21A7", "drbkarow": "\u2910", "drcorn": "\u231F", "drcrop": "\u230C", "dscr": "\u{1D4B9}", "Dscr": "\u{1D49F}", "dscy": "\u0455", "DScy": "\u0405", "dsol": "\u29F6", "dstrok": "\u0111", "Dstrok": "\u0110", "dtdot": "\u22F1", "dtri": "\u25BF", "dtrif": "\u25BE", "duarr": "\u21F5", "duhar": "\u296F", "dwangle": "\u29A6", "dzcy": "\u045F", "DZcy": "\u040F", "dzigrarr": "\u27FF", "eacute": "\xE9", "Eacute": "\xC9", "easter": "\u2A6E", "ecaron": "\u011B", "Ecaron": "\u011A", "ecir": "\u2256", "ecirc": "\xEA", "Ecirc": "\xCA", "ecolon": "\u2255", "ecy": "\u044D", "Ecy": "\u042D", "eDDot": "\u2A77", "edot": "\u0117", "eDot": "\u2251", "Edot": "\u0116", "ee": "\u2147", "efDot": "\u2252", "efr": "\u{1D522}", "Efr": "\u{1D508}", "eg": "\u2A9A", "egrave": "\xE8", "Egrave": "\xC8", "egs": "\u2A96", "egsdot": "\u2A98", "el": "\u2A99", "Element": "\u2208", "elinters": "\u23E7", "ell": "\u2113", "els": "\u2A95", "elsdot": "\u2A97", "emacr": "\u0113", "Emacr": "\u0112", "empty": "\u2205", "emptyset": "\u2205", "EmptySmallSquare": "\u25FB", "emptyv": "\u2205", "EmptyVerySmallSquare": "\u25AB", "emsp": "\u2003", "emsp13": "\u2004", "emsp14": "\u2005", "eng": "\u014B", "ENG": "\u014A", "ensp": "\u2002", "eogon": "\u0119", "Eogon": "\u0118", "eopf": "\u{1D556}", "Eopf": "\u{1D53C}", "epar": "\u22D5", "eparsl": "\u29E3", "eplus": "\u2A71", "epsi": "\u03B5", "epsilon": "\u03B5", "Epsilon": "\u0395", "epsiv": "\u03F5", "eqcirc": "\u2256", "eqcolon": "\u2255", "eqsim": "\u2242", "eqslantgtr": "\u2A96", "eqslantless": "\u2A95", "Equal": "\u2A75", "equals": "=", "EqualTilde": "\u2242", "equest": "\u225F", "Equilibrium": "\u21CC", "equiv": "\u2261", "equivDD": "\u2A78", "eqvparsl": "\u29E5", "erarr": "\u2971", "erDot": "\u2253", "escr": "\u212F", "Escr": "\u2130", "esdot": "\u2250", "esim": "\u2242", "Esim": "\u2A73", "eta": "\u03B7", "Eta": "\u0397", "eth": "\xF0", "ETH": "\xD0", "euml": "\xEB", "Euml": "\xCB", "euro": "\u20AC", "excl": "!", "exist": "\u2203", "Exists": "\u2203", "expectation": "\u2130", "exponentiale": "\u2147", "ExponentialE": "\u2147", "fallingdotseq": "\u2252", "fcy": "\u0444", "Fcy": "\u0424", "female": "\u2640", "ffilig": "\uFB03", "fflig": "\uFB00", "ffllig": "\uFB04", "ffr": "\u{1D523}", "Ffr": "\u{1D509}", "filig": "\uFB01", "FilledSmallSquare": "\u25FC", "FilledVerySmallSquare": "\u25AA", "fjlig": "fj", "flat": "\u266D", "fllig": "\uFB02", "fltns": "\u25B1", "fnof": "\u0192", "fopf": "\u{1D557}", "Fopf": "\u{1D53D}", "forall": "\u2200", "ForAll": "\u2200", "fork": "\u22D4", "forkv": "\u2AD9", "Fouriertrf": "\u2131", "fpartint": "\u2A0D", "frac12": "\xBD", "frac13": "\u2153", "frac14": "\xBC", "frac15": "\u2155", "frac16": "\u2159", "frac18": "\u215B", "frac23": "\u2154", "frac25": "\u2156", "frac34": "\xBE", "frac35": "\u2157", "frac38": "\u215C", "frac45": "\u2158", "frac56": "\u215A", "frac58": "\u215D", "frac78": "\u215E", "frasl": "\u2044", "frown": "\u2322", "fscr": "\u{1D4BB}", "Fscr": "\u2131", "gacute": "\u01F5", "gamma": "\u03B3", "Gamma": "\u0393", "gammad": "\u03DD", "Gammad": "\u03DC", "gap": "\u2A86", "gbreve": "\u011F", "Gbreve": "\u011E", "Gcedil": "\u0122", "gcirc": "\u011D", "Gcirc": "\u011C", "gcy": "\u0433", "Gcy": "\u0413", "gdot": "\u0121", "Gdot": "\u0120", "ge": "\u2265", "gE": "\u2267", "gel": "\u22DB", "gEl": "\u2A8C", "geq": "\u2265", "geqq": "\u2267", "geqslant": "\u2A7E", "ges": "\u2A7E", "gescc": "\u2AA9", "gesdot": "\u2A80", "gesdoto": "\u2A82", "gesdotol": "\u2A84", "gesl": "\u22DB\uFE00", "gesles": "\u2A94", "gfr": "\u{1D524}", "Gfr": "\u{1D50A}", "gg": "\u226B", "Gg": "\u22D9", "ggg": "\u22D9", "gimel": "\u2137", "gjcy": "\u0453", "GJcy": "\u0403", "gl": "\u2277", "gla": "\u2AA5", "glE": "\u2A92", "glj": "\u2AA4", "gnap": "\u2A8A", "gnapprox": "\u2A8A", "gne": "\u2A88", "gnE": "\u2269", "gneq": "\u2A88", "gneqq": "\u2269", "gnsim": "\u22E7", "gopf": "\u{1D558}", "Gopf": "\u{1D53E}", "grave": "`", "GreaterEqual": "\u2265", "GreaterEqualLess": "\u22DB", "GreaterFullEqual": "\u2267", "GreaterGreater": "\u2AA2", "GreaterLess": "\u2277", "GreaterSlantEqual": "\u2A7E", "GreaterTilde": "\u2273", "gscr": "\u210A", "Gscr": "\u{1D4A2}", "gsim": "\u2273", "gsime": "\u2A8E", "gsiml": "\u2A90", "gt": ">", "Gt": "\u226B", "GT": ">", "gtcc": "\u2AA7", "gtcir": "\u2A7A", "gtdot": "\u22D7", "gtlPar": "\u2995", "gtquest": "\u2A7C", "gtrapprox": "\u2A86", "gtrarr": "\u2978", "gtrdot": "\u22D7", "gtreqless": "\u22DB", "gtreqqless": "\u2A8C", "gtrless": "\u2277", "gtrsim": "\u2273", "gvertneqq": "\u2269\uFE00", "gvnE": "\u2269\uFE00", "Hacek": "\u02C7", "hairsp": "\u200A", "half": "\xBD", "hamilt": "\u210B", "hardcy": "\u044A", "HARDcy": "\u042A", "harr": "\u2194", "hArr": "\u21D4", "harrcir": "\u2948", "harrw": "\u21AD", "Hat": "^", "hbar": "\u210F", "hcirc": "\u0125", "Hcirc": "\u0124", "hearts": "\u2665", "heartsuit": "\u2665", "hellip": "\u2026", "hercon": "\u22B9", "hfr": "\u{1D525}", "Hfr": "\u210C", "HilbertSpace": "\u210B", "hksearow": "\u2925", "hkswarow": "\u2926", "hoarr": "\u21FF", "homtht": "\u223B", "hookleftarrow": "\u21A9", "hookrightarrow": "\u21AA", "hopf": "\u{1D559}", "Hopf": "\u210D", "horbar": "\u2015", "HorizontalLine": "\u2500", "hscr": "\u{1D4BD}", "Hscr": "\u210B", "hslash": "\u210F", "hstrok": "\u0127", "Hstrok": "\u0126", "HumpDownHump": "\u224E", "HumpEqual": "\u224F", "hybull": "\u2043", "hyphen": "\u2010", "iacute": "\xED", "Iacute": "\xCD", "ic": "\u2063", "icirc": "\xEE", "Icirc": "\xCE", "icy": "\u0438", "Icy": "\u0418", "Idot": "\u0130", "iecy": "\u0435", "IEcy": "\u0415", "iexcl": "\xA1", "iff": "\u21D4", "ifr": "\u{1D526}", "Ifr": "\u2111", "igrave": "\xEC", "Igrave": "\xCC", "ii": "\u2148", "iiiint": "\u2A0C", "iiint": "\u222D", "iinfin": "\u29DC", "iiota": "\u2129", "ijlig": "\u0133", "IJlig": "\u0132", "Im": "\u2111", "imacr": "\u012B", "Imacr": "\u012A", "image": "\u2111", "ImaginaryI": "\u2148", "imagline": "\u2110", "imagpart": "\u2111", "imath": "\u0131", "imof": "\u22B7", "imped": "\u01B5", "Implies": "\u21D2", "in": "\u2208", "incare": "\u2105", "infin": "\u221E", "infintie": "\u29DD", "inodot": "\u0131", "int": "\u222B", "Int": "\u222C", "intcal": "\u22BA", "integers": "\u2124", "Integral": "\u222B", "intercal": "\u22BA", "Intersection": "\u22C2", "intlarhk": "\u2A17", "intprod": "\u2A3C", "InvisibleComma": "\u2063", "InvisibleTimes": "\u2062", "iocy": "\u0451", "IOcy": "\u0401", "iogon": "\u012F", "Iogon": "\u012E", "iopf": "\u{1D55A}", "Iopf": "\u{1D540}", "iota": "\u03B9", "Iota": "\u0399", "iprod": "\u2A3C", "iquest": "\xBF", "iscr": "\u{1D4BE}", "Iscr": "\u2110", "isin": "\u2208", "isindot": "\u22F5", "isinE": "\u22F9", "isins": "\u22F4", "isinsv": "\u22F3", "isinv": "\u2208", "it": "\u2062", "itilde": "\u0129", "Itilde": "\u0128", "iukcy": "\u0456", "Iukcy": "\u0406", "iuml": "\xEF", "Iuml": "\xCF", "jcirc": "\u0135", "Jcirc": "\u0134", "jcy": "\u0439", "Jcy": "\u0419", "jfr": "\u{1D527}", "Jfr": "\u{1D50D}", "jmath": "\u0237", "jopf": "\u{1D55B}", "Jopf": "\u{1D541}", "jscr": "\u{1D4BF}", "Jscr": "\u{1D4A5}", "jsercy": "\u0458", "Jsercy": "\u0408", "jukcy": "\u0454", "Jukcy": "\u0404", "kappa": "\u03BA", "Kappa": "\u039A", "kappav": "\u03F0", "kcedil": "\u0137", "Kcedil": "\u0136", "kcy": "\u043A", "Kcy": "\u041A", "kfr": "\u{1D528}", "Kfr": "\u{1D50E}", "kgreen": "\u0138", "khcy": "\u0445", "KHcy": "\u0425", "kjcy": "\u045C", "KJcy": "\u040C", "kopf": "\u{1D55C}", "Kopf": "\u{1D542}", "kscr": "\u{1D4C0}", "Kscr": "\u{1D4A6}", "lAarr": "\u21DA", "lacute": "\u013A", "Lacute": "\u0139", "laemptyv": "\u29B4", "lagran": "\u2112", "lambda": "\u03BB", "Lambda": "\u039B", "lang": "\u27E8", "Lang": "\u27EA", "langd": "\u2991", "langle": "\u27E8", "lap": "\u2A85", "Laplacetrf": "\u2112", "laquo": "\xAB", "larr": "\u2190", "lArr": "\u21D0", "Larr": "\u219E", "larrb": "\u21E4", "larrbfs": "\u291F", "larrfs": "\u291D", "larrhk": "\u21A9", "larrlp": "\u21AB", "larrpl": "\u2939", "larrsim": "\u2973", "larrtl": "\u21A2", "lat": "\u2AAB", "latail": "\u2919", "lAtail": "\u291B", "late": "\u2AAD", "lates": "\u2AAD\uFE00", "lbarr": "\u290C", "lBarr": "\u290E", "lbbrk": "\u2772", "lbrace": "{", "lbrack": "[", "lbrke": "\u298B", "lbrksld": "\u298F", "lbrkslu": "\u298D", "lcaron": "\u013E", "Lcaron": "\u013D", "lcedil": "\u013C", "Lcedil": "\u013B", "lceil": "\u2308", "lcub": "{", "lcy": "\u043B", "Lcy": "\u041B", "ldca": "\u2936", "ldquo": "\u201C", "ldquor": "\u201E", "ldrdhar": "\u2967", "ldrushar": "\u294B", "ldsh": "\u21B2", "le": "\u2264", "lE": "\u2266", "LeftAngleBracket": "\u27E8", "leftarrow": "\u2190", "Leftarrow": "\u21D0", "LeftArrow": "\u2190", "LeftArrowBar": "\u21E4", "LeftArrowRightArrow": "\u21C6", "leftarrowtail": "\u21A2", "LeftCeiling": "\u2308", "LeftDoubleBracket": "\u27E6", "LeftDownTeeVector": "\u2961", "LeftDownVector": "\u21C3", "LeftDownVectorBar": "\u2959", "LeftFloor": "\u230A", "leftharpoondown": "\u21BD", "leftharpoonup": "\u21BC", "leftleftarrows": "\u21C7", "leftrightarrow": "\u2194", "Leftrightarrow": "\u21D4", "LeftRightArrow": "\u2194", "leftrightarrows": "\u21C6", "leftrightharpoons": "\u21CB", "leftrightsquigarrow": "\u21AD", "LeftRightVector": "\u294E", "LeftTee": "\u22A3", "LeftTeeArrow": "\u21A4", "LeftTeeVector": "\u295A", "leftthreetimes": "\u22CB", "LeftTriangle": "\u22B2", "LeftTriangleBar": "\u29CF", "LeftTriangleEqual": "\u22B4", "LeftUpDownVector": "\u2951", "LeftUpTeeVector": "\u2960", "LeftUpVector": "\u21BF", "LeftUpVectorBar": "\u2958", "LeftVector": "\u21BC", "LeftVectorBar": "\u2952", "leg": "\u22DA", "lEg": "\u2A8B", "leq": "\u2264", "leqq": "\u2266", "leqslant": "\u2A7D", "les": "\u2A7D", "lescc": "\u2AA8", "lesdot": "\u2A7F", "lesdoto": "\u2A81", "lesdotor": "\u2A83", "lesg": "\u22DA\uFE00", "lesges": "\u2A93", "lessapprox": "\u2A85", "lessdot": "\u22D6", "lesseqgtr": "\u22DA", "lesseqqgtr": "\u2A8B", "LessEqualGreater": "\u22DA", "LessFullEqual": "\u2266", "LessGreater": "\u2276", "lessgtr": "\u2276", "LessLess": "\u2AA1", "lesssim": "\u2272", "LessSlantEqual": "\u2A7D", "LessTilde": "\u2272", "lfisht": "\u297C", "lfloor": "\u230A", "lfr": "\u{1D529}", "Lfr": "\u{1D50F}", "lg": "\u2276", "lgE": "\u2A91", "lHar": "\u2962", "lhard": "\u21BD", "lharu": "\u21BC", "lharul": "\u296A", "lhblk": "\u2584", "ljcy": "\u0459", "LJcy": "\u0409", "ll": "\u226A", "Ll": "\u22D8", "llarr": "\u21C7", "llcorner": "\u231E", "Lleftarrow": "\u21DA", "llhard": "\u296B", "lltri": "\u25FA", "lmidot": "\u0140", "Lmidot": "\u013F", "lmoust": "\u23B0", "lmoustache": "\u23B0", "lnap": "\u2A89", "lnapprox": "\u2A89", "lne": "\u2A87", "lnE": "\u2268", "lneq": "\u2A87", "lneqq": "\u2268", "lnsim": "\u22E6", "loang": "\u27EC", "loarr": "\u21FD", "lobrk": "\u27E6", "longleftarrow": "\u27F5", "Longleftarrow": "\u27F8", "LongLeftArrow": "\u27F5", "longleftrightarrow": "\u27F7", "Longleftrightarrow": "\u27FA", "LongLeftRightArrow": "\u27F7", "longmapsto": "\u27FC", "longrightarrow": "\u27F6", "Longrightarrow": "\u27F9", "LongRightArrow": "\u27F6", "looparrowleft": "\u21AB", "looparrowright": "\u21AC", "lopar": "\u2985", "lopf": "\u{1D55D}", "Lopf": "\u{1D543}", "loplus": "\u2A2D", "lotimes": "\u2A34", "lowast": "\u2217", "lowbar": "_", "LowerLeftArrow": "\u2199", "LowerRightArrow": "\u2198", "loz": "\u25CA", "lozenge": "\u25CA", "lozf": "\u29EB", "lpar": "(", "lparlt": "\u2993", "lrarr": "\u21C6", "lrcorner": "\u231F", "lrhar": "\u21CB", "lrhard": "\u296D", "lrm": "\u200E", "lrtri": "\u22BF", "lsaquo": "\u2039", "lscr": "\u{1D4C1}", "Lscr": "\u2112", "lsh": "\u21B0", "Lsh": "\u21B0", "lsim": "\u2272", "lsime": "\u2A8D", "lsimg": "\u2A8F", "lsqb": "[", "lsquo": "\u2018", "lsquor": "\u201A", "lstrok": "\u0142", "Lstrok": "\u0141", "lt": "<", "Lt": "\u226A", "LT": "<", "ltcc": "\u2AA6", "ltcir": "\u2A79", "ltdot": "\u22D6", "lthree": "\u22CB", "ltimes": "\u22C9", "ltlarr": "\u2976", "ltquest": "\u2A7B", "ltri": "\u25C3", "ltrie": "\u22B4", "ltrif": "\u25C2", "ltrPar": "\u2996", "lurdshar": "\u294A", "luruhar": "\u2966", "lvertneqq": "\u2268\uFE00", "lvnE": "\u2268\uFE00", "macr": "\xAF", "male": "\u2642", "malt": "\u2720", "maltese": "\u2720", "map": "\u21A6", "Map": "\u2905", "mapsto": "\u21A6", "mapstodown": "\u21A7", "mapstoleft": "\u21A4", "mapstoup": "\u21A5", "marker": "\u25AE", "mcomma": "\u2A29", "mcy": "\u043C", "Mcy": "\u041C", "mdash": "\u2014", "mDDot": "\u223A", "measuredangle": "\u2221", "MediumSpace": "\u205F", "Mellintrf": "\u2133", "mfr": "\u{1D52A}", "Mfr": "\u{1D510}", "mho": "\u2127", "micro": "\xB5", "mid": "\u2223", "midast": "*", "midcir": "\u2AF0", "middot": "\xB7", "minus": "\u2212", "minusb": "\u229F", "minusd": "\u2238", "minusdu": "\u2A2A", "MinusPlus": "\u2213", "mlcp": "\u2ADB", "mldr": "\u2026", "mnplus": "\u2213", "models": "\u22A7", "mopf": "\u{1D55E}", "Mopf": "\u{1D544}", "mp": "\u2213", "mscr": "\u{1D4C2}", "Mscr": "\u2133", "mstpos": "\u223E", "mu": "\u03BC", "Mu": "\u039C", "multimap": "\u22B8", "mumap": "\u22B8", "nabla": "\u2207", "nacute": "\u0144", "Nacute": "\u0143", "nang": "\u2220\u20D2", "nap": "\u2249", "napE": "\u2A70\u0338", "napid": "\u224B\u0338", "napos": "\u0149", "napprox": "\u2249", "natur": "\u266E", "natural": "\u266E", "naturals": "\u2115", "nbsp": "\xA0", "nbump": "\u224E\u0338", "nbumpe": "\u224F\u0338", "ncap": "\u2A43", "ncaron": "\u0148", "Ncaron": "\u0147", "ncedil": "\u0146", "Ncedil": "\u0145", "ncong": "\u2247", "ncongdot": "\u2A6D\u0338", "ncup": "\u2A42", "ncy": "\u043D", "Ncy": "\u041D", "ndash": "\u2013", "ne": "\u2260", "nearhk": "\u2924", "nearr": "\u2197", "neArr": "\u21D7", "nearrow": "\u2197", "nedot": "\u2250\u0338", "NegativeMediumSpace": "\u200B", "NegativeThickSpace": "\u200B", "NegativeThinSpace": "\u200B", "NegativeVeryThinSpace": "\u200B", "nequiv": "\u2262", "nesear": "\u2928", "nesim": "\u2242\u0338", "NestedGreaterGreater": "\u226B", "NestedLessLess": "\u226A", "NewLine": "\n", "nexist": "\u2204", "nexists": "\u2204", "nfr": "\u{1D52B}", "Nfr": "\u{1D511}", "nge": "\u2271", "ngE": "\u2267\u0338", "ngeq": "\u2271", "ngeqq": "\u2267\u0338", "ngeqslant": "\u2A7E\u0338", "nges": "\u2A7E\u0338", "nGg": "\u22D9\u0338", "ngsim": "\u2275", "ngt": "\u226F", "nGt": "\u226B\u20D2", "ngtr": "\u226F", "nGtv": "\u226B\u0338", "nharr": "\u21AE", "nhArr": "\u21CE", "nhpar": "\u2AF2", "ni": "\u220B", "nis": "\u22FC", "nisd": "\u22FA", "niv": "\u220B", "njcy": "\u045A", "NJcy": "\u040A", "nlarr": "\u219A", "nlArr": "\u21CD", "nldr": "\u2025", "nle": "\u2270", "nlE": "\u2266\u0338", "nleftarrow": "\u219A", "nLeftarrow": "\u21CD", "nleftrightarrow": "\u21AE", "nLeftrightarrow": "\u21CE", "nleq": "\u2270", "nleqq": "\u2266\u0338", "nleqslant": "\u2A7D\u0338", "nles": "\u2A7D\u0338", "nless": "\u226E", "nLl": "\u22D8\u0338", "nlsim": "\u2274", "nlt": "\u226E", "nLt": "\u226A\u20D2", "nltri": "\u22EA", "nltrie": "\u22EC", "nLtv": "\u226A\u0338", "nmid": "\u2224", "NoBreak": "\u2060", "NonBreakingSpace": "\xA0", "nopf": "\u{1D55F}", "Nopf": "\u2115", "not": "\xAC", "Not": "\u2AEC", "NotCongruent": "\u2262", "NotCupCap": "\u226D", "NotDoubleVerticalBar": "\u2226", "NotElement": "\u2209", "NotEqual": "\u2260", "NotEqualTilde": "\u2242\u0338", "NotExists": "\u2204", "NotGreater": "\u226F", "NotGreaterEqual": "\u2271", "NotGreaterFullEqual": "\u2267\u0338", "NotGreaterGreater": "\u226B\u0338", "NotGreaterLess": "\u2279", "NotGreaterSlantEqual": "\u2A7E\u0338", "NotGreaterTilde": "\u2275", "NotHumpDownHump": "\u224E\u0338", "NotHumpEqual": "\u224F\u0338", "notin": "\u2209", "notindot": "\u22F5\u0338", "notinE": "\u22F9\u0338", "notinva": "\u2209", "notinvb": "\u22F7", "notinvc": "\u22F6", "NotLeftTriangle": "\u22EA", "NotLeftTriangleBar": "\u29CF\u0338", "NotLeftTriangleEqual": "\u22EC", "NotLess": "\u226E", "NotLessEqual": "\u2270", "NotLessGreater": "\u2278", "NotLessLess": "\u226A\u0338", "NotLessSlantEqual": "\u2A7D\u0338", "NotLessTilde": "\u2274", "NotNestedGreaterGreater": "\u2AA2\u0338", "NotNestedLessLess": "\u2AA1\u0338", "notni": "\u220C", "notniva": "\u220C", "notnivb": "\u22FE", "notnivc": "\u22FD", "NotPrecedes": "\u2280", "NotPrecedesEqual": "\u2AAF\u0338", "NotPrecedesSlantEqual": "\u22E0", "NotReverseElement": "\u220C", "NotRightTriangle": "\u22EB", "NotRightTriangleBar": "\u29D0\u0338", "NotRightTriangleEqual": "\u22ED", "NotSquareSubset": "\u228F\u0338", "NotSquareSubsetEqual": "\u22E2", "NotSquareSuperset": "\u2290\u0338", "NotSquareSupersetEqual": "\u22E3", "NotSubset": "\u2282\u20D2", "NotSubsetEqual": "\u2288", "NotSucceeds": "\u2281", "NotSucceedsEqual": "\u2AB0\u0338", "NotSucceedsSlantEqual": "\u22E1", "NotSucceedsTilde": "\u227F\u0338", "NotSuperset": "\u2283\u20D2", "NotSupersetEqual": "\u2289", "NotTilde": "\u2241", "NotTildeEqual": "\u2244", "NotTildeFullEqual": "\u2247", "NotTildeTilde": "\u2249", "NotVerticalBar": "\u2224", "npar": "\u2226", "nparallel": "\u2226", "nparsl": "\u2AFD\u20E5", "npart": "\u2202\u0338", "npolint": "\u2A14", "npr": "\u2280", "nprcue": "\u22E0", "npre": "\u2AAF\u0338", "nprec": "\u2280", "npreceq": "\u2AAF\u0338", "nrarr": "\u219B", "nrArr": "\u21CF", "nrarrc": "\u2933\u0338", "nrarrw": "\u219D\u0338", "nrightarrow": "\u219B", "nRightarrow": "\u21CF", "nrtri": "\u22EB", "nrtrie": "\u22ED", "nsc": "\u2281", "nsccue": "\u22E1", "nsce": "\u2AB0\u0338", "nscr": "\u{1D4C3}", "Nscr": "\u{1D4A9}", "nshortmid": "\u2224", "nshortparallel": "\u2226", "nsim": "\u2241", "nsime": "\u2244", "nsimeq": "\u2244", "nsmid": "\u2224", "nspar": "\u2226", "nsqsube": "\u22E2", "nsqsupe": "\u22E3", "nsub": "\u2284", "nsube": "\u2288", "nsubE": "\u2AC5\u0338", "nsubset": "\u2282\u20D2", "nsubseteq": "\u2288", "nsubseteqq": "\u2AC5\u0338", "nsucc": "\u2281", "nsucceq": "\u2AB0\u0338", "nsup": "\u2285", "nsupe": "\u2289", "nsupE": "\u2AC6\u0338", "nsupset": "\u2283\u20D2", "nsupseteq": "\u2289", "nsupseteqq": "\u2AC6\u0338", "ntgl": "\u2279", "ntilde": "\xF1", "Ntilde": "\xD1", "ntlg": "\u2278", "ntriangleleft": "\u22EA", "ntrianglelefteq": "\u22EC", "ntriangleright": "\u22EB", "ntrianglerighteq": "\u22ED", "nu": "\u03BD", "Nu": "\u039D", "num": "#", "numero": "\u2116", "numsp": "\u2007", "nvap": "\u224D\u20D2", "nvdash": "\u22AC", "nvDash": "\u22AD", "nVdash": "\u22AE", "nVDash": "\u22AF", "nvge": "\u2265\u20D2", "nvgt": ">\u20D2", "nvHarr": "\u2904", "nvinfin": "\u29DE", "nvlArr": "\u2902", "nvle": "\u2264\u20D2", "nvlt": "<\u20D2", "nvltrie": "\u22B4\u20D2", "nvrArr": "\u2903", "nvrtrie": "\u22B5\u20D2", "nvsim": "\u223C\u20D2", "nwarhk": "\u2923", "nwarr": "\u2196", "nwArr": "\u21D6", "nwarrow": "\u2196", "nwnear": "\u2927", "oacute": "\xF3", "Oacute": "\xD3", "oast": "\u229B", "ocir": "\u229A", "ocirc": "\xF4", "Ocirc": "\xD4", "ocy": "\u043E", "Ocy": "\u041E", "odash": "\u229D", "odblac": "\u0151", "Odblac": "\u0150", "odiv": "\u2A38", "odot": "\u2299", "odsold": "\u29BC", "oelig": "\u0153", "OElig": "\u0152", "ofcir": "\u29BF", "ofr": "\u{1D52C}", "Ofr": "\u{1D512}", "ogon": "\u02DB", "ograve": "\xF2", "Ograve": "\xD2", "ogt": "\u29C1", "ohbar": "\u29B5", "ohm": "\u03A9", "oint": "\u222E", "olarr": "\u21BA", "olcir": "\u29BE", "olcross": "\u29BB", "oline": "\u203E", "olt": "\u29C0", "omacr": "\u014D", "Omacr": "\u014C", "omega": "\u03C9", "Omega": "\u03A9", "omicron": "\u03BF", "Omicron": "\u039F", "omid": "\u29B6", "ominus": "\u2296", "oopf": "\u{1D560}", "Oopf": "\u{1D546}", "opar": "\u29B7", "OpenCurlyDoubleQuote": "\u201C", "OpenCurlyQuote": "\u2018", "operp": "\u29B9", "oplus": "\u2295", "or": "\u2228", "Or": "\u2A54", "orarr": "\u21BB", "ord": "\u2A5D", "order": "\u2134", "orderof": "\u2134", "ordf": "\xAA", "ordm": "\xBA", "origof": "\u22B6", "oror": "\u2A56", "orslope": "\u2A57", "orv": "\u2A5B", "oS": "\u24C8", "oscr": "\u2134", "Oscr": "\u{1D4AA}", "oslash": "\xF8", "Oslash": "\xD8", "osol": "\u2298", "otilde": "\xF5", "Otilde": "\xD5", "otimes": "\u2297", "Otimes": "\u2A37", "otimesas": "\u2A36", "ouml": "\xF6", "Ouml": "\xD6", "ovbar": "\u233D", "OverBar": "\u203E", "OverBrace": "\u23DE", "OverBracket": "\u23B4", "OverParenthesis": "\u23DC", "par": "\u2225", "para": "\xB6", "parallel": "\u2225", "parsim": "\u2AF3", "parsl": "\u2AFD", "part": "\u2202", "PartialD": "\u2202", "pcy": "\u043F", "Pcy": "\u041F", "percnt": "%", "period": ".", "permil": "\u2030", "perp": "\u22A5", "pertenk": "\u2031", "pfr": "\u{1D52D}", "Pfr": "\u{1D513}", "phi": "\u03C6", "Phi": "\u03A6", "phiv": "\u03D5", "phmmat": "\u2133", "phone": "\u260E", "pi": "\u03C0", "Pi": "\u03A0", "pitchfork": "\u22D4", "piv": "\u03D6", "planck": "\u210F", "planckh": "\u210E", "plankv": "\u210F", "plus": "+", "plusacir": "\u2A23", "plusb": "\u229E", "pluscir": "\u2A22", "plusdo": "\u2214", "plusdu": "\u2A25", "pluse": "\u2A72", "PlusMinus": "\xB1", "plusmn": "\xB1", "plussim": "\u2A26", "plustwo": "\u2A27", "pm": "\xB1", "Poincareplane": "\u210C", "pointint": "\u2A15", "popf": "\u{1D561}", "Popf": "\u2119", "pound": "\xA3", "pr": "\u227A", "Pr": "\u2ABB", "prap": "\u2AB7", "prcue": "\u227C", "pre": "\u2AAF", "prE": "\u2AB3", "prec": "\u227A", "precapprox": "\u2AB7", "preccurlyeq": "\u227C", "Precedes": "\u227A", "PrecedesEqual": "\u2AAF", "PrecedesSlantEqual": "\u227C", "PrecedesTilde": "\u227E", "preceq": "\u2AAF", "precnapprox": "\u2AB9", "precneqq": "\u2AB5", "precnsim": "\u22E8", "precsim": "\u227E", "prime": "\u2032", "Prime": "\u2033", "primes": "\u2119", "prnap": "\u2AB9", "prnE": "\u2AB5", "prnsim": "\u22E8", "prod": "\u220F", "Product": "\u220F", "profalar": "\u232E", "profline": "\u2312", "profsurf": "\u2313", "prop": "\u221D", "Proportion": "\u2237", "Proportional": "\u221D", "propto": "\u221D", "prsim": "\u227E", "prurel": "\u22B0", "pscr": "\u{1D4C5}", "Pscr": "\u{1D4AB}", "psi": "\u03C8", "Psi": "\u03A8", "puncsp": "\u2008", "qfr": "\u{1D52E}", "Qfr": "\u{1D514}", "qint": "\u2A0C", "qopf": "\u{1D562}", "Qopf": "\u211A", "qprime": "\u2057", "qscr": "\u{1D4C6}", "Qscr": "\u{1D4AC}", "quaternions": "\u210D", "quatint": "\u2A16", "quest": "?", "questeq": "\u225F", "quot": '"', "QUOT": '"', "rAarr": "\u21DB", "race": "\u223D\u0331", "racute": "\u0155", "Racute": "\u0154", "radic": "\u221A", "raemptyv": "\u29B3", "rang": "\u27E9", "Rang": "\u27EB", "rangd": "\u2992", "range": "\u29A5", "rangle": "\u27E9", "raquo": "\xBB", "rarr": "\u2192", "rArr": "\u21D2", "Rarr": "\u21A0", "rarrap": "\u2975", "rarrb": "\u21E5", "rarrbfs": "\u2920", "rarrc": "\u2933", "rarrfs": "\u291E", "rarrhk": "\u21AA", "rarrlp": "\u21AC", "rarrpl": "\u2945", "rarrsim": "\u2974", "rarrtl": "\u21A3", "Rarrtl": "\u2916", "rarrw": "\u219D", "ratail": "\u291A", "rAtail": "\u291C", "ratio": "\u2236", "rationals": "\u211A", "rbarr": "\u290D", "rBarr": "\u290F", "RBarr": "\u2910", "rbbrk": "\u2773", "rbrace": "}", "rbrack": "]", "rbrke": "\u298C", "rbrksld": "\u298E", "rbrkslu": "\u2990", "rcaron": "\u0159", "Rcaron": "\u0158", "rcedil": "\u0157", "Rcedil": "\u0156", "rceil": "\u2309", "rcub": "}", "rcy": "\u0440", "Rcy": "\u0420", "rdca": "\u2937", "rdldhar": "\u2969", "rdquo": "\u201D", "rdquor": "\u201D", "rdsh": "\u21B3", "Re": "\u211C", "real": "\u211C", "realine": "\u211B", "realpart": "\u211C", "reals": "\u211D", "rect": "\u25AD", "reg": "\xAE", "REG": "\xAE", "ReverseElement": "\u220B", "ReverseEquilibrium": "\u21CB", "ReverseUpEquilibrium": "\u296F", "rfisht": "\u297D", "rfloor": "\u230B", "rfr": "\u{1D52F}", "Rfr": "\u211C", "rHar": "\u2964", "rhard": "\u21C1", "rharu": "\u21C0", "rharul": "\u296C", "rho": "\u03C1", "Rho": "\u03A1", "rhov": "\u03F1", "RightAngleBracket": "\u27E9", "rightarrow": "\u2192", "Rightarrow": "\u21D2", "RightArrow": "\u2192", "RightArrowBar": "\u21E5", "RightArrowLeftArrow": "\u21C4", "rightarrowtail": "\u21A3", "RightCeiling": "\u2309", "RightDoubleBracket": "\u27E7", "RightDownTeeVector": "\u295D", "RightDownVector": "\u21C2", "RightDownVectorBar": "\u2955", "RightFloor": "\u230B", "rightharpoondown": "\u21C1", "rightharpoonup": "\u21C0", "rightleftarrows": "\u21C4", "rightleftharpoons": "\u21CC", "rightrightarrows": "\u21C9", "rightsquigarrow": "\u219D", "RightTee": "\u22A2", "RightTeeArrow": "\u21A6", "RightTeeVector": "\u295B", "rightthreetimes": "\u22CC", "RightTriangle": "\u22B3", "RightTriangleBar": "\u29D0", "RightTriangleEqual": "\u22B5", "RightUpDownVector": "\u294F", "RightUpTeeVector": "\u295C", "RightUpVector": "\u21BE", "RightUpVectorBar": "\u2954", "RightVector": "\u21C0", "RightVectorBar": "\u2953", "ring": "\u02DA", "risingdotseq": "\u2253", "rlarr": "\u21C4", "rlhar": "\u21CC", "rlm": "\u200F", "rmoust": "\u23B1", "rmoustache": "\u23B1", "rnmid": "\u2AEE", "roang": "\u27ED", "roarr": "\u21FE", "robrk": "\u27E7", "ropar": "\u2986", "ropf": "\u{1D563}", "Ropf": "\u211D", "roplus": "\u2A2E", "rotimes": "\u2A35", "RoundImplies": "\u2970", "rpar": ")", "rpargt": "\u2994", "rppolint": "\u2A12", "rrarr": "\u21C9", "Rrightarrow": "\u21DB", "rsaquo": "\u203A", "rscr": "\u{1D4C7}", "Rscr": "\u211B", "rsh": "\u21B1", "Rsh": "\u21B1", "rsqb": "]", "rsquo": "\u2019", "rsquor": "\u2019", "rthree": "\u22CC", "rtimes": "\u22CA", "rtri": "\u25B9", "rtrie": "\u22B5", "rtrif": "\u25B8", "rtriltri": "\u29CE", "RuleDelayed": "\u29F4", "ruluhar": "\u2968", "rx": "\u211E", "sacute": "\u015B", "Sacute": "\u015A", "sbquo": "\u201A", "sc": "\u227B", "Sc": "\u2ABC", "scap": "\u2AB8", "scaron": "\u0161", "Scaron": "\u0160", "sccue": "\u227D", "sce": "\u2AB0", "scE": "\u2AB4", "scedil": "\u015F", "Scedil": "\u015E", "scirc": "\u015D", "Scirc": "\u015C", "scnap": "\u2ABA", "scnE": "\u2AB6", "scnsim": "\u22E9", "scpolint": "\u2A13", "scsim": "\u227F", "scy": "\u0441", "Scy": "\u0421", "sdot": "\u22C5", "sdotb": "\u22A1", "sdote": "\u2A66", "searhk": "\u2925", "searr": "\u2198", "seArr": "\u21D8", "searrow": "\u2198", "sect": "\xA7", "semi": ";", "seswar": "\u2929", "setminus": "\u2216", "setmn": "\u2216", "sext": "\u2736", "sfr": "\u{1D530}", "Sfr": "\u{1D516}", "sfrown": "\u2322", "sharp": "\u266F", "shchcy": "\u0449", "SHCHcy": "\u0429", "shcy": "\u0448", "SHcy": "\u0428", "ShortDownArrow": "\u2193", "ShortLeftArrow": "\u2190", "shortmid": "\u2223", "shortparallel": "\u2225", "ShortRightArrow": "\u2192", "ShortUpArrow": "\u2191", "shy": "\xAD", "sigma": "\u03C3", "Sigma": "\u03A3", "sigmaf": "\u03C2", "sigmav": "\u03C2", "sim": "\u223C", "simdot": "\u2A6A", "sime": "\u2243", "simeq": "\u2243", "simg": "\u2A9E", "simgE": "\u2AA0", "siml": "\u2A9D", "simlE": "\u2A9F", "simne": "\u2246", "simplus": "\u2A24", "simrarr": "\u2972", "slarr": "\u2190", "SmallCircle": "\u2218", "smallsetminus": "\u2216", "smashp": "\u2A33", "smeparsl": "\u29E4", "smid": "\u2223", "smile": "\u2323", "smt": "\u2AAA", "smte": "\u2AAC", "smtes": "\u2AAC\uFE00", "softcy": "\u044C", "SOFTcy": "\u042C", "sol": "/", "solb": "\u29C4", "solbar": "\u233F", "sopf": "\u{1D564}", "Sopf": "\u{1D54A}", "spades": "\u2660", "spadesuit": "\u2660", "spar": "\u2225", "sqcap": "\u2293", "sqcaps": "\u2293\uFE00", "sqcup": "\u2294", "sqcups": "\u2294\uFE00", "Sqrt": "\u221A", "sqsub": "\u228F", "sqsube": "\u2291", "sqsubset": "\u228F", "sqsubseteq": "\u2291", "sqsup": "\u2290", "sqsupe": "\u2292", "sqsupset": "\u2290", "sqsupseteq": "\u2292", "squ": "\u25A1", "square": "\u25A1", "Square": "\u25A1", "SquareIntersection": "\u2293", "SquareSubset": "\u228F", "SquareSubsetEqual": "\u2291", "SquareSuperset": "\u2290", "SquareSupersetEqual": "\u2292", "SquareUnion": "\u2294", "squarf": "\u25AA", "squf": "\u25AA", "srarr": "\u2192", "sscr": "\u{1D4C8}", "Sscr": "\u{1D4AE}", "ssetmn": "\u2216", "ssmile": "\u2323", "sstarf": "\u22C6", "star": "\u2606", "Star": "\u22C6", "starf": "\u2605", "straightepsilon": "\u03F5", "straightphi": "\u03D5", "strns": "\xAF", "sub": "\u2282", "Sub": "\u22D0", "subdot": "\u2ABD", "sube": "\u2286", "subE": "\u2AC5", "subedot": "\u2AC3", "submult": "\u2AC1", "subne": "\u228A", "subnE": "\u2ACB", "subplus": "\u2ABF", "subrarr": "\u2979", "subset": "\u2282", "Subset": "\u22D0", "subseteq": "\u2286", "subseteqq": "\u2AC5", "SubsetEqual": "\u2286", "subsetneq": "\u228A", "subsetneqq": "\u2ACB", "subsim": "\u2AC7", "subsub": "\u2AD5", "subsup": "\u2AD3", "succ": "\u227B", "succapprox": "\u2AB8", "succcurlyeq": "\u227D", "Succeeds": "\u227B", "SucceedsEqual": "\u2AB0", "SucceedsSlantEqual": "\u227D", "SucceedsTilde": "\u227F", "succeq": "\u2AB0", "succnapprox": "\u2ABA", "succneqq": "\u2AB6", "succnsim": "\u22E9", "succsim": "\u227F", "SuchThat": "\u220B", "sum": "\u2211", "Sum": "\u2211", "sung": "\u266A", "sup": "\u2283", "Sup": "\u22D1", "sup1": "\xB9", "sup2": "\xB2", "sup3": "\xB3", "supdot": "\u2ABE", "supdsub": "\u2AD8", "supe": "\u2287", "supE": "\u2AC6", "supedot": "\u2AC4", "Superset": "\u2283", "SupersetEqual": "\u2287", "suphsol": "\u27C9", "suphsub": "\u2AD7", "suplarr": "\u297B", "supmult": "\u2AC2", "supne": "\u228B", "supnE": "\u2ACC", "supplus": "\u2AC0", "supset": "\u2283", "Supset": "\u22D1", "supseteq": "\u2287", "supseteqq": "\u2AC6", "supsetneq": "\u228B", "supsetneqq": "\u2ACC", "supsim": "\u2AC8", "supsub": "\u2AD4", "supsup": "\u2AD6", "swarhk": "\u2926", "swarr": "\u2199", "swArr": "\u21D9", "swarrow": "\u2199", "swnwar": "\u292A", "szlig": "\xDF", "Tab": "	", "target": "\u2316", "tau": "\u03C4", "Tau": "\u03A4", "tbrk": "\u23B4", "tcaron": "\u0165", "Tcaron": "\u0164", "tcedil": "\u0163", "Tcedil": "\u0162", "tcy": "\u0442", "Tcy": "\u0422", "tdot": "\u20DB", "telrec": "\u2315", "tfr": "\u{1D531}", "Tfr": "\u{1D517}", "there4": "\u2234", "therefore": "\u2234", "Therefore": "\u2234", "theta": "\u03B8", "Theta": "\u0398", "thetasym": "\u03D1", "thetav": "\u03D1", "thickapprox": "\u2248", "thicksim": "\u223C", "ThickSpace": "\u205F\u200A", "thinsp": "\u2009", "ThinSpace": "\u2009", "thkap": "\u2248", "thksim": "\u223C", "thorn": "\xFE", "THORN": "\xDE", "tilde": "\u02DC", "Tilde": "\u223C", "TildeEqual": "\u2243", "TildeFullEqual": "\u2245", "TildeTilde": "\u2248", "times": "\xD7", "timesb": "\u22A0", "timesbar": "\u2A31", "timesd": "\u2A30", "tint": "\u222D", "toea": "\u2928", "top": "\u22A4", "topbot": "\u2336", "topcir": "\u2AF1", "topf": "\u{1D565}", "Topf": "\u{1D54B}", "topfork": "\u2ADA", "tosa": "\u2929", "tprime": "\u2034", "trade": "\u2122", "TRADE": "\u2122", "triangle": "\u25B5", "triangledown": "\u25BF", "triangleleft": "\u25C3", "trianglelefteq": "\u22B4", "triangleq": "\u225C", "triangleright": "\u25B9", "trianglerighteq": "\u22B5", "tridot": "\u25EC", "trie": "\u225C", "triminus": "\u2A3A", "TripleDot": "\u20DB", "triplus": "\u2A39", "trisb": "\u29CD", "tritime": "\u2A3B", "trpezium": "\u23E2", "tscr": "\u{1D4C9}", "Tscr": "\u{1D4AF}", "tscy": "\u0446", "TScy": "\u0426", "tshcy": "\u045B", "TSHcy": "\u040B", "tstrok": "\u0167", "Tstrok": "\u0166", "twixt": "\u226C", "twoheadleftarrow": "\u219E", "twoheadrightarrow": "\u21A0", "uacute": "\xFA", "Uacute": "\xDA", "uarr": "\u2191", "uArr": "\u21D1", "Uarr": "\u219F", "Uarrocir": "\u2949", "ubrcy": "\u045E", "Ubrcy": "\u040E", "ubreve": "\u016D", "Ubreve": "\u016C", "ucirc": "\xFB", "Ucirc": "\xDB", "ucy": "\u0443", "Ucy": "\u0423", "udarr": "\u21C5", "udblac": "\u0171", "Udblac": "\u0170", "udhar": "\u296E", "ufisht": "\u297E", "ufr": "\u{1D532}", "Ufr": "\u{1D518}", "ugrave": "\xF9", "Ugrave": "\xD9", "uHar": "\u2963", "uharl": "\u21BF", "uharr": "\u21BE", "uhblk": "\u2580", "ulcorn": "\u231C", "ulcorner": "\u231C", "ulcrop": "\u230F", "ultri": "\u25F8", "umacr": "\u016B", "Umacr": "\u016A", "uml": "\xA8", "UnderBar": "_", "UnderBrace": "\u23DF", "UnderBracket": "\u23B5", "UnderParenthesis": "\u23DD", "Union": "\u22C3", "UnionPlus": "\u228E", "uogon": "\u0173", "Uogon": "\u0172", "uopf": "\u{1D566}", "Uopf": "\u{1D54C}", "uparrow": "\u2191", "Uparrow": "\u21D1", "UpArrow": "\u2191", "UpArrowBar": "\u2912", "UpArrowDownArrow": "\u21C5", "updownarrow": "\u2195", "Updownarrow": "\u21D5", "UpDownArrow": "\u2195", "UpEquilibrium": "\u296E", "upharpoonleft": "\u21BF", "upharpoonright": "\u21BE", "uplus": "\u228E", "UpperLeftArrow": "\u2196", "UpperRightArrow": "\u2197", "upsi": "\u03C5", "Upsi": "\u03D2", "upsih": "\u03D2", "upsilon": "\u03C5", "Upsilon": "\u03A5", "UpTee": "\u22A5", "UpTeeArrow": "\u21A5", "upuparrows": "\u21C8", "urcorn": "\u231D", "urcorner": "\u231D", "urcrop": "\u230E", "uring": "\u016F", "Uring": "\u016E", "urtri": "\u25F9", "uscr": "\u{1D4CA}", "Uscr": "\u{1D4B0}", "utdot": "\u22F0", "utilde": "\u0169", "Utilde": "\u0168", "utri": "\u25B5", "utrif": "\u25B4", "uuarr": "\u21C8", "uuml": "\xFC", "Uuml": "\xDC", "uwangle": "\u29A7", "vangrt": "\u299C", "varepsilon": "\u03F5", "varkappa": "\u03F0", "varnothing": "\u2205", "varphi": "\u03D5", "varpi": "\u03D6", "varpropto": "\u221D", "varr": "\u2195", "vArr": "\u21D5", "varrho": "\u03F1", "varsigma": "\u03C2", "varsubsetneq": "\u228A\uFE00", "varsubsetneqq": "\u2ACB\uFE00", "varsupsetneq": "\u228B\uFE00", "varsupsetneqq": "\u2ACC\uFE00", "vartheta": "\u03D1", "vartriangleleft": "\u22B2", "vartriangleright": "\u22B3", "vBar": "\u2AE8", "Vbar": "\u2AEB", "vBarv": "\u2AE9", "vcy": "\u0432", "Vcy": "\u0412", "vdash": "\u22A2", "vDash": "\u22A8", "Vdash": "\u22A9", "VDash": "\u22AB", "Vdashl": "\u2AE6", "vee": "\u2228", "Vee": "\u22C1", "veebar": "\u22BB", "veeeq": "\u225A", "vellip": "\u22EE", "verbar": "|", "Verbar": "\u2016", "vert": "|", "Vert": "\u2016", "VerticalBar": "\u2223", "VerticalLine": "|", "VerticalSeparator": "\u2758", "VerticalTilde": "\u2240", "VeryThinSpace": "\u200A", "vfr": "\u{1D533}", "Vfr": "\u{1D519}", "vltri": "\u22B2", "vnsub": "\u2282\u20D2", "vnsup": "\u2283\u20D2", "vopf": "\u{1D567}", "Vopf": "\u{1D54D}", "vprop": "\u221D", "vrtri": "\u22B3", "vscr": "\u{1D4CB}", "Vscr": "\u{1D4B1}", "vsubne": "\u228A\uFE00", "vsubnE": "\u2ACB\uFE00", "vsupne": "\u228B\uFE00", "vsupnE": "\u2ACC\uFE00", "Vvdash": "\u22AA", "vzigzag": "\u299A", "wcirc": "\u0175", "Wcirc": "\u0174", "wedbar": "\u2A5F", "wedge": "\u2227", "Wedge": "\u22C0", "wedgeq": "\u2259", "weierp": "\u2118", "wfr": "\u{1D534}", "Wfr": "\u{1D51A}", "wopf": "\u{1D568}", "Wopf": "\u{1D54E}", "wp": "\u2118", "wr": "\u2240", "wreath": "\u2240", "wscr": "\u{1D4CC}", "Wscr": "\u{1D4B2}", "xcap": "\u22C2", "xcirc": "\u25EF", "xcup": "\u22C3", "xdtri": "\u25BD", "xfr": "\u{1D535}", "Xfr": "\u{1D51B}", "xharr": "\u27F7", "xhArr": "\u27FA", "xi": "\u03BE", "Xi": "\u039E", "xlarr": "\u27F5", "xlArr": "\u27F8", "xmap": "\u27FC", "xnis": "\u22FB", "xodot": "\u2A00", "xopf": "\u{1D569}", "Xopf": "\u{1D54F}", "xoplus": "\u2A01", "xotime": "\u2A02", "xrarr": "\u27F6", "xrArr": "\u27F9", "xscr": "\u{1D4CD}", "Xscr": "\u{1D4B3}", "xsqcup": "\u2A06", "xuplus": "\u2A04", "xutri": "\u25B3", "xvee": "\u22C1", "xwedge": "\u22C0", "yacute": "\xFD", "Yacute": "\xDD", "yacy": "\u044F", "YAcy": "\u042F", "ycirc": "\u0177", "Ycirc": "\u0176", "ycy": "\u044B", "Ycy": "\u042B", "yen": "\xA5", "yfr": "\u{1D536}", "Yfr": "\u{1D51C}", "yicy": "\u0457", "YIcy": "\u0407", "yopf": "\u{1D56A}", "Yopf": "\u{1D550}", "yscr": "\u{1D4CE}", "Yscr": "\u{1D4B4}", "yucy": "\u044E", "YUcy": "\u042E", "yuml": "\xFF", "Yuml": "\u0178", "zacute": "\u017A", "Zacute": "\u0179", "zcaron": "\u017E", "Zcaron": "\u017D", "zcy": "\u0437", "Zcy": "\u0417", "zdot": "\u017C", "Zdot": "\u017B", "zeetrf": "\u2128", "ZeroWidthSpace": "\u200B", "zeta": "\u03B6", "Zeta": "\u0396", "zfr": "\u{1D537}", "Zfr": "\u2128", "zhcy": "\u0436", "ZHcy": "\u0416", "zigrarr": "\u21DD", "zopf": "\u{1D56B}", "Zopf": "\u2124", "zscr": "\u{1D4CF}", "Zscr": "\u{1D4B5}", "zwj": "\u200D", "zwnj": "\u200C" };
      var decodeMapLegacy = { "aacute": "\xE1", "Aacute": "\xC1", "acirc": "\xE2", "Acirc": "\xC2", "acute": "\xB4", "aelig": "\xE6", "AElig": "\xC6", "agrave": "\xE0", "Agrave": "\xC0", "amp": "&", "AMP": "&", "aring": "\xE5", "Aring": "\xC5", "atilde": "\xE3", "Atilde": "\xC3", "auml": "\xE4", "Auml": "\xC4", "brvbar": "\xA6", "ccedil": "\xE7", "Ccedil": "\xC7", "cedil": "\xB8", "cent": "\xA2", "copy": "\xA9", "COPY": "\xA9", "curren": "\xA4", "deg": "\xB0", "divide": "\xF7", "eacute": "\xE9", "Eacute": "\xC9", "ecirc": "\xEA", "Ecirc": "\xCA", "egrave": "\xE8", "Egrave": "\xC8", "eth": "\xF0", "ETH": "\xD0", "euml": "\xEB", "Euml": "\xCB", "frac12": "\xBD", "frac14": "\xBC", "frac34": "\xBE", "gt": ">", "GT": ">", "iacute": "\xED", "Iacute": "\xCD", "icirc": "\xEE", "Icirc": "\xCE", "iexcl": "\xA1", "igrave": "\xEC", "Igrave": "\xCC", "iquest": "\xBF", "iuml": "\xEF", "Iuml": "\xCF", "laquo": "\xAB", "lt": "<", "LT": "<", "macr": "\xAF", "micro": "\xB5", "middot": "\xB7", "nbsp": "\xA0", "not": "\xAC", "ntilde": "\xF1", "Ntilde": "\xD1", "oacute": "\xF3", "Oacute": "\xD3", "ocirc": "\xF4", "Ocirc": "\xD4", "ograve": "\xF2", "Ograve": "\xD2", "ordf": "\xAA", "ordm": "\xBA", "oslash": "\xF8", "Oslash": "\xD8", "otilde": "\xF5", "Otilde": "\xD5", "ouml": "\xF6", "Ouml": "\xD6", "para": "\xB6", "plusmn": "\xB1", "pound": "\xA3", "quot": '"', "QUOT": '"', "raquo": "\xBB", "reg": "\xAE", "REG": "\xAE", "sect": "\xA7", "shy": "\xAD", "sup1": "\xB9", "sup2": "\xB2", "sup3": "\xB3", "szlig": "\xDF", "thorn": "\xFE", "THORN": "\xDE", "times": "\xD7", "uacute": "\xFA", "Uacute": "\xDA", "ucirc": "\xFB", "Ucirc": "\xDB", "ugrave": "\xF9", "Ugrave": "\xD9", "uml": "\xA8", "uuml": "\xFC", "Uuml": "\xDC", "yacute": "\xFD", "Yacute": "\xDD", "yen": "\xA5", "yuml": "\xFF" };
      var decodeMapNumeric = { "0": "\uFFFD", "128": "\u20AC", "130": "\u201A", "131": "\u0192", "132": "\u201E", "133": "\u2026", "134": "\u2020", "135": "\u2021", "136": "\u02C6", "137": "\u2030", "138": "\u0160", "139": "\u2039", "140": "\u0152", "142": "\u017D", "145": "\u2018", "146": "\u2019", "147": "\u201C", "148": "\u201D", "149": "\u2022", "150": "\u2013", "151": "\u2014", "152": "\u02DC", "153": "\u2122", "154": "\u0161", "155": "\u203A", "156": "\u0153", "158": "\u017E", "159": "\u0178" };
      var invalidReferenceCodePoints = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65e3, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];
      var stringFromCharCode = String.fromCharCode;
      var object = {};
      var hasOwnProperty14 = object.hasOwnProperty;
      var has = function(object2, propertyName) {
        return hasOwnProperty14.call(object2, propertyName);
      };
      var contains = function(array, value) {
        var index = -1;
        var length = array.length;
        while (++index < length) {
          if (array[index] == value) {
            return true;
          }
        }
        return false;
      };
      var merge2 = function(options, defaults) {
        if (!options) {
          return defaults;
        }
        var result = {};
        var key3;
        for (key3 in defaults) {
          result[key3] = has(options, key3) ? options[key3] : defaults[key3];
        }
        return result;
      };
      var codePointToSymbol = function(codePoint, strict) {
        var output = "";
        if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
          if (strict) {
            parseError("character reference outside the permissible Unicode range");
          }
          return "\uFFFD";
        }
        if (has(decodeMapNumeric, codePoint)) {
          if (strict) {
            parseError("disallowed character reference");
          }
          return decodeMapNumeric[codePoint];
        }
        if (strict && contains(invalidReferenceCodePoints, codePoint)) {
          parseError("disallowed character reference");
        }
        if (codePoint > 65535) {
          codePoint -= 65536;
          output += stringFromCharCode(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        output += stringFromCharCode(codePoint);
        return output;
      };
      var hexEscape = function(codePoint) {
        return "&#x" + codePoint.toString(16).toUpperCase() + ";";
      };
      var decEscape = function(codePoint) {
        return "&#" + codePoint + ";";
      };
      var parseError = function(message) {
        throw Error("Parse error: " + message);
      };
      var encode = function(string, options) {
        options = merge2(options, encode.options);
        var strict = options.strict;
        if (strict && regexInvalidRawCodePoint.test(string)) {
          parseError("forbidden code point");
        }
        var encodeEverything = options.encodeEverything;
        var useNamedReferences = options.useNamedReferences;
        var allowUnsafeSymbols = options.allowUnsafeSymbols;
        var escapeCodePoint = options.decimal ? decEscape : hexEscape;
        var escapeBmpSymbol = function(symbol) {
          return escapeCodePoint(symbol.charCodeAt(0));
        };
        if (encodeEverything) {
          string = string.replace(regexAsciiWhitelist, function(symbol) {
            if (useNamedReferences && has(encodeMap, symbol)) {
              return "&" + encodeMap[symbol] + ";";
            }
            return escapeBmpSymbol(symbol);
          });
          if (useNamedReferences) {
            string = string.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;").replace(/&#x66;&#x6A;/g, "&fjlig;");
          }
          if (useNamedReferences) {
            string = string.replace(regexEncodeNonAscii, function(string2) {
              return "&" + encodeMap[string2] + ";";
            });
          }
        } else if (useNamedReferences) {
          if (!allowUnsafeSymbols) {
            string = string.replace(regexEscape, function(string2) {
              return "&" + encodeMap[string2] + ";";
            });
          }
          string = string.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;");
          string = string.replace(regexEncodeNonAscii, function(string2) {
            return "&" + encodeMap[string2] + ";";
          });
        } else if (!allowUnsafeSymbols) {
          string = string.replace(regexEscape, escapeBmpSymbol);
        }
        return string.replace(regexAstralSymbols, function($0) {
          var high = $0.charCodeAt(0);
          var low = $0.charCodeAt(1);
          var codePoint = (high - 55296) * 1024 + low - 56320 + 65536;
          return escapeCodePoint(codePoint);
        }).replace(regexBmpWhitelist, escapeBmpSymbol);
      };
      encode.options = {
        "allowUnsafeSymbols": false,
        "encodeEverything": false,
        "strict": false,
        "useNamedReferences": false,
        "decimal": false
      };
      var decode = function(html, options) {
        options = merge2(options, decode.options);
        var strict = options.strict;
        if (strict && regexInvalidEntity.test(html)) {
          parseError("malformed character reference");
        }
        return html.replace(regexDecode, function($0, $1, $22, $3, $4, $5, $6, $7, $8) {
          var codePoint;
          var semicolon;
          var decDigits;
          var hexDigits;
          var reference;
          var next;
          if ($1) {
            reference = $1;
            return decodeMap[reference];
          }
          if ($22) {
            reference = $22;
            next = $3;
            if (next && options.isAttributeValue) {
              if (strict && next == "=") {
                parseError("`&` did not start a character reference");
              }
              return $0;
            } else {
              if (strict) {
                parseError(
                  "named character reference was not terminated by a semicolon"
                );
              }
              return decodeMapLegacy[reference] + (next || "");
            }
          }
          if ($4) {
            decDigits = $4;
            semicolon = $5;
            if (strict && !semicolon) {
              parseError("character reference was not terminated by a semicolon");
            }
            codePoint = parseInt(decDigits, 10);
            return codePointToSymbol(codePoint, strict);
          }
          if ($6) {
            hexDigits = $6;
            semicolon = $7;
            if (strict && !semicolon) {
              parseError("character reference was not terminated by a semicolon");
            }
            codePoint = parseInt(hexDigits, 16);
            return codePointToSymbol(codePoint, strict);
          }
          if (strict) {
            parseError(
              "named character reference was not terminated by a semicolon"
            );
          }
          return $0;
        });
      };
      decode.options = {
        "isAttributeValue": false,
        "strict": false
      };
      var escape = function(string) {
        return string.replace(regexEscape, function($0) {
          return escapeMap[$0];
        });
      };
      var he2 = {
        "version": "1.2.0",
        "encode": encode,
        "decode": decode,
        "escape": escape,
        "unescape": decode
      };
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        define(function() {
          return he2;
        });
      } else if (freeExports4 && !freeExports4.nodeType) {
        if (freeModule4) {
          freeModule4.exports = he2;
        } else {
          for (var key2 in he2) {
            has(he2, key2) && (freeExports4[key2] = he2[key2]);
          }
        }
      } else {
        root2.he = he2;
      }
    })(exports2);
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports2, module2) {
    var __extends4;
    var __assign5;
    var __rest3;
    var __decorate2;
    var __param2;
    var __esDecorate2;
    var __runInitializers2;
    var __propKey2;
    var __setFunctionName2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray3;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __classPrivateFieldIn2;
    var __createBinding2;
    (function(factory) {
      var root2 = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports3) {
          factory(createExporter(root2, createExporter(exports3)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root2, createExporter(module2.exports)));
      } else {
        factory(createExporter(root2));
      }
      function createExporter(exports3, previous) {
        if (exports3 !== root2) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports3, "__esModule", { value: true });
          } else {
            exports3.__esModule = true;
          }
        }
        return function(id2, v3) {
          return exports3[id2] = previous ? previous(id2, v3) : v3;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d5, b4) {
        d5.__proto__ = b4;
      } || function(d5, b4) {
        for (var p3 in b4)
          if (Object.prototype.hasOwnProperty.call(b4, p3))
            d5[p3] = b4[p3];
      };
      __extends4 = function(d5, b4) {
        if (typeof b4 !== "function" && b4 !== null)
          throw new TypeError("Class extends value " + String(b4) + " is not a constructor or null");
        extendStatics(d5, b4);
        function __() {
          this.constructor = d5;
        }
        d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
      };
      __assign5 = Object.assign || function(t4) {
        for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
          s5 = arguments[i4];
          for (var p3 in s5)
            if (Object.prototype.hasOwnProperty.call(s5, p3))
              t4[p3] = s5[p3];
        }
        return t4;
      };
      __rest3 = function(s5, e4) {
        var t4 = {};
        for (var p3 in s5)
          if (Object.prototype.hasOwnProperty.call(s5, p3) && e4.indexOf(p3) < 0)
            t4[p3] = s5[p3];
        if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i4 = 0, p3 = Object.getOwnPropertySymbols(s5); i4 < p3.length; i4++) {
            if (e4.indexOf(p3[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p3[i4]))
              t4[p3[i4]] = s5[p3[i4]];
          }
        return t4;
      };
      __decorate2 = function(decorators, target, key2, desc) {
        var c4 = arguments.length, r3 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key2) : desc, d5;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r3 = Reflect.decorate(decorators, target, key2, desc);
        else
          for (var i4 = decorators.length - 1; i4 >= 0; i4--)
            if (d5 = decorators[i4])
              r3 = (c4 < 3 ? d5(r3) : c4 > 3 ? d5(target, key2, r3) : d5(target, key2)) || r3;
        return c4 > 3 && r3 && Object.defineProperty(target, key2, r3), r3;
      };
      __param2 = function(paramIndex, decorator) {
        return function(target, key2) {
          decorator(target, key2, paramIndex);
        };
      };
      __esDecorate2 = function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f4) {
          if (f4 !== void 0 && typeof f4 !== "function")
            throw new TypeError("Function expected");
          return f4;
        }
        var kind = contextIn.kind, key2 = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _12, done = false;
        for (var i4 = decorators.length - 1; i4 >= 0; i4--) {
          var context = {};
          for (var p3 in contextIn)
            context[p3] = p3 === "access" ? {} : contextIn[p3];
          for (var p3 in contextIn.access)
            context.access[p3] = contextIn.access[p3];
          context.addInitializer = function(f4) {
            if (done)
              throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f4 || null));
          };
          var result = (0, decorators[i4])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key2], context);
          if (kind === "accessor") {
            if (result === void 0)
              continue;
            if (result === null || typeof result !== "object")
              throw new TypeError("Object expected");
            if (_12 = accept(result.get))
              descriptor.get = _12;
            if (_12 = accept(result.set))
              descriptor.set = _12;
            if (_12 = accept(result.init))
              initializers.push(_12);
          } else if (_12 = accept(result)) {
            if (kind === "field")
              initializers.push(_12);
            else
              descriptor[key2] = _12;
          }
        }
        if (target)
          Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
      };
      __runInitializers2 = function(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i4 = 0; i4 < initializers.length; i4++) {
          value = useValue ? initializers[i4].call(thisArg, value) : initializers[i4].call(thisArg);
        }
        return useValue ? value : void 0;
      };
      __propKey2 = function(x5) {
        return typeof x5 === "symbol" ? x5 : "".concat(x5);
      };
      __setFunctionName2 = function(f4, name, prefix) {
        if (typeof name === "symbol")
          name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f4, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
      };
      __metadata2 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter2 = function(thisArg, _arguments, P4, generator) {
        function adopt(value) {
          return value instanceof P4 ? value : new P4(function(resolve) {
            resolve(value);
          });
        }
        return new (P4 || (P4 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e4) {
              reject(e4);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e4) {
              reject(e4);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator2 = function(thisArg, body) {
        var _12 = { label: 0, sent: function() {
          if (t4[0] & 1)
            throw t4[1];
          return t4[1];
        }, trys: [], ops: [] }, f4, y5, t4, g4;
        return g4 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g4[Symbol.iterator] = function() {
          return this;
        }), g4;
        function verb(n2) {
          return function(v3) {
            return step([n2, v3]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (g4 && (g4 = 0, op[0] && (_12 = 0)), _12)
            try {
              if (f4 = 1, y5 && (t4 = op[0] & 2 ? y5["return"] : op[0] ? y5["throw"] || ((t4 = y5["return"]) && t4.call(y5), 0) : y5.next) && !(t4 = t4.call(y5, op[1])).done)
                return t4;
              if (y5 = 0, t4)
                op = [op[0] & 2, t4.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t4 = op;
                  break;
                case 4:
                  _12.label++;
                  return { value: op[1], done: false };
                case 5:
                  _12.label++;
                  y5 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _12.ops.pop();
                  _12.trys.pop();
                  continue;
                default:
                  if (!(t4 = _12.trys, t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _12 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
                    _12.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _12.label < t4[1]) {
                    _12.label = t4[1];
                    t4 = op;
                    break;
                  }
                  if (t4 && _12.label < t4[2]) {
                    _12.label = t4[2];
                    _12.ops.push(op);
                    break;
                  }
                  if (t4[2])
                    _12.ops.pop();
                  _12.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _12);
            } catch (e4) {
              op = [6, e4];
              y5 = 0;
            } finally {
              f4 = t4 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __exportStar2 = function(m5, o3) {
        for (var p3 in m5)
          if (p3 !== "default" && !Object.prototype.hasOwnProperty.call(o3, p3))
            __createBinding2(o3, m5, p3);
      };
      __createBinding2 = Object.create ? function(o3, m5, k5, k22) {
        if (k22 === void 0)
          k22 = k5;
        var desc = Object.getOwnPropertyDescriptor(m5, k5);
        if (!desc || ("get" in desc ? !m5.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m5[k5];
          } };
        }
        Object.defineProperty(o3, k22, desc);
      } : function(o3, m5, k5, k22) {
        if (k22 === void 0)
          k22 = k5;
        o3[k22] = m5[k5];
      };
      __values2 = function(o3) {
        var s5 = typeof Symbol === "function" && Symbol.iterator, m5 = s5 && o3[s5], i4 = 0;
        if (m5)
          return m5.call(o3);
        if (o3 && typeof o3.length === "number")
          return {
            next: function() {
              if (o3 && i4 >= o3.length)
                o3 = void 0;
              return { value: o3 && o3[i4++], done: !o3 };
            }
          };
        throw new TypeError(s5 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read2 = function(o3, n2) {
        var m5 = typeof Symbol === "function" && o3[Symbol.iterator];
        if (!m5)
          return o3;
        var i4 = m5.call(o3), r3, ar = [], e4;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r3 = i4.next()).done)
            ar.push(r3.value);
        } catch (error) {
          e4 = { error };
        } finally {
          try {
            if (r3 && !r3.done && (m5 = i4["return"]))
              m5.call(i4);
          } finally {
            if (e4)
              throw e4.error;
          }
        }
        return ar;
      };
      __spread2 = function() {
        for (var ar = [], i4 = 0; i4 < arguments.length; i4++)
          ar = ar.concat(__read2(arguments[i4]));
        return ar;
      };
      __spreadArrays2 = function() {
        for (var s5 = 0, i4 = 0, il = arguments.length; i4 < il; i4++)
          s5 += arguments[i4].length;
        for (var r3 = Array(s5), k5 = 0, i4 = 0; i4 < il; i4++)
          for (var a5 = arguments[i4], j4 = 0, jl = a5.length; j4 < jl; j4++, k5++)
            r3[k5] = a5[j4];
        return r3;
      };
      __spreadArray3 = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i4 = 0, l3 = from.length, ar; i4 < l3; i4++) {
            if (ar || !(i4 in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i4);
              ar[i4] = from[i4];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      };
      __await2 = function(v3) {
        return this instanceof __await2 ? (this.v = v3, this) : new __await2(v3);
      };
      __asyncGenerator2 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g4 = generator.apply(thisArg, _arguments || []), i4, q5 = [];
        return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4;
        function verb(n2) {
          if (g4[n2])
            i4[n2] = function(v3) {
              return new Promise(function(a5, b4) {
                q5.push([n2, v3, a5, b4]) > 1 || resume(n2, v3);
              });
            };
        }
        function resume(n2, v3) {
          try {
            step(g4[n2](v3));
          } catch (e4) {
            settle(q5[0][3], e4);
          }
        }
        function step(r3) {
          r3.value instanceof __await2 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q5[0][2], r3);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v3) {
          if (f4(v3), q5.shift(), q5.length)
            resume(q5[0][0], q5[0][1]);
        }
      };
      __asyncDelegator2 = function(o3) {
        var i4, p3;
        return i4 = {}, verb("next"), verb("throw", function(e4) {
          throw e4;
        }), verb("return"), i4[Symbol.iterator] = function() {
          return this;
        }, i4;
        function verb(n2, f4) {
          i4[n2] = o3[n2] ? function(v3) {
            return (p3 = !p3) ? { value: __await2(o3[n2](v3)), done: false } : f4 ? f4(v3) : v3;
          } : f4;
        }
      };
      __asyncValues2 = function(o3) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m5 = o3[Symbol.asyncIterator], i4;
        return m5 ? m5.call(o3) : (o3 = typeof __values2 === "function" ? __values2(o3) : o3[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n2) {
          i4[n2] = o3[n2] && function(v3) {
            return new Promise(function(resolve, reject) {
              v3 = o3[n2](v3), settle(resolve, reject, v3.done, v3.value);
            });
          };
        }
        function settle(resolve, reject, d5, v3) {
          Promise.resolve(v3).then(function(v4) {
            resolve({ value: v4, done: d5 });
          }, reject);
        }
      };
      __makeTemplateObject2 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o3, v3) {
        Object.defineProperty(o3, "default", { enumerable: true, value: v3 });
      } : function(o3, v3) {
        o3["default"] = v3;
      };
      __importStar2 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k5 in mod)
            if (k5 !== "default" && Object.prototype.hasOwnProperty.call(mod, k5))
              __createBinding2(result, mod, k5);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault2 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet2 = function(receiver, state, kind, f4) {
        if (kind === "a" && !f4)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f4 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f4 : kind === "a" ? f4.call(receiver) : f4 ? f4.value : state.get(receiver);
      };
      __classPrivateFieldSet2 = function(receiver, state, value, kind, f4) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f4)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f4 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f4.call(receiver, value) : f4 ? f4.value = value : state.set(receiver, value), value;
      };
      __classPrivateFieldIn2 = function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      };
      exporter("__extends", __extends4);
      exporter("__assign", __assign5);
      exporter("__rest", __rest3);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__esDecorate", __esDecorate2);
      exporter("__runInitializers", __runInitializers2);
      exporter("__propKey", __propKey2);
      exporter("__setFunctionName", __setFunctionName2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray3);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports2, module2) {
    (function() {
      "use strict";
      var hasOwn2 = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames9() {
        var classes = [];
        for (var i4 = 0; i4 < arguments.length; i4++) {
          var arg = arguments[i4];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames9.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key2 in arg) {
              if (hasOwn2.call(arg, key2) && arg[key2]) {
                classes.push(key2);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module2 !== "undefined" && module2.exports) {
        classNames9.default = classNames9;
        module2.exports = classNames9;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames9;
        });
      } else {
        window.classNames = classNames9;
      }
    })();
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports2, module2) {
    var freeGlobal2 = typeof global == "object" && global && global.Object === Object && global;
    module2.exports = freeGlobal2;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports2, module2) {
    var freeGlobal2 = require_freeGlobal();
    var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal2 || freeSelf2 || Function("return this")();
    module2.exports = root2;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports2, module2) {
    var root2 = require_root();
    var Symbol3 = root2.Symbol;
    module2.exports = Symbol3;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports2, module2) {
    var Symbol3 = require_Symbol();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    var nativeObjectToString3 = objectProto16.toString;
    var symToStringTag3 = Symbol3 ? Symbol3.toStringTag : void 0;
    function getRawTag2(value) {
      var isOwn = hasOwnProperty14.call(value, symToStringTag3), tag = value[symToStringTag3];
      try {
        value[symToStringTag3] = void 0;
        var unmasked = true;
      } catch (e4) {
      }
      var result = nativeObjectToString3.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag3] = tag;
        } else {
          delete value[symToStringTag3];
        }
      }
      return result;
    }
    module2.exports = getRawTag2;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports2, module2) {
    var objectProto16 = Object.prototype;
    var nativeObjectToString3 = objectProto16.toString;
    function objectToString2(value) {
      return nativeObjectToString3.call(value);
    }
    module2.exports = objectToString2;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports2, module2) {
    var Symbol3 = require_Symbol();
    var getRawTag2 = require_getRawTag();
    var objectToString2 = require_objectToString();
    var nullTag2 = "[object Null]";
    var undefinedTag2 = "[object Undefined]";
    var symToStringTag3 = Symbol3 ? Symbol3.toStringTag : void 0;
    function baseGetTag2(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag2 : nullTag2;
      }
      return symToStringTag3 && symToStringTag3 in Object(value) ? getRawTag2(value) : objectToString2(value);
    }
    module2.exports = baseGetTag2;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports2, module2) {
    var isArray3 = Array.isArray;
    module2.exports = isArray3;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports2, module2) {
    function isObjectLike2(value) {
      return value != null && typeof value == "object";
    }
    module2.exports = isObjectLike2;
  }
});

// node_modules/lodash/isString.js
var require_isString = __commonJS({
  "node_modules/lodash/isString.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var isArray3 = require_isArray();
    var isObjectLike2 = require_isObjectLike();
    var stringTag3 = "[object String]";
    function isString(value) {
      return typeof value == "string" || !isArray3(value) && isObjectLike2(value) && baseGetTag2(value) == stringTag3;
    }
    module2.exports = isString;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports2, module2) {
    function createBaseFor2(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props2 = keysFunc(object), length = props2.length;
        while (length--) {
          var key2 = props2[fromRight ? length : ++index];
          if (iteratee(iterable[key2], key2, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module2.exports = createBaseFor2;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports2, module2) {
    var createBaseFor2 = require_createBaseFor();
    var baseFor2 = createBaseFor2();
    module2.exports = baseFor2;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports2, module2) {
    function baseTimes2(n2, iteratee) {
      var index = -1, result = Array(n2);
      while (++index < n2) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module2.exports = baseTimes2;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var isObjectLike2 = require_isObjectLike();
    var argsTag4 = "[object Arguments]";
    function baseIsArguments2(value) {
      return isObjectLike2(value) && baseGetTag2(value) == argsTag4;
    }
    module2.exports = baseIsArguments2;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports2, module2) {
    var baseIsArguments2 = require_baseIsArguments();
    var isObjectLike2 = require_isObjectLike();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    var propertyIsEnumerable3 = objectProto16.propertyIsEnumerable;
    var isArguments2 = baseIsArguments2(function() {
      return arguments;
    }()) ? baseIsArguments2 : function(value) {
      return isObjectLike2(value) && hasOwnProperty14.call(value, "callee") && !propertyIsEnumerable3.call(value, "callee");
    };
    module2.exports = isArguments2;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports2, module2) {
    function stubFalse2() {
      return false;
    }
    module2.exports = stubFalse2;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports2, module2) {
    var root2 = require_root();
    var stubFalse2 = require_stubFalse();
    var freeExports4 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
    var freeModule4 = freeExports4 && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports4 = freeModule4 && freeModule4.exports === freeExports4;
    var Buffer4 = moduleExports4 ? root2.Buffer : void 0;
    var nativeIsBuffer2 = Buffer4 ? Buffer4.isBuffer : void 0;
    var isBuffer2 = nativeIsBuffer2 || stubFalse2;
    module2.exports = isBuffer2;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports2, module2) {
    var MAX_SAFE_INTEGER3 = 9007199254740991;
    var reIsUint2 = /^(?:0|[1-9]\d*)$/;
    function isIndex2(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER3 : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint2.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module2.exports = isIndex2;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports2, module2) {
    var MAX_SAFE_INTEGER3 = 9007199254740991;
    function isLength2(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER3;
    }
    module2.exports = isLength2;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var isLength2 = require_isLength();
    var isObjectLike2 = require_isObjectLike();
    var argsTag4 = "[object Arguments]";
    var arrayTag3 = "[object Array]";
    var boolTag3 = "[object Boolean]";
    var dateTag3 = "[object Date]";
    var errorTag3 = "[object Error]";
    var funcTag3 = "[object Function]";
    var mapTag4 = "[object Map]";
    var numberTag3 = "[object Number]";
    var objectTag5 = "[object Object]";
    var regexpTag3 = "[object RegExp]";
    var setTag4 = "[object Set]";
    var stringTag3 = "[object String]";
    var weakMapTag3 = "[object WeakMap]";
    var arrayBufferTag3 = "[object ArrayBuffer]";
    var dataViewTag4 = "[object DataView]";
    var float32Tag2 = "[object Float32Array]";
    var float64Tag2 = "[object Float64Array]";
    var int8Tag2 = "[object Int8Array]";
    var int16Tag2 = "[object Int16Array]";
    var int32Tag2 = "[object Int32Array]";
    var uint8Tag2 = "[object Uint8Array]";
    var uint8ClampedTag2 = "[object Uint8ClampedArray]";
    var uint16Tag2 = "[object Uint16Array]";
    var uint32Tag2 = "[object Uint32Array]";
    var typedArrayTags2 = {};
    typedArrayTags2[float32Tag2] = typedArrayTags2[float64Tag2] = typedArrayTags2[int8Tag2] = typedArrayTags2[int16Tag2] = typedArrayTags2[int32Tag2] = typedArrayTags2[uint8Tag2] = typedArrayTags2[uint8ClampedTag2] = typedArrayTags2[uint16Tag2] = typedArrayTags2[uint32Tag2] = true;
    typedArrayTags2[argsTag4] = typedArrayTags2[arrayTag3] = typedArrayTags2[arrayBufferTag3] = typedArrayTags2[boolTag3] = typedArrayTags2[dataViewTag4] = typedArrayTags2[dateTag3] = typedArrayTags2[errorTag3] = typedArrayTags2[funcTag3] = typedArrayTags2[mapTag4] = typedArrayTags2[numberTag3] = typedArrayTags2[objectTag5] = typedArrayTags2[regexpTag3] = typedArrayTags2[setTag4] = typedArrayTags2[stringTag3] = typedArrayTags2[weakMapTag3] = false;
    function baseIsTypedArray2(value) {
      return isObjectLike2(value) && isLength2(value.length) && !!typedArrayTags2[baseGetTag2(value)];
    }
    module2.exports = baseIsTypedArray2;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports2, module2) {
    function baseUnary2(func) {
      return function(value) {
        return func(value);
      };
    }
    module2.exports = baseUnary2;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports2, module2) {
    var freeGlobal2 = require_freeGlobal();
    var freeExports4 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
    var freeModule4 = freeExports4 && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports4 = freeModule4 && freeModule4.exports === freeExports4;
    var freeProcess2 = moduleExports4 && freeGlobal2.process;
    var nodeUtil2 = function() {
      try {
        var types2 = freeModule4 && freeModule4.require && freeModule4.require("util").types;
        if (types2) {
          return types2;
        }
        return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
      } catch (e4) {
      }
    }();
    module2.exports = nodeUtil2;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports2, module2) {
    var baseIsTypedArray2 = require_baseIsTypedArray();
    var baseUnary2 = require_baseUnary();
    var nodeUtil2 = require_nodeUtil();
    var nodeIsTypedArray2 = nodeUtil2 && nodeUtil2.isTypedArray;
    var isTypedArray2 = nodeIsTypedArray2 ? baseUnary2(nodeIsTypedArray2) : baseIsTypedArray2;
    module2.exports = isTypedArray2;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports2, module2) {
    var baseTimes2 = require_baseTimes();
    var isArguments2 = require_isArguments();
    var isArray3 = require_isArray();
    var isBuffer2 = require_isBuffer();
    var isIndex2 = require_isIndex();
    var isTypedArray2 = require_isTypedArray();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function arrayLikeKeys2(value, inherited) {
      var isArr = isArray3(value), isArg = !isArr && isArguments2(value), isBuff = !isArr && !isArg && isBuffer2(value), isType = !isArr && !isArg && !isBuff && isTypedArray2(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes2(value.length, String) : [], length = result.length;
      for (var key2 in value) {
        if ((inherited || hasOwnProperty14.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex2(key2, length)))) {
          result.push(key2);
        }
      }
      return result;
    }
    module2.exports = arrayLikeKeys2;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports2, module2) {
    var objectProto16 = Object.prototype;
    function isPrototype2(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto16;
      return value === proto;
    }
    module2.exports = isPrototype2;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports2, module2) {
    function overArg2(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module2.exports = overArg2;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports2, module2) {
    var overArg2 = require_overArg();
    var nativeKeys2 = overArg2(Object.keys, Object);
    module2.exports = nativeKeys2;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports2, module2) {
    var isPrototype2 = require_isPrototype();
    var nativeKeys2 = require_nativeKeys();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function baseKeys2(object) {
      if (!isPrototype2(object)) {
        return nativeKeys2(object);
      }
      var result = [];
      for (var key2 in Object(object)) {
        if (hasOwnProperty14.call(object, key2) && key2 != "constructor") {
          result.push(key2);
        }
      }
      return result;
    }
    module2.exports = baseKeys2;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports2, module2) {
    function isObject3(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module2.exports = isObject3;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var isObject3 = require_isObject();
    var asyncTag2 = "[object AsyncFunction]";
    var funcTag3 = "[object Function]";
    var genTag2 = "[object GeneratorFunction]";
    var proxyTag2 = "[object Proxy]";
    function isFunction3(value) {
      if (!isObject3(value)) {
        return false;
      }
      var tag = baseGetTag2(value);
      return tag == funcTag3 || tag == genTag2 || tag == asyncTag2 || tag == proxyTag2;
    }
    module2.exports = isFunction3;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports2, module2) {
    var isFunction3 = require_isFunction();
    var isLength2 = require_isLength();
    function isArrayLike2(value) {
      return value != null && isLength2(value.length) && !isFunction3(value);
    }
    module2.exports = isArrayLike2;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports2, module2) {
    var arrayLikeKeys2 = require_arrayLikeKeys();
    var baseKeys2 = require_baseKeys();
    var isArrayLike2 = require_isArrayLike();
    function keys2(object) {
      return isArrayLike2(object) ? arrayLikeKeys2(object) : baseKeys2(object);
    }
    module2.exports = keys2;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports2, module2) {
    var baseFor2 = require_baseFor();
    var keys2 = require_keys();
    function baseForOwn2(object, iteratee) {
      return object && baseFor2(object, iteratee, keys2);
    }
    module2.exports = baseForOwn2;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports2, module2) {
    function identity2(value) {
      return value;
    }
    module2.exports = identity2;
  }
});

// node_modules/lodash/_castFunction.js
var require_castFunction = __commonJS({
  "node_modules/lodash/_castFunction.js"(exports2, module2) {
    var identity2 = require_identity();
    function castFunction2(value) {
      return typeof value == "function" ? value : identity2;
    }
    module2.exports = castFunction2;
  }
});

// node_modules/lodash/forOwn.js
var require_forOwn = __commonJS({
  "node_modules/lodash/forOwn.js"(exports2, module2) {
    var baseForOwn2 = require_baseForOwn();
    var castFunction2 = require_castFunction();
    function forOwn(object, iteratee) {
      return object && baseForOwn2(object, castFunction2(iteratee));
    }
    module2.exports = forOwn;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports2, module2) {
    var overArg2 = require_overArg();
    var getPrototype2 = overArg2(Object.getPrototypeOf, Object);
    module2.exports = getPrototype2;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var getPrototype2 = require_getPrototype();
    var isObjectLike2 = require_isObjectLike();
    var objectTag5 = "[object Object]";
    var funcProto4 = Function.prototype;
    var objectProto16 = Object.prototype;
    var funcToString4 = funcProto4.toString;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    var objectCtorString2 = funcToString4.call(Object);
    function isPlainObject2(value) {
      if (!isObjectLike2(value) || baseGetTag2(value) != objectTag5) {
        return false;
      }
      var proto = getPrototype2(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty14.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString4.call(Ctor) == objectCtorString2;
    }
    module2.exports = isPlainObject2;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports2, module2) {
    function arrayMap2(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module2.exports = arrayMap2;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports2, module2) {
    function listCacheClear2() {
      this.__data__ = [];
      this.size = 0;
    }
    module2.exports = listCacheClear2;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports2, module2) {
    function eq2(value, other) {
      return value === other || value !== value && other !== other;
    }
    module2.exports = eq2;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports2, module2) {
    var eq2 = require_eq();
    function assocIndexOf2(array, key2) {
      var length = array.length;
      while (length--) {
        if (eq2(array[length][0], key2)) {
          return length;
        }
      }
      return -1;
    }
    module2.exports = assocIndexOf2;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports2, module2) {
    var assocIndexOf2 = require_assocIndexOf();
    var arrayProto2 = Array.prototype;
    var splice2 = arrayProto2.splice;
    function listCacheDelete2(key2) {
      var data2 = this.__data__, index = assocIndexOf2(data2, key2);
      if (index < 0) {
        return false;
      }
      var lastIndex = data2.length - 1;
      if (index == lastIndex) {
        data2.pop();
      } else {
        splice2.call(data2, index, 1);
      }
      --this.size;
      return true;
    }
    module2.exports = listCacheDelete2;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports2, module2) {
    var assocIndexOf2 = require_assocIndexOf();
    function listCacheGet2(key2) {
      var data2 = this.__data__, index = assocIndexOf2(data2, key2);
      return index < 0 ? void 0 : data2[index][1];
    }
    module2.exports = listCacheGet2;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports2, module2) {
    var assocIndexOf2 = require_assocIndexOf();
    function listCacheHas2(key2) {
      return assocIndexOf2(this.__data__, key2) > -1;
    }
    module2.exports = listCacheHas2;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports2, module2) {
    var assocIndexOf2 = require_assocIndexOf();
    function listCacheSet2(key2, value) {
      var data2 = this.__data__, index = assocIndexOf2(data2, key2);
      if (index < 0) {
        ++this.size;
        data2.push([key2, value]);
      } else {
        data2[index][1] = value;
      }
      return this;
    }
    module2.exports = listCacheSet2;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports2, module2) {
    var listCacheClear2 = require_listCacheClear();
    var listCacheDelete2 = require_listCacheDelete();
    var listCacheGet2 = require_listCacheGet();
    var listCacheHas2 = require_listCacheHas();
    var listCacheSet2 = require_listCacheSet();
    function ListCache2(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache2.prototype.clear = listCacheClear2;
    ListCache2.prototype["delete"] = listCacheDelete2;
    ListCache2.prototype.get = listCacheGet2;
    ListCache2.prototype.has = listCacheHas2;
    ListCache2.prototype.set = listCacheSet2;
    module2.exports = ListCache2;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports2, module2) {
    var ListCache2 = require_ListCache();
    function stackClear2() {
      this.__data__ = new ListCache2();
      this.size = 0;
    }
    module2.exports = stackClear2;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports2, module2) {
    function stackDelete2(key2) {
      var data2 = this.__data__, result = data2["delete"](key2);
      this.size = data2.size;
      return result;
    }
    module2.exports = stackDelete2;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports2, module2) {
    function stackGet2(key2) {
      return this.__data__.get(key2);
    }
    module2.exports = stackGet2;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports2, module2) {
    function stackHas2(key2) {
      return this.__data__.has(key2);
    }
    module2.exports = stackHas2;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports2, module2) {
    var root2 = require_root();
    var coreJsData2 = root2["__core-js_shared__"];
    module2.exports = coreJsData2;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports2, module2) {
    var coreJsData2 = require_coreJsData();
    var maskSrcKey2 = function() {
      var uid = /[^.]+$/.exec(coreJsData2 && coreJsData2.keys && coreJsData2.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked2(func) {
      return !!maskSrcKey2 && maskSrcKey2 in func;
    }
    module2.exports = isMasked2;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports2, module2) {
    var funcProto4 = Function.prototype;
    var funcToString4 = funcProto4.toString;
    function toSource2(func) {
      if (func != null) {
        try {
          return funcToString4.call(func);
        } catch (e4) {
        }
        try {
          return func + "";
        } catch (e4) {
        }
      }
      return "";
    }
    module2.exports = toSource2;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports2, module2) {
    var isFunction3 = require_isFunction();
    var isMasked2 = require_isMasked();
    var isObject3 = require_isObject();
    var toSource2 = require_toSource();
    var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor2 = /^\[object .+?Constructor\]$/;
    var funcProto4 = Function.prototype;
    var objectProto16 = Object.prototype;
    var funcToString4 = funcProto4.toString;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    var reIsNative2 = RegExp(
      "^" + funcToString4.call(hasOwnProperty14).replace(reRegExpChar2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative2(value) {
      if (!isObject3(value) || isMasked2(value)) {
        return false;
      }
      var pattern = isFunction3(value) ? reIsNative2 : reIsHostCtor2;
      return pattern.test(toSource2(value));
    }
    module2.exports = baseIsNative2;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports2, module2) {
    function getValue2(object, key2) {
      return object == null ? void 0 : object[key2];
    }
    module2.exports = getValue2;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports2, module2) {
    var baseIsNative2 = require_baseIsNative();
    var getValue2 = require_getValue();
    function getNative2(object, key2) {
      var value = getValue2(object, key2);
      return baseIsNative2(value) ? value : void 0;
    }
    module2.exports = getNative2;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var root2 = require_root();
    var Map3 = getNative2(root2, "Map");
    module2.exports = Map3;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var nativeCreate2 = getNative2(Object, "create");
    module2.exports = nativeCreate2;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports2, module2) {
    var nativeCreate2 = require_nativeCreate();
    function hashClear2() {
      this.__data__ = nativeCreate2 ? nativeCreate2(null) : {};
      this.size = 0;
    }
    module2.exports = hashClear2;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports2, module2) {
    function hashDelete2(key2) {
      var result = this.has(key2) && delete this.__data__[key2];
      this.size -= result ? 1 : 0;
      return result;
    }
    module2.exports = hashDelete2;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports2, module2) {
    var nativeCreate2 = require_nativeCreate();
    var HASH_UNDEFINED4 = "__lodash_hash_undefined__";
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function hashGet2(key2) {
      var data2 = this.__data__;
      if (nativeCreate2) {
        var result = data2[key2];
        return result === HASH_UNDEFINED4 ? void 0 : result;
      }
      return hasOwnProperty14.call(data2, key2) ? data2[key2] : void 0;
    }
    module2.exports = hashGet2;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports2, module2) {
    var nativeCreate2 = require_nativeCreate();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function hashHas2(key2) {
      var data2 = this.__data__;
      return nativeCreate2 ? data2[key2] !== void 0 : hasOwnProperty14.call(data2, key2);
    }
    module2.exports = hashHas2;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports2, module2) {
    var nativeCreate2 = require_nativeCreate();
    var HASH_UNDEFINED4 = "__lodash_hash_undefined__";
    function hashSet2(key2, value) {
      var data2 = this.__data__;
      this.size += this.has(key2) ? 0 : 1;
      data2[key2] = nativeCreate2 && value === void 0 ? HASH_UNDEFINED4 : value;
      return this;
    }
    module2.exports = hashSet2;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports2, module2) {
    var hashClear2 = require_hashClear();
    var hashDelete2 = require_hashDelete();
    var hashGet2 = require_hashGet();
    var hashHas2 = require_hashHas();
    var hashSet2 = require_hashSet();
    function Hash2(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash2.prototype.clear = hashClear2;
    Hash2.prototype["delete"] = hashDelete2;
    Hash2.prototype.get = hashGet2;
    Hash2.prototype.has = hashHas2;
    Hash2.prototype.set = hashSet2;
    module2.exports = Hash2;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports2, module2) {
    var Hash2 = require_Hash();
    var ListCache2 = require_ListCache();
    var Map3 = require_Map();
    function mapCacheClear2() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash2(),
        "map": new (Map3 || ListCache2)(),
        "string": new Hash2()
      };
    }
    module2.exports = mapCacheClear2;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports2, module2) {
    function isKeyable2(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module2.exports = isKeyable2;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports2, module2) {
    var isKeyable2 = require_isKeyable();
    function getMapData2(map2, key2) {
      var data2 = map2.__data__;
      return isKeyable2(key2) ? data2[typeof key2 == "string" ? "string" : "hash"] : data2.map;
    }
    module2.exports = getMapData2;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports2, module2) {
    var getMapData2 = require_getMapData();
    function mapCacheDelete2(key2) {
      var result = getMapData2(this, key2)["delete"](key2);
      this.size -= result ? 1 : 0;
      return result;
    }
    module2.exports = mapCacheDelete2;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports2, module2) {
    var getMapData2 = require_getMapData();
    function mapCacheGet2(key2) {
      return getMapData2(this, key2).get(key2);
    }
    module2.exports = mapCacheGet2;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports2, module2) {
    var getMapData2 = require_getMapData();
    function mapCacheHas2(key2) {
      return getMapData2(this, key2).has(key2);
    }
    module2.exports = mapCacheHas2;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports2, module2) {
    var getMapData2 = require_getMapData();
    function mapCacheSet2(key2, value) {
      var data2 = getMapData2(this, key2), size = data2.size;
      data2.set(key2, value);
      this.size += data2.size == size ? 0 : 1;
      return this;
    }
    module2.exports = mapCacheSet2;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports2, module2) {
    var mapCacheClear2 = require_mapCacheClear();
    var mapCacheDelete2 = require_mapCacheDelete();
    var mapCacheGet2 = require_mapCacheGet();
    var mapCacheHas2 = require_mapCacheHas();
    var mapCacheSet2 = require_mapCacheSet();
    function MapCache2(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache2.prototype.clear = mapCacheClear2;
    MapCache2.prototype["delete"] = mapCacheDelete2;
    MapCache2.prototype.get = mapCacheGet2;
    MapCache2.prototype.has = mapCacheHas2;
    MapCache2.prototype.set = mapCacheSet2;
    module2.exports = MapCache2;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports2, module2) {
    var ListCache2 = require_ListCache();
    var Map3 = require_Map();
    var MapCache2 = require_MapCache();
    var LARGE_ARRAY_SIZE2 = 200;
    function stackSet2(key2, value) {
      var data2 = this.__data__;
      if (data2 instanceof ListCache2) {
        var pairs = data2.__data__;
        if (!Map3 || pairs.length < LARGE_ARRAY_SIZE2 - 1) {
          pairs.push([key2, value]);
          this.size = ++data2.size;
          return this;
        }
        data2 = this.__data__ = new MapCache2(pairs);
      }
      data2.set(key2, value);
      this.size = data2.size;
      return this;
    }
    module2.exports = stackSet2;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports2, module2) {
    var ListCache2 = require_ListCache();
    var stackClear2 = require_stackClear();
    var stackDelete2 = require_stackDelete();
    var stackGet2 = require_stackGet();
    var stackHas2 = require_stackHas();
    var stackSet2 = require_stackSet();
    function Stack2(entries) {
      var data2 = this.__data__ = new ListCache2(entries);
      this.size = data2.size;
    }
    Stack2.prototype.clear = stackClear2;
    Stack2.prototype["delete"] = stackDelete2;
    Stack2.prototype.get = stackGet2;
    Stack2.prototype.has = stackHas2;
    Stack2.prototype.set = stackSet2;
    module2.exports = Stack2;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports2, module2) {
    var HASH_UNDEFINED4 = "__lodash_hash_undefined__";
    function setCacheAdd2(value) {
      this.__data__.set(value, HASH_UNDEFINED4);
      return this;
    }
    module2.exports = setCacheAdd2;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports2, module2) {
    function setCacheHas2(value) {
      return this.__data__.has(value);
    }
    module2.exports = setCacheHas2;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports2, module2) {
    var MapCache2 = require_MapCache();
    var setCacheAdd2 = require_setCacheAdd();
    var setCacheHas2 = require_setCacheHas();
    function SetCache2(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache2();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache2.prototype.add = SetCache2.prototype.push = setCacheAdd2;
    SetCache2.prototype.has = setCacheHas2;
    module2.exports = SetCache2;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports2, module2) {
    function arraySome2(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module2.exports = arraySome2;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports2, module2) {
    function cacheHas2(cache, key2) {
      return cache.has(key2);
    }
    module2.exports = cacheHas2;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports2, module2) {
    var SetCache2 = require_SetCache();
    var arraySome2 = require_arraySome();
    var cacheHas2 = require_cacheHas();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var COMPARE_UNORDERED_FLAG5 = 2;
    function equalArrays2(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG7, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG5 ? new SetCache2() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome2(other, function(othValue2, othIndex) {
            if (!cacheHas2(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module2.exports = equalArrays2;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports2, module2) {
    var root2 = require_root();
    var Uint8Array3 = root2.Uint8Array;
    module2.exports = Uint8Array3;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports2, module2) {
    function mapToArray2(map2) {
      var index = -1, result = Array(map2.size);
      map2.forEach(function(value, key2) {
        result[++index] = [key2, value];
      });
      return result;
    }
    module2.exports = mapToArray2;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports2, module2) {
    function setToArray2(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module2.exports = setToArray2;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports2, module2) {
    var Symbol3 = require_Symbol();
    var Uint8Array3 = require_Uint8Array();
    var eq2 = require_eq();
    var equalArrays2 = require_equalArrays();
    var mapToArray2 = require_mapToArray();
    var setToArray2 = require_setToArray();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var COMPARE_UNORDERED_FLAG5 = 2;
    var boolTag3 = "[object Boolean]";
    var dateTag3 = "[object Date]";
    var errorTag3 = "[object Error]";
    var mapTag4 = "[object Map]";
    var numberTag3 = "[object Number]";
    var regexpTag3 = "[object RegExp]";
    var setTag4 = "[object Set]";
    var stringTag3 = "[object String]";
    var symbolTag3 = "[object Symbol]";
    var arrayBufferTag3 = "[object ArrayBuffer]";
    var dataViewTag4 = "[object DataView]";
    var symbolProto3 = Symbol3 ? Symbol3.prototype : void 0;
    var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
    function equalByTag2(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag4:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag3:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array3(object), new Uint8Array3(other))) {
            return false;
          }
          return true;
        case boolTag3:
        case dateTag3:
        case numberTag3:
          return eq2(+object, +other);
        case errorTag3:
          return object.name == other.name && object.message == other.message;
        case regexpTag3:
        case stringTag3:
          return object == other + "";
        case mapTag4:
          var convert = mapToArray2;
        case setTag4:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG7;
          convert || (convert = setToArray2);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG5;
          stack.set(object, other);
          var result = equalArrays2(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag3:
          if (symbolValueOf2) {
            return symbolValueOf2.call(object) == symbolValueOf2.call(other);
          }
      }
      return false;
    }
    module2.exports = equalByTag2;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports2, module2) {
    function arrayPush2(array, values) {
      var index = -1, length = values.length, offset2 = array.length;
      while (++index < length) {
        array[offset2 + index] = values[index];
      }
      return array;
    }
    module2.exports = arrayPush2;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports2, module2) {
    var arrayPush2 = require_arrayPush();
    var isArray3 = require_isArray();
    function baseGetAllKeys2(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray3(object) ? result : arrayPush2(result, symbolsFunc(object));
    }
    module2.exports = baseGetAllKeys2;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports2, module2) {
    function arrayFilter2(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module2.exports = arrayFilter2;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports2, module2) {
    function stubArray2() {
      return [];
    }
    module2.exports = stubArray2;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports2, module2) {
    var arrayFilter2 = require_arrayFilter();
    var stubArray2 = require_stubArray();
    var objectProto16 = Object.prototype;
    var propertyIsEnumerable3 = objectProto16.propertyIsEnumerable;
    var nativeGetSymbols2 = Object.getOwnPropertySymbols;
    var getSymbols2 = !nativeGetSymbols2 ? stubArray2 : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter2(nativeGetSymbols2(object), function(symbol) {
        return propertyIsEnumerable3.call(object, symbol);
      });
    };
    module2.exports = getSymbols2;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports2, module2) {
    var baseGetAllKeys2 = require_baseGetAllKeys();
    var getSymbols2 = require_getSymbols();
    var keys2 = require_keys();
    function getAllKeys2(object) {
      return baseGetAllKeys2(object, keys2, getSymbols2);
    }
    module2.exports = getAllKeys2;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports2, module2) {
    var getAllKeys2 = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function equalObjects2(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG7, objProps = getAllKeys2(object), objLength = objProps.length, othProps = getAllKeys2(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key2 = objProps[index];
        if (!(isPartial ? key2 in other : hasOwnProperty14.call(other, key2))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key2 = objProps[index];
        var objValue = object[key2], othValue = other[key2];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key2 == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module2.exports = equalObjects2;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var root2 = require_root();
    var DataView2 = getNative2(root2, "DataView");
    module2.exports = DataView2;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var root2 = require_root();
    var Promise3 = getNative2(root2, "Promise");
    module2.exports = Promise3;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var root2 = require_root();
    var Set3 = getNative2(root2, "Set");
    module2.exports = Set3;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var root2 = require_root();
    var WeakMap3 = getNative2(root2, "WeakMap");
    module2.exports = WeakMap3;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports2, module2) {
    var DataView2 = require_DataView();
    var Map3 = require_Map();
    var Promise3 = require_Promise();
    var Set3 = require_Set();
    var WeakMap3 = require_WeakMap();
    var baseGetTag2 = require_baseGetTag();
    var toSource2 = require_toSource();
    var mapTag4 = "[object Map]";
    var objectTag5 = "[object Object]";
    var promiseTag2 = "[object Promise]";
    var setTag4 = "[object Set]";
    var weakMapTag3 = "[object WeakMap]";
    var dataViewTag4 = "[object DataView]";
    var dataViewCtorString2 = toSource2(DataView2);
    var mapCtorString2 = toSource2(Map3);
    var promiseCtorString2 = toSource2(Promise3);
    var setCtorString2 = toSource2(Set3);
    var weakMapCtorString2 = toSource2(WeakMap3);
    var getTag2 = baseGetTag2;
    if (DataView2 && getTag2(new DataView2(new ArrayBuffer(1))) != dataViewTag4 || Map3 && getTag2(new Map3()) != mapTag4 || Promise3 && getTag2(Promise3.resolve()) != promiseTag2 || Set3 && getTag2(new Set3()) != setTag4 || WeakMap3 && getTag2(new WeakMap3()) != weakMapTag3) {
      getTag2 = function(value) {
        var result = baseGetTag2(value), Ctor = result == objectTag5 ? value.constructor : void 0, ctorString = Ctor ? toSource2(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString2:
              return dataViewTag4;
            case mapCtorString2:
              return mapTag4;
            case promiseCtorString2:
              return promiseTag2;
            case setCtorString2:
              return setTag4;
            case weakMapCtorString2:
              return weakMapTag3;
          }
        }
        return result;
      };
    }
    module2.exports = getTag2;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports2, module2) {
    var Stack2 = require_Stack();
    var equalArrays2 = require_equalArrays();
    var equalByTag2 = require_equalByTag();
    var equalObjects2 = require_equalObjects();
    var getTag2 = require_getTag();
    var isArray3 = require_isArray();
    var isBuffer2 = require_isBuffer();
    var isTypedArray2 = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var argsTag4 = "[object Arguments]";
    var arrayTag3 = "[object Array]";
    var objectTag5 = "[object Object]";
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function baseIsEqualDeep2(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray3(object), othIsArr = isArray3(other), objTag = objIsArr ? arrayTag3 : getTag2(object), othTag = othIsArr ? arrayTag3 : getTag2(other);
      objTag = objTag == argsTag4 ? objectTag5 : objTag;
      othTag = othTag == argsTag4 ? objectTag5 : othTag;
      var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer2(object)) {
        if (!isBuffer2(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack2());
        return objIsArr || isTypedArray2(object) ? equalArrays2(object, other, bitmask, customizer, equalFunc, stack) : equalByTag2(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG7)) {
        var objIsWrapped = objIsObj && hasOwnProperty14.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty14.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack2());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack2());
      return equalObjects2(object, other, bitmask, customizer, equalFunc, stack);
    }
    module2.exports = baseIsEqualDeep2;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports2, module2) {
    var baseIsEqualDeep2 = require_baseIsEqualDeep();
    var isObjectLike2 = require_isObjectLike();
    function baseIsEqual2(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike2(value) && !isObjectLike2(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep2(value, other, bitmask, customizer, baseIsEqual2, stack);
    }
    module2.exports = baseIsEqual2;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports2, module2) {
    var Stack2 = require_Stack();
    var baseIsEqual2 = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var COMPARE_UNORDERED_FLAG5 = 2;
    function baseIsMatch2(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data2 = matchData[index];
        if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data2 = matchData[index];
        var key2 = data2[0], objValue = object[key2], srcValue = data2[1];
        if (noCustomizer && data2[2]) {
          if (objValue === void 0 && !(key2 in object)) {
            return false;
          }
        } else {
          var stack = new Stack2();
          if (customizer) {
            var result = customizer(objValue, srcValue, key2, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG7 | COMPARE_UNORDERED_FLAG5, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module2.exports = baseIsMatch2;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports2, module2) {
    var isObject3 = require_isObject();
    function isStrictComparable2(value) {
      return value === value && !isObject3(value);
    }
    module2.exports = isStrictComparable2;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports2, module2) {
    var isStrictComparable2 = require_isStrictComparable();
    var keys2 = require_keys();
    function getMatchData2(object) {
      var result = keys2(object), length = result.length;
      while (length--) {
        var key2 = result[length], value = object[key2];
        result[length] = [key2, value, isStrictComparable2(value)];
      }
      return result;
    }
    module2.exports = getMatchData2;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports2, module2) {
    function matchesStrictComparable2(key2, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object));
      };
    }
    module2.exports = matchesStrictComparable2;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports2, module2) {
    var baseIsMatch2 = require_baseIsMatch();
    var getMatchData2 = require_getMatchData();
    var matchesStrictComparable2 = require_matchesStrictComparable();
    function baseMatches2(source) {
      var matchData = getMatchData2(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable2(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch2(object, source, matchData);
      };
    }
    module2.exports = baseMatches2;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports2, module2) {
    var baseGetTag2 = require_baseGetTag();
    var isObjectLike2 = require_isObjectLike();
    var symbolTag3 = "[object Symbol]";
    function isSymbol2(value) {
      return typeof value == "symbol" || isObjectLike2(value) && baseGetTag2(value) == symbolTag3;
    }
    module2.exports = isSymbol2;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports2, module2) {
    var isArray3 = require_isArray();
    var isSymbol2 = require_isSymbol();
    var reIsDeepProp2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp2 = /^\w*$/;
    function isKey2(value, object) {
      if (isArray3(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol2(value)) {
        return true;
      }
      return reIsPlainProp2.test(value) || !reIsDeepProp2.test(value) || object != null && value in Object(object);
    }
    module2.exports = isKey2;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports2, module2) {
    var MapCache2 = require_MapCache();
    var FUNC_ERROR_TEXT4 = "Expected a function";
    function memoize2(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT4);
      }
      var memoized = function() {
        var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key2)) {
          return cache.get(key2);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key2, result) || cache;
        return result;
      };
      memoized.cache = new (memoize2.Cache || MapCache2)();
      return memoized;
    }
    memoize2.Cache = MapCache2;
    module2.exports = memoize2;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports2, module2) {
    var memoize2 = require_memoize();
    var MAX_MEMOIZE_SIZE2 = 500;
    function memoizeCapped2(func) {
      var result = memoize2(func, function(key2) {
        if (cache.size === MAX_MEMOIZE_SIZE2) {
          cache.clear();
        }
        return key2;
      });
      var cache = result.cache;
      return result;
    }
    module2.exports = memoizeCapped2;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports2, module2) {
    var memoizeCapped2 = require_memoizeCapped();
    var rePropName2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar2 = /\\(\\)?/g;
    var stringToPath2 = memoizeCapped2(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName2, function(match2, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar2, "$1") : number || match2);
      });
      return result;
    });
    module2.exports = stringToPath2;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports2, module2) {
    var Symbol3 = require_Symbol();
    var arrayMap2 = require_arrayMap();
    var isArray3 = require_isArray();
    var isSymbol2 = require_isSymbol();
    var INFINITY3 = 1 / 0;
    var symbolProto3 = Symbol3 ? Symbol3.prototype : void 0;
    var symbolToString2 = symbolProto3 ? symbolProto3.toString : void 0;
    function baseToString2(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray3(value)) {
        return arrayMap2(value, baseToString2) + "";
      }
      if (isSymbol2(value)) {
        return symbolToString2 ? symbolToString2.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY3 ? "-0" : result;
    }
    module2.exports = baseToString2;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports2, module2) {
    var baseToString2 = require_baseToString();
    function toString5(value) {
      return value == null ? "" : baseToString2(value);
    }
    module2.exports = toString5;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports2, module2) {
    var isArray3 = require_isArray();
    var isKey2 = require_isKey();
    var stringToPath2 = require_stringToPath();
    var toString5 = require_toString();
    function castPath2(value, object) {
      if (isArray3(value)) {
        return value;
      }
      return isKey2(value, object) ? [value] : stringToPath2(toString5(value));
    }
    module2.exports = castPath2;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports2, module2) {
    var isSymbol2 = require_isSymbol();
    var INFINITY3 = 1 / 0;
    function toKey2(value) {
      if (typeof value == "string" || isSymbol2(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY3 ? "-0" : result;
    }
    module2.exports = toKey2;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports2, module2) {
    var castPath2 = require_castPath();
    var toKey2 = require_toKey();
    function baseGet2(object, path) {
      path = castPath2(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey2(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module2.exports = baseGet2;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports2, module2) {
    var baseGet2 = require_baseGet();
    function get4(object, path, defaultValue2) {
      var result = object == null ? void 0 : baseGet2(object, path);
      return result === void 0 ? defaultValue2 : result;
    }
    module2.exports = get4;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports2, module2) {
    function baseHasIn2(object, key2) {
      return object != null && key2 in Object(object);
    }
    module2.exports = baseHasIn2;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports2, module2) {
    var castPath2 = require_castPath();
    var isArguments2 = require_isArguments();
    var isArray3 = require_isArray();
    var isIndex2 = require_isIndex();
    var isLength2 = require_isLength();
    var toKey2 = require_toKey();
    function hasPath2(object, path, hasFunc) {
      path = castPath2(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key2 = toKey2(path[index]);
        if (!(result = object != null && hasFunc(object, key2))) {
          break;
        }
        object = object[key2];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength2(length) && isIndex2(key2, length) && (isArray3(object) || isArguments2(object));
    }
    module2.exports = hasPath2;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports2, module2) {
    var baseHasIn2 = require_baseHasIn();
    var hasPath2 = require_hasPath();
    function hasIn2(object, path) {
      return object != null && hasPath2(object, path, baseHasIn2);
    }
    module2.exports = hasIn2;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports2, module2) {
    var baseIsEqual2 = require_baseIsEqual();
    var get4 = require_get();
    var hasIn2 = require_hasIn();
    var isKey2 = require_isKey();
    var isStrictComparable2 = require_isStrictComparable();
    var matchesStrictComparable2 = require_matchesStrictComparable();
    var toKey2 = require_toKey();
    var COMPARE_PARTIAL_FLAG7 = 1;
    var COMPARE_UNORDERED_FLAG5 = 2;
    function baseMatchesProperty2(path, srcValue) {
      if (isKey2(path) && isStrictComparable2(srcValue)) {
        return matchesStrictComparable2(toKey2(path), srcValue);
      }
      return function(object) {
        var objValue = get4(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn2(object, path) : baseIsEqual2(srcValue, objValue, COMPARE_PARTIAL_FLAG7 | COMPARE_UNORDERED_FLAG5);
      };
    }
    module2.exports = baseMatchesProperty2;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports2, module2) {
    function baseProperty2(key2) {
      return function(object) {
        return object == null ? void 0 : object[key2];
      };
    }
    module2.exports = baseProperty2;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports2, module2) {
    var baseGet2 = require_baseGet();
    function basePropertyDeep2(path) {
      return function(object) {
        return baseGet2(object, path);
      };
    }
    module2.exports = basePropertyDeep2;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports2, module2) {
    var baseProperty2 = require_baseProperty();
    var basePropertyDeep2 = require_basePropertyDeep();
    var isKey2 = require_isKey();
    var toKey2 = require_toKey();
    function property2(path) {
      return isKey2(path) ? baseProperty2(toKey2(path)) : basePropertyDeep2(path);
    }
    module2.exports = property2;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports2, module2) {
    var baseMatches2 = require_baseMatches();
    var baseMatchesProperty2 = require_baseMatchesProperty();
    var identity2 = require_identity();
    var isArray3 = require_isArray();
    var property2 = require_property();
    function baseIteratee2(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity2;
      }
      if (typeof value == "object") {
        return isArray3(value) ? baseMatchesProperty2(value[0], value[1]) : baseMatches2(value);
      }
      return property2(value);
    }
    module2.exports = baseIteratee2;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports2, module2) {
    var isArrayLike2 = require_isArrayLike();
    function createBaseEach2(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike2(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module2.exports = createBaseEach2;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports2, module2) {
    var baseForOwn2 = require_baseForOwn();
    var createBaseEach2 = require_createBaseEach();
    var baseEach2 = createBaseEach2(baseForOwn2);
    module2.exports = baseEach2;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports2, module2) {
    var baseEach2 = require_baseEach();
    var isArrayLike2 = require_isArrayLike();
    function baseMap2(collection, iteratee) {
      var index = -1, result = isArrayLike2(collection) ? Array(collection.length) : [];
      baseEach2(collection, function(value, key2, collection2) {
        result[++index] = iteratee(value, key2, collection2);
      });
      return result;
    }
    module2.exports = baseMap2;
  }
});

// node_modules/lodash/map.js
var require_map = __commonJS({
  "node_modules/lodash/map.js"(exports2, module2) {
    var arrayMap2 = require_arrayMap();
    var baseIteratee2 = require_baseIteratee();
    var baseMap2 = require_baseMap();
    var isArray3 = require_isArray();
    function map2(collection, iteratee) {
      var func = isArray3(collection) ? arrayMap2 : baseMap2;
      return func(collection, baseIteratee2(iteratee, 3));
    }
    module2.exports = map2;
  }
});

// node_modules/reactcss/lib/flattenNames.js
var require_flattenNames = __commonJS({
  "node_modules/reactcss/lib/flattenNames.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.flattenNames = void 0;
    var _isString2 = require_isString();
    var _isString3 = _interopRequireDefault(_isString2);
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _isPlainObject2 = require_isPlainObject();
    var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
    var _map2 = require_map();
    var _map3 = _interopRequireDefault(_map2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var flattenNames = exports2.flattenNames = function flattenNames2() {
      var things = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var names2 = [];
      (0, _map3.default)(things, function(thing) {
        if (Array.isArray(thing)) {
          flattenNames2(thing).map(function(name) {
            return names2.push(name);
          });
        } else if ((0, _isPlainObject3.default)(thing)) {
          (0, _forOwn3.default)(thing, function(value, key2) {
            value === true && names2.push(key2);
            names2.push(key2 + "-" + value);
          });
        } else if ((0, _isString3.default)(thing)) {
          names2.push(thing);
        }
      });
      return names2;
    };
    exports2.default = flattenNames;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports2, module2) {
    function arrayEach2(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module2.exports = arrayEach2;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports2, module2) {
    var getNative2 = require_getNative();
    var defineProperty2 = function() {
      try {
        var func = getNative2(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e4) {
      }
    }();
    module2.exports = defineProperty2;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports2, module2) {
    var defineProperty2 = require_defineProperty();
    function baseAssignValue2(object, key2, value) {
      if (key2 == "__proto__" && defineProperty2) {
        defineProperty2(object, key2, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key2] = value;
      }
    }
    module2.exports = baseAssignValue2;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports2, module2) {
    var baseAssignValue2 = require_baseAssignValue();
    var eq2 = require_eq();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function assignValue2(object, key2, value) {
      var objValue = object[key2];
      if (!(hasOwnProperty14.call(object, key2) && eq2(objValue, value)) || value === void 0 && !(key2 in object)) {
        baseAssignValue2(object, key2, value);
      }
    }
    module2.exports = assignValue2;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports2, module2) {
    var assignValue2 = require_assignValue();
    var baseAssignValue2 = require_baseAssignValue();
    function copyObject2(source, props2, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props2.length;
      while (++index < length) {
        var key2 = props2[index];
        var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key2];
        }
        if (isNew) {
          baseAssignValue2(object, key2, newValue);
        } else {
          assignValue2(object, key2, newValue);
        }
      }
      return object;
    }
    module2.exports = copyObject2;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports2, module2) {
    var copyObject2 = require_copyObject();
    var keys2 = require_keys();
    function baseAssign(object, source) {
      return object && copyObject2(source, keys2(source), object);
    }
    module2.exports = baseAssign;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports2, module2) {
    function nativeKeysIn2(object) {
      var result = [];
      if (object != null) {
        for (var key2 in Object(object)) {
          result.push(key2);
        }
      }
      return result;
    }
    module2.exports = nativeKeysIn2;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports2, module2) {
    var isObject3 = require_isObject();
    var isPrototype2 = require_isPrototype();
    var nativeKeysIn2 = require_nativeKeysIn();
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function baseKeysIn2(object) {
      if (!isObject3(object)) {
        return nativeKeysIn2(object);
      }
      var isProto = isPrototype2(object), result = [];
      for (var key2 in object) {
        if (!(key2 == "constructor" && (isProto || !hasOwnProperty14.call(object, key2)))) {
          result.push(key2);
        }
      }
      return result;
    }
    module2.exports = baseKeysIn2;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports2, module2) {
    var arrayLikeKeys2 = require_arrayLikeKeys();
    var baseKeysIn2 = require_baseKeysIn();
    var isArrayLike2 = require_isArrayLike();
    function keysIn2(object) {
      return isArrayLike2(object) ? arrayLikeKeys2(object, true) : baseKeysIn2(object);
    }
    module2.exports = keysIn2;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports2, module2) {
    var copyObject2 = require_copyObject();
    var keysIn2 = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject2(source, keysIn2(source), object);
    }
    module2.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports2, module2) {
    var root2 = require_root();
    var freeExports4 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
    var freeModule4 = freeExports4 && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports4 = freeModule4 && freeModule4.exports === freeExports4;
    var Buffer4 = moduleExports4 ? root2.Buffer : void 0;
    var allocUnsafe2 = Buffer4 ? Buffer4.allocUnsafe : void 0;
    function cloneBuffer2(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe2 ? allocUnsafe2(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module2.exports = cloneBuffer2;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports2, module2) {
    function copyArray2(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module2.exports = copyArray2;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports2, module2) {
    var copyObject2 = require_copyObject();
    var getSymbols2 = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject2(source, getSymbols2(source), object);
    }
    module2.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports2, module2) {
    var arrayPush2 = require_arrayPush();
    var getPrototype2 = require_getPrototype();
    var getSymbols2 = require_getSymbols();
    var stubArray2 = require_stubArray();
    var nativeGetSymbols2 = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols2 ? stubArray2 : function(object) {
      var result = [];
      while (object) {
        arrayPush2(result, getSymbols2(object));
        object = getPrototype2(object);
      }
      return result;
    };
    module2.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports2, module2) {
    var copyObject2 = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject2(source, getSymbolsIn(source), object);
    }
    module2.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports2, module2) {
    var baseGetAllKeys2 = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn2 = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys2(object, keysIn2, getSymbolsIn);
    }
    module2.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports2, module2) {
    var objectProto16 = Object.prototype;
    var hasOwnProperty14 = objectProto16.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module2.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports2, module2) {
    var Uint8Array3 = require_Uint8Array();
    function cloneArrayBuffer2(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array3(result).set(new Uint8Array3(arrayBuffer));
      return result;
    }
    module2.exports = cloneArrayBuffer2;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports2, module2) {
    var cloneArrayBuffer2 = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer2(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module2.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports2, module2) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module2.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports2, module2) {
    var Symbol3 = require_Symbol();
    var symbolProto3 = Symbol3 ? Symbol3.prototype : void 0;
    var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf2 ? Object(symbolValueOf2.call(symbol)) : {};
    }
    module2.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports2, module2) {
    var cloneArrayBuffer2 = require_cloneArrayBuffer();
    function cloneTypedArray2(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer2(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module2.exports = cloneTypedArray2;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports2, module2) {
    var cloneArrayBuffer2 = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray2 = require_cloneTypedArray();
    var boolTag3 = "[object Boolean]";
    var dateTag3 = "[object Date]";
    var mapTag4 = "[object Map]";
    var numberTag3 = "[object Number]";
    var regexpTag3 = "[object RegExp]";
    var setTag4 = "[object Set]";
    var stringTag3 = "[object String]";
    var symbolTag3 = "[object Symbol]";
    var arrayBufferTag3 = "[object ArrayBuffer]";
    var dataViewTag4 = "[object DataView]";
    var float32Tag2 = "[object Float32Array]";
    var float64Tag2 = "[object Float64Array]";
    var int8Tag2 = "[object Int8Array]";
    var int16Tag2 = "[object Int16Array]";
    var int32Tag2 = "[object Int32Array]";
    var uint8Tag2 = "[object Uint8Array]";
    var uint8ClampedTag2 = "[object Uint8ClampedArray]";
    var uint16Tag2 = "[object Uint16Array]";
    var uint32Tag2 = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag3:
          return cloneArrayBuffer2(object);
        case boolTag3:
        case dateTag3:
          return new Ctor(+object);
        case dataViewTag4:
          return cloneDataView(object, isDeep);
        case float32Tag2:
        case float64Tag2:
        case int8Tag2:
        case int16Tag2:
        case int32Tag2:
        case uint8Tag2:
        case uint8ClampedTag2:
        case uint16Tag2:
        case uint32Tag2:
          return cloneTypedArray2(object, isDeep);
        case mapTag4:
          return new Ctor();
        case numberTag3:
        case stringTag3:
          return new Ctor(object);
        case regexpTag3:
          return cloneRegExp(object);
        case setTag4:
          return new Ctor();
        case symbolTag3:
          return cloneSymbol(object);
      }
    }
    module2.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports2, module2) {
    var isObject3 = require_isObject();
    var objectCreate2 = Object.create;
    var baseCreate2 = function() {
      function object() {
      }
      return function(proto) {
        if (!isObject3(proto)) {
          return {};
        }
        if (objectCreate2) {
          return objectCreate2(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module2.exports = baseCreate2;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports2, module2) {
    var baseCreate2 = require_baseCreate();
    var getPrototype2 = require_getPrototype();
    var isPrototype2 = require_isPrototype();
    function initCloneObject2(object) {
      return typeof object.constructor == "function" && !isPrototype2(object) ? baseCreate2(getPrototype2(object)) : {};
    }
    module2.exports = initCloneObject2;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports2, module2) {
    var getTag2 = require_getTag();
    var isObjectLike2 = require_isObjectLike();
    var mapTag4 = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike2(value) && getTag2(value) == mapTag4;
    }
    module2.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports2, module2) {
    var baseIsMap = require_baseIsMap();
    var baseUnary2 = require_baseUnary();
    var nodeUtil2 = require_nodeUtil();
    var nodeIsMap = nodeUtil2 && nodeUtil2.isMap;
    var isMap = nodeIsMap ? baseUnary2(nodeIsMap) : baseIsMap;
    module2.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports2, module2) {
    var getTag2 = require_getTag();
    var isObjectLike2 = require_isObjectLike();
    var setTag4 = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike2(value) && getTag2(value) == setTag4;
    }
    module2.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports2, module2) {
    var baseIsSet = require_baseIsSet();
    var baseUnary2 = require_baseUnary();
    var nodeUtil2 = require_nodeUtil();
    var nodeIsSet = nodeUtil2 && nodeUtil2.isSet;
    var isSet = nodeIsSet ? baseUnary2(nodeIsSet) : baseIsSet;
    module2.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports2, module2) {
    var Stack2 = require_Stack();
    var arrayEach2 = require_arrayEach();
    var assignValue2 = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer2 = require_cloneBuffer();
    var copyArray2 = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys2 = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag2 = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject2 = require_initCloneObject();
    var isArray3 = require_isArray();
    var isBuffer2 = require_isBuffer();
    var isMap = require_isMap();
    var isObject3 = require_isObject();
    var isSet = require_isSet();
    var keys2 = require_keys();
    var keysIn2 = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag4 = "[object Arguments]";
    var arrayTag3 = "[object Array]";
    var boolTag3 = "[object Boolean]";
    var dateTag3 = "[object Date]";
    var errorTag3 = "[object Error]";
    var funcTag3 = "[object Function]";
    var genTag2 = "[object GeneratorFunction]";
    var mapTag4 = "[object Map]";
    var numberTag3 = "[object Number]";
    var objectTag5 = "[object Object]";
    var regexpTag3 = "[object RegExp]";
    var setTag4 = "[object Set]";
    var stringTag3 = "[object String]";
    var symbolTag3 = "[object Symbol]";
    var weakMapTag3 = "[object WeakMap]";
    var arrayBufferTag3 = "[object ArrayBuffer]";
    var dataViewTag4 = "[object DataView]";
    var float32Tag2 = "[object Float32Array]";
    var float64Tag2 = "[object Float64Array]";
    var int8Tag2 = "[object Int8Array]";
    var int16Tag2 = "[object Int16Array]";
    var int32Tag2 = "[object Int32Array]";
    var uint8Tag2 = "[object Uint8Array]";
    var uint8ClampedTag2 = "[object Uint8ClampedArray]";
    var uint16Tag2 = "[object Uint16Array]";
    var uint32Tag2 = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag4] = cloneableTags[arrayTag3] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag2] = cloneableTags[float64Tag2] = cloneableTags[int8Tag2] = cloneableTags[int16Tag2] = cloneableTags[int32Tag2] = cloneableTags[mapTag4] = cloneableTags[numberTag3] = cloneableTags[objectTag5] = cloneableTags[regexpTag3] = cloneableTags[setTag4] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag2] = cloneableTags[uint8ClampedTag2] = cloneableTags[uint16Tag2] = cloneableTags[uint32Tag2] = true;
    cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
    function baseClone(value, bitmask, customizer, key2, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key2, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject3(value)) {
        return value;
      }
      var isArr = isArray3(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray2(value, result);
        }
      } else {
        var tag = getTag2(value), isFunc = tag == funcTag3 || tag == genTag2;
        if (isBuffer2(value)) {
          return cloneBuffer2(value, isDeep);
        }
        if (tag == objectTag5 || tag == argsTag4 || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject2(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack2());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key3) {
          result.set(key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys2 : isFlat ? keysIn2 : keys2;
      var props2 = isArr ? void 0 : keysFunc(value);
      arrayEach2(props2 || value, function(subValue, key3) {
        if (props2) {
          key3 = subValue;
          subValue = value[key3];
        }
        assignValue2(result, key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
      });
      return result;
    }
    module2.exports = baseClone;
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports2, module2) {
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module2.exports = cloneDeep;
  }
});

// node_modules/reactcss/lib/mergeClasses.js
var require_mergeClasses = __commonJS({
  "node_modules/reactcss/lib/mergeClasses.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.mergeClasses = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _cloneDeep2 = require_cloneDeep();
    var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var mergeClasses = exports2.mergeClasses = function mergeClasses2(classes) {
      var activeNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      var styles2 = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
      activeNames.map(function(name) {
        var toMerge = classes[name];
        if (toMerge) {
          (0, _forOwn3.default)(toMerge, function(value, key2) {
            if (!styles2[key2]) {
              styles2[key2] = {};
            }
            styles2[key2] = _extends11({}, styles2[key2], toMerge[key2]);
          });
        }
        return name;
      });
      return styles2;
    };
    exports2.default = mergeClasses;
  }
});

// node_modules/reactcss/lib/autoprefix.js
var require_autoprefix = __commonJS({
  "node_modules/reactcss/lib/autoprefix.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.autoprefix = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var transforms = {
      borderRadius: function borderRadius(value) {
        return {
          msBorderRadius: value,
          MozBorderRadius: value,
          OBorderRadius: value,
          WebkitBorderRadius: value,
          borderRadius: value
        };
      },
      boxShadow: function boxShadow(value) {
        return {
          msBoxShadow: value,
          MozBoxShadow: value,
          OBoxShadow: value,
          WebkitBoxShadow: value,
          boxShadow: value
        };
      },
      userSelect: function userSelect(value) {
        return {
          WebkitTouchCallout: value,
          KhtmlUserSelect: value,
          MozUserSelect: value,
          msUserSelect: value,
          WebkitUserSelect: value,
          userSelect: value
        };
      },
      flex: function flex(value) {
        return {
          WebkitBoxFlex: value,
          MozBoxFlex: value,
          WebkitFlex: value,
          msFlex: value,
          flex: value
        };
      },
      flexBasis: function flexBasis(value) {
        return {
          WebkitFlexBasis: value,
          flexBasis: value
        };
      },
      justifyContent: function justifyContent(value) {
        return {
          WebkitJustifyContent: value,
          justifyContent: value
        };
      },
      transition: function transition(value) {
        return {
          msTransition: value,
          MozTransition: value,
          OTransition: value,
          WebkitTransition: value,
          transition: value
        };
      },
      transform: function transform(value) {
        return {
          msTransform: value,
          MozTransform: value,
          OTransform: value,
          WebkitTransform: value,
          transform: value
        };
      },
      absolute: function absolute(value) {
        var direction = value && value.split(" ");
        return {
          position: "absolute",
          top: direction && direction[0],
          right: direction && direction[1],
          bottom: direction && direction[2],
          left: direction && direction[3]
        };
      },
      extend: function extend2(name, otherElementStyles) {
        var otherStyle = otherElementStyles[name];
        if (otherStyle) {
          return otherStyle;
        }
        return {
          "extend": name
        };
      }
    };
    var autoprefix = exports2.autoprefix = function autoprefix2(elements) {
      var prefixed = {};
      (0, _forOwn3.default)(elements, function(styles2, element) {
        var expanded = {};
        (0, _forOwn3.default)(styles2, function(value, key2) {
          var transform = transforms[key2];
          if (transform) {
            expanded = _extends11({}, expanded, transform(value));
          } else {
            expanded[key2] = value;
          }
        });
        prefixed[element] = expanded;
      });
      return prefixed;
    };
    exports2.default = autoprefix;
  }
});

// node_modules/reactcss/lib/components/hover.js
var require_hover = __commonJS({
  "node_modules/reactcss/lib/components/hover.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.hover = void 0;
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = (init_compat_module(), __toCommonJS(compat_module_exports));
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck9(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn9(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits9(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var hover = exports2.hover = function hover2(Component4) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits9(Hover, _React$Component);
        function Hover() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck9(this, Hover);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn9(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.handleMouseOver = function() {
            return _this.setState({ hover: true });
          }, _this.handleMouseOut = function() {
            return _this.setState({ hover: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseOver: _this.handleMouseOver, onMouseOut: _this.handleMouseOut },
              _react2.default.createElement(Component4, _extends11({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn9(_this, _ret);
        }
        return Hover;
      }(_react2.default.Component);
    };
    exports2.default = hover;
  }
});

// node_modules/reactcss/lib/components/active.js
var require_active = __commonJS({
  "node_modules/reactcss/lib/components/active.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.active = void 0;
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = (init_compat_module(), __toCommonJS(compat_module_exports));
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck9(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn9(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits9(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var active = exports2.active = function active2(Component4) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits9(Active, _React$Component);
        function Active() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck9(this, Active);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn9(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = { active: false }, _this.handleMouseDown = function() {
            return _this.setState({ active: true });
          }, _this.handleMouseUp = function() {
            return _this.setState({ active: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp },
              _react2.default.createElement(Component4, _extends11({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn9(_this, _ret);
        }
        return Active;
      }(_react2.default.Component);
    };
    exports2.default = active;
  }
});

// node_modules/reactcss/lib/loop.js
var require_loop = __commonJS({
  "node_modules/reactcss/lib/loop.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var loopable = function loopable2(i4, length) {
      var props2 = {};
      var setProp = function setProp2(name) {
        var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        props2[name] = value;
      };
      i4 === 0 && setProp("first-child");
      i4 === length - 1 && setProp("last-child");
      (i4 === 0 || i4 % 2 === 0) && setProp("even");
      Math.abs(i4 % 2) === 1 && setProp("odd");
      setProp("nth-child", i4);
      return props2;
    };
    exports2.default = loopable;
  }
});

// node_modules/reactcss/lib/index.js
var require_lib = __commonJS({
  "node_modules/reactcss/lib/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    exports2.ReactCSS = exports2.loop = exports2.handleActive = exports2.handleHover = exports2.hover = void 0;
    var _flattenNames = require_flattenNames();
    var _flattenNames2 = _interopRequireDefault(_flattenNames);
    var _mergeClasses = require_mergeClasses();
    var _mergeClasses2 = _interopRequireDefault(_mergeClasses);
    var _autoprefix = require_autoprefix();
    var _autoprefix2 = _interopRequireDefault(_autoprefix);
    var _hover2 = require_hover();
    var _hover3 = _interopRequireDefault(_hover2);
    var _active = require_active();
    var _active2 = _interopRequireDefault(_active);
    var _loop2 = require_loop();
    var _loop3 = _interopRequireDefault(_loop2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports2.hover = _hover3.default;
    exports2.handleHover = _hover3.default;
    exports2.handleActive = _active2.default;
    exports2.loop = _loop3.default;
    var ReactCSS = exports2.ReactCSS = function ReactCSS2(classes) {
      for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        activations[_key - 1] = arguments[_key];
      }
      var activeNames = (0, _flattenNames2.default)(activations);
      var merged = (0, _mergeClasses2.default)(classes, activeNames);
      return (0, _autoprefix2.default)(merged);
    };
    exports2.default = ReactCSS;
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports2.AsyncMode = AsyncMode;
        exports2.ConcurrentMode = ConcurrentMode;
        exports2.ContextConsumer = ContextConsumer;
        exports2.ContextProvider = ContextProvider;
        exports2.Element = Element;
        exports2.ForwardRef = ForwardRef;
        exports2.Fragment = Fragment;
        exports2.Lazy = Lazy;
        exports2.Memo = Memo;
        exports2.Portal = Portal;
        exports2.Profiler = Profiler;
        exports2.StrictMode = StrictMode;
        exports2.Suspense = Suspense;
        exports2.isAsyncMode = isAsyncMode;
        exports2.isConcurrentMode = isConcurrentMode;
        exports2.isContextConsumer = isContextConsumer;
        exports2.isContextProvider = isContextProvider;
        exports2.isElement = isElement;
        exports2.isForwardRef = isForwardRef;
        exports2.isFragment = isFragment;
        exports2.isLazy = isLazy;
        exports2.isMemo = isMemo;
        exports2.isPortal = isPortal;
        exports2.isProfiler = isProfiler;
        exports2.isStrictMode = isStrictMode;
        exports2.isSuspense = isSuspense;
        exports2.isValidElementType = isValidElementType;
        exports2.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports2, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports2, module2) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty14 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i4 = 0; i4 < 10; i4++) {
          test2["_" + String.fromCharCode(i4)] = i4;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
          return test2[n2];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s5 = 1; s5 < arguments.length; s5++) {
        from = Object(arguments[s5]);
        for (var key2 in from) {
          if (hasOwnProperty14.call(from, key2)) {
            to[key2] = from[key2];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i4 = 0; i4 < symbols.length; i4++) {
            if (propIsEnumerable.call(from, symbols[i4])) {
              to[symbols[i4]] = from[symbols[i4]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports2, module2) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module2.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports2, module2) {
    module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports2, module2) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x5) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module2.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports2, module2) {
    "use strict";
    var ReactIs = require_react_is();
    var assign2 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x5) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module2.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x5, y5) {
        if (x5 === y5) {
          return x5 !== 0 || 1 / x5 === 1 / y5;
        } else {
          return x5 !== x5 && y5 !== y5;
        }
      }
      function PropTypeError(message, data2) {
        this.message = message;
        this.data = data2 && typeof data2 === "object" ? data2 : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props2, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props2[propName] == null) {
            if (isRequired) {
              if (props2[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props2, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props2, propName, componentName, location, propFullName, secret) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props2[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i4 = 0; i4 < propValue.length; i4++) {
            var error = typeChecker(propValue, i4, componentName, location, propFullName + "[" + i4 + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (!(props2[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props2[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          for (var i4 = 0; i4 < expectedValues.length; i4++) {
            if (is(propValue, expectedValues[i4])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key2, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props2, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key2 in propValue) {
            if (has(propValue, key2)) {
              var error = typeChecker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i4 = 0; i4 < arrayOfTypeCheckers.length; i4++) {
          var checker = arrayOfTypeCheckers[i4];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i4 + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props2, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i5 = 0; i5 < arrayOfTypeCheckers.length; i5++) {
            var checker2 = arrayOfTypeCheckers[i5];
            var checkerResult = checker2(props2, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props2, propName, componentName, location, propFullName) {
          if (!isNode2(props2[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key2, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key2 + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key2 in shapeTypes) {
            var checker = shapeTypes[key2];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            var error = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props2, propName, componentName, location, propFullName) {
          var propValue = props2[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign2({}, props2[propName], shapeTypes);
          for (var key2 in allKeys) {
            var checker = shapeTypes[key2];
            if (has(shapeTypes, key2) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key2, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key2 + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props2[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key2, componentName, location, propFullName + "." + key2, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode2(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode2);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode2(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode2(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol2(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol2(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports2, module2) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module2.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module2.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-color/node_modules/@icons/material/UnfoldMoreHorizontalIcon.js
var require_UnfoldMoreHorizontalIcon = __commonJS({
  "node_modules/react-color/node_modules/@icons/material/UnfoldMoreHorizontalIcon.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = (init_compat_module(), __toCommonJS(compat_module_exports));
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties2(obj, keys2) {
      var target = {};
      for (var i4 in obj) {
        if (keys2.indexOf(i4) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i4))
          continue;
        target[i4] = obj[i4];
      }
      return target;
    }
    var DEFAULT_SIZE2 = 24;
    exports2.default = function(_ref) {
      var _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "currentColor" : _ref$fill, _ref$width = _ref.width, width = _ref$width === void 0 ? DEFAULT_SIZE2 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_SIZE2 : _ref$height, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, props2 = _objectWithoutProperties2(_ref, ["fill", "width", "height", "style"]);
      return _react2.default.createElement(
        "svg",
        _extends11({
          viewBox: "0 0 " + DEFAULT_SIZE2 + " " + DEFAULT_SIZE2,
          style: _extends11({ fill, width, height }, style)
        }, props2),
        _react2.default.createElement("path", { d: "M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z" })
      );
    };
  }
});

// node_modules/react-color/node_modules/@icons/material/CheckIcon.js
var require_CheckIcon = __commonJS({
  "node_modules/react-color/node_modules/@icons/material/CheckIcon.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    var _extends11 = Object.assign || function(target) {
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var source = arguments[i4];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = (init_compat_module(), __toCommonJS(compat_module_exports));
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties2(obj, keys2) {
      var target = {};
      for (var i4 in obj) {
        if (keys2.indexOf(i4) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i4))
          continue;
        target[i4] = obj[i4];
      }
      return target;
    }
    var DEFAULT_SIZE2 = 24;
    exports2.default = function(_ref) {
      var _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "currentColor" : _ref$fill, _ref$width = _ref.width, width = _ref$width === void 0 ? DEFAULT_SIZE2 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_SIZE2 : _ref$height, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, props2 = _objectWithoutProperties2(_ref, ["fill", "width", "height", "style"]);
      return _react2.default.createElement(
        "svg",
        _extends11({
          viewBox: "0 0 " + DEFAULT_SIZE2 + " " + DEFAULT_SIZE2,
          style: _extends11({ fill, width, height }, style)
        }, props2),
        _react2.default.createElement("path", { d: "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" })
      );
    };
  }
});

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports2) {
    "use strict";
    exports2.__esModule = true;
    exports2.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/obsidian-dataview/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/obsidian-dataview/lib/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    require("obsidian");
    var getAPI2 = (app2) => {
      var _a2;
      if (app2)
        return (_a2 = app2.plugins.plugins.dataview) === null || _a2 === void 0 ? void 0 : _a2.api;
      else
        return window["DataviewAPI"];
    };
    var isPluginEnabled = (app2) => app2.plugins.enabledPlugins.has("dataview");
    exports2.getAPI = getAPI2;
    exports2.isPluginEnabled = isPluginEnabled;
  }
});

// node_modules/localforage/dist/localforage.js
var require_localforage = __commonJS({
  "node_modules/localforage/dist/localforage.js"(exports2, module2) {
    (function(f4) {
      if (typeof exports2 === "object" && typeof module2 !== "undefined") {
        module2.exports = f4();
      } else if (typeof define === "function" && define.amd) {
        define([], f4);
      } else {
        var g4;
        if (typeof window !== "undefined") {
          g4 = window;
        } else if (typeof global !== "undefined") {
          g4 = global;
        } else if (typeof self !== "undefined") {
          g4 = self;
        } else {
          g4 = this;
        }
        g4.localforage = f4();
      }
    })(function() {
      var define2, module3, exports3;
      return function e4(t4, n2, r3) {
        function s5(o4, u4) {
          if (!n2[o4]) {
            if (!t4[o4]) {
              var a5 = typeof require == "function" && require;
              if (!u4 && a5)
                return a5(o4, true);
              if (i4)
                return i4(o4, true);
              var f4 = new Error("Cannot find module '" + o4 + "'");
              throw f4.code = "MODULE_NOT_FOUND", f4;
            }
            var l3 = n2[o4] = { exports: {} };
            t4[o4][0].call(l3.exports, function(e5) {
              var n3 = t4[o4][1][e5];
              return s5(n3 ? n3 : e5);
            }, l3, l3.exports, e4, t4, n2, r3);
          }
          return n2[o4].exports;
        }
        var i4 = typeof require == "function" && require;
        for (var o3 = 0; o3 < r3.length; o3++)
          s5(r3[o3]);
        return s5;
      }({ 1: [function(_dereq_, module4, exports4) {
        (function(global2) {
          "use strict";
          var Mutation = global2.MutationObserver || global2.WebKitMutationObserver;
          var scheduleDrain;
          {
            if (Mutation) {
              var called = 0;
              var observer = new Mutation(nextTick);
              var element = global2.document.createTextNode("");
              observer.observe(element, {
                characterData: true
              });
              scheduleDrain = function() {
                element.data = called = ++called % 2;
              };
            } else if (!global2.setImmediate && typeof global2.MessageChannel !== "undefined") {
              var channel = new global2.MessageChannel();
              channel.port1.onmessage = nextTick;
              scheduleDrain = function() {
                channel.port2.postMessage(0);
              };
            } else if ("document" in global2 && "onreadystatechange" in global2.document.createElement("script")) {
              scheduleDrain = function() {
                var scriptEl = global2.document.createElement("script");
                scriptEl.onreadystatechange = function() {
                  nextTick();
                  scriptEl.onreadystatechange = null;
                  scriptEl.parentNode.removeChild(scriptEl);
                  scriptEl = null;
                };
                global2.document.documentElement.appendChild(scriptEl);
              };
            } else {
              scheduleDrain = function() {
                setTimeout(nextTick, 0);
              };
            }
          }
          var draining;
          var queue = [];
          function nextTick() {
            draining = true;
            var i4, oldQueue;
            var len = queue.length;
            while (len) {
              oldQueue = queue;
              queue = [];
              i4 = -1;
              while (++i4 < len) {
                oldQueue[i4]();
              }
              len = queue.length;
            }
            draining = false;
          }
          module4.exports = immediate;
          function immediate(task) {
            if (queue.push(task) === 1 && !draining) {
              scheduleDrain();
            }
          }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
      }, {}], 2: [function(_dereq_, module4, exports4) {
        "use strict";
        var immediate = _dereq_(1);
        function INTERNAL() {
        }
        var handlers = {};
        var REJECTED = ["REJECTED"];
        var FULFILLED = ["FULFILLED"];
        var PENDING = ["PENDING"];
        module4.exports = Promise3;
        function Promise3(resolver) {
          if (typeof resolver !== "function") {
            throw new TypeError("resolver must be a function");
          }
          this.state = PENDING;
          this.queue = [];
          this.outcome = void 0;
          if (resolver !== INTERNAL) {
            safelyResolveThenable(this, resolver);
          }
        }
        Promise3.prototype["catch"] = function(onRejected) {
          return this.then(null, onRejected);
        };
        Promise3.prototype.then = function(onFulfilled, onRejected) {
          if (typeof onFulfilled !== "function" && this.state === FULFILLED || typeof onRejected !== "function" && this.state === REJECTED) {
            return this;
          }
          var promise = new this.constructor(INTERNAL);
          if (this.state !== PENDING) {
            var resolver = this.state === FULFILLED ? onFulfilled : onRejected;
            unwrap(promise, resolver, this.outcome);
          } else {
            this.queue.push(new QueueItem(promise, onFulfilled, onRejected));
          }
          return promise;
        };
        function QueueItem(promise, onFulfilled, onRejected) {
          this.promise = promise;
          if (typeof onFulfilled === "function") {
            this.onFulfilled = onFulfilled;
            this.callFulfilled = this.otherCallFulfilled;
          }
          if (typeof onRejected === "function") {
            this.onRejected = onRejected;
            this.callRejected = this.otherCallRejected;
          }
        }
        QueueItem.prototype.callFulfilled = function(value) {
          handlers.resolve(this.promise, value);
        };
        QueueItem.prototype.otherCallFulfilled = function(value) {
          unwrap(this.promise, this.onFulfilled, value);
        };
        QueueItem.prototype.callRejected = function(value) {
          handlers.reject(this.promise, value);
        };
        QueueItem.prototype.otherCallRejected = function(value) {
          unwrap(this.promise, this.onRejected, value);
        };
        function unwrap(promise, func, value) {
          immediate(function() {
            var returnValue;
            try {
              returnValue = func(value);
            } catch (e4) {
              return handlers.reject(promise, e4);
            }
            if (returnValue === promise) {
              handlers.reject(promise, new TypeError("Cannot resolve promise with itself"));
            } else {
              handlers.resolve(promise, returnValue);
            }
          });
        }
        handlers.resolve = function(self2, value) {
          var result = tryCatch(getThen, value);
          if (result.status === "error") {
            return handlers.reject(self2, result.value);
          }
          var thenable = result.value;
          if (thenable) {
            safelyResolveThenable(self2, thenable);
          } else {
            self2.state = FULFILLED;
            self2.outcome = value;
            var i4 = -1;
            var len = self2.queue.length;
            while (++i4 < len) {
              self2.queue[i4].callFulfilled(value);
            }
          }
          return self2;
        };
        handlers.reject = function(self2, error) {
          self2.state = REJECTED;
          self2.outcome = error;
          var i4 = -1;
          var len = self2.queue.length;
          while (++i4 < len) {
            self2.queue[i4].callRejected(error);
          }
          return self2;
        };
        function getThen(obj) {
          var then = obj && obj.then;
          if (obj && (typeof obj === "object" || typeof obj === "function") && typeof then === "function") {
            return function appyThen() {
              then.apply(obj, arguments);
            };
          }
        }
        function safelyResolveThenable(self2, thenable) {
          var called = false;
          function onError(value) {
            if (called) {
              return;
            }
            called = true;
            handlers.reject(self2, value);
          }
          function onSuccess(value) {
            if (called) {
              return;
            }
            called = true;
            handlers.resolve(self2, value);
          }
          function tryToUnwrap() {
            thenable(onSuccess, onError);
          }
          var result = tryCatch(tryToUnwrap);
          if (result.status === "error") {
            onError(result.value);
          }
        }
        function tryCatch(func, value) {
          var out = {};
          try {
            out.value = func(value);
            out.status = "success";
          } catch (e4) {
            out.status = "error";
            out.value = e4;
          }
          return out;
        }
        Promise3.resolve = resolve;
        function resolve(value) {
          if (value instanceof this) {
            return value;
          }
          return handlers.resolve(new this(INTERNAL), value);
        }
        Promise3.reject = reject;
        function reject(reason) {
          var promise = new this(INTERNAL);
          return handlers.reject(promise, reason);
        }
        Promise3.all = all;
        function all(iterable) {
          var self2 = this;
          if (Object.prototype.toString.call(iterable) !== "[object Array]") {
            return this.reject(new TypeError("must be an array"));
          }
          var len = iterable.length;
          var called = false;
          if (!len) {
            return this.resolve([]);
          }
          var values = new Array(len);
          var resolved = 0;
          var i4 = -1;
          var promise = new this(INTERNAL);
          while (++i4 < len) {
            allResolver(iterable[i4], i4);
          }
          return promise;
          function allResolver(value, i5) {
            self2.resolve(value).then(resolveFromAll, function(error) {
              if (!called) {
                called = true;
                handlers.reject(promise, error);
              }
            });
            function resolveFromAll(outValue) {
              values[i5] = outValue;
              if (++resolved === len && !called) {
                called = true;
                handlers.resolve(promise, values);
              }
            }
          }
        }
        Promise3.race = race;
        function race(iterable) {
          var self2 = this;
          if (Object.prototype.toString.call(iterable) !== "[object Array]") {
            return this.reject(new TypeError("must be an array"));
          }
          var len = iterable.length;
          var called = false;
          if (!len) {
            return this.resolve([]);
          }
          var i4 = -1;
          var promise = new this(INTERNAL);
          while (++i4 < len) {
            resolver(iterable[i4]);
          }
          return promise;
          function resolver(value) {
            self2.resolve(value).then(function(response) {
              if (!called) {
                called = true;
                handlers.resolve(promise, response);
              }
            }, function(error) {
              if (!called) {
                called = true;
                handlers.reject(promise, error);
              }
            });
          }
        }
      }, { "1": 1 }], 3: [function(_dereq_, module4, exports4) {
        (function(global2) {
          "use strict";
          if (typeof global2.Promise !== "function") {
            global2.Promise = _dereq_(2);
          }
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
      }, { "2": 2 }], 4: [function(_dereq_, module4, exports4) {
        "use strict";
        var _typeof6 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
          return typeof obj;
        } : function(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
        function _classCallCheck9(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }
        function getIDB() {
          try {
            if (typeof indexedDB !== "undefined") {
              return indexedDB;
            }
            if (typeof webkitIndexedDB !== "undefined") {
              return webkitIndexedDB;
            }
            if (typeof mozIndexedDB !== "undefined") {
              return mozIndexedDB;
            }
            if (typeof OIndexedDB !== "undefined") {
              return OIndexedDB;
            }
            if (typeof msIndexedDB !== "undefined") {
              return msIndexedDB;
            }
          } catch (e4) {
            return;
          }
        }
        var idb = getIDB();
        function isIndexedDBValid() {
          try {
            if (!idb || !idb.open) {
              return false;
            }
            var isSafari = typeof openDatabase !== "undefined" && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);
            var hasFetch = typeof fetch === "function" && fetch.toString().indexOf("[native code") !== -1;
            return (!isSafari || hasFetch) && typeof indexedDB !== "undefined" && typeof IDBKeyRange !== "undefined";
          } catch (e4) {
            return false;
          }
        }
        function createBlob(parts, properties2) {
          parts = parts || [];
          properties2 = properties2 || {};
          try {
            return new Blob(parts, properties2);
          } catch (e4) {
            if (e4.name !== "TypeError") {
              throw e4;
            }
            var Builder = typeof BlobBuilder !== "undefined" ? BlobBuilder : typeof MSBlobBuilder !== "undefined" ? MSBlobBuilder : typeof MozBlobBuilder !== "undefined" ? MozBlobBuilder : WebKitBlobBuilder;
            var builder = new Builder();
            for (var i4 = 0; i4 < parts.length; i4 += 1) {
              builder.append(parts[i4]);
            }
            return builder.getBlob(properties2.type);
          }
        }
        if (typeof Promise === "undefined") {
          _dereq_(3);
        }
        var Promise$1 = Promise;
        function executeCallback(promise, callback) {
          if (callback) {
            promise.then(function(result) {
              callback(null, result);
            }, function(error) {
              callback(error);
            });
          }
        }
        function executeTwoCallbacks(promise, callback, errorCallback) {
          if (typeof callback === "function") {
            promise.then(callback);
          }
          if (typeof errorCallback === "function") {
            promise["catch"](errorCallback);
          }
        }
        function normalizeKey(key3) {
          if (typeof key3 !== "string") {
            console.warn(key3 + " used as a key, but it is not a string.");
            key3 = String(key3);
          }
          return key3;
        }
        function getCallback() {
          if (arguments.length && typeof arguments[arguments.length - 1] === "function") {
            return arguments[arguments.length - 1];
          }
        }
        var DETECT_BLOB_SUPPORT_STORE = "local-forage-detect-blob-support";
        var supportsBlobs = void 0;
        var dbContexts = {};
        var toString5 = Object.prototype.toString;
        var READ_ONLY = "readonly";
        var READ_WRITE = "readwrite";
        function _binStringToArrayBuffer(bin) {
          var length2 = bin.length;
          var buf = new ArrayBuffer(length2);
          var arr = new Uint8Array(buf);
          for (var i4 = 0; i4 < length2; i4++) {
            arr[i4] = bin.charCodeAt(i4);
          }
          return buf;
        }
        function _checkBlobSupportWithoutCaching(idb2) {
          return new Promise$1(function(resolve) {
            var txn = idb2.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);
            var blob = createBlob([""]);
            txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, "key");
            txn.onabort = function(e4) {
              e4.preventDefault();
              e4.stopPropagation();
              resolve(false);
            };
            txn.oncomplete = function() {
              var matchedChrome = navigator.userAgent.match(/Chrome\/(\d+)/);
              var matchedEdge = navigator.userAgent.match(/Edge\//);
              resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);
            };
          })["catch"](function() {
            return false;
          });
        }
        function _checkBlobSupport(idb2) {
          if (typeof supportsBlobs === "boolean") {
            return Promise$1.resolve(supportsBlobs);
          }
          return _checkBlobSupportWithoutCaching(idb2).then(function(value) {
            supportsBlobs = value;
            return supportsBlobs;
          });
        }
        function _deferReadiness(dbInfo) {
          var dbContext = dbContexts[dbInfo.name];
          var deferredOperation = {};
          deferredOperation.promise = new Promise$1(function(resolve, reject) {
            deferredOperation.resolve = resolve;
            deferredOperation.reject = reject;
          });
          dbContext.deferredOperations.push(deferredOperation);
          if (!dbContext.dbReady) {
            dbContext.dbReady = deferredOperation.promise;
          } else {
            dbContext.dbReady = dbContext.dbReady.then(function() {
              return deferredOperation.promise;
            });
          }
        }
        function _advanceReadiness(dbInfo) {
          var dbContext = dbContexts[dbInfo.name];
          var deferredOperation = dbContext.deferredOperations.pop();
          if (deferredOperation) {
            deferredOperation.resolve();
            return deferredOperation.promise;
          }
        }
        function _rejectReadiness(dbInfo, err) {
          var dbContext = dbContexts[dbInfo.name];
          var deferredOperation = dbContext.deferredOperations.pop();
          if (deferredOperation) {
            deferredOperation.reject(err);
            return deferredOperation.promise;
          }
        }
        function _getConnection(dbInfo, upgradeNeeded) {
          return new Promise$1(function(resolve, reject) {
            dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();
            if (dbInfo.db) {
              if (upgradeNeeded) {
                _deferReadiness(dbInfo);
                dbInfo.db.close();
              } else {
                return resolve(dbInfo.db);
              }
            }
            var dbArgs = [dbInfo.name];
            if (upgradeNeeded) {
              dbArgs.push(dbInfo.version);
            }
            var openreq = idb.open.apply(idb, dbArgs);
            if (upgradeNeeded) {
              openreq.onupgradeneeded = function(e4) {
                var db = openreq.result;
                try {
                  db.createObjectStore(dbInfo.storeName);
                  if (e4.oldVersion <= 1) {
                    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);
                  }
                } catch (ex) {
                  if (ex.name === "ConstraintError") {
                    console.warn('The database "' + dbInfo.name + '" has been upgraded from version ' + e4.oldVersion + " to version " + e4.newVersion + ', but the storage "' + dbInfo.storeName + '" already exists.');
                  } else {
                    throw ex;
                  }
                }
              };
            }
            openreq.onerror = function(e4) {
              e4.preventDefault();
              reject(openreq.error);
            };
            openreq.onsuccess = function() {
              var db = openreq.result;
              db.onversionchange = function(e4) {
                e4.target.close();
              };
              resolve(db);
              _advanceReadiness(dbInfo);
            };
          });
        }
        function _getOriginalConnection(dbInfo) {
          return _getConnection(dbInfo, false);
        }
        function _getUpgradedConnection(dbInfo) {
          return _getConnection(dbInfo, true);
        }
        function _isUpgradeNeeded(dbInfo, defaultVersion) {
          if (!dbInfo.db) {
            return true;
          }
          var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);
          var isDowngrade = dbInfo.version < dbInfo.db.version;
          var isUpgrade = dbInfo.version > dbInfo.db.version;
          if (isDowngrade) {
            if (dbInfo.version !== defaultVersion) {
              console.warn('The database "' + dbInfo.name + `" can't be downgraded from version ` + dbInfo.db.version + " to version " + dbInfo.version + ".");
            }
            dbInfo.version = dbInfo.db.version;
          }
          if (isUpgrade || isNewStore) {
            if (isNewStore) {
              var incVersion = dbInfo.db.version + 1;
              if (incVersion > dbInfo.version) {
                dbInfo.version = incVersion;
              }
            }
            return true;
          }
          return false;
        }
        function _encodeBlob(blob) {
          return new Promise$1(function(resolve, reject) {
            var reader = new FileReader();
            reader.onerror = reject;
            reader.onloadend = function(e4) {
              var base64 = btoa(e4.target.result || "");
              resolve({
                __local_forage_encoded_blob: true,
                data: base64,
                type: blob.type
              });
            };
            reader.readAsBinaryString(blob);
          });
        }
        function _decodeBlob(encodedBlob) {
          var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));
          return createBlob([arrayBuff], { type: encodedBlob.type });
        }
        function _isEncodedBlob(value) {
          return value && value.__local_forage_encoded_blob;
        }
        function _fullyReady(callback) {
          var self2 = this;
          var promise = self2._initReady().then(function() {
            var dbContext = dbContexts[self2._dbInfo.name];
            if (dbContext && dbContext.dbReady) {
              return dbContext.dbReady;
            }
          });
          executeTwoCallbacks(promise, callback, callback);
          return promise;
        }
        function _tryReconnect(dbInfo) {
          _deferReadiness(dbInfo);
          var dbContext = dbContexts[dbInfo.name];
          var forages = dbContext.forages;
          for (var i4 = 0; i4 < forages.length; i4++) {
            var forage = forages[i4];
            if (forage._dbInfo.db) {
              forage._dbInfo.db.close();
              forage._dbInfo.db = null;
            }
          }
          dbInfo.db = null;
          return _getOriginalConnection(dbInfo).then(function(db) {
            dbInfo.db = db;
            if (_isUpgradeNeeded(dbInfo)) {
              return _getUpgradedConnection(dbInfo);
            }
            return db;
          }).then(function(db) {
            dbInfo.db = dbContext.db = db;
            for (var i5 = 0; i5 < forages.length; i5++) {
              forages[i5]._dbInfo.db = db;
            }
          })["catch"](function(err) {
            _rejectReadiness(dbInfo, err);
            throw err;
          });
        }
        function createTransaction(dbInfo, mode, callback, retries) {
          if (retries === void 0) {
            retries = 1;
          }
          try {
            var tx = dbInfo.db.transaction(dbInfo.storeName, mode);
            callback(null, tx);
          } catch (err) {
            if (retries > 0 && (!dbInfo.db || err.name === "InvalidStateError" || err.name === "NotFoundError")) {
              return Promise$1.resolve().then(function() {
                if (!dbInfo.db || err.name === "NotFoundError" && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {
                  if (dbInfo.db) {
                    dbInfo.version = dbInfo.db.version + 1;
                  }
                  return _getUpgradedConnection(dbInfo);
                }
              }).then(function() {
                return _tryReconnect(dbInfo).then(function() {
                  createTransaction(dbInfo, mode, callback, retries - 1);
                });
              })["catch"](callback);
            }
            callback(err);
          }
        }
        function createDbContext() {
          return {
            forages: [],
            db: null,
            dbReady: null,
            deferredOperations: []
          };
        }
        function _initStorage(options) {
          var self2 = this;
          var dbInfo = {
            db: null
          };
          if (options) {
            for (var i4 in options) {
              dbInfo[i4] = options[i4];
            }
          }
          var dbContext = dbContexts[dbInfo.name];
          if (!dbContext) {
            dbContext = createDbContext();
            dbContexts[dbInfo.name] = dbContext;
          }
          dbContext.forages.push(self2);
          if (!self2._initReady) {
            self2._initReady = self2.ready;
            self2.ready = _fullyReady;
          }
          var initPromises = [];
          function ignoreErrors() {
            return Promise$1.resolve();
          }
          for (var j4 = 0; j4 < dbContext.forages.length; j4++) {
            var forage = dbContext.forages[j4];
            if (forage !== self2) {
              initPromises.push(forage._initReady()["catch"](ignoreErrors));
            }
          }
          var forages = dbContext.forages.slice(0);
          return Promise$1.all(initPromises).then(function() {
            dbInfo.db = dbContext.db;
            return _getOriginalConnection(dbInfo);
          }).then(function(db) {
            dbInfo.db = db;
            if (_isUpgradeNeeded(dbInfo, self2._defaultConfig.version)) {
              return _getUpgradedConnection(dbInfo);
            }
            return db;
          }).then(function(db) {
            dbInfo.db = dbContext.db = db;
            self2._dbInfo = dbInfo;
            for (var k5 = 0; k5 < forages.length; k5++) {
              var forage2 = forages[k5];
              if (forage2 !== self2) {
                forage2._dbInfo.db = dbInfo.db;
                forage2._dbInfo.version = dbInfo.version;
              }
            }
          });
        }
        function getItem(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_ONLY, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store.get(key3);
                  req.onsuccess = function() {
                    var value = req.result;
                    if (value === void 0) {
                      value = null;
                    }
                    if (_isEncodedBlob(value)) {
                      value = _decodeBlob(value);
                    }
                    resolve(value);
                  };
                  req.onerror = function() {
                    reject(req.error);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function iterate(iterator, callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_ONLY, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store.openCursor();
                  var iterationNumber = 1;
                  req.onsuccess = function() {
                    var cursor = req.result;
                    if (cursor) {
                      var value = cursor.value;
                      if (_isEncodedBlob(value)) {
                        value = _decodeBlob(value);
                      }
                      var result = iterator(value, cursor.key, iterationNumber++);
                      if (result !== void 0) {
                        resolve(result);
                      } else {
                        cursor["continue"]();
                      }
                    } else {
                      resolve();
                    }
                  };
                  req.onerror = function() {
                    reject(req.error);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function setItem(key3, value, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            var dbInfo;
            self2.ready().then(function() {
              dbInfo = self2._dbInfo;
              if (toString5.call(value) === "[object Blob]") {
                return _checkBlobSupport(dbInfo.db).then(function(blobSupport) {
                  if (blobSupport) {
                    return value;
                  }
                  return _encodeBlob(value);
                });
              }
              return value;
            }).then(function(value2) {
              createTransaction(self2._dbInfo, READ_WRITE, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  if (value2 === null) {
                    value2 = void 0;
                  }
                  var req = store.put(value2, key3);
                  transaction.oncomplete = function() {
                    if (value2 === void 0) {
                      value2 = null;
                    }
                    resolve(value2);
                  };
                  transaction.onabort = transaction.onerror = function() {
                    var err2 = req.error ? req.error : req.transaction.error;
                    reject(err2);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function removeItem(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_WRITE, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store["delete"](key3);
                  transaction.oncomplete = function() {
                    resolve();
                  };
                  transaction.onerror = function() {
                    reject(req.error);
                  };
                  transaction.onabort = function() {
                    var err2 = req.error ? req.error : req.transaction.error;
                    reject(err2);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function clear(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_WRITE, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store.clear();
                  transaction.oncomplete = function() {
                    resolve();
                  };
                  transaction.onabort = transaction.onerror = function() {
                    var err2 = req.error ? req.error : req.transaction.error;
                    reject(err2);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function length(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_ONLY, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store.count();
                  req.onsuccess = function() {
                    resolve(req.result);
                  };
                  req.onerror = function() {
                    reject(req.error);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function key2(n2, callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            if (n2 < 0) {
              resolve(null);
              return;
            }
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_ONLY, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var advanced = false;
                  var req = store.openKeyCursor();
                  req.onsuccess = function() {
                    var cursor = req.result;
                    if (!cursor) {
                      resolve(null);
                      return;
                    }
                    if (n2 === 0) {
                      resolve(cursor.key);
                    } else {
                      if (!advanced) {
                        advanced = true;
                        cursor.advance(n2);
                      } else {
                        resolve(cursor.key);
                      }
                    }
                  };
                  req.onerror = function() {
                    reject(req.error);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function keys2(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              createTransaction(self2._dbInfo, READ_ONLY, function(err, transaction) {
                if (err) {
                  return reject(err);
                }
                try {
                  var store = transaction.objectStore(self2._dbInfo.storeName);
                  var req = store.openKeyCursor();
                  var keys3 = [];
                  req.onsuccess = function() {
                    var cursor = req.result;
                    if (!cursor) {
                      resolve(keys3);
                      return;
                    }
                    keys3.push(cursor.key);
                    cursor["continue"]();
                  };
                  req.onerror = function() {
                    reject(req.error);
                  };
                } catch (e4) {
                  reject(e4);
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function dropInstance(options, callback) {
          callback = getCallback.apply(this, arguments);
          var currentConfig = this.config();
          options = typeof options !== "function" && options || {};
          if (!options.name) {
            options.name = options.name || currentConfig.name;
            options.storeName = options.storeName || currentConfig.storeName;
          }
          var self2 = this;
          var promise;
          if (!options.name) {
            promise = Promise$1.reject("Invalid arguments");
          } else {
            var isCurrentDb = options.name === currentConfig.name && self2._dbInfo.db;
            var dbPromise = isCurrentDb ? Promise$1.resolve(self2._dbInfo.db) : _getOriginalConnection(options).then(function(db) {
              var dbContext = dbContexts[options.name];
              var forages = dbContext.forages;
              dbContext.db = db;
              for (var i4 = 0; i4 < forages.length; i4++) {
                forages[i4]._dbInfo.db = db;
              }
              return db;
            });
            if (!options.storeName) {
              promise = dbPromise.then(function(db) {
                _deferReadiness(options);
                var dbContext = dbContexts[options.name];
                var forages = dbContext.forages;
                db.close();
                for (var i4 = 0; i4 < forages.length; i4++) {
                  var forage = forages[i4];
                  forage._dbInfo.db = null;
                }
                var dropDBPromise = new Promise$1(function(resolve, reject) {
                  var req = idb.deleteDatabase(options.name);
                  req.onerror = function() {
                    var db2 = req.result;
                    if (db2) {
                      db2.close();
                    }
                    reject(req.error);
                  };
                  req.onblocked = function() {
                    console.warn('dropInstance blocked for database "' + options.name + '" until all open connections are closed');
                  };
                  req.onsuccess = function() {
                    var db2 = req.result;
                    if (db2) {
                      db2.close();
                    }
                    resolve(db2);
                  };
                });
                return dropDBPromise.then(function(db2) {
                  dbContext.db = db2;
                  for (var i5 = 0; i5 < forages.length; i5++) {
                    var _forage = forages[i5];
                    _advanceReadiness(_forage._dbInfo);
                  }
                })["catch"](function(err) {
                  (_rejectReadiness(options, err) || Promise$1.resolve())["catch"](function() {
                  });
                  throw err;
                });
              });
            } else {
              promise = dbPromise.then(function(db) {
                if (!db.objectStoreNames.contains(options.storeName)) {
                  return;
                }
                var newVersion = db.version + 1;
                _deferReadiness(options);
                var dbContext = dbContexts[options.name];
                var forages = dbContext.forages;
                db.close();
                for (var i4 = 0; i4 < forages.length; i4++) {
                  var forage = forages[i4];
                  forage._dbInfo.db = null;
                  forage._dbInfo.version = newVersion;
                }
                var dropObjectPromise = new Promise$1(function(resolve, reject) {
                  var req = idb.open(options.name, newVersion);
                  req.onerror = function(err) {
                    var db2 = req.result;
                    db2.close();
                    reject(err);
                  };
                  req.onupgradeneeded = function() {
                    var db2 = req.result;
                    db2.deleteObjectStore(options.storeName);
                  };
                  req.onsuccess = function() {
                    var db2 = req.result;
                    db2.close();
                    resolve(db2);
                  };
                });
                return dropObjectPromise.then(function(db2) {
                  dbContext.db = db2;
                  for (var j4 = 0; j4 < forages.length; j4++) {
                    var _forage2 = forages[j4];
                    _forage2._dbInfo.db = db2;
                    _advanceReadiness(_forage2._dbInfo);
                  }
                })["catch"](function(err) {
                  (_rejectReadiness(options, err) || Promise$1.resolve())["catch"](function() {
                  });
                  throw err;
                });
              });
            }
          }
          executeCallback(promise, callback);
          return promise;
        }
        var asyncStorage = {
          _driver: "asyncStorage",
          _initStorage,
          _support: isIndexedDBValid(),
          iterate,
          getItem,
          setItem,
          removeItem,
          clear,
          length,
          key: key2,
          keys: keys2,
          dropInstance
        };
        function isWebSQLValid() {
          return typeof openDatabase === "function";
        }
        var BASE_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var BLOB_TYPE_PREFIX = "~~local_forage_type~";
        var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;
        var SERIALIZED_MARKER = "__lfsc__:";
        var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;
        var TYPE_ARRAYBUFFER = "arbf";
        var TYPE_BLOB = "blob";
        var TYPE_INT8ARRAY = "si08";
        var TYPE_UINT8ARRAY = "ui08";
        var TYPE_UINT8CLAMPEDARRAY = "uic8";
        var TYPE_INT16ARRAY = "si16";
        var TYPE_INT32ARRAY = "si32";
        var TYPE_UINT16ARRAY = "ur16";
        var TYPE_UINT32ARRAY = "ui32";
        var TYPE_FLOAT32ARRAY = "fl32";
        var TYPE_FLOAT64ARRAY = "fl64";
        var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;
        var toString$1 = Object.prototype.toString;
        function stringToBuffer(serializedString) {
          var bufferLength = serializedString.length * 0.75;
          var len = serializedString.length;
          var i4;
          var p3 = 0;
          var encoded1, encoded2, encoded3, encoded4;
          if (serializedString[serializedString.length - 1] === "=") {
            bufferLength--;
            if (serializedString[serializedString.length - 2] === "=") {
              bufferLength--;
            }
          }
          var buffer = new ArrayBuffer(bufferLength);
          var bytes = new Uint8Array(buffer);
          for (i4 = 0; i4 < len; i4 += 4) {
            encoded1 = BASE_CHARS.indexOf(serializedString[i4]);
            encoded2 = BASE_CHARS.indexOf(serializedString[i4 + 1]);
            encoded3 = BASE_CHARS.indexOf(serializedString[i4 + 2]);
            encoded4 = BASE_CHARS.indexOf(serializedString[i4 + 3]);
            bytes[p3++] = encoded1 << 2 | encoded2 >> 4;
            bytes[p3++] = (encoded2 & 15) << 4 | encoded3 >> 2;
            bytes[p3++] = (encoded3 & 3) << 6 | encoded4 & 63;
          }
          return buffer;
        }
        function bufferToString(buffer) {
          var bytes = new Uint8Array(buffer);
          var base64String = "";
          var i4;
          for (i4 = 0; i4 < bytes.length; i4 += 3) {
            base64String += BASE_CHARS[bytes[i4] >> 2];
            base64String += BASE_CHARS[(bytes[i4] & 3) << 4 | bytes[i4 + 1] >> 4];
            base64String += BASE_CHARS[(bytes[i4 + 1] & 15) << 2 | bytes[i4 + 2] >> 6];
            base64String += BASE_CHARS[bytes[i4 + 2] & 63];
          }
          if (bytes.length % 3 === 2) {
            base64String = base64String.substring(0, base64String.length - 1) + "=";
          } else if (bytes.length % 3 === 1) {
            base64String = base64String.substring(0, base64String.length - 2) + "==";
          }
          return base64String;
        }
        function serialize(value, callback) {
          var valueType = "";
          if (value) {
            valueType = toString$1.call(value);
          }
          if (value && (valueType === "[object ArrayBuffer]" || value.buffer && toString$1.call(value.buffer) === "[object ArrayBuffer]")) {
            var buffer;
            var marker = SERIALIZED_MARKER;
            if (value instanceof ArrayBuffer) {
              buffer = value;
              marker += TYPE_ARRAYBUFFER;
            } else {
              buffer = value.buffer;
              if (valueType === "[object Int8Array]") {
                marker += TYPE_INT8ARRAY;
              } else if (valueType === "[object Uint8Array]") {
                marker += TYPE_UINT8ARRAY;
              } else if (valueType === "[object Uint8ClampedArray]") {
                marker += TYPE_UINT8CLAMPEDARRAY;
              } else if (valueType === "[object Int16Array]") {
                marker += TYPE_INT16ARRAY;
              } else if (valueType === "[object Uint16Array]") {
                marker += TYPE_UINT16ARRAY;
              } else if (valueType === "[object Int32Array]") {
                marker += TYPE_INT32ARRAY;
              } else if (valueType === "[object Uint32Array]") {
                marker += TYPE_UINT32ARRAY;
              } else if (valueType === "[object Float32Array]") {
                marker += TYPE_FLOAT32ARRAY;
              } else if (valueType === "[object Float64Array]") {
                marker += TYPE_FLOAT64ARRAY;
              } else {
                callback(new Error("Failed to get type for BinaryArray"));
              }
            }
            callback(marker + bufferToString(buffer));
          } else if (valueType === "[object Blob]") {
            var fileReader = new FileReader();
            fileReader.onload = function() {
              var str = BLOB_TYPE_PREFIX + value.type + "~" + bufferToString(this.result);
              callback(SERIALIZED_MARKER + TYPE_BLOB + str);
            };
            fileReader.readAsArrayBuffer(value);
          } else {
            try {
              callback(JSON.stringify(value));
            } catch (e4) {
              console.error("Couldn't convert value into a JSON string: ", value);
              callback(null, e4);
            }
          }
        }
        function deserialize(value) {
          if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {
            return JSON.parse(value);
          }
          var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);
          var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);
          var blobType;
          if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {
            var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);
            blobType = matcher[1];
            serializedString = serializedString.substring(matcher[0].length);
          }
          var buffer = stringToBuffer(serializedString);
          switch (type) {
            case TYPE_ARRAYBUFFER:
              return buffer;
            case TYPE_BLOB:
              return createBlob([buffer], { type: blobType });
            case TYPE_INT8ARRAY:
              return new Int8Array(buffer);
            case TYPE_UINT8ARRAY:
              return new Uint8Array(buffer);
            case TYPE_UINT8CLAMPEDARRAY:
              return new Uint8ClampedArray(buffer);
            case TYPE_INT16ARRAY:
              return new Int16Array(buffer);
            case TYPE_UINT16ARRAY:
              return new Uint16Array(buffer);
            case TYPE_INT32ARRAY:
              return new Int32Array(buffer);
            case TYPE_UINT32ARRAY:
              return new Uint32Array(buffer);
            case TYPE_FLOAT32ARRAY:
              return new Float32Array(buffer);
            case TYPE_FLOAT64ARRAY:
              return new Float64Array(buffer);
            default:
              throw new Error("Unkown type: " + type);
          }
        }
        var localforageSerializer = {
          serialize,
          deserialize,
          stringToBuffer,
          bufferToString
        };
        function createDbTable(t4, dbInfo, callback, errorCallback) {
          t4.executeSql("CREATE TABLE IF NOT EXISTS " + dbInfo.storeName + " (id INTEGER PRIMARY KEY, key unique, value)", [], callback, errorCallback);
        }
        function _initStorage$1(options) {
          var self2 = this;
          var dbInfo = {
            db: null
          };
          if (options) {
            for (var i4 in options) {
              dbInfo[i4] = typeof options[i4] !== "string" ? options[i4].toString() : options[i4];
            }
          }
          var dbInfoPromise = new Promise$1(function(resolve, reject) {
            try {
              dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);
            } catch (e4) {
              return reject(e4);
            }
            dbInfo.db.transaction(function(t4) {
              createDbTable(t4, dbInfo, function() {
                self2._dbInfo = dbInfo;
                resolve();
              }, function(t5, error) {
                reject(error);
              });
            }, reject);
          });
          dbInfo.serializer = localforageSerializer;
          return dbInfoPromise;
        }
        function tryExecuteSql(t4, dbInfo, sqlStatement, args, callback, errorCallback) {
          t4.executeSql(sqlStatement, args, callback, function(t5, error) {
            if (error.code === error.SYNTAX_ERR) {
              t5.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?", [dbInfo.storeName], function(t6, results) {
                if (!results.rows.length) {
                  createDbTable(t6, dbInfo, function() {
                    t6.executeSql(sqlStatement, args, callback, errorCallback);
                  }, errorCallback);
                } else {
                  errorCallback(t6, error);
                }
              }, errorCallback);
            } else {
              errorCallback(t5, error);
            }
          }, errorCallback);
        }
        function getItem$1(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "SELECT * FROM " + dbInfo.storeName + " WHERE key = ? LIMIT 1", [key3], function(t5, results) {
                  var result = results.rows.length ? results.rows.item(0).value : null;
                  if (result) {
                    result = dbInfo.serializer.deserialize(result);
                  }
                  resolve(result);
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function iterate$1(iterator, callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "SELECT * FROM " + dbInfo.storeName, [], function(t5, results) {
                  var rows = results.rows;
                  var length2 = rows.length;
                  for (var i4 = 0; i4 < length2; i4++) {
                    var item = rows.item(i4);
                    var result = item.value;
                    if (result) {
                      result = dbInfo.serializer.deserialize(result);
                    }
                    result = iterator(result, item.key, i4 + 1);
                    if (result !== void 0) {
                      resolve(result);
                      return;
                    }
                  }
                  resolve();
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function _setItem(key3, value, callback, retriesLeft) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              if (value === void 0) {
                value = null;
              }
              var originalValue = value;
              var dbInfo = self2._dbInfo;
              dbInfo.serializer.serialize(value, function(value2, error) {
                if (error) {
                  reject(error);
                } else {
                  dbInfo.db.transaction(function(t4) {
                    tryExecuteSql(t4, dbInfo, "INSERT OR REPLACE INTO " + dbInfo.storeName + " (key, value) VALUES (?, ?)", [key3, value2], function() {
                      resolve(originalValue);
                    }, function(t5, error2) {
                      reject(error2);
                    });
                  }, function(sqlError) {
                    if (sqlError.code === sqlError.QUOTA_ERR) {
                      if (retriesLeft > 0) {
                        resolve(_setItem.apply(self2, [key3, originalValue, callback, retriesLeft - 1]));
                        return;
                      }
                      reject(sqlError);
                    }
                  });
                }
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function setItem$1(key3, value, callback) {
          return _setItem.apply(this, [key3, value, callback, 1]);
        }
        function removeItem$1(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "DELETE FROM " + dbInfo.storeName + " WHERE key = ?", [key3], function() {
                  resolve();
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function clear$1(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "DELETE FROM " + dbInfo.storeName, [], function() {
                  resolve();
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function length$1(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "SELECT COUNT(key) as c FROM " + dbInfo.storeName, [], function(t5, results) {
                  var result = results.rows.item(0).c;
                  resolve(result);
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function key$1(n2, callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "SELECT key FROM " + dbInfo.storeName + " WHERE id = ? LIMIT 1", [n2 + 1], function(t5, results) {
                  var result = results.rows.length ? results.rows.item(0).key : null;
                  resolve(result);
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function keys$1(callback) {
          var self2 = this;
          var promise = new Promise$1(function(resolve, reject) {
            self2.ready().then(function() {
              var dbInfo = self2._dbInfo;
              dbInfo.db.transaction(function(t4) {
                tryExecuteSql(t4, dbInfo, "SELECT key FROM " + dbInfo.storeName, [], function(t5, results) {
                  var keys3 = [];
                  for (var i4 = 0; i4 < results.rows.length; i4++) {
                    keys3.push(results.rows.item(i4).key);
                  }
                  resolve(keys3);
                }, function(t5, error) {
                  reject(error);
                });
              });
            })["catch"](reject);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function getAllStoreNames(db) {
          return new Promise$1(function(resolve, reject) {
            db.transaction(function(t4) {
              t4.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'", [], function(t5, results) {
                var storeNames = [];
                for (var i4 = 0; i4 < results.rows.length; i4++) {
                  storeNames.push(results.rows.item(i4).name);
                }
                resolve({
                  db,
                  storeNames
                });
              }, function(t5, error) {
                reject(error);
              });
            }, function(sqlError) {
              reject(sqlError);
            });
          });
        }
        function dropInstance$1(options, callback) {
          callback = getCallback.apply(this, arguments);
          var currentConfig = this.config();
          options = typeof options !== "function" && options || {};
          if (!options.name) {
            options.name = options.name || currentConfig.name;
            options.storeName = options.storeName || currentConfig.storeName;
          }
          var self2 = this;
          var promise;
          if (!options.name) {
            promise = Promise$1.reject("Invalid arguments");
          } else {
            promise = new Promise$1(function(resolve) {
              var db;
              if (options.name === currentConfig.name) {
                db = self2._dbInfo.db;
              } else {
                db = openDatabase(options.name, "", "", 0);
              }
              if (!options.storeName) {
                resolve(getAllStoreNames(db));
              } else {
                resolve({
                  db,
                  storeNames: [options.storeName]
                });
              }
            }).then(function(operationInfo) {
              return new Promise$1(function(resolve, reject) {
                operationInfo.db.transaction(function(t4) {
                  function dropTable2(storeName) {
                    return new Promise$1(function(resolve2, reject2) {
                      t4.executeSql("DROP TABLE IF EXISTS " + storeName, [], function() {
                        resolve2();
                      }, function(t5, error) {
                        reject2(error);
                      });
                    });
                  }
                  var operations = [];
                  for (var i4 = 0, len = operationInfo.storeNames.length; i4 < len; i4++) {
                    operations.push(dropTable2(operationInfo.storeNames[i4]));
                  }
                  Promise$1.all(operations).then(function() {
                    resolve();
                  })["catch"](function(e4) {
                    reject(e4);
                  });
                }, function(sqlError) {
                  reject(sqlError);
                });
              });
            });
          }
          executeCallback(promise, callback);
          return promise;
        }
        var webSQLStorage = {
          _driver: "webSQLStorage",
          _initStorage: _initStorage$1,
          _support: isWebSQLValid(),
          iterate: iterate$1,
          getItem: getItem$1,
          setItem: setItem$1,
          removeItem: removeItem$1,
          clear: clear$1,
          length: length$1,
          key: key$1,
          keys: keys$1,
          dropInstance: dropInstance$1
        };
        function isLocalStorageValid() {
          try {
            return typeof localStorage !== "undefined" && "setItem" in localStorage && !!localStorage.setItem;
          } catch (e4) {
            return false;
          }
        }
        function _getKeyPrefix(options, defaultConfig) {
          var keyPrefix = options.name + "/";
          if (options.storeName !== defaultConfig.storeName) {
            keyPrefix += options.storeName + "/";
          }
          return keyPrefix;
        }
        function checkIfLocalStorageThrows() {
          var localStorageTestKey = "_localforage_support_test";
          try {
            localStorage.setItem(localStorageTestKey, true);
            localStorage.removeItem(localStorageTestKey);
            return false;
          } catch (e4) {
            return true;
          }
        }
        function _isLocalStorageUsable() {
          return !checkIfLocalStorageThrows() || localStorage.length > 0;
        }
        function _initStorage$2(options) {
          var self2 = this;
          var dbInfo = {};
          if (options) {
            for (var i4 in options) {
              dbInfo[i4] = options[i4];
            }
          }
          dbInfo.keyPrefix = _getKeyPrefix(options, self2._defaultConfig);
          if (!_isLocalStorageUsable()) {
            return Promise$1.reject();
          }
          self2._dbInfo = dbInfo;
          dbInfo.serializer = localforageSerializer;
          return Promise$1.resolve();
        }
        function clear$2(callback) {
          var self2 = this;
          var promise = self2.ready().then(function() {
            var keyPrefix = self2._dbInfo.keyPrefix;
            for (var i4 = localStorage.length - 1; i4 >= 0; i4--) {
              var key3 = localStorage.key(i4);
              if (key3.indexOf(keyPrefix) === 0) {
                localStorage.removeItem(key3);
              }
            }
          });
          executeCallback(promise, callback);
          return promise;
        }
        function getItem$2(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = self2.ready().then(function() {
            var dbInfo = self2._dbInfo;
            var result = localStorage.getItem(dbInfo.keyPrefix + key3);
            if (result) {
              result = dbInfo.serializer.deserialize(result);
            }
            return result;
          });
          executeCallback(promise, callback);
          return promise;
        }
        function iterate$2(iterator, callback) {
          var self2 = this;
          var promise = self2.ready().then(function() {
            var dbInfo = self2._dbInfo;
            var keyPrefix = dbInfo.keyPrefix;
            var keyPrefixLength = keyPrefix.length;
            var length2 = localStorage.length;
            var iterationNumber = 1;
            for (var i4 = 0; i4 < length2; i4++) {
              var key3 = localStorage.key(i4);
              if (key3.indexOf(keyPrefix) !== 0) {
                continue;
              }
              var value = localStorage.getItem(key3);
              if (value) {
                value = dbInfo.serializer.deserialize(value);
              }
              value = iterator(value, key3.substring(keyPrefixLength), iterationNumber++);
              if (value !== void 0) {
                return value;
              }
            }
          });
          executeCallback(promise, callback);
          return promise;
        }
        function key$2(n2, callback) {
          var self2 = this;
          var promise = self2.ready().then(function() {
            var dbInfo = self2._dbInfo;
            var result;
            try {
              result = localStorage.key(n2);
            } catch (error) {
              result = null;
            }
            if (result) {
              result = result.substring(dbInfo.keyPrefix.length);
            }
            return result;
          });
          executeCallback(promise, callback);
          return promise;
        }
        function keys$2(callback) {
          var self2 = this;
          var promise = self2.ready().then(function() {
            var dbInfo = self2._dbInfo;
            var length2 = localStorage.length;
            var keys3 = [];
            for (var i4 = 0; i4 < length2; i4++) {
              var itemKey = localStorage.key(i4);
              if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {
                keys3.push(itemKey.substring(dbInfo.keyPrefix.length));
              }
            }
            return keys3;
          });
          executeCallback(promise, callback);
          return promise;
        }
        function length$2(callback) {
          var self2 = this;
          var promise = self2.keys().then(function(keys3) {
            return keys3.length;
          });
          executeCallback(promise, callback);
          return promise;
        }
        function removeItem$2(key3, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = self2.ready().then(function() {
            var dbInfo = self2._dbInfo;
            localStorage.removeItem(dbInfo.keyPrefix + key3);
          });
          executeCallback(promise, callback);
          return promise;
        }
        function setItem$2(key3, value, callback) {
          var self2 = this;
          key3 = normalizeKey(key3);
          var promise = self2.ready().then(function() {
            if (value === void 0) {
              value = null;
            }
            var originalValue = value;
            return new Promise$1(function(resolve, reject) {
              var dbInfo = self2._dbInfo;
              dbInfo.serializer.serialize(value, function(value2, error) {
                if (error) {
                  reject(error);
                } else {
                  try {
                    localStorage.setItem(dbInfo.keyPrefix + key3, value2);
                    resolve(originalValue);
                  } catch (e4) {
                    if (e4.name === "QuotaExceededError" || e4.name === "NS_ERROR_DOM_QUOTA_REACHED") {
                      reject(e4);
                    }
                    reject(e4);
                  }
                }
              });
            });
          });
          executeCallback(promise, callback);
          return promise;
        }
        function dropInstance$2(options, callback) {
          callback = getCallback.apply(this, arguments);
          options = typeof options !== "function" && options || {};
          if (!options.name) {
            var currentConfig = this.config();
            options.name = options.name || currentConfig.name;
            options.storeName = options.storeName || currentConfig.storeName;
          }
          var self2 = this;
          var promise;
          if (!options.name) {
            promise = Promise$1.reject("Invalid arguments");
          } else {
            promise = new Promise$1(function(resolve) {
              if (!options.storeName) {
                resolve(options.name + "/");
              } else {
                resolve(_getKeyPrefix(options, self2._defaultConfig));
              }
            }).then(function(keyPrefix) {
              for (var i4 = localStorage.length - 1; i4 >= 0; i4--) {
                var key3 = localStorage.key(i4);
                if (key3.indexOf(keyPrefix) === 0) {
                  localStorage.removeItem(key3);
                }
              }
            });
          }
          executeCallback(promise, callback);
          return promise;
        }
        var localStorageWrapper = {
          _driver: "localStorageWrapper",
          _initStorage: _initStorage$2,
          _support: isLocalStorageValid(),
          iterate: iterate$2,
          getItem: getItem$2,
          setItem: setItem$2,
          removeItem: removeItem$2,
          clear: clear$2,
          length: length$2,
          key: key$2,
          keys: keys$2,
          dropInstance: dropInstance$2
        };
        var sameValue = function sameValue2(x5, y5) {
          return x5 === y5 || typeof x5 === "number" && typeof y5 === "number" && isNaN(x5) && isNaN(y5);
        };
        var includes = function includes2(array, searchElement) {
          var len = array.length;
          var i4 = 0;
          while (i4 < len) {
            if (sameValue(array[i4], searchElement)) {
              return true;
            }
            i4++;
          }
          return false;
        };
        var isArray3 = Array.isArray || function(arg) {
          return Object.prototype.toString.call(arg) === "[object Array]";
        };
        var DefinedDrivers = {};
        var DriverSupport = {};
        var DefaultDrivers = {
          INDEXEDDB: asyncStorage,
          WEBSQL: webSQLStorage,
          LOCALSTORAGE: localStorageWrapper
        };
        var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];
        var OptionalDriverMethods = ["dropInstance"];
        var LibraryMethods = ["clear", "getItem", "iterate", "key", "keys", "length", "removeItem", "setItem"].concat(OptionalDriverMethods);
        var DefaultConfig = {
          description: "",
          driver: DefaultDriverOrder.slice(),
          name: "localforage",
          size: 4980736,
          storeName: "keyvaluepairs",
          version: 1
        };
        function callWhenReady(localForageInstance, libraryMethod) {
          localForageInstance[libraryMethod] = function() {
            var _args = arguments;
            return localForageInstance.ready().then(function() {
              return localForageInstance[libraryMethod].apply(localForageInstance, _args);
            });
          };
        }
        function extend2() {
          for (var i4 = 1; i4 < arguments.length; i4++) {
            var arg = arguments[i4];
            if (arg) {
              for (var _key in arg) {
                if (arg.hasOwnProperty(_key)) {
                  if (isArray3(arg[_key])) {
                    arguments[0][_key] = arg[_key].slice();
                  } else {
                    arguments[0][_key] = arg[_key];
                  }
                }
              }
            }
          }
          return arguments[0];
        }
        var LocalForage = function() {
          function LocalForage2(options) {
            _classCallCheck9(this, LocalForage2);
            for (var driverTypeKey in DefaultDrivers) {
              if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {
                var driver = DefaultDrivers[driverTypeKey];
                var driverName = driver._driver;
                this[driverTypeKey] = driverName;
                if (!DefinedDrivers[driverName]) {
                  this.defineDriver(driver);
                }
              }
            }
            this._defaultConfig = extend2({}, DefaultConfig);
            this._config = extend2({}, this._defaultConfig, options);
            this._driverSet = null;
            this._initDriver = null;
            this._ready = false;
            this._dbInfo = null;
            this._wrapLibraryMethodsWithReady();
            this.setDriver(this._config.driver)["catch"](function() {
            });
          }
          LocalForage2.prototype.config = function config(options) {
            if ((typeof options === "undefined" ? "undefined" : _typeof6(options)) === "object") {
              if (this._ready) {
                return new Error("Can't call config() after localforage has been used.");
              }
              for (var i4 in options) {
                if (i4 === "storeName") {
                  options[i4] = options[i4].replace(/\W/g, "_");
                }
                if (i4 === "version" && typeof options[i4] !== "number") {
                  return new Error("Database version must be a number.");
                }
                this._config[i4] = options[i4];
              }
              if ("driver" in options && options.driver) {
                return this.setDriver(this._config.driver);
              }
              return true;
            } else if (typeof options === "string") {
              return this._config[options];
            } else {
              return this._config;
            }
          };
          LocalForage2.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {
            var promise = new Promise$1(function(resolve, reject) {
              try {
                var driverName = driverObject._driver;
                var complianceError = new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");
                if (!driverObject._driver) {
                  reject(complianceError);
                  return;
                }
                var driverMethods = LibraryMethods.concat("_initStorage");
                for (var i4 = 0, len = driverMethods.length; i4 < len; i4++) {
                  var driverMethodName = driverMethods[i4];
                  var isRequired = !includes(OptionalDriverMethods, driverMethodName);
                  if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== "function") {
                    reject(complianceError);
                    return;
                  }
                }
                var configureMissingMethods = function configureMissingMethods2() {
                  var methodNotImplementedFactory = function methodNotImplementedFactory2(methodName) {
                    return function() {
                      var error = new Error("Method " + methodName + " is not implemented by the current driver");
                      var promise2 = Promise$1.reject(error);
                      executeCallback(promise2, arguments[arguments.length - 1]);
                      return promise2;
                    };
                  };
                  for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {
                    var optionalDriverMethod = OptionalDriverMethods[_i];
                    if (!driverObject[optionalDriverMethod]) {
                      driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);
                    }
                  }
                };
                configureMissingMethods();
                var setDriverSupport = function setDriverSupport2(support) {
                  if (DefinedDrivers[driverName]) {
                    console.info("Redefining LocalForage driver: " + driverName);
                  }
                  DefinedDrivers[driverName] = driverObject;
                  DriverSupport[driverName] = support;
                  resolve();
                };
                if ("_support" in driverObject) {
                  if (driverObject._support && typeof driverObject._support === "function") {
                    driverObject._support().then(setDriverSupport, reject);
                  } else {
                    setDriverSupport(!!driverObject._support);
                  }
                } else {
                  setDriverSupport(true);
                }
              } catch (e4) {
                reject(e4);
              }
            });
            executeTwoCallbacks(promise, callback, errorCallback);
            return promise;
          };
          LocalForage2.prototype.driver = function driver() {
            return this._driver || null;
          };
          LocalForage2.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {
            var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error("Driver not found."));
            executeTwoCallbacks(getDriverPromise, callback, errorCallback);
            return getDriverPromise;
          };
          LocalForage2.prototype.getSerializer = function getSerializer(callback) {
            var serializerPromise = Promise$1.resolve(localforageSerializer);
            executeTwoCallbacks(serializerPromise, callback);
            return serializerPromise;
          };
          LocalForage2.prototype.ready = function ready(callback) {
            var self2 = this;
            var promise = self2._driverSet.then(function() {
              if (self2._ready === null) {
                self2._ready = self2._initDriver();
              }
              return self2._ready;
            });
            executeTwoCallbacks(promise, callback, callback);
            return promise;
          };
          LocalForage2.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {
            var self2 = this;
            if (!isArray3(drivers)) {
              drivers = [drivers];
            }
            var supportedDrivers = this._getSupportedDrivers(drivers);
            function setDriverToConfig() {
              self2._config.driver = self2.driver();
            }
            function extendSelfWithDriver(driver) {
              self2._extend(driver);
              setDriverToConfig();
              self2._ready = self2._initStorage(self2._config);
              return self2._ready;
            }
            function initDriver(supportedDrivers2) {
              return function() {
                var currentDriverIndex = 0;
                function driverPromiseLoop() {
                  while (currentDriverIndex < supportedDrivers2.length) {
                    var driverName = supportedDrivers2[currentDriverIndex];
                    currentDriverIndex++;
                    self2._dbInfo = null;
                    self2._ready = null;
                    return self2.getDriver(driverName).then(extendSelfWithDriver)["catch"](driverPromiseLoop);
                  }
                  setDriverToConfig();
                  var error = new Error("No available storage method found.");
                  self2._driverSet = Promise$1.reject(error);
                  return self2._driverSet;
                }
                return driverPromiseLoop();
              };
            }
            var oldDriverSetDone = this._driverSet !== null ? this._driverSet["catch"](function() {
              return Promise$1.resolve();
            }) : Promise$1.resolve();
            this._driverSet = oldDriverSetDone.then(function() {
              var driverName = supportedDrivers[0];
              self2._dbInfo = null;
              self2._ready = null;
              return self2.getDriver(driverName).then(function(driver) {
                self2._driver = driver._driver;
                setDriverToConfig();
                self2._wrapLibraryMethodsWithReady();
                self2._initDriver = initDriver(supportedDrivers);
              });
            })["catch"](function() {
              setDriverToConfig();
              var error = new Error("No available storage method found.");
              self2._driverSet = Promise$1.reject(error);
              return self2._driverSet;
            });
            executeTwoCallbacks(this._driverSet, callback, errorCallback);
            return this._driverSet;
          };
          LocalForage2.prototype.supports = function supports(driverName) {
            return !!DriverSupport[driverName];
          };
          LocalForage2.prototype._extend = function _extend(libraryMethodsAndProperties) {
            extend2(this, libraryMethodsAndProperties);
          };
          LocalForage2.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {
            var supportedDrivers = [];
            for (var i4 = 0, len = drivers.length; i4 < len; i4++) {
              var driverName = drivers[i4];
              if (this.supports(driverName)) {
                supportedDrivers.push(driverName);
              }
            }
            return supportedDrivers;
          };
          LocalForage2.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {
            for (var i4 = 0, len = LibraryMethods.length; i4 < len; i4++) {
              callWhenReady(this, LibraryMethods[i4]);
            }
          };
          LocalForage2.prototype.createInstance = function createInstance(options) {
            return new LocalForage2(options);
          };
          return LocalForage2;
        }();
        var localforage_js = new LocalForage();
        module4.exports = localforage_js;
      }, { "3": 3 }] }, {}, [4])(4);
    });
  }
});

// node_modules/sql.js/dist/sql-wasm.js
var require_sql_wasm = __commonJS({
  "node_modules/sql.js/dist/sql-wasm.js"(exports2, module2) {
    var initSqlJsPromise = void 0;
    var initSqlJs2 = function(moduleConfig) {
      if (initSqlJsPromise) {
        return initSqlJsPromise;
      }
      initSqlJsPromise = new Promise(function(resolveModule, reject) {
        var Module = typeof moduleConfig !== "undefined" ? moduleConfig : {};
        var originalOnAbortFunction = Module["onAbort"];
        Module["onAbort"] = function(errorThatCausedAbort) {
          reject(new Error(errorThatCausedAbort));
          if (originalOnAbortFunction) {
            originalOnAbortFunction(errorThatCausedAbort);
          }
        };
        Module["postRun"] = Module["postRun"] || [];
        Module["postRun"].push(function() {
          resolveModule(Module);
        });
        module2 = void 0;
        var e4;
        e4 || (e4 = typeof Module !== "undefined" ? Module : {});
        null;
        e4.onRuntimeInitialized = function() {
          function a5(g4, m5) {
            switch (typeof m5) {
              case "boolean":
                gc(g4, m5 ? 1 : 0);
                break;
              case "number":
                hc(g4, m5);
                break;
              case "string":
                ic(g4, m5, -1, -1);
                break;
              case "object":
                if (null === m5)
                  kb(g4);
                else if (null != m5.length) {
                  var n2 = aa(m5);
                  jc(g4, n2, m5.length, -1);
                  ba(n2);
                } else
                  xa(g4, "Wrong API use : tried to return a value of an unknown type (" + m5 + ").", -1);
                break;
              default:
                kb(g4);
            }
          }
          function b4(g4, m5) {
            for (var n2 = [], p3 = 0; p3 < g4; p3 += 1) {
              var v3 = l3(m5 + 4 * p3, "i32"), y5 = kc(v3);
              if (1 === y5 || 2 === y5)
                v3 = lc(v3);
              else if (3 === y5)
                v3 = mc(v3);
              else if (4 === y5) {
                y5 = v3;
                v3 = nc(y5);
                y5 = oc(y5);
                for (var L4 = new Uint8Array(v3), G3 = 0; G3 < v3; G3 += 1)
                  L4[G3] = r3[y5 + G3];
                v3 = L4;
              } else
                v3 = null;
              n2.push(v3);
            }
            return n2;
          }
          function c4(g4, m5) {
            this.La = g4;
            this.db = m5;
            this.Ja = 1;
            this.fb = [];
          }
          function d5(g4, m5) {
            this.db = m5;
            m5 = ca(g4) + 1;
            this.Ya = da(m5);
            if (null === this.Ya)
              throw Error("Unable to allocate memory for the SQL string");
            t4(g4, u4, this.Ya, m5);
            this.eb = this.Ya;
            this.Ua = this.ib = null;
          }
          function f4(g4) {
            this.filename = "dbfile_" + (4294967295 * Math.random() >>> 0);
            if (null != g4) {
              var m5 = this.filename, n2 = "/", p3 = m5;
              n2 && (n2 = "string" == typeof n2 ? n2 : ea(n2), p3 = m5 ? z5(n2 + "/" + m5) : n2);
              m5 = fa(
                true,
                true
              );
              p3 = ha(p3, (void 0 !== m5 ? m5 : 438) & 4095 | 32768, 0);
              if (g4) {
                if ("string" == typeof g4) {
                  n2 = Array(g4.length);
                  for (var v3 = 0, y5 = g4.length; v3 < y5; ++v3)
                    n2[v3] = g4.charCodeAt(v3);
                  g4 = n2;
                }
                ia(p3, m5 | 146);
                n2 = ja(p3, 577);
                ka(n2, g4, 0, g4.length, 0);
                la(n2);
                ia(p3, m5);
              }
            }
            this.handleError(q5(this.filename, h5));
            this.db = l3(h5, "i32");
            pc(this.db);
            this.Za = {};
            this.Na = {};
          }
          var h5 = B5(4), k5 = e4.cwrap, q5 = k5("sqlite3_open", "number", ["string", "number"]), x5 = k5("sqlite3_close_v2", "number", ["number"]), w5 = k5("sqlite3_exec", "number", ["number", "string", "number", "number", "number"]), A4 = k5(
            "sqlite3_changes",
            "number",
            ["number"]
          ), S4 = k5("sqlite3_prepare_v2", "number", ["number", "string", "number", "number", "number"]), nb = k5("sqlite3_sql", "string", ["number"]), qc = k5("sqlite3_normalized_sql", "string", ["number"]), ob = k5("sqlite3_prepare_v2", "number", ["number", "number", "number", "number", "number"]), rc = k5("sqlite3_bind_text", "number", ["number", "number", "number", "number", "number"]), pb = k5("sqlite3_bind_blob", "number", ["number", "number", "number", "number", "number"]), sc = k5("sqlite3_bind_double", "number", ["number", "number", "number"]), tc = k5("sqlite3_bind_int", "number", ["number", "number", "number"]), uc = k5("sqlite3_bind_parameter_index", "number", ["number", "string"]), vc = k5("sqlite3_step", "number", ["number"]), wc = k5("sqlite3_errmsg", "string", ["number"]), xc = k5("sqlite3_column_count", "number", ["number"]), yc = k5("sqlite3_data_count", "number", ["number"]), zc = k5("sqlite3_column_double", "number", ["number", "number"]), qb = k5("sqlite3_column_text", "string", ["number", "number"]), Ac = k5("sqlite3_column_blob", "number", ["number", "number"]), Bc = k5(
            "sqlite3_column_bytes",
            "number",
            ["number", "number"]
          ), Cc = k5("sqlite3_column_type", "number", ["number", "number"]), Dc = k5("sqlite3_column_name", "string", ["number", "number"]), Ec = k5("sqlite3_reset", "number", ["number"]), Fc = k5("sqlite3_clear_bindings", "number", ["number"]), Gc = k5("sqlite3_finalize", "number", ["number"]), rb = k5("sqlite3_create_function_v2", "number", "number string number number number number number number number".split(" ")), kc = k5("sqlite3_value_type", "number", ["number"]), nc = k5("sqlite3_value_bytes", "number", ["number"]), mc = k5(
            "sqlite3_value_text",
            "string",
            ["number"]
          ), oc = k5("sqlite3_value_blob", "number", ["number"]), lc = k5("sqlite3_value_double", "number", ["number"]), hc = k5("sqlite3_result_double", "", ["number", "number"]), kb = k5("sqlite3_result_null", "", ["number"]), ic = k5("sqlite3_result_text", "", ["number", "string", "number", "number"]), jc = k5("sqlite3_result_blob", "", ["number", "number", "number", "number"]), gc = k5("sqlite3_result_int", "", ["number", "number"]), xa = k5("sqlite3_result_error", "", ["number", "string", "number"]), sb = k5(
            "sqlite3_aggregate_context",
            "number",
            ["number", "number"]
          ), pc = k5("RegisterExtensionFunctions", "number", ["number"]);
          c4.prototype.bind = function(g4) {
            if (!this.La)
              throw "Statement closed";
            this.reset();
            return Array.isArray(g4) ? this.xb(g4) : null != g4 && "object" === typeof g4 ? this.yb(g4) : true;
          };
          c4.prototype.step = function() {
            if (!this.La)
              throw "Statement closed";
            this.Ja = 1;
            var g4 = vc(this.La);
            switch (g4) {
              case 100:
                return true;
              case 101:
                return false;
              default:
                throw this.db.handleError(g4);
            }
          };
          c4.prototype.sb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            return zc(this.La, g4);
          };
          c4.prototype.Cb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            g4 = qb(this.La, g4);
            if ("function" !== typeof BigInt)
              throw Error("BigInt is not supported");
            return BigInt(g4);
          };
          c4.prototype.Db = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            return qb(this.La, g4);
          };
          c4.prototype.getBlob = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            var m5 = Bc(this.La, g4);
            g4 = Ac(this.La, g4);
            for (var n2 = new Uint8Array(m5), p3 = 0; p3 < m5; p3 += 1)
              n2[p3] = r3[g4 + p3];
            return n2;
          };
          c4.prototype.get = function(g4, m5) {
            m5 = m5 || {};
            null != g4 && this.bind(g4) && this.step();
            g4 = [];
            for (var n2 = yc(this.La), p3 = 0; p3 < n2; p3 += 1)
              switch (Cc(this.La, p3)) {
                case 1:
                  var v3 = m5.useBigInt ? this.Cb(p3) : this.sb(p3);
                  g4.push(v3);
                  break;
                case 2:
                  g4.push(this.sb(p3));
                  break;
                case 3:
                  g4.push(this.Db(p3));
                  break;
                case 4:
                  g4.push(this.getBlob(p3));
                  break;
                default:
                  g4.push(null);
              }
            return g4;
          };
          c4.prototype.getColumnNames = function() {
            for (var g4 = [], m5 = xc(this.La), n2 = 0; n2 < m5; n2 += 1)
              g4.push(Dc(this.La, n2));
            return g4;
          };
          c4.prototype.getAsObject = function(g4, m5) {
            g4 = this.get(g4, m5);
            m5 = this.getColumnNames();
            for (var n2 = {}, p3 = 0; p3 < m5.length; p3 += 1)
              n2[m5[p3]] = g4[p3];
            return n2;
          };
          c4.prototype.getSQL = function() {
            return nb(this.La);
          };
          c4.prototype.getNormalizedSQL = function() {
            return qc(this.La);
          };
          c4.prototype.run = function(g4) {
            null != g4 && this.bind(g4);
            this.step();
            return this.reset();
          };
          c4.prototype.nb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            g4 = ma(g4);
            var n2 = aa(g4);
            this.fb.push(n2);
            this.db.handleError(rc(this.La, m5, n2, g4.length - 1, 0));
          };
          c4.prototype.wb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            var n2 = aa(g4);
            this.fb.push(n2);
            this.db.handleError(pb(this.La, m5, n2, g4.length, 0));
          };
          c4.prototype.mb = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            this.db.handleError((g4 === (g4 | 0) ? tc : sc)(this.La, m5, g4));
          };
          c4.prototype.zb = function(g4) {
            null == g4 && (g4 = this.Ja, this.Ja += 1);
            pb(this.La, g4, 0, 0, 0);
          };
          c4.prototype.ob = function(g4, m5) {
            null == m5 && (m5 = this.Ja, this.Ja += 1);
            switch (typeof g4) {
              case "string":
                this.nb(g4, m5);
                return;
              case "number":
                this.mb(g4, m5);
                return;
              case "bigint":
                this.nb(g4.toString(), m5);
                return;
              case "boolean":
                this.mb(g4 + 0, m5);
                return;
              case "object":
                if (null === g4) {
                  this.zb(m5);
                  return;
                }
                if (null != g4.length) {
                  this.wb(g4, m5);
                  return;
                }
            }
            throw "Wrong API use : tried to bind a value of an unknown type (" + g4 + ").";
          };
          c4.prototype.yb = function(g4) {
            var m5 = this;
            Object.keys(g4).forEach(function(n2) {
              var p3 = uc(m5.La, n2);
              0 !== p3 && m5.ob(g4[n2], p3);
            });
            return true;
          };
          c4.prototype.xb = function(g4) {
            for (var m5 = 0; m5 < g4.length; m5 += 1)
              this.ob(g4[m5], m5 + 1);
            return true;
          };
          c4.prototype.reset = function() {
            this.freemem();
            return 0 === Fc(this.La) && 0 === Ec(this.La);
          };
          c4.prototype.freemem = function() {
            for (var g4; void 0 !== (g4 = this.fb.pop()); )
              ba(g4);
          };
          c4.prototype.free = function() {
            this.freemem();
            var g4 = 0 === Gc(this.La);
            delete this.db.Za[this.La];
            this.La = 0;
            return g4;
          };
          d5.prototype.next = function() {
            if (null === this.Ya)
              return { done: true };
            null !== this.Ua && (this.Ua.free(), this.Ua = null);
            if (!this.db.db)
              throw this.gb(), Error("Database closed");
            var g4 = oa(), m5 = B5(4);
            pa(h5);
            pa(m5);
            try {
              this.db.handleError(ob(this.db.db, this.eb, -1, h5, m5));
              this.eb = l3(m5, "i32");
              var n2 = l3(h5, "i32");
              if (0 === n2)
                return this.gb(), { done: true };
              this.Ua = new c4(n2, this.db);
              this.db.Za[n2] = this.Ua;
              return { value: this.Ua, done: false };
            } catch (p3) {
              throw this.ib = C3(this.eb), this.gb(), p3;
            } finally {
              qa(g4);
            }
          };
          d5.prototype.gb = function() {
            ba(this.Ya);
            this.Ya = null;
          };
          d5.prototype.getRemainingSQL = function() {
            return null !== this.ib ? this.ib : C3(this.eb);
          };
          "function" === typeof Symbol && "symbol" === typeof Symbol.iterator && (d5.prototype[Symbol.iterator] = function() {
            return this;
          });
          f4.prototype.run = function(g4, m5) {
            if (!this.db)
              throw "Database closed";
            if (m5) {
              g4 = this.prepare(g4, m5);
              try {
                g4.step();
              } finally {
                g4.free();
              }
            } else
              this.handleError(w5(this.db, g4, 0, 0, h5));
            return this;
          };
          f4.prototype.exec = function(g4, m5, n2) {
            if (!this.db)
              throw "Database closed";
            var p3 = oa(), v3 = null;
            try {
              var y5 = ca(g4) + 1, L4 = B5(y5);
              t4(g4, r3, L4, y5);
              var G3 = L4;
              var H5 = B5(4);
              for (g4 = []; 0 !== l3(G3, "i8"); ) {
                pa(h5);
                pa(H5);
                this.handleError(ob(this.db, G3, -1, h5, H5));
                var I4 = l3(h5, "i32");
                G3 = l3(H5, "i32");
                if (0 !== I4) {
                  y5 = null;
                  v3 = new c4(I4, this);
                  for (null != m5 && v3.bind(m5); v3.step(); )
                    null === y5 && (y5 = { columns: v3.getColumnNames(), values: [] }, g4.push(y5)), y5.values.push(v3.get(null, n2));
                  v3.free();
                }
              }
              return g4;
            } catch (na) {
              throw v3 && v3.free(), na;
            } finally {
              qa(p3);
            }
          };
          f4.prototype.each = function(g4, m5, n2, p3, v3) {
            "function" === typeof m5 && (p3 = n2, n2 = m5, m5 = void 0);
            g4 = this.prepare(g4, m5);
            try {
              for (; g4.step(); )
                n2(g4.getAsObject(null, v3));
            } finally {
              g4.free();
            }
            if ("function" === typeof p3)
              return p3();
          };
          f4.prototype.prepare = function(g4, m5) {
            pa(h5);
            this.handleError(S4(this.db, g4, -1, h5, 0));
            g4 = l3(h5, "i32");
            if (0 === g4)
              throw "Nothing to prepare";
            var n2 = new c4(g4, this);
            null != m5 && n2.bind(m5);
            return this.Za[g4] = n2;
          };
          f4.prototype.iterateStatements = function(g4) {
            return new d5(g4, this);
          };
          f4.prototype["export"] = function() {
            Object.values(this.Za).forEach(function(m5) {
              m5.free();
            });
            Object.values(this.Na).forEach(ra);
            this.Na = {};
            this.handleError(x5(this.db));
            var g4 = sa(this.filename);
            this.handleError(q5(this.filename, h5));
            this.db = l3(h5, "i32");
            return g4;
          };
          f4.prototype.close = function() {
            null !== this.db && (Object.values(this.Za).forEach(function(g4) {
              g4.free();
            }), Object.values(this.Na).forEach(ra), this.Na = {}, this.handleError(x5(this.db)), ta("/" + this.filename), this.db = null);
          };
          f4.prototype.handleError = function(g4) {
            if (0 === g4)
              return null;
            g4 = wc(this.db);
            throw Error(g4);
          };
          f4.prototype.getRowsModified = function() {
            return A4(this.db);
          };
          f4.prototype.create_function = function(g4, m5) {
            Object.prototype.hasOwnProperty.call(this.Na, g4) && (ra(this.Na[g4]), delete this.Na[g4]);
            var n2 = ua(function(p3, v3, y5) {
              v3 = b4(v3, y5);
              try {
                var L4 = m5.apply(null, v3);
              } catch (G3) {
                xa(p3, G3, -1);
                return;
              }
              a5(p3, L4);
            }, "viii");
            this.Na[g4] = n2;
            this.handleError(rb(this.db, g4, m5.length, 1, 0, n2, 0, 0, 0));
            return this;
          };
          f4.prototype.create_aggregate = function(g4, m5) {
            var n2 = m5.init || function() {
              return null;
            }, p3 = m5.finalize || function(H5) {
              return H5;
            }, v3 = m5.step;
            if (!v3)
              throw "An aggregate function must have a step function in " + g4;
            var y5 = {};
            Object.hasOwnProperty.call(this.Na, g4) && (ra(this.Na[g4]), delete this.Na[g4]);
            m5 = g4 + "__finalize";
            Object.hasOwnProperty.call(this.Na, m5) && (ra(this.Na[m5]), delete this.Na[m5]);
            var L4 = ua(function(H5, I4, na) {
              var Z2 = sb(H5, 1);
              Object.hasOwnProperty.call(y5, Z2) || (y5[Z2] = n2());
              I4 = b4(I4, na);
              I4 = [y5[Z2]].concat(I4);
              try {
                y5[Z2] = v3.apply(null, I4);
              } catch (Ic) {
                delete y5[Z2], xa(H5, Ic, -1);
              }
            }, "viii"), G3 = ua(function(H5) {
              var I4 = sb(H5, 1);
              try {
                var na = p3(y5[I4]);
              } catch (Z2) {
                delete y5[I4];
                xa(H5, Z2, -1);
                return;
              }
              a5(H5, na);
              delete y5[I4];
            }, "vi");
            this.Na[g4] = L4;
            this.Na[m5] = G3;
            this.handleError(rb(this.db, g4, v3.length - 1, 1, 0, 0, L4, G3, 0));
            return this;
          };
          e4.Database = f4;
        };
        var va = Object.assign({}, e4), wa = "./this.program", ya = "object" == typeof window, za = "function" == typeof importScripts, Aa = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, D4 = "", Ba, Ca, Da, fs, Ea, Fa;
        if (Aa)
          D4 = za ? require("path").dirname(D4) + "/" : __dirname + "/", Fa = () => {
            Ea || (fs = require("fs"), Ea = require("path"));
          }, Ba = function(a5, b4) {
            Fa();
            a5 = Ea.normalize(a5);
            return fs.readFileSync(a5, b4 ? void 0 : "utf8");
          }, Da = (a5) => {
            a5 = Ba(a5, true);
            a5.buffer || (a5 = new Uint8Array(a5));
            return a5;
          }, Ca = (a5, b4, c4) => {
            Fa();
            a5 = Ea.normalize(a5);
            fs.readFile(a5, function(d5, f4) {
              d5 ? c4(d5) : b4(f4.buffer);
            });
          }, 1 < process.argv.length && (wa = process.argv[1].replace(/\\/g, "/")), process.argv.slice(2), "undefined" != typeof module2 && (module2.exports = e4), e4.inspect = function() {
            return "[Emscripten Module object]";
          };
        else if (ya || za)
          za ? D4 = self.location.href : "undefined" != typeof document && document.currentScript && (D4 = document.currentScript.src), D4 = 0 !== D4.indexOf("blob:") ? D4.substr(0, D4.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", Ba = (a5) => {
            var b4 = new XMLHttpRequest();
            b4.open("GET", a5, false);
            b4.send(null);
            return b4.responseText;
          }, za && (Da = (a5) => {
            var b4 = new XMLHttpRequest();
            b4.open("GET", a5, false);
            b4.responseType = "arraybuffer";
            b4.send(null);
            return new Uint8Array(b4.response);
          }), Ca = (a5, b4, c4) => {
            var d5 = new XMLHttpRequest();
            d5.open("GET", a5, true);
            d5.responseType = "arraybuffer";
            d5.onload = () => {
              200 == d5.status || 0 == d5.status && d5.response ? b4(d5.response) : c4();
            };
            d5.onerror = c4;
            d5.send(null);
          };
        var Ga = e4.print || console.log.bind(console), Ha = e4.printErr || console.warn.bind(console);
        Object.assign(e4, va);
        va = null;
        e4.thisProgram && (wa = e4.thisProgram);
        var Ia;
        e4.wasmBinary && (Ia = e4.wasmBinary);
        var noExitRuntime = e4.noExitRuntime || true;
        "object" != typeof WebAssembly && E4("no native wasm support detected");
        var Ja, Ka = false, La = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
        function Ma(a5, b4, c4) {
          var d5 = b4 + c4;
          for (c4 = b4; a5[c4] && !(c4 >= d5); )
            ++c4;
          if (16 < c4 - b4 && a5.buffer && La)
            return La.decode(a5.subarray(b4, c4));
          for (d5 = ""; b4 < c4; ) {
            var f4 = a5[b4++];
            if (f4 & 128) {
              var h5 = a5[b4++] & 63;
              if (192 == (f4 & 224))
                d5 += String.fromCharCode((f4 & 31) << 6 | h5);
              else {
                var k5 = a5[b4++] & 63;
                f4 = 224 == (f4 & 240) ? (f4 & 15) << 12 | h5 << 6 | k5 : (f4 & 7) << 18 | h5 << 12 | k5 << 6 | a5[b4++] & 63;
                65536 > f4 ? d5 += String.fromCharCode(f4) : (f4 -= 65536, d5 += String.fromCharCode(55296 | f4 >> 10, 56320 | f4 & 1023));
              }
            } else
              d5 += String.fromCharCode(f4);
          }
          return d5;
        }
        function C3(a5, b4) {
          return a5 ? Ma(u4, a5, b4) : "";
        }
        function t4(a5, b4, c4, d5) {
          if (!(0 < d5))
            return 0;
          var f4 = c4;
          d5 = c4 + d5 - 1;
          for (var h5 = 0; h5 < a5.length; ++h5) {
            var k5 = a5.charCodeAt(h5);
            if (55296 <= k5 && 57343 >= k5) {
              var q5 = a5.charCodeAt(++h5);
              k5 = 65536 + ((k5 & 1023) << 10) | q5 & 1023;
            }
            if (127 >= k5) {
              if (c4 >= d5)
                break;
              b4[c4++] = k5;
            } else {
              if (2047 >= k5) {
                if (c4 + 1 >= d5)
                  break;
                b4[c4++] = 192 | k5 >> 6;
              } else {
                if (65535 >= k5) {
                  if (c4 + 2 >= d5)
                    break;
                  b4[c4++] = 224 | k5 >> 12;
                } else {
                  if (c4 + 3 >= d5)
                    break;
                  b4[c4++] = 240 | k5 >> 18;
                  b4[c4++] = 128 | k5 >> 12 & 63;
                }
                b4[c4++] = 128 | k5 >> 6 & 63;
              }
              b4[c4++] = 128 | k5 & 63;
            }
          }
          b4[c4] = 0;
          return c4 - f4;
        }
        function ca(a5) {
          for (var b4 = 0, c4 = 0; c4 < a5.length; ++c4) {
            var d5 = a5.charCodeAt(c4);
            127 >= d5 ? b4++ : 2047 >= d5 ? b4 += 2 : 55296 <= d5 && 57343 >= d5 ? (b4 += 4, ++c4) : b4 += 3;
          }
          return b4;
        }
        var Na, r3, u4, Oa, F4, J2, Pa, Qa;
        function Ra() {
          var a5 = Ja.buffer;
          Na = a5;
          e4.HEAP8 = r3 = new Int8Array(a5);
          e4.HEAP16 = Oa = new Int16Array(a5);
          e4.HEAP32 = F4 = new Int32Array(a5);
          e4.HEAPU8 = u4 = new Uint8Array(a5);
          e4.HEAPU16 = new Uint16Array(a5);
          e4.HEAPU32 = J2 = new Uint32Array(a5);
          e4.HEAPF32 = Pa = new Float32Array(a5);
          e4.HEAPF64 = Qa = new Float64Array(a5);
        }
        var K3, Sa = [], Ta = [], Ua = [];
        function Va() {
          var a5 = e4.preRun.shift();
          Sa.unshift(a5);
        }
        var Wa = 0, Xa = null, Ya = null;
        function E4(a5) {
          if (e4.onAbort)
            e4.onAbort(a5);
          a5 = "Aborted(" + a5 + ")";
          Ha(a5);
          Ka = true;
          throw new WebAssembly.RuntimeError(a5 + ". Build with -sASSERTIONS for more info.");
        }
        function Za() {
          return M5.startsWith("data:application/octet-stream;base64,");
        }
        var M5;
        M5 = "sql-wasm.wasm";
        if (!Za()) {
          var $a = M5;
          M5 = e4.locateFile ? e4.locateFile($a, D4) : D4 + $a;
        }
        function ab() {
          var a5 = M5;
          try {
            if (a5 == M5 && Ia)
              return new Uint8Array(Ia);
            if (Da)
              return Da(a5);
            throw "both async and sync fetching of the wasm failed";
          } catch (b4) {
            E4(b4);
          }
        }
        function bb() {
          if (!Ia && (ya || za)) {
            if ("function" == typeof fetch && !M5.startsWith("file://"))
              return fetch(M5, { credentials: "same-origin" }).then(function(a5) {
                if (!a5.ok)
                  throw "failed to load wasm binary file at '" + M5 + "'";
                return a5.arrayBuffer();
              }).catch(function() {
                return ab();
              });
            if (Ca)
              return new Promise(function(a5, b4) {
                Ca(M5, function(c4) {
                  a5(new Uint8Array(c4));
                }, b4);
              });
          }
          return Promise.resolve().then(function() {
            return ab();
          });
        }
        var N3, O4;
        function cb(a5) {
          for (; 0 < a5.length; )
            a5.shift()(e4);
        }
        function l3(a5, b4 = "i8") {
          b4.endsWith("*") && (b4 = "*");
          switch (b4) {
            case "i1":
              return r3[a5 >> 0];
            case "i8":
              return r3[a5 >> 0];
            case "i16":
              return Oa[a5 >> 1];
            case "i32":
              return F4[a5 >> 2];
            case "i64":
              return F4[a5 >> 2];
            case "float":
              return Pa[a5 >> 2];
            case "double":
              return Qa[a5 >> 3];
            case "*":
              return J2[a5 >> 2];
            default:
              E4("invalid type for getValue: " + b4);
          }
          return null;
        }
        function pa(a5) {
          var b4 = "i32";
          b4.endsWith("*") && (b4 = "*");
          switch (b4) {
            case "i1":
              r3[a5 >> 0] = 0;
              break;
            case "i8":
              r3[a5 >> 0] = 0;
              break;
            case "i16":
              Oa[a5 >> 1] = 0;
              break;
            case "i32":
              F4[a5 >> 2] = 0;
              break;
            case "i64":
              O4 = [0, (N3 = 0, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
              F4[a5 >> 2] = O4[0];
              F4[a5 + 4 >> 2] = O4[1];
              break;
            case "float":
              Pa[a5 >> 2] = 0;
              break;
            case "double":
              Qa[a5 >> 3] = 0;
              break;
            case "*":
              J2[a5 >> 2] = 0;
              break;
            default:
              E4("invalid type for setValue: " + b4);
          }
        }
        var db = (a5, b4) => {
          for (var c4 = 0, d5 = a5.length - 1; 0 <= d5; d5--) {
            var f4 = a5[d5];
            "." === f4 ? a5.splice(d5, 1) : ".." === f4 ? (a5.splice(d5, 1), c4++) : c4 && (a5.splice(d5, 1), c4--);
          }
          if (b4)
            for (; c4; c4--)
              a5.unshift("..");
          return a5;
        }, z5 = (a5) => {
          var b4 = "/" === a5.charAt(0), c4 = "/" === a5.substr(-1);
          (a5 = db(a5.split("/").filter((d5) => !!d5), !b4).join("/")) || b4 || (a5 = ".");
          a5 && c4 && (a5 += "/");
          return (b4 ? "/" : "") + a5;
        }, eb = (a5) => {
          var b4 = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a5).slice(1);
          a5 = b4[0];
          b4 = b4[1];
          if (!a5 && !b4)
            return ".";
          b4 && (b4 = b4.substr(0, b4.length - 1));
          return a5 + b4;
        }, fb = (a5) => {
          if ("/" === a5)
            return "/";
          a5 = z5(a5);
          a5 = a5.replace(/\/$/, "");
          var b4 = a5.lastIndexOf("/");
          return -1 === b4 ? a5 : a5.substr(b4 + 1);
        };
        function gb() {
          if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues) {
            var a5 = new Uint8Array(1);
            return () => {
              crypto.getRandomValues(a5);
              return a5[0];
            };
          }
          if (Aa)
            try {
              var b4 = require("crypto");
              return () => b4.randomBytes(1)[0];
            } catch (c4) {
            }
          return () => E4("randomDevice");
        }
        function hb() {
          for (var a5 = "", b4 = false, c4 = arguments.length - 1; -1 <= c4 && !b4; c4--) {
            b4 = 0 <= c4 ? arguments[c4] : "/";
            if ("string" != typeof b4)
              throw new TypeError("Arguments to path.resolve must be strings");
            if (!b4)
              return "";
            a5 = b4 + "/" + a5;
            b4 = "/" === b4.charAt(0);
          }
          a5 = db(a5.split("/").filter((d5) => !!d5), !b4).join("/");
          return (b4 ? "/" : "") + a5 || ".";
        }
        function ma(a5, b4) {
          var c4 = Array(ca(a5) + 1);
          a5 = t4(a5, c4, 0, c4.length);
          b4 && (c4.length = a5);
          return c4;
        }
        var ib = [];
        function jb(a5, b4) {
          ib[a5] = { input: [], output: [], Xa: b4 };
          lb(a5, mb);
        }
        var mb = { open: function(a5) {
          var b4 = ib[a5.node.rdev];
          if (!b4)
            throw new P4(43);
          a5.tty = b4;
          a5.seekable = false;
        }, close: function(a5) {
          a5.tty.Xa.fsync(a5.tty);
        }, fsync: function(a5) {
          a5.tty.Xa.fsync(a5.tty);
        }, read: function(a5, b4, c4, d5) {
          if (!a5.tty || !a5.tty.Xa.tb)
            throw new P4(60);
          for (var f4 = 0, h5 = 0; h5 < d5; h5++) {
            try {
              var k5 = a5.tty.Xa.tb(a5.tty);
            } catch (q5) {
              throw new P4(29);
            }
            if (void 0 === k5 && 0 === f4)
              throw new P4(6);
            if (null === k5 || void 0 === k5)
              break;
            f4++;
            b4[c4 + h5] = k5;
          }
          f4 && (a5.node.timestamp = Date.now());
          return f4;
        }, write: function(a5, b4, c4, d5) {
          if (!a5.tty || !a5.tty.Xa.jb)
            throw new P4(60);
          try {
            for (var f4 = 0; f4 < d5; f4++)
              a5.tty.Xa.jb(a5.tty, b4[c4 + f4]);
          } catch (h5) {
            throw new P4(29);
          }
          d5 && (a5.node.timestamp = Date.now());
          return f4;
        } }, tb = { tb: function(a5) {
          if (!a5.input.length) {
            var b4 = null;
            if (Aa) {
              var c4 = Buffer.alloc(256), d5 = 0;
              try {
                d5 = fs.readSync(process.stdin.fd, c4, 0, 256, -1);
              } catch (f4) {
                if (f4.toString().includes("EOF"))
                  d5 = 0;
                else
                  throw f4;
              }
              0 < d5 ? b4 = c4.slice(0, d5).toString("utf-8") : b4 = null;
            } else
              "undefined" != typeof window && "function" == typeof window.prompt ? (b4 = window.prompt("Input: "), null !== b4 && (b4 += "\n")) : "function" == typeof readline && (b4 = readline(), null !== b4 && (b4 += "\n"));
            if (!b4)
              return null;
            a5.input = ma(b4, true);
          }
          return a5.input.shift();
        }, jb: function(a5, b4) {
          null === b4 || 10 === b4 ? (Ga(Ma(a5.output, 0)), a5.output = []) : 0 != b4 && a5.output.push(b4);
        }, fsync: function(a5) {
          a5.output && 0 < a5.output.length && (Ga(Ma(a5.output, 0)), a5.output = []);
        } }, ub = { jb: function(a5, b4) {
          null === b4 || 10 === b4 ? (Ha(Ma(a5.output, 0)), a5.output = []) : 0 != b4 && a5.output.push(b4);
        }, fsync: function(a5) {
          a5.output && 0 < a5.output.length && (Ha(Ma(a5.output, 0)), a5.output = []);
        } }, Q3 = { Qa: null, Ra: function() {
          return Q3.createNode(
            null,
            "/",
            16895,
            0
          );
        }, createNode: function(a5, b4, c4, d5) {
          if (24576 === (c4 & 61440) || 4096 === (c4 & 61440))
            throw new P4(63);
          Q3.Qa || (Q3.Qa = { dir: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa, lookup: Q3.Ga.lookup, ab: Q3.Ga.ab, rename: Q3.Ga.rename, unlink: Q3.Ga.unlink, rmdir: Q3.Ga.rmdir, readdir: Q3.Ga.readdir, symlink: Q3.Ga.symlink }, stream: { Ta: Q3.Ha.Ta } }, file: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa }, stream: { Ta: Q3.Ha.Ta, read: Q3.Ha.read, write: Q3.Ha.write, lb: Q3.Ha.lb, bb: Q3.Ha.bb, cb: Q3.Ha.cb } }, link: { node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa, readlink: Q3.Ga.readlink }, stream: {} }, pb: {
            node: { Pa: Q3.Ga.Pa, Oa: Q3.Ga.Oa },
            stream: vb
          } });
          c4 = wb(a5, b4, c4, d5);
          16384 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.dir.node, c4.Ha = Q3.Qa.dir.stream, c4.Ia = {}) : 32768 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.file.node, c4.Ha = Q3.Qa.file.stream, c4.Ma = 0, c4.Ia = null) : 40960 === (c4.mode & 61440) ? (c4.Ga = Q3.Qa.link.node, c4.Ha = Q3.Qa.link.stream) : 8192 === (c4.mode & 61440) && (c4.Ga = Q3.Qa.pb.node, c4.Ha = Q3.Qa.pb.stream);
          c4.timestamp = Date.now();
          a5 && (a5.Ia[b4] = c4, a5.timestamp = c4.timestamp);
          return c4;
        }, Jb: function(a5) {
          return a5.Ia ? a5.Ia.subarray ? a5.Ia.subarray(0, a5.Ma) : new Uint8Array(a5.Ia) : new Uint8Array(0);
        }, qb: function(a5, b4) {
          var c4 = a5.Ia ? a5.Ia.length : 0;
          c4 >= b4 || (b4 = Math.max(b4, c4 * (1048576 > c4 ? 2 : 1.125) >>> 0), 0 != c4 && (b4 = Math.max(b4, 256)), c4 = a5.Ia, a5.Ia = new Uint8Array(b4), 0 < a5.Ma && a5.Ia.set(c4.subarray(0, a5.Ma), 0));
        }, Gb: function(a5, b4) {
          if (a5.Ma != b4)
            if (0 == b4)
              a5.Ia = null, a5.Ma = 0;
            else {
              var c4 = a5.Ia;
              a5.Ia = new Uint8Array(b4);
              c4 && a5.Ia.set(c4.subarray(0, Math.min(b4, a5.Ma)));
              a5.Ma = b4;
            }
        }, Ga: { Pa: function(a5) {
          var b4 = {};
          b4.dev = 8192 === (a5.mode & 61440) ? a5.id : 1;
          b4.ino = a5.id;
          b4.mode = a5.mode;
          b4.nlink = 1;
          b4.uid = 0;
          b4.gid = 0;
          b4.rdev = a5.rdev;
          16384 === (a5.mode & 61440) ? b4.size = 4096 : 32768 === (a5.mode & 61440) ? b4.size = a5.Ma : 40960 === (a5.mode & 61440) ? b4.size = a5.link.length : b4.size = 0;
          b4.atime = new Date(a5.timestamp);
          b4.mtime = new Date(a5.timestamp);
          b4.ctime = new Date(a5.timestamp);
          b4.Ab = 4096;
          b4.blocks = Math.ceil(b4.size / b4.Ab);
          return b4;
        }, Oa: function(a5, b4) {
          void 0 !== b4.mode && (a5.mode = b4.mode);
          void 0 !== b4.timestamp && (a5.timestamp = b4.timestamp);
          void 0 !== b4.size && Q3.Gb(a5, b4.size);
        }, lookup: function() {
          throw xb[44];
        }, ab: function(a5, b4, c4, d5) {
          return Q3.createNode(a5, b4, c4, d5);
        }, rename: function(a5, b4, c4) {
          if (16384 === (a5.mode & 61440)) {
            try {
              var d5 = yb(b4, c4);
            } catch (h5) {
            }
            if (d5)
              for (var f4 in d5.Ia)
                throw new P4(55);
          }
          delete a5.parent.Ia[a5.name];
          a5.parent.timestamp = Date.now();
          a5.name = c4;
          b4.Ia[c4] = a5;
          b4.timestamp = a5.parent.timestamp;
          a5.parent = b4;
        }, unlink: function(a5, b4) {
          delete a5.Ia[b4];
          a5.timestamp = Date.now();
        }, rmdir: function(a5, b4) {
          var c4 = yb(a5, b4), d5;
          for (d5 in c4.Ia)
            throw new P4(55);
          delete a5.Ia[b4];
          a5.timestamp = Date.now();
        }, readdir: function(a5) {
          var b4 = [".", ".."], c4;
          for (c4 in a5.Ia)
            a5.Ia.hasOwnProperty(c4) && b4.push(c4);
          return b4;
        }, symlink: function(a5, b4, c4) {
          a5 = Q3.createNode(a5, b4, 41471, 0);
          a5.link = c4;
          return a5;
        }, readlink: function(a5) {
          if (40960 !== (a5.mode & 61440))
            throw new P4(28);
          return a5.link;
        } }, Ha: { read: function(a5, b4, c4, d5, f4) {
          var h5 = a5.node.Ia;
          if (f4 >= a5.node.Ma)
            return 0;
          a5 = Math.min(a5.node.Ma - f4, d5);
          if (8 < a5 && h5.subarray)
            b4.set(h5.subarray(f4, f4 + a5), c4);
          else
            for (d5 = 0; d5 < a5; d5++)
              b4[c4 + d5] = h5[f4 + d5];
          return a5;
        }, write: function(a5, b4, c4, d5, f4, h5) {
          b4.buffer === r3.buffer && (h5 = false);
          if (!d5)
            return 0;
          a5 = a5.node;
          a5.timestamp = Date.now();
          if (b4.subarray && (!a5.Ia || a5.Ia.subarray)) {
            if (h5)
              return a5.Ia = b4.subarray(c4, c4 + d5), a5.Ma = d5;
            if (0 === a5.Ma && 0 === f4)
              return a5.Ia = b4.slice(c4, c4 + d5), a5.Ma = d5;
            if (f4 + d5 <= a5.Ma)
              return a5.Ia.set(b4.subarray(c4, c4 + d5), f4), d5;
          }
          Q3.qb(a5, f4 + d5);
          if (a5.Ia.subarray && b4.subarray)
            a5.Ia.set(b4.subarray(c4, c4 + d5), f4);
          else
            for (h5 = 0; h5 < d5; h5++)
              a5.Ia[f4 + h5] = b4[c4 + h5];
          a5.Ma = Math.max(a5.Ma, f4 + d5);
          return d5;
        }, Ta: function(a5, b4, c4) {
          1 === c4 ? b4 += a5.position : 2 === c4 && 32768 === (a5.node.mode & 61440) && (b4 += a5.node.Ma);
          if (0 > b4)
            throw new P4(28);
          return b4;
        }, lb: function(a5, b4, c4) {
          Q3.qb(a5.node, b4 + c4);
          a5.node.Ma = Math.max(a5.node.Ma, b4 + c4);
        }, bb: function(a5, b4, c4, d5, f4) {
          if (32768 !== (a5.node.mode & 61440))
            throw new P4(43);
          a5 = a5.node.Ia;
          if (f4 & 2 || a5.buffer !== Na) {
            if (0 < c4 || c4 + b4 < a5.length)
              a5.subarray ? a5 = a5.subarray(c4, c4 + b4) : a5 = Array.prototype.slice.call(
                a5,
                c4,
                c4 + b4
              );
            c4 = true;
            b4 = 65536 * Math.ceil(b4 / 65536);
            (f4 = zb(65536, b4)) ? (u4.fill(0, f4, f4 + b4), b4 = f4) : b4 = 0;
            if (!b4)
              throw new P4(48);
            r3.set(a5, b4);
          } else
            c4 = false, b4 = a5.byteOffset;
          return { Fb: b4, vb: c4 };
        }, cb: function(a5, b4, c4, d5, f4) {
          if (32768 !== (a5.node.mode & 61440))
            throw new P4(43);
          if (f4 & 2)
            return 0;
          Q3.Ha.write(a5, b4, 0, d5, c4, false);
          return 0;
        } } }, Ab = null, Bb = {}, R3 = [], Cb = 1, T6 = null, Db = true, P4 = null, xb = {}, U2 = (a5, b4 = {}) => {
          a5 = hb("/", a5);
          if (!a5)
            return { path: "", node: null };
          b4 = Object.assign({ rb: true, kb: 0 }, b4);
          if (8 < b4.kb)
            throw new P4(32);
          a5 = db(a5.split("/").filter((k5) => !!k5), false);
          for (var c4 = Ab, d5 = "/", f4 = 0; f4 < a5.length; f4++) {
            var h5 = f4 === a5.length - 1;
            if (h5 && b4.parent)
              break;
            c4 = yb(c4, a5[f4]);
            d5 = z5(d5 + "/" + a5[f4]);
            c4.Va && (!h5 || h5 && b4.rb) && (c4 = c4.Va.root);
            if (!h5 || b4.Sa) {
              for (h5 = 0; 40960 === (c4.mode & 61440); )
                if (c4 = Eb(d5), d5 = hb(eb(d5), c4), c4 = U2(d5, { kb: b4.kb + 1 }).node, 40 < h5++)
                  throw new P4(32);
            }
          }
          return { path: d5, node: c4 };
        }, ea = (a5) => {
          for (var b4; ; ) {
            if (a5 === a5.parent)
              return a5 = a5.Ra.ub, b4 ? "/" !== a5[a5.length - 1] ? a5 + "/" + b4 : a5 + b4 : a5;
            b4 = b4 ? a5.name + "/" + b4 : a5.name;
            a5 = a5.parent;
          }
        }, Fb = (a5, b4) => {
          for (var c4 = 0, d5 = 0; d5 < b4.length; d5++)
            c4 = (c4 << 5) - c4 + b4.charCodeAt(d5) | 0;
          return (a5 + c4 >>> 0) % T6.length;
        }, Gb = (a5) => {
          var b4 = Fb(a5.parent.id, a5.name);
          if (T6[b4] === a5)
            T6[b4] = a5.Wa;
          else
            for (b4 = T6[b4]; b4; ) {
              if (b4.Wa === a5) {
                b4.Wa = a5.Wa;
                break;
              }
              b4 = b4.Wa;
            }
        }, yb = (a5, b4) => {
          var c4;
          if (c4 = (c4 = Hb(a5, "x")) ? c4 : a5.Ga.lookup ? 0 : 2)
            throw new P4(c4, a5);
          for (c4 = T6[Fb(a5.id, b4)]; c4; c4 = c4.Wa) {
            var d5 = c4.name;
            if (c4.parent.id === a5.id && d5 === b4)
              return c4;
          }
          return a5.Ga.lookup(a5, b4);
        }, wb = (a5, b4, c4, d5) => {
          a5 = new Ib(a5, b4, c4, d5);
          b4 = Fb(a5.parent.id, a5.name);
          a5.Wa = T6[b4];
          return T6[b4] = a5;
        }, Jb = { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }, Kb = (a5) => {
          var b4 = ["r", "w", "rw"][a5 & 3];
          a5 & 512 && (b4 += "w");
          return b4;
        }, Hb = (a5, b4) => {
          if (Db)
            return 0;
          if (!b4.includes("r") || a5.mode & 292) {
            if (b4.includes("w") && !(a5.mode & 146) || b4.includes("x") && !(a5.mode & 73))
              return 2;
          } else
            return 2;
          return 0;
        }, Lb = (a5, b4) => {
          try {
            return yb(a5, b4), 20;
          } catch (c4) {
          }
          return Hb(a5, "wx");
        }, Mb = (a5, b4, c4) => {
          try {
            var d5 = yb(a5, b4);
          } catch (f4) {
            return f4.Ka;
          }
          if (a5 = Hb(a5, "wx"))
            return a5;
          if (c4) {
            if (16384 !== (d5.mode & 61440))
              return 54;
            if (d5 === d5.parent || "/" === ea(d5))
              return 10;
          } else if (16384 === (d5.mode & 61440))
            return 31;
          return 0;
        }, Nb = (a5 = 0) => {
          for (; 4096 >= a5; a5++)
            if (!R3[a5])
              return a5;
          throw new P4(33);
        }, Pb = (a5, b4) => {
          Ob || (Ob = function() {
            this.$a = {};
          }, Ob.prototype = {}, Object.defineProperties(Ob.prototype, { object: { get: function() {
            return this.node;
          }, set: function(c4) {
            this.node = c4;
          } }, flags: { get: function() {
            return this.$a.flags;
          }, set: function(c4) {
            this.$a.flags = c4;
          } }, position: { get: function() {
            return this.$a.position;
          }, set: function(c4) {
            this.$a.position = c4;
          } } }));
          a5 = Object.assign(new Ob(), a5);
          b4 = Nb(b4);
          a5.fd = b4;
          return R3[b4] = a5;
        }, vb = { open: (a5) => {
          a5.Ha = Bb[a5.node.rdev].Ha;
          a5.Ha.open && a5.Ha.open(a5);
        }, Ta: () => {
          throw new P4(70);
        } }, lb = (a5, b4) => {
          Bb[a5] = { Ha: b4 };
        }, Qb = (a5, b4) => {
          var c4 = "/" === b4, d5 = !b4;
          if (c4 && Ab)
            throw new P4(10);
          if (!c4 && !d5) {
            var f4 = U2(b4, { rb: false });
            b4 = f4.path;
            f4 = f4.node;
            if (f4.Va)
              throw new P4(10);
            if (16384 !== (f4.mode & 61440))
              throw new P4(54);
          }
          b4 = { type: a5, Kb: {}, ub: b4, Eb: [] };
          a5 = a5.Ra(b4);
          a5.Ra = b4;
          b4.root = a5;
          c4 ? Ab = a5 : f4 && (f4.Va = b4, f4.Ra && f4.Ra.Eb.push(b4));
        }, ha = (a5, b4, c4) => {
          var d5 = U2(a5, { parent: true }).node;
          a5 = fb(a5);
          if (!a5 || "." === a5 || ".." === a5)
            throw new P4(28);
          var f4 = Lb(d5, a5);
          if (f4)
            throw new P4(f4);
          if (!d5.Ga.ab)
            throw new P4(63);
          return d5.Ga.ab(d5, a5, b4, c4);
        }, V3 = (a5, b4) => ha(a5, (void 0 !== b4 ? b4 : 511) & 1023 | 16384, 0), Rb = (a5, b4, c4) => {
          "undefined" == typeof c4 && (c4 = b4, b4 = 438);
          ha(a5, b4 | 8192, c4);
        }, Sb = (a5, b4) => {
          if (!hb(a5))
            throw new P4(44);
          var c4 = U2(b4, { parent: true }).node;
          if (!c4)
            throw new P4(44);
          b4 = fb(b4);
          var d5 = Lb(c4, b4);
          if (d5)
            throw new P4(d5);
          if (!c4.Ga.symlink)
            throw new P4(63);
          c4.Ga.symlink(c4, b4, a5);
        }, Tb = (a5) => {
          var b4 = U2(a5, { parent: true }).node;
          a5 = fb(a5);
          var c4 = yb(b4, a5), d5 = Mb(b4, a5, true);
          if (d5)
            throw new P4(d5);
          if (!b4.Ga.rmdir)
            throw new P4(63);
          if (c4.Va)
            throw new P4(10);
          b4.Ga.rmdir(b4, a5);
          Gb(c4);
        }, ta = (a5) => {
          var b4 = U2(a5, { parent: true }).node;
          if (!b4)
            throw new P4(44);
          a5 = fb(a5);
          var c4 = yb(b4, a5), d5 = Mb(b4, a5, false);
          if (d5)
            throw new P4(d5);
          if (!b4.Ga.unlink)
            throw new P4(63);
          if (c4.Va)
            throw new P4(10);
          b4.Ga.unlink(b4, a5);
          Gb(c4);
        }, Eb = (a5) => {
          a5 = U2(a5).node;
          if (!a5)
            throw new P4(44);
          if (!a5.Ga.readlink)
            throw new P4(28);
          return hb(ea(a5.parent), a5.Ga.readlink(a5));
        }, Ub = (a5, b4) => {
          a5 = U2(a5, { Sa: !b4 }).node;
          if (!a5)
            throw new P4(44);
          if (!a5.Ga.Pa)
            throw new P4(63);
          return a5.Ga.Pa(a5);
        }, Vb = (a5) => Ub(a5, true), ia = (a5, b4) => {
          a5 = "string" == typeof a5 ? U2(a5, { Sa: true }).node : a5;
          if (!a5.Ga.Oa)
            throw new P4(63);
          a5.Ga.Oa(a5, { mode: b4 & 4095 | a5.mode & -4096, timestamp: Date.now() });
        }, Wb = (a5, b4) => {
          if (0 > b4)
            throw new P4(28);
          a5 = "string" == typeof a5 ? U2(a5, { Sa: true }).node : a5;
          if (!a5.Ga.Oa)
            throw new P4(63);
          if (16384 === (a5.mode & 61440))
            throw new P4(31);
          if (32768 !== (a5.mode & 61440))
            throw new P4(28);
          var c4 = Hb(a5, "w");
          if (c4)
            throw new P4(c4);
          a5.Ga.Oa(a5, { size: b4, timestamp: Date.now() });
        }, ja = (a5, b4, c4) => {
          if ("" === a5)
            throw new P4(44);
          if ("string" == typeof b4) {
            var d5 = Jb[b4];
            if ("undefined" == typeof d5)
              throw Error("Unknown file open mode: " + b4);
            b4 = d5;
          }
          c4 = b4 & 64 ? ("undefined" == typeof c4 ? 438 : c4) & 4095 | 32768 : 0;
          if ("object" == typeof a5)
            var f4 = a5;
          else {
            a5 = z5(a5);
            try {
              f4 = U2(a5, { Sa: !(b4 & 131072) }).node;
            } catch (h5) {
            }
          }
          d5 = false;
          if (b4 & 64)
            if (f4) {
              if (b4 & 128)
                throw new P4(20);
            } else
              f4 = ha(a5, c4, 0), d5 = true;
          if (!f4)
            throw new P4(44);
          8192 === (f4.mode & 61440) && (b4 &= -513);
          if (b4 & 65536 && 16384 !== (f4.mode & 61440))
            throw new P4(54);
          if (!d5 && (c4 = f4 ? 40960 === (f4.mode & 61440) ? 32 : 16384 === (f4.mode & 61440) && ("r" !== Kb(b4) || b4 & 512) ? 31 : Hb(f4, Kb(b4)) : 44))
            throw new P4(c4);
          b4 & 512 && !d5 && Wb(f4, 0);
          b4 &= -131713;
          f4 = Pb({ node: f4, path: ea(f4), flags: b4, seekable: true, position: 0, Ha: f4.Ha, Ib: [], error: false });
          f4.Ha.open && f4.Ha.open(f4);
          !e4.logReadFiles || b4 & 1 || (Xb || (Xb = {}), a5 in Xb || (Xb[a5] = 1));
          return f4;
        }, la = (a5) => {
          if (null === a5.fd)
            throw new P4(8);
          a5.hb && (a5.hb = null);
          try {
            a5.Ha.close && a5.Ha.close(a5);
          } catch (b4) {
            throw b4;
          } finally {
            R3[a5.fd] = null;
          }
          a5.fd = null;
        }, Yb = (a5, b4, c4) => {
          if (null === a5.fd)
            throw new P4(8);
          if (!a5.seekable || !a5.Ha.Ta)
            throw new P4(70);
          if (0 != c4 && 1 != c4 && 2 != c4)
            throw new P4(28);
          a5.position = a5.Ha.Ta(a5, b4, c4);
          a5.Ib = [];
        }, Zb = (a5, b4, c4, d5, f4) => {
          if (0 > d5 || 0 > f4)
            throw new P4(28);
          if (null === a5.fd)
            throw new P4(8);
          if (1 === (a5.flags & 2097155))
            throw new P4(8);
          if (16384 === (a5.node.mode & 61440))
            throw new P4(31);
          if (!a5.Ha.read)
            throw new P4(28);
          var h5 = "undefined" != typeof f4;
          if (!h5)
            f4 = a5.position;
          else if (!a5.seekable)
            throw new P4(70);
          b4 = a5.Ha.read(a5, b4, c4, d5, f4);
          h5 || (a5.position += b4);
          return b4;
        }, ka = (a5, b4, c4, d5, f4) => {
          if (0 > d5 || 0 > f4)
            throw new P4(28);
          if (null === a5.fd)
            throw new P4(8);
          if (0 === (a5.flags & 2097155))
            throw new P4(8);
          if (16384 === (a5.node.mode & 61440))
            throw new P4(31);
          if (!a5.Ha.write)
            throw new P4(28);
          a5.seekable && a5.flags & 1024 && Yb(a5, 0, 2);
          var h5 = "undefined" != typeof f4;
          if (!h5)
            f4 = a5.position;
          else if (!a5.seekable)
            throw new P4(70);
          b4 = a5.Ha.write(a5, b4, c4, d5, f4, void 0);
          h5 || (a5.position += b4);
          return b4;
        }, sa = (a5) => {
          var b4 = "binary";
          if ("utf8" !== b4 && "binary" !== b4)
            throw Error('Invalid encoding type "' + b4 + '"');
          var c4;
          var d5 = ja(a5, d5 || 0);
          a5 = Ub(a5).size;
          var f4 = new Uint8Array(a5);
          Zb(d5, f4, 0, a5, 0);
          "utf8" === b4 ? c4 = Ma(f4, 0) : "binary" === b4 && (c4 = f4);
          la(d5);
          return c4;
        }, $b = () => {
          P4 || (P4 = function(a5, b4) {
            this.node = b4;
            this.Hb = function(c4) {
              this.Ka = c4;
            };
            this.Hb(a5);
            this.message = "FS error";
          }, P4.prototype = Error(), P4.prototype.constructor = P4, [44].forEach((a5) => {
            xb[a5] = new P4(a5);
            xb[a5].stack = "<generic error, no stack>";
          }));
        }, ac, fa = (a5, b4) => {
          var c4 = 0;
          a5 && (c4 |= 365);
          b4 && (c4 |= 146);
          return c4;
        }, cc = (a5, b4, c4) => {
          a5 = z5("/dev/" + a5);
          var d5 = fa(!!b4, !!c4);
          bc || (bc = 64);
          var f4 = bc++ << 8 | 0;
          lb(f4, { open: (h5) => {
            h5.seekable = false;
          }, close: () => {
            c4 && c4.buffer && c4.buffer.length && c4(10);
          }, read: (h5, k5, q5, x5) => {
            for (var w5 = 0, A4 = 0; A4 < x5; A4++) {
              try {
                var S4 = b4();
              } catch (nb) {
                throw new P4(29);
              }
              if (void 0 === S4 && 0 === w5)
                throw new P4(6);
              if (null === S4 || void 0 === S4)
                break;
              w5++;
              k5[q5 + A4] = S4;
            }
            w5 && (h5.node.timestamp = Date.now());
            return w5;
          }, write: (h5, k5, q5, x5) => {
            for (var w5 = 0; w5 < x5; w5++)
              try {
                c4(k5[q5 + w5]);
              } catch (A4) {
                throw new P4(29);
              }
            x5 && (h5.node.timestamp = Date.now());
            return w5;
          } });
          Rb(a5, d5, f4);
        }, bc, W2 = {}, Ob, Xb;
        function dc(a5, b4, c4) {
          if ("/" === b4.charAt(0))
            return b4;
          a5 = -100 === a5 ? "/" : X3(a5).path;
          if (0 == b4.length) {
            if (!c4)
              throw new P4(44);
            return a5;
          }
          return z5(a5 + "/" + b4);
        }
        function ec(a5, b4, c4) {
          try {
            var d5 = a5(b4);
          } catch (f4) {
            if (f4 && f4.node && z5(b4) !== z5(ea(f4.node)))
              return -54;
            throw f4;
          }
          F4[c4 >> 2] = d5.dev;
          F4[c4 + 8 >> 2] = d5.ino;
          F4[c4 + 12 >> 2] = d5.mode;
          J2[c4 + 16 >> 2] = d5.nlink;
          F4[c4 + 20 >> 2] = d5.uid;
          F4[c4 + 24 >> 2] = d5.gid;
          F4[c4 + 28 >> 2] = d5.rdev;
          O4 = [d5.size >>> 0, (N3 = d5.size, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 40 >> 2] = O4[0];
          F4[c4 + 44 >> 2] = O4[1];
          F4[c4 + 48 >> 2] = 4096;
          F4[c4 + 52 >> 2] = d5.blocks;
          O4 = [Math.floor(d5.atime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.atime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 56 >> 2] = O4[0];
          F4[c4 + 60 >> 2] = O4[1];
          J2[c4 + 64 >> 2] = 0;
          O4 = [Math.floor(d5.mtime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.mtime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 72 >> 2] = O4[0];
          F4[c4 + 76 >> 2] = O4[1];
          J2[c4 + 80 >> 2] = 0;
          O4 = [Math.floor(d5.ctime.getTime() / 1e3) >>> 0, (N3 = Math.floor(d5.ctime.getTime() / 1e3), 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 88 >> 2] = O4[0];
          F4[c4 + 92 >> 2] = O4[1];
          J2[c4 + 96 >> 2] = 0;
          O4 = [d5.ino >>> 0, (N3 = d5.ino, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
          F4[c4 + 104 >> 2] = O4[0];
          F4[c4 + 108 >> 2] = O4[1];
          return 0;
        }
        var fc = void 0;
        function Hc() {
          fc += 4;
          return F4[fc - 4 >> 2];
        }
        function X3(a5) {
          a5 = R3[a5];
          if (!a5)
            throw new P4(8);
          return a5;
        }
        function Jc(a5) {
          return J2[a5 >> 2] + 4294967296 * F4[a5 + 4 >> 2];
        }
        function Kc(a5) {
          var b4 = ca(a5) + 1, c4 = da(b4);
          c4 && t4(a5, r3, c4, b4);
          return c4;
        }
        function Lc(a5, b4, c4) {
          function d5(x5) {
            return (x5 = x5.toTimeString().match(/\(([A-Za-z ]+)\)$/)) ? x5[1] : "GMT";
          }
          var f4 = new Date().getFullYear(), h5 = new Date(f4, 0, 1), k5 = new Date(f4, 6, 1);
          f4 = h5.getTimezoneOffset();
          var q5 = k5.getTimezoneOffset();
          F4[a5 >> 2] = 60 * Math.max(f4, q5);
          F4[b4 >> 2] = Number(f4 != q5);
          a5 = d5(h5);
          b4 = d5(k5);
          a5 = Kc(a5);
          b4 = Kc(b4);
          q5 < f4 ? (J2[c4 >> 2] = a5, J2[c4 + 4 >> 2] = b4) : (J2[c4 >> 2] = b4, J2[c4 + 4 >> 2] = a5);
        }
        function Mc(a5, b4, c4) {
          Mc.Bb || (Mc.Bb = true, Lc(a5, b4, c4));
        }
        var Nc;
        Nc = Aa ? () => {
          var a5 = process.hrtime();
          return 1e3 * a5[0] + a5[1] / 1e6;
        } : () => performance.now();
        var Oc = {};
        function Pc() {
          if (!Qc) {
            var a5 = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: ("object" == typeof navigator && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: wa || "./this.program" }, b4;
            for (b4 in Oc)
              void 0 === Oc[b4] ? delete a5[b4] : a5[b4] = Oc[b4];
            var c4 = [];
            for (b4 in a5)
              c4.push(b4 + "=" + a5[b4]);
            Qc = c4;
          }
          return Qc;
        }
        var Qc, Y3 = void 0, Rc = [];
        function ua(a5, b4) {
          if (!Y3) {
            Y3 = /* @__PURE__ */ new WeakMap();
            var c4 = K3.length;
            if (Y3)
              for (var d5 = 0; d5 < 0 + c4; d5++) {
                var f4 = K3.get(d5);
                f4 && Y3.set(f4, d5);
              }
          }
          if (Y3.has(a5))
            return Y3.get(a5);
          if (Rc.length)
            c4 = Rc.pop();
          else {
            try {
              K3.grow(1);
            } catch (q5) {
              if (!(q5 instanceof RangeError))
                throw q5;
              throw "Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";
            }
            c4 = K3.length - 1;
          }
          try {
            K3.set(c4, a5);
          } catch (q5) {
            if (!(q5 instanceof TypeError))
              throw q5;
            if ("function" == typeof WebAssembly.Function) {
              d5 = WebAssembly.Function;
              f4 = { i: "i32", j: "i64", f: "f32", d: "f64", p: "i32" };
              for (var h5 = { parameters: [], results: "v" == b4[0] ? [] : [f4[b4[0]]] }, k5 = 1; k5 < b4.length; ++k5)
                h5.parameters.push(f4[b4[k5]]);
              b4 = new d5(h5, a5);
            } else {
              d5 = [1, 96];
              f4 = b4.slice(0, 1);
              b4 = b4.slice(1);
              h5 = { i: 127, p: 127, j: 126, f: 125, d: 124 };
              k5 = b4.length;
              128 > k5 ? d5.push(k5) : d5.push(k5 % 128 | 128, k5 >> 7);
              for (k5 = 0; k5 < b4.length; ++k5)
                d5.push(h5[b4[k5]]);
              "v" == f4 ? d5.push(0) : d5.push(1, h5[f4]);
              b4 = [0, 97, 115, 109, 1, 0, 0, 0, 1];
              f4 = d5.length;
              128 > f4 ? b4.push(f4) : b4.push(f4 % 128 | 128, f4 >> 7);
              b4.push.apply(b4, d5);
              b4.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);
              b4 = new WebAssembly.Module(new Uint8Array(b4));
              b4 = new WebAssembly.Instance(b4, { e: { f: a5 } }).exports.f;
            }
            K3.set(
              c4,
              b4
            );
          }
          Y3.set(a5, c4);
          return c4;
        }
        function ra(a5) {
          Y3.delete(K3.get(a5));
          Rc.push(a5);
        }
        var Sc = 0, Tc = 1;
        function aa(a5) {
          var b4 = Sc == Tc ? B5(a5.length) : da(a5.length);
          a5.subarray || a5.slice || (a5 = new Uint8Array(a5));
          u4.set(a5, b4);
          return b4;
        }
        function Uc(a5, b4, c4, d5) {
          var f4 = { string: (w5) => {
            var A4 = 0;
            if (null !== w5 && void 0 !== w5 && 0 !== w5) {
              var S4 = (w5.length << 2) + 1;
              A4 = B5(S4);
              t4(w5, u4, A4, S4);
            }
            return A4;
          }, array: (w5) => {
            var A4 = B5(w5.length);
            r3.set(w5, A4);
            return A4;
          } };
          a5 = e4["_" + a5];
          var h5 = [], k5 = 0;
          if (d5)
            for (var q5 = 0; q5 < d5.length; q5++) {
              var x5 = f4[c4[q5]];
              x5 ? (0 === k5 && (k5 = oa()), h5[q5] = x5(d5[q5])) : h5[q5] = d5[q5];
            }
          c4 = a5.apply(null, h5);
          return c4 = function(w5) {
            0 !== k5 && qa(k5);
            return "string" === b4 ? C3(w5) : "boolean" === b4 ? !!w5 : w5;
          }(c4);
        }
        function Ib(a5, b4, c4, d5) {
          a5 || (a5 = this);
          this.parent = a5;
          this.Ra = a5.Ra;
          this.Va = null;
          this.id = Cb++;
          this.name = b4;
          this.mode = c4;
          this.Ga = {};
          this.Ha = {};
          this.rdev = d5;
        }
        Object.defineProperties(Ib.prototype, { read: { get: function() {
          return 365 === (this.mode & 365);
        }, set: function(a5) {
          a5 ? this.mode |= 365 : this.mode &= -366;
        } }, write: { get: function() {
          return 146 === (this.mode & 146);
        }, set: function(a5) {
          a5 ? this.mode |= 146 : this.mode &= -147;
        } } });
        $b();
        T6 = Array(4096);
        Qb(Q3, "/");
        V3("/tmp");
        V3("/home");
        V3("/home/web_user");
        (() => {
          V3("/dev");
          lb(259, { read: () => 0, write: (b4, c4, d5, f4) => f4 });
          Rb("/dev/null", 259);
          jb(1280, tb);
          jb(1536, ub);
          Rb("/dev/tty", 1280);
          Rb("/dev/tty1", 1536);
          var a5 = gb();
          cc("random", a5);
          cc("urandom", a5);
          V3("/dev/shm");
          V3("/dev/shm/tmp");
        })();
        (() => {
          V3("/proc");
          var a5 = V3("/proc/self");
          V3("/proc/self/fd");
          Qb({ Ra: () => {
            var b4 = wb(a5, "fd", 16895, 73);
            b4.Ga = { lookup: (c4, d5) => {
              var f4 = R3[+d5];
              if (!f4)
                throw new P4(8);
              c4 = { parent: null, Ra: { ub: "fake" }, Ga: { readlink: () => f4.path } };
              return c4.parent = c4;
            } };
            return b4;
          } }, "/proc/self/fd");
        })();
        var Wc = { a: function(a5, b4, c4, d5) {
          E4("Assertion failed: " + C3(a5) + ", at: " + [b4 ? C3(b4) : "unknown filename", c4, d5 ? C3(d5) : "unknown function"]);
        }, h: function(a5, b4) {
          try {
            return a5 = C3(a5), ia(a5, b4), 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, H: function(a5, b4, c4) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            if (c4 & -8)
              return -28;
            var d5 = U2(b4, { Sa: true }).node;
            if (!d5)
              return -44;
            a5 = "";
            c4 & 4 && (a5 += "r");
            c4 & 2 && (a5 += "w");
            c4 & 1 && (a5 += "x");
            return a5 && Hb(d5, a5) ? -2 : 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, i: function(a5, b4) {
          try {
            var c4 = R3[a5];
            if (!c4)
              throw new P4(8);
            ia(c4.node, b4);
            return 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, g: function(a5) {
          try {
            var b4 = R3[a5];
            if (!b4)
              throw new P4(8);
            var c4 = b4.node;
            var d5 = "string" == typeof c4 ? U2(c4, { Sa: true }).node : c4;
            if (!d5.Ga.Oa)
              throw new P4(63);
            d5.Ga.Oa(d5, { timestamp: Date.now() });
            return 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, b: function(a5, b4, c4) {
          fc = c4;
          try {
            var d5 = X3(a5);
            switch (b4) {
              case 0:
                var f4 = Hc();
                return 0 > f4 ? -28 : Pb(d5, f4).fd;
              case 1:
              case 2:
                return 0;
              case 3:
                return d5.flags;
              case 4:
                return f4 = Hc(), d5.flags |= f4, 0;
              case 5:
                return f4 = Hc(), Oa[f4 + 0 >> 1] = 2, 0;
              case 6:
              case 7:
                return 0;
              case 16:
              case 8:
                return -28;
              case 9:
                return F4[Vc() >> 2] = 28, -1;
              default:
                return -28;
            }
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, G: function(a5, b4) {
          try {
            var c4 = X3(a5);
            return ec(Ub, c4.path, b4);
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, l: function(a5, b4, c4) {
          try {
            b4 = c4 + 2097152 >>> 0 < 4194305 - !!b4 ? (b4 >>> 0) + 4294967296 * c4 : NaN;
            if (isNaN(b4))
              return -61;
            var d5 = R3[a5];
            if (!d5)
              throw new P4(8);
            if (0 === (d5.flags & 2097155))
              throw new P4(28);
            Wb(d5.node, b4);
            return 0;
          } catch (f4) {
            if ("undefined" == typeof W2 || !(f4 instanceof P4))
              throw f4;
            return -f4.Ka;
          }
        }, B: function(a5, b4) {
          try {
            if (0 === b4)
              return -28;
            var c4 = ca("/") + 1;
            if (b4 < c4)
              return -68;
            t4("/", u4, a5, b4);
            return c4;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, E: function(a5, b4) {
          try {
            return a5 = C3(a5), ec(Vb, a5, b4);
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, y: function(a5, b4, c4) {
          try {
            return b4 = C3(b4), b4 = dc(a5, b4), b4 = z5(b4), "/" === b4[b4.length - 1] && (b4 = b4.substr(0, b4.length - 1)), V3(b4, c4), 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, D: function(a5, b4, c4, d5) {
          try {
            b4 = C3(b4);
            var f4 = d5 & 256;
            b4 = dc(a5, b4, d5 & 4096);
            return ec(f4 ? Vb : Ub, b4, c4);
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, v: function(a5, b4, c4, d5) {
          fc = d5;
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            var f4 = d5 ? Hc() : 0;
            return ja(b4, c4, f4).fd;
          } catch (h5) {
            if ("undefined" == typeof W2 || !(h5 instanceof P4))
              throw h5;
            return -h5.Ka;
          }
        }, t: function(a5, b4, c4, d5) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4);
            if (0 >= d5)
              return -28;
            var f4 = Eb(b4), h5 = Math.min(
              d5,
              ca(f4)
            ), k5 = r3[c4 + h5];
            t4(f4, u4, c4, d5 + 1);
            r3[c4 + h5] = k5;
            return h5;
          } catch (q5) {
            if ("undefined" == typeof W2 || !(q5 instanceof P4))
              throw q5;
            return -q5.Ka;
          }
        }, s: function(a5) {
          try {
            return a5 = C3(a5), Tb(a5), 0;
          } catch (b4) {
            if ("undefined" == typeof W2 || !(b4 instanceof P4))
              throw b4;
            return -b4.Ka;
          }
        }, F: function(a5, b4) {
          try {
            return a5 = C3(a5), ec(Ub, a5, b4);
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return -c4.Ka;
          }
        }, p: function(a5, b4, c4) {
          try {
            return b4 = C3(b4), b4 = dc(a5, b4), 0 === c4 ? ta(b4) : 512 === c4 ? Tb(b4) : E4("Invalid flags passed to unlinkat"), 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return -d5.Ka;
          }
        }, o: function(a5, b4, c4) {
          try {
            b4 = C3(b4);
            b4 = dc(a5, b4, true);
            if (c4) {
              var d5 = Jc(c4), f4 = F4[c4 + 8 >> 2];
              h5 = 1e3 * d5 + f4 / 1e6;
              c4 += 16;
              d5 = Jc(c4);
              f4 = F4[c4 + 8 >> 2];
              k5 = 1e3 * d5 + f4 / 1e6;
            } else
              var h5 = Date.now(), k5 = h5;
            a5 = h5;
            var q5 = U2(b4, { Sa: true }).node;
            q5.Ga.Oa(q5, { timestamp: Math.max(a5, k5) });
            return 0;
          } catch (x5) {
            if ("undefined" == typeof W2 || !(x5 instanceof P4))
              throw x5;
            return -x5.Ka;
          }
        }, e: function() {
          return Date.now();
        }, j: function(a5, b4) {
          a5 = new Date(1e3 * Jc(a5));
          F4[b4 >> 2] = a5.getSeconds();
          F4[b4 + 4 >> 2] = a5.getMinutes();
          F4[b4 + 8 >> 2] = a5.getHours();
          F4[b4 + 12 >> 2] = a5.getDate();
          F4[b4 + 16 >> 2] = a5.getMonth();
          F4[b4 + 20 >> 2] = a5.getFullYear() - 1900;
          F4[b4 + 24 >> 2] = a5.getDay();
          var c4 = new Date(a5.getFullYear(), 0, 1);
          F4[b4 + 28 >> 2] = (a5.getTime() - c4.getTime()) / 864e5 | 0;
          F4[b4 + 36 >> 2] = -(60 * a5.getTimezoneOffset());
          var d5 = new Date(a5.getFullYear(), 6, 1).getTimezoneOffset();
          c4 = c4.getTimezoneOffset();
          F4[b4 + 32 >> 2] = (d5 != c4 && a5.getTimezoneOffset() == Math.min(c4, d5)) | 0;
        }, w: function(a5, b4, c4, d5, f4, h5) {
          try {
            var k5 = X3(d5);
            if (0 !== (b4 & 2) && 0 === (c4 & 2) && 2 !== (k5.flags & 2097155))
              throw new P4(2);
            if (1 === (k5.flags & 2097155))
              throw new P4(2);
            if (!k5.Ha.bb)
              throw new P4(43);
            var q5 = k5.Ha.bb(k5, a5, f4, b4, c4);
            var x5 = q5.Fb;
            F4[h5 >> 2] = q5.vb;
            return x5;
          } catch (w5) {
            if ("undefined" == typeof W2 || !(w5 instanceof P4))
              throw w5;
            return -w5.Ka;
          }
        }, x: function(a5, b4, c4, d5, f4, h5) {
          try {
            var k5 = X3(f4);
            if (c4 & 2) {
              var q5 = u4.slice(a5, a5 + b4);
              k5 && k5.Ha.cb && k5.Ha.cb(k5, q5, h5, b4, d5);
            }
          } catch (x5) {
            if ("undefined" == typeof W2 || !(x5 instanceof P4))
              throw x5;
            return -x5.Ka;
          }
        }, n: Mc, q: function() {
          return 2147483648;
        }, d: Nc, c: function(a5) {
          var b4 = u4.length;
          a5 >>>= 0;
          if (2147483648 < a5)
            return false;
          for (var c4 = 1; 4 >= c4; c4 *= 2) {
            var d5 = b4 * (1 + 0.2 / c4);
            d5 = Math.min(d5, a5 + 100663296);
            var f4 = Math;
            d5 = Math.max(
              a5,
              d5
            );
            f4 = f4.min.call(f4, 2147483648, d5 + (65536 - d5 % 65536) % 65536);
            a: {
              try {
                Ja.grow(f4 - Na.byteLength + 65535 >>> 16);
                Ra();
                var h5 = 1;
                break a;
              } catch (k5) {
              }
              h5 = void 0;
            }
            if (h5)
              return true;
          }
          return false;
        }, z: function(a5, b4) {
          var c4 = 0;
          Pc().forEach(function(d5, f4) {
            var h5 = b4 + c4;
            f4 = J2[a5 + 4 * f4 >> 2] = h5;
            for (h5 = 0; h5 < d5.length; ++h5)
              r3[f4++ >> 0] = d5.charCodeAt(h5);
            r3[f4 >> 0] = 0;
            c4 += d5.length + 1;
          });
          return 0;
        }, A: function(a5, b4) {
          var c4 = Pc();
          J2[a5 >> 2] = c4.length;
          var d5 = 0;
          c4.forEach(function(f4) {
            d5 += f4.length + 1;
          });
          J2[b4 >> 2] = d5;
          return 0;
        }, f: function(a5) {
          try {
            var b4 = X3(a5);
            la(b4);
            return 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return c4.Ka;
          }
        }, m: function(a5, b4) {
          try {
            var c4 = X3(a5);
            r3[b4 >> 0] = c4.tty ? 2 : 16384 === (c4.mode & 61440) ? 3 : 40960 === (c4.mode & 61440) ? 7 : 4;
            return 0;
          } catch (d5) {
            if ("undefined" == typeof W2 || !(d5 instanceof P4))
              throw d5;
            return d5.Ka;
          }
        }, u: function(a5, b4, c4, d5) {
          try {
            a: {
              var f4 = X3(a5);
              a5 = b4;
              for (var h5 = b4 = 0; h5 < c4; h5++) {
                var k5 = J2[a5 >> 2], q5 = J2[a5 + 4 >> 2];
                a5 += 8;
                var x5 = Zb(f4, r3, k5, q5);
                if (0 > x5) {
                  var w5 = -1;
                  break a;
                }
                b4 += x5;
                if (x5 < q5)
                  break;
              }
              w5 = b4;
            }
            J2[d5 >> 2] = w5;
            return 0;
          } catch (A4) {
            if ("undefined" == typeof W2 || !(A4 instanceof P4))
              throw A4;
            return A4.Ka;
          }
        }, k: function(a5, b4, c4, d5, f4) {
          try {
            b4 = c4 + 2097152 >>> 0 < 4194305 - !!b4 ? (b4 >>> 0) + 4294967296 * c4 : NaN;
            if (isNaN(b4))
              return 61;
            var h5 = X3(a5);
            Yb(h5, b4, d5);
            O4 = [h5.position >>> 0, (N3 = h5.position, 1 <= +Math.abs(N3) ? 0 < N3 ? (Math.min(+Math.floor(N3 / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((N3 - +(~~N3 >>> 0)) / 4294967296) >>> 0 : 0)];
            F4[f4 >> 2] = O4[0];
            F4[f4 + 4 >> 2] = O4[1];
            h5.hb && 0 === b4 && 0 === d5 && (h5.hb = null);
            return 0;
          } catch (k5) {
            if ("undefined" == typeof W2 || !(k5 instanceof P4))
              throw k5;
            return k5.Ka;
          }
        }, C: function(a5) {
          try {
            var b4 = X3(a5);
            return b4.Ha && b4.Ha.fsync ? b4.Ha.fsync(b4) : 0;
          } catch (c4) {
            if ("undefined" == typeof W2 || !(c4 instanceof P4))
              throw c4;
            return c4.Ka;
          }
        }, r: function(a5, b4, c4, d5) {
          try {
            a: {
              var f4 = X3(a5);
              a5 = b4;
              for (var h5 = b4 = 0; h5 < c4; h5++) {
                var k5 = J2[a5 >> 2], q5 = J2[a5 + 4 >> 2];
                a5 += 8;
                var x5 = ka(f4, r3, k5, q5);
                if (0 > x5) {
                  var w5 = -1;
                  break a;
                }
                b4 += x5;
              }
              w5 = b4;
            }
            J2[d5 >> 2] = w5;
            return 0;
          } catch (A4) {
            if ("undefined" == typeof W2 || !(A4 instanceof P4))
              throw A4;
            return A4.Ka;
          }
        } };
        (function() {
          function a5(f4) {
            e4.asm = f4.exports;
            Ja = e4.asm.I;
            Ra();
            K3 = e4.asm.Aa;
            Ta.unshift(e4.asm.J);
            Wa--;
            e4.monitorRunDependencies && e4.monitorRunDependencies(Wa);
            0 == Wa && (null !== Xa && (clearInterval(Xa), Xa = null), Ya && (f4 = Ya, Ya = null, f4()));
          }
          function b4(f4) {
            a5(f4.instance);
          }
          function c4(f4) {
            return bb().then(function(h5) {
              return WebAssembly.instantiate(h5, d5);
            }).then(function(h5) {
              return h5;
            }).then(f4, function(h5) {
              Ha("failed to asynchronously prepare wasm: " + h5);
              E4(h5);
            });
          }
          var d5 = { a: Wc };
          Wa++;
          e4.monitorRunDependencies && e4.monitorRunDependencies(Wa);
          if (e4.instantiateWasm)
            try {
              return e4.instantiateWasm(d5, a5);
            } catch (f4) {
              return Ha("Module.instantiateWasm callback failed with error: " + f4), false;
            }
          (function() {
            return Ia || "function" != typeof WebAssembly.instantiateStreaming || Za() || M5.startsWith("file://") || Aa || "function" != typeof fetch ? c4(b4) : fetch(M5, { credentials: "same-origin" }).then(function(f4) {
              return WebAssembly.instantiateStreaming(f4, d5).then(b4, function(h5) {
                Ha("wasm streaming compile failed: " + h5);
                Ha("falling back to ArrayBuffer instantiation");
                return c4(b4);
              });
            });
          })();
          return {};
        })();
        e4.___wasm_call_ctors = function() {
          return (e4.___wasm_call_ctors = e4.asm.J).apply(null, arguments);
        };
        e4._sqlite3_free = function() {
          return (e4._sqlite3_free = e4.asm.K).apply(null, arguments);
        };
        e4._sqlite3_value_double = function() {
          return (e4._sqlite3_value_double = e4.asm.L).apply(null, arguments);
        };
        e4._sqlite3_value_text = function() {
          return (e4._sqlite3_value_text = e4.asm.M).apply(null, arguments);
        };
        var Vc = e4.___errno_location = function() {
          return (Vc = e4.___errno_location = e4.asm.N).apply(null, arguments);
        };
        e4._sqlite3_prepare_v2 = function() {
          return (e4._sqlite3_prepare_v2 = e4.asm.O).apply(null, arguments);
        };
        e4._sqlite3_step = function() {
          return (e4._sqlite3_step = e4.asm.P).apply(null, arguments);
        };
        e4._sqlite3_finalize = function() {
          return (e4._sqlite3_finalize = e4.asm.Q).apply(null, arguments);
        };
        e4._sqlite3_reset = function() {
          return (e4._sqlite3_reset = e4.asm.R).apply(null, arguments);
        };
        e4._sqlite3_value_int = function() {
          return (e4._sqlite3_value_int = e4.asm.S).apply(null, arguments);
        };
        e4._sqlite3_clear_bindings = function() {
          return (e4._sqlite3_clear_bindings = e4.asm.T).apply(null, arguments);
        };
        e4._sqlite3_value_blob = function() {
          return (e4._sqlite3_value_blob = e4.asm.U).apply(null, arguments);
        };
        e4._sqlite3_value_bytes = function() {
          return (e4._sqlite3_value_bytes = e4.asm.V).apply(null, arguments);
        };
        e4._sqlite3_value_type = function() {
          return (e4._sqlite3_value_type = e4.asm.W).apply(null, arguments);
        };
        e4._sqlite3_result_blob = function() {
          return (e4._sqlite3_result_blob = e4.asm.X).apply(null, arguments);
        };
        e4._sqlite3_result_double = function() {
          return (e4._sqlite3_result_double = e4.asm.Y).apply(null, arguments);
        };
        e4._sqlite3_result_error = function() {
          return (e4._sqlite3_result_error = e4.asm.Z).apply(null, arguments);
        };
        e4._sqlite3_result_int = function() {
          return (e4._sqlite3_result_int = e4.asm._).apply(null, arguments);
        };
        e4._sqlite3_result_int64 = function() {
          return (e4._sqlite3_result_int64 = e4.asm.$).apply(null, arguments);
        };
        e4._sqlite3_result_null = function() {
          return (e4._sqlite3_result_null = e4.asm.aa).apply(null, arguments);
        };
        e4._sqlite3_result_text = function() {
          return (e4._sqlite3_result_text = e4.asm.ba).apply(null, arguments);
        };
        e4._sqlite3_sql = function() {
          return (e4._sqlite3_sql = e4.asm.ca).apply(null, arguments);
        };
        e4._sqlite3_aggregate_context = function() {
          return (e4._sqlite3_aggregate_context = e4.asm.da).apply(null, arguments);
        };
        e4._sqlite3_column_count = function() {
          return (e4._sqlite3_column_count = e4.asm.ea).apply(null, arguments);
        };
        e4._sqlite3_data_count = function() {
          return (e4._sqlite3_data_count = e4.asm.fa).apply(null, arguments);
        };
        e4._sqlite3_column_blob = function() {
          return (e4._sqlite3_column_blob = e4.asm.ga).apply(null, arguments);
        };
        e4._sqlite3_column_bytes = function() {
          return (e4._sqlite3_column_bytes = e4.asm.ha).apply(null, arguments);
        };
        e4._sqlite3_column_double = function() {
          return (e4._sqlite3_column_double = e4.asm.ia).apply(null, arguments);
        };
        e4._sqlite3_column_text = function() {
          return (e4._sqlite3_column_text = e4.asm.ja).apply(null, arguments);
        };
        e4._sqlite3_column_type = function() {
          return (e4._sqlite3_column_type = e4.asm.ka).apply(null, arguments);
        };
        e4._sqlite3_column_name = function() {
          return (e4._sqlite3_column_name = e4.asm.la).apply(null, arguments);
        };
        e4._sqlite3_bind_blob = function() {
          return (e4._sqlite3_bind_blob = e4.asm.ma).apply(null, arguments);
        };
        e4._sqlite3_bind_double = function() {
          return (e4._sqlite3_bind_double = e4.asm.na).apply(null, arguments);
        };
        e4._sqlite3_bind_int = function() {
          return (e4._sqlite3_bind_int = e4.asm.oa).apply(null, arguments);
        };
        e4._sqlite3_bind_text = function() {
          return (e4._sqlite3_bind_text = e4.asm.pa).apply(null, arguments);
        };
        e4._sqlite3_bind_parameter_index = function() {
          return (e4._sqlite3_bind_parameter_index = e4.asm.qa).apply(null, arguments);
        };
        e4._sqlite3_normalized_sql = function() {
          return (e4._sqlite3_normalized_sql = e4.asm.ra).apply(null, arguments);
        };
        e4._sqlite3_errmsg = function() {
          return (e4._sqlite3_errmsg = e4.asm.sa).apply(null, arguments);
        };
        e4._sqlite3_exec = function() {
          return (e4._sqlite3_exec = e4.asm.ta).apply(null, arguments);
        };
        e4._sqlite3_changes = function() {
          return (e4._sqlite3_changes = e4.asm.ua).apply(null, arguments);
        };
        e4._sqlite3_close_v2 = function() {
          return (e4._sqlite3_close_v2 = e4.asm.va).apply(null, arguments);
        };
        e4._sqlite3_create_function_v2 = function() {
          return (e4._sqlite3_create_function_v2 = e4.asm.wa).apply(null, arguments);
        };
        e4._sqlite3_open = function() {
          return (e4._sqlite3_open = e4.asm.xa).apply(null, arguments);
        };
        var da = e4._malloc = function() {
          return (da = e4._malloc = e4.asm.ya).apply(null, arguments);
        }, ba = e4._free = function() {
          return (ba = e4._free = e4.asm.za).apply(null, arguments);
        };
        e4._RegisterExtensionFunctions = function() {
          return (e4._RegisterExtensionFunctions = e4.asm.Ba).apply(null, arguments);
        };
        var zb = e4._emscripten_builtin_memalign = function() {
          return (zb = e4._emscripten_builtin_memalign = e4.asm.Ca).apply(null, arguments);
        }, oa = e4.stackSave = function() {
          return (oa = e4.stackSave = e4.asm.Da).apply(null, arguments);
        }, qa = e4.stackRestore = function() {
          return (qa = e4.stackRestore = e4.asm.Ea).apply(null, arguments);
        }, B5 = e4.stackAlloc = function() {
          return (B5 = e4.stackAlloc = e4.asm.Fa).apply(null, arguments);
        };
        e4.UTF8ToString = C3;
        e4.stackAlloc = B5;
        e4.stackSave = oa;
        e4.stackRestore = qa;
        e4.cwrap = function(a5, b4, c4, d5) {
          c4 = c4 || [];
          var f4 = c4.every((h5) => "number" === h5 || "boolean" === h5);
          return "string" !== b4 && f4 && !d5 ? e4["_" + a5] : function() {
            return Uc(a5, b4, c4, arguments);
          };
        };
        var Xc;
        Ya = function Yc() {
          Xc || Zc();
          Xc || (Ya = Yc);
        };
        function Zc() {
          function a5() {
            if (!Xc && (Xc = true, e4.calledRun = true, !Ka)) {
              e4.noFSInit || ac || (ac = true, $b(), e4.stdin = e4.stdin, e4.stdout = e4.stdout, e4.stderr = e4.stderr, e4.stdin ? cc("stdin", e4.stdin) : Sb("/dev/tty", "/dev/stdin"), e4.stdout ? cc("stdout", null, e4.stdout) : Sb("/dev/tty", "/dev/stdout"), e4.stderr ? cc("stderr", null, e4.stderr) : Sb("/dev/tty1", "/dev/stderr"), ja("/dev/stdin", 0), ja("/dev/stdout", 1), ja("/dev/stderr", 1));
              Db = false;
              cb(Ta);
              if (e4.onRuntimeInitialized)
                e4.onRuntimeInitialized();
              if (e4.postRun)
                for ("function" == typeof e4.postRun && (e4.postRun = [e4.postRun]); e4.postRun.length; ) {
                  var b4 = e4.postRun.shift();
                  Ua.unshift(b4);
                }
              cb(Ua);
            }
          }
          if (!(0 < Wa)) {
            if (e4.preRun)
              for ("function" == typeof e4.preRun && (e4.preRun = [e4.preRun]); e4.preRun.length; )
                Va();
            cb(Sa);
            0 < Wa || (e4.setStatus ? (e4.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                e4.setStatus("");
              }, 1);
              a5();
            }, 1)) : a5());
          }
        }
        if (e4.preInit)
          for ("function" == typeof e4.preInit && (e4.preInit = [e4.preInit]); 0 < e4.preInit.length; )
            e4.preInit.pop()();
        Zc();
        return Module;
      });
      return initSqlJsPromise;
    };
    if (typeof exports2 === "object" && typeof module2 === "object") {
      module2.exports = initSqlJs2;
      module2.exports.default = initSqlJs2;
    } else if (typeof define === "function" && define["amd"]) {
      define([], function() {
        return initSqlJs2;
      });
    } else if (typeof exports2 === "object") {
      exports2["Module"] = initSqlJs2;
    }
  }
});

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MakeMDPlugin
});
module.exports = __toCommonJS(main_exports);

// src/cm-extensions/flowEditor/flowEditor.tsx
var import_state6 = require("@codemirror/state");
var import_view4 = require("@codemirror/view");

// src/cm-extensions/tooltip.ts
var import_state = require("@codemirror/state");
var import_view = require("@codemirror/view");
var ios = typeof navigator != "undefined" && !/Edge\/(\d+)/.exec(navigator.userAgent) && /Apple Computer/.test(navigator.vendor) && (/Mobile\/\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);
var Outside = "-10000px";
var TooltipViewManager = class {
  constructor(view, facet, createTooltipView) {
    this.facet = facet;
    this.createTooltipView = createTooltipView;
    this.input = view.state.facet(facet);
    this.tooltips = this.input.filter((t4) => t4);
    this.tooltipViews = this.tooltips.map(createTooltipView);
  }
  update(update) {
    if (update.focusChanged && !update.view.hasFocus) {
      const input2 = update.state.facet(this.facet);
      for (const t4 of this.tooltipViews)
        t4.dom.remove();
      this.input = input2;
      this.tooltips = [];
      this.tooltipViews = [];
      return true;
    }
    const input = update.state.facet(this.facet);
    const tooltips2 = input.filter((x5) => x5);
    if (input === this.input) {
      for (const t4 of this.tooltipViews)
        if (t4.update)
          t4.update(update);
      return false;
    }
    const tooltipViews = [];
    for (let i4 = 0; i4 < tooltips2.length; i4++) {
      const tip = tooltips2[i4];
      let known = -1;
      if (!tip)
        continue;
      for (let i5 = 0; i5 < this.tooltips.length; i5++) {
        const other = this.tooltips[i5];
        if (other && other.create == tip.create)
          known = i5;
      }
      if (known < 0) {
        tooltipViews[i4] = this.createTooltipView(tip);
      } else {
        const tooltipView = tooltipViews[i4] = this.tooltipViews[known];
        if (tooltipView.update)
          tooltipView.update(update);
      }
    }
    for (const t4 of this.tooltipViews)
      if (tooltipViews.indexOf(t4) < 0)
        t4.dom.remove();
    this.input = input;
    this.tooltips = tooltips2;
    this.tooltipViews = tooltipViews;
    return true;
  }
};
function tooltips(config = {}) {
  return tooltipConfig.of(config);
}
function windowSpace() {
  return { top: 0, left: 0, bottom: innerHeight, right: innerWidth };
}
var tooltipConfig = import_state.Facet.define({
  combine: (values) => {
    var _a2, _b2, _c2;
    return {
      position: ios ? "absolute" : ((_a2 = values.find((conf) => conf.position)) == null ? void 0 : _a2.position) || "fixed",
      parent: ((_b2 = values.find((conf) => conf.parent)) == null ? void 0 : _b2.parent) || null,
      tooltipSpace: ((_c2 = values.find((conf) => conf.tooltipSpace)) == null ? void 0 : _c2.tooltipSpace) || windowSpace
    };
  }
});
var tooltipPlugin = import_view.ViewPlugin.fromClass(
  class {
    constructor(view) {
      this.view = view;
      this.inView = true;
      this.lastTransaction = 0;
      this.measureTimeout = -1;
      var _a2;
      const config = view.state.facet(tooltipConfig);
      this.position = config.position;
      this.parent = config.parent;
      this.classes = view.themeClasses;
      this.createContainer();
      this.measureReq = {
        read: this.readMeasure.bind(this),
        write: this.writeMeasure.bind(this),
        key: this
      };
      this.manager = new TooltipViewManager(
        view,
        showTooltip,
        (t4) => this.createTooltip(t4)
      );
      this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver(
        (entries) => {
          if (Date.now() > this.lastTransaction - 50 && entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)
            this.measureSoon();
        },
        { threshold: [1] }
      ) : null;
      this.observeIntersection();
      (_a2 = view.dom.ownerDocument.defaultView) == null ? void 0 : _a2.addEventListener(
        "resize",
        this.measureSoon = this.measureSoon.bind(this)
      );
      this.maybeMeasure();
    }
    createContainer() {
      if (this.parent) {
        this.container = document.createElement("div");
        this.container.style.position = "relative";
        this.container.className = this.view.themeClasses;
        this.parent.appendChild(this.container);
      } else {
        this.container = this.view.dom;
      }
    }
    observeIntersection() {
      if (this.intersectionObserver) {
        this.intersectionObserver.disconnect();
        for (const tooltip of this.manager.tooltipViews)
          this.intersectionObserver.observe(tooltip.dom);
      }
    }
    measureSoon() {
      if (this.measureTimeout < 0)
        this.measureTimeout = setTimeout(() => {
          this.measureTimeout = -1;
          this.maybeMeasure();
        }, 50);
    }
    update(update) {
      if (update.transactions.length)
        this.lastTransaction = Date.now();
      const updated = this.manager.update(update);
      if (updated)
        this.observeIntersection();
      let shouldMeasure = updated || update.geometryChanged;
      const newConfig = update.state.facet(tooltipConfig);
      if (newConfig.position != this.position) {
        this.position = newConfig.position;
        for (const t4 of this.manager.tooltipViews)
          t4.dom.style.position = this.position;
        shouldMeasure = true;
      }
      if (newConfig.parent != this.parent) {
        if (this.parent)
          this.container.remove();
        this.parent = newConfig.parent;
        this.createContainer();
        for (const t4 of this.manager.tooltipViews)
          this.container.appendChild(t4.dom);
        shouldMeasure = true;
      } else if (this.parent && this.view.themeClasses != this.classes) {
        this.classes = this.container.className = this.view.themeClasses;
      }
      if (shouldMeasure)
        this.maybeMeasure();
    }
    createTooltip(tooltip) {
      const tooltipView = tooltip.create(this.view);
      tooltipView.dom.classList.add("cm-tooltip");
      if (tooltip.arrow && !tooltipView.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
        const arrow = document.createElement("div");
        arrow.className = "cm-tooltip-arrow";
        tooltipView.dom.appendChild(arrow);
      }
      tooltipView.dom.style.position = this.position;
      tooltipView.dom.style.top = Outside;
      this.container.appendChild(tooltipView.dom);
      if (tooltipView.mount)
        tooltipView.mount(this.view);
      return tooltipView;
    }
    destroy() {
      var _a2, _b2;
      (_a2 = this.view.dom.ownerDocument.defaultView) == null ? void 0 : _a2.removeEventListener(
        "resize",
        this.measureSoon
      );
      for (const { dom } of this.manager.tooltipViews)
        dom.remove();
      (_b2 = this.intersectionObserver) == null ? void 0 : _b2.disconnect();
      clearTimeout(this.measureTimeout);
    }
    readMeasure() {
      const editor = this.view.dom.getBoundingClientRect();
      return {
        editor,
        parent: this.parent ? this.container.getBoundingClientRect() : editor,
        pos: this.manager.tooltips.map((t4, i4) => {
          const tv = this.manager.tooltipViews[i4];
          return tv.getCoords ? tv.getCoords(t4.pos) : this.view.coordsAtPos(t4.pos);
        }),
        size: this.manager.tooltipViews.map(
          ({ dom }) => {
            const size = dom.getBoundingClientRect();
            return size;
          }
        ),
        space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view)
      };
    }
    writeMeasure(measured) {
      const { editor, space } = measured;
      const others = [];
      for (let i4 = 0; i4 < this.manager.tooltips.length; i4++) {
        const tooltip = this.manager.tooltips[i4], tView = this.manager.tooltipViews[i4], { dom } = tView;
        const pos = measured.pos[i4], size = measured.size[i4];
        if (!pos || pos.bottom <= Math.max(editor.top, space.top) || pos.top >= Math.min(editor.bottom, space.bottom) || pos.right < Math.max(editor.left, space.left) - 0.1 || pos.left > Math.min(editor.right, space.right) + 0.1) {
          dom.style.top = Outside;
          continue;
        }
        const arrow = tooltip.arrow ? tView.dom.querySelector(".cm-tooltip-arrow") : null;
        const arrowHeight = arrow ? 7 /* Size */ : 0;
        const width = size.right - size.left, height = size.bottom - size.top;
        const offset2 = tView.offset || noOffset, ltr = this.view.textDirection == import_view.Direction.LTR;
        const left = size.width > space.right - space.left ? ltr ? space.left : space.right - size.width : ltr ? Math.min(
          pos.left - (arrow ? 14 /* Offset */ : 0) + offset2.x,
          space.right - width
        ) : Math.max(
          space.left,
          pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset2.x
        );
        let above = !!tooltip.above;
        if (!tooltip.strictSide && (above ? pos.top - (size.bottom - size.top) - offset2.y < space.top : pos.bottom + (size.bottom - size.top) + offset2.y > space.bottom) && above == space.bottom - pos.bottom > pos.top - space.top)
          above = !above;
        let top = above ? pos.top - height - arrowHeight - offset2.y : pos.bottom + arrowHeight + offset2.y;
        const right = left + width;
        if (tView.overlap !== true) {
          for (const r3 of others)
            if (r3.left < right && r3.right > left && r3.top < top + height && r3.bottom > top)
              top = above ? r3.top - height - 2 - arrowHeight : r3.bottom + arrowHeight + 2;
        }
        const computeFrameOffset = (win, rect) => {
          const { top: top2, right: right2, bottom, left: left2, width: width2, height: height2, x: x5, y: y5 } = rect;
          const dims = { top: top2, right: right2, bottom, left: left2 };
          if (typeof dims === "undefined") {
            const dims2 = { top: 0, left: 0 };
          }
          const frames2 = win.parent.document.getElementsByTagName("iframe");
          let frame;
          let found = false;
          for (let i5 = 0, len = frames2.length; i5 < len; i5++) {
            frame = frames2[i5];
            if (frame.contentWindow == win) {
              found = true;
              break;
            }
          }
          if (found) {
            const rect2 = frame.getBoundingClientRect();
            dims.left += rect2.left;
            dims.top += rect2.top;
            if (win !== top2) {
              computeFrameOffset(win.parent, rect2);
            }
          } else {
            return { top: 0, left: 0 };
          }
          return dims;
        };
        const viewCoords = computeFrameOffset(this.view.dom.ownerDocument.defaultView, editor);
        if (this.position == "absolute") {
          dom.style.top = viewCoords.top + top - measured.parent.top + "px";
          dom.style.left = viewCoords.left + left - measured.parent.left + "px";
        } else {
          dom.style.top = viewCoords.top + top + "px";
          dom.style.left = viewCoords.left + left + "px";
        }
        if (arrow)
          arrow.style.left = `${pos.left + (ltr ? offset2.x : -offset2.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;
        if (tView.overlap !== true)
          others.push({ left, top, right, bottom: top + height });
        dom.classList.toggle("cm-tooltip-above", above);
        dom.classList.toggle("cm-tooltip-below", !above);
        if (tView.positioned)
          tView.positioned();
      }
    }
    maybeMeasure() {
      if (this.manager.tooltips.length) {
        if (this.view.inView)
          this.view.requestMeasure(this.measureReq);
        if (this.inView != this.view.inView) {
          this.inView = this.view.inView;
          if (!this.inView)
            for (const tv of this.manager.tooltipViews)
              tv.dom.style.top = Outside;
        }
      }
    }
  },
  {
    eventHandlers: {
      scroll() {
        this.maybeMeasure();
      }
    }
  }
);
var baseTheme = import_view.EditorView.baseTheme({
  ".cm-tooltip": {
    zIndex: 100
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: `${7 /* Size */}px`,
    width: `${7 /* Size */ * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: `${7 /* Size */}px solid transparent`,
      borderRight: `${7 /* Size */}px solid transparent`
    },
    ".cm-tooltip-above &": {
      bottom: `-${7 /* Size */}px`,
      "&:before": {
        borderTop: `${7 /* Size */}px solid #bbb`
      },
      "&:after": {
        borderTop: `${7 /* Size */}px solid #f5f5f5`,
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: `-${7 /* Size */}px`,
      "&:before": {
        borderBottom: `${7 /* Size */}px solid #bbb`
      },
      "&:after": {
        borderBottom: `${7 /* Size */}px solid #f5f5f5`,
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
});
var noOffset = { x: 0, y: 0 };
var showTooltip = import_state.Facet.define({
  enables: [tooltipPlugin, baseTheme]
});
var showHoverTooltip = import_state.Facet.define();
var HoverTooltipHost = class {
  constructor(view) {
    this.view = view;
    this.mounted = false;
    this.dom = document.createElement("div");
    this.dom.classList.add("cm-tooltip-hover");
    this.manager = new TooltipViewManager(
      view,
      showHoverTooltip,
      (t4) => this.createHostedView(t4)
    );
  }
  static create(view) {
    return new HoverTooltipHost(view);
  }
  createHostedView(tooltip) {
    const hostedView = tooltip.create(this.view);
    hostedView.dom.classList.add("cm-tooltip-section");
    this.dom.appendChild(hostedView.dom);
    if (this.mounted && hostedView.mount)
      hostedView.mount(this.view);
    return hostedView;
  }
  mount(view) {
    for (const hostedView of this.manager.tooltipViews) {
      if (hostedView.mount)
        hostedView.mount(view);
    }
    this.mounted = true;
  }
  positioned() {
    for (const hostedView of this.manager.tooltipViews) {
      if (hostedView.positioned)
        hostedView.positioned();
    }
  }
  update(update) {
    this.manager.update(update);
  }
};
var showHoverTooltipHost = showTooltip.compute(
  [showHoverTooltip],
  (state) => {
    const tooltips2 = state.facet(showHoverTooltip).filter((t4) => t4);
    if (tooltips2.length === 0)
      return null;
    return {
      pos: Math.min(...tooltips2.map((t4) => t4.pos)),
      end: Math.max(
        ...tooltips2.filter((t4) => t4.end != null).map((t4) => t4.end)
      ),
      create: HoverTooltipHost.create,
      above: tooltips2[0].above,
      arrow: tooltips2.some((t4) => t4.arrow)
    };
  }
);
var HoverPlugin = class {
  constructor(view, source, field, setHover, hoverTime) {
    this.view = view;
    this.source = source;
    this.field = field;
    this.setHover = setHover;
    this.hoverTime = hoverTime;
    this.hoverTimeout = -1;
    this.restartTimeout = -1;
    this.pending = null;
    this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };
    this.checkHover = this.checkHover.bind(this);
    view.dom.addEventListener(
      "mouseleave",
      this.mouseleave = this.mouseleave.bind(this)
    );
    view.dom.addEventListener(
      "mousemove",
      this.mousemove = this.mousemove.bind(this)
    );
  }
  update() {
    if (this.pending) {
      this.pending = null;
      clearTimeout(this.restartTimeout);
      this.restartTimeout = setTimeout(() => this.startHover(), 20);
    }
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    this.hoverTimeout = -1;
    if (this.active)
      return;
    const hovered = Date.now() - this.lastMove.time;
    if (hovered < this.hoverTime)
      this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);
    else
      this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    const { lastMove } = this;
    const pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;
    if (pos == null)
      return;
    const posCoords = this.view.coordsAtPos(pos);
    if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom || lastMove.x < posCoords.left - this.view.defaultCharacterWidth || lastMove.x > posCoords.right + this.view.defaultCharacterWidth)
      return;
    const bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find((s5) => s5.from <= pos && s5.to >= pos);
    const rtl = bidi && bidi.dir == import_view.Direction.RTL ? -1 : 1;
    const open = this.source(
      this.view,
      pos,
      lastMove.x < posCoords.left ? -rtl : rtl
    );
    if (open == null ? void 0 : open.then) {
      const pending = this.pending = { pos };
      open.then(
        (result) => {
          if (this.pending == pending) {
            this.pending = null;
            if (result)
              this.view.dispatch({ effects: this.setHover.of(result) });
          }
        },
        (e4) => (0, import_view.logException)(this.view.state, e4, "hover tooltip")
      );
    } else if (open) {
      this.view.dispatch({ effects: this.setHover.of(open) });
    }
  }
  mousemove(event) {
    var _a2;
    this.lastMove = {
      x: event.clientX,
      y: event.clientY,
      target: event.target,
      time: Date.now()
    };
    if (this.hoverTimeout < 0)
      this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);
    const tooltip = this.active;
    if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {
      const { pos } = tooltip || this.pending, end = (_a2 = tooltip == null ? void 0 : tooltip.end) != null ? _a2 : pos;
      if (pos == end ? this.view.posAtCoords(this.lastMove) != pos : !isOverRange(
        this.view,
        pos,
        end,
        event.clientX,
        event.clientY,
        6 /* MaxDist */
      )) {
        this.view.dispatch({ effects: this.setHover.of(null) });
        this.pending = null;
      }
    }
  }
  mouseleave(e4) {
    clearTimeout(this.hoverTimeout);
    this.hoverTimeout = -1;
    if (this.active && !isInTooltip(e4.relatedTarget))
      this.view.dispatch({ effects: this.setHover.of(null) });
  }
  destroy() {
    clearTimeout(this.hoverTimeout);
    this.view.dom.removeEventListener("mouseleave", this.mouseleave);
    this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
};
function isInTooltip(elt) {
  for (let cur = elt; cur; cur = cur.parentNode)
    if (cur.nodeType == 1 && cur.classList.contains("cm-tooltip"))
      return true;
  return false;
}
function isOverRange(view, from, to, x5, y5, margin) {
  const range = document.createRange();
  const fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);
  range.setEnd(toDOM.node, toDOM.offset);
  range.setStart(fromDOM.node, fromDOM.offset);
  const rects = range.getClientRects();
  range.detach();
  for (let i4 = 0; i4 < rects.length; i4++) {
    const rect = rects[i4];
    const dist = Math.max(
      rect.top - y5,
      y5 - rect.bottom,
      rect.left - x5,
      x5 - rect.right
    );
    if (dist <= margin)
      return true;
  }
  return false;
}
function hoverTooltip(source, options = {}) {
  const setHover = import_state.StateEffect.define();
  const hoverState = import_state.StateField.define({
    create() {
      return null;
    },
    update(value, tr) {
      if (value && options.hideOnChange && (tr.docChanged || tr.selection))
        return null;
      for (const effect of tr.effects) {
        if (effect.is(setHover)) {
          return effect.value;
        }
        if (effect.is(closeHoverTooltipEffect))
          return null;
      }
      if (value && tr.docChanged) {
        const newPos = tr.changes.mapPos(value.pos, -1, import_state.MapMode.TrackDel);
        if (newPos == null)
          return null;
        const copy = Object.assign(/* @__PURE__ */ Object.create(null), value);
        copy.pos = newPos;
        if (value.end != null)
          copy.end = tr.changes.mapPos(value.end);
        return copy;
      }
      return value;
    },
    provide: (f4) => showHoverTooltip.from(f4)
  });
  return [
    hoverState,
    import_view.ViewPlugin.define(
      (view) => new HoverPlugin(
        view,
        source,
        hoverState,
        setHover,
        options.hoverTime || 300 /* Time */
      )
    ),
    showHoverTooltipHost
  ];
}
var closeHoverTooltipEffect = import_state.StateEffect.define();
var closeHoverTooltips = closeHoverTooltipEffect.of(null);

// src/cm-extensions/flowEditor/flowEditor.tsx
init_compat_module();

// node_modules/preact/compat/client.mjs
init_compat_module();
function createRoot(container) {
  return {
    render(children) {
      G(children, container);
    },
    unmount() {
      hn(container);
    }
  };
}

// src/utils/codemirror.ts
var import_language = require("@codemirror/language");
var getActiveCM = () => {
  let rcm;
  app.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm == null ? void 0 : cm.hasFocus) {
      rcm = cm;
      return true;
    }
  }, app.workspace["rootSplit"]);
  return rcm;
};
var getActiveMarkdownView = () => {
  let rv;
  app.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm == null ? void 0 : cm.hasFocus) {
      rv = leaf.view;
      return true;
    }
  }, app.workspace["rootSplit"]);
  return rv;
};
function iterateTreeAtPos(pos, state, iterateFns) {
  (0, import_language.syntaxTree)(state).iterate({ ...iterateFns, from: pos, to: pos });
}
function iterateTreeInSelection(selection, state, iterateFns) {
  (0, import_language.syntaxTree)(state).iterate({
    ...iterateFns,
    from: selection.from,
    to: selection.to
  });
}
function iterateTreeInDocument(state, iterateFns) {
  (0, import_language.syntaxTree)(state).iterate({ ...iterateFns });
}

// src/cm-extensions/markSans/callout.tsx
var import_language2 = require("@codemirror/language");
var import_state2 = require("@codemirror/state");
var import_view2 = require("@codemirror/view");

// src/utils/uuid.js
function genId() {
  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(
    /[018]/g,
    (c4) => (c4 ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c4 / 4).toString(16)
  );
}

// src/cm-extensions/markSans/callout.tsx
var portalTypeAnnotation = import_state2.Annotation.define();
var flowIDAnnotation = import_state2.Annotation.define();
var flowIDStateField = import_state2.StateField.define({
  create: () => void 0,
  update(value, tr) {
    if (tr.annotation(flowIDAnnotation))
      return tr.annotation(flowIDAnnotation);
    return value;
  }
});
var flowTypeStateField = import_state2.StateField.define({
  create: (state) => "none",
  update(value, tr) {
    if (tr.annotation(portalTypeAnnotation))
      return tr.annotation(portalTypeAnnotation);
    return value;
  }
});
var calloutField = import_state2.StateField.define({
  create() {
    return import_view2.Decoration.none;
  },
  update(value, tr) {
    if (tr.state.field(flowTypeStateField, false) != "doc") {
      return value;
    }
    const builder = new import_state2.RangeSetBuilder();
    const nodes = [];
    (0, import_language2.syntaxTree)(tr.state).iterate({
      enter: ({ name, from, to }) => {
        nodes.push({ name, from, to });
      }
    });
    const nextQuote = (ns, to) => {
      const nq = ns.find(
        (f4) => f4.from == to + 1 && f4.name.contains("HyperMD-quote")
      );
      if (nq) {
        return nextQuote(ns, nq.to);
      }
      return to;
    };
    const previous = value.iter();
    const previousSpecs = [];
    while (previous.value !== null) {
      previousSpecs.push(previous.value.spec.widget.info);
      previous.next();
    }
    let index = 0;
    nodes.map(({ name, from, to }) => {
      if (name.contains("HyperMD-callout")) {
        const existingCallout = previousSpecs[index];
        const endQuote = nextQuote(nodes, to);
        const lineStart = tr.state.doc.lineAt(from).number;
        const lineEnd = tr.state.doc.lineAt(endQuote).number;
        if (existingCallout) {
          builder.add(
            from,
            endQuote + 1,
            calloutBlock(
              { from: lineStart, to: lineEnd },
              tr.state.sliceDoc(from, endQuote),
              existingCallout.id
            )
          );
        } else {
          builder.add(
            from,
            endQuote + 1,
            calloutBlock(
              { from: lineStart, to: lineEnd },
              tr.state.sliceDoc(from, endQuote),
              genId()
            )
          );
        }
        index++;
      }
    });
    const dec = builder.finish();
    return dec;
  },
  provide: (f4) => import_view2.EditorView.decorations.from(f4)
});
var CalloutWidget = class extends import_view2.WidgetType {
  constructor(info) {
    super();
    this.info = info;
  }
  eq(other) {
    return other.info.id === this.info.id;
  }
  toDOM() {
    const parseTextToCallout = (text2) => {
      if (!this.info.text) {
        return { icon: "", title: "" };
      }
      const stringArray = text2.split("\n");
      const titleRegex = RegExp(/.*\[!(\w*)\]\s(.*)/);
      const title = titleRegex.exec(stringArray[0]);
      if (!title || title.length < 3) {
        return { icon: "", title: "" };
      }
      return {
        icon: title[1],
        title: title[2]
      };
    };
    const callOutData = parseTextToCallout(this.info.text);
    const div = document.createElement("div");
    div.toggleClass("callout", true);
    const divTitle = div.createDiv("div");
    divTitle.toggleClass("callout-title", true);
    const div2 = div.createDiv("div");
    div2.toggleClass("callout-content", true);
    div2.setAttribute("id", "mk-callout-" + this.info.id);
    return div;
  }
};
var calloutBlock = (range, text2, id2) => import_view2.Decoration.widget({
  widget: new CalloutWidget({ range, text: text2, id: id2 }),
  block: true
});

// src/types/types.ts
var eventTypes = {
  activePathChange: "mkmd-active-path",
  frameSelected: "mkmd-active-frame",
  frameLayerSelected: "mkmd-frame-layer",
  refreshView: "mkmd-refresh-view",
  revealFile: "mkmd-reveal-file",
  collapseFolders: "mkmd-collapse-folders",
  toggleBacklinks: "mkmd-toggle-backlinks",
  metadataChange: "mkmd-tags-change",
  vaultChange: "mkmd-vault-change",
  mdbChange: "mkmd-mdb-change",
  spacesChange: "mkmd-spaces-change",
  frameChange: "mkmd-frame-change",
  updateSections: "mkmd-update-sections",
  settingsChanged: "mkmd-settings-changed",
  spawnPortal: "mkmd-portal-spawn",
  loadPortal: "mkmd-portal-load",
  openFilePortal: "mkmd-portal-file",
  focusPortal: "mkmd-portal-focus"
};

// src/dispatch/flowDispatch.ts
var createFlowEditorInElement = (id2, leaf, source, el, type, path, from, to) => {
  const evt = new CustomEvent(eventTypes.spawnPortal, {
    detail: { id: id2, leaf, source, el, path, from, to, type }
  });
  activeWindow.dispatchEvent(evt);
};
var loadFlowEditorByDOM = (el, view, id2) => {
  const evt = new CustomEvent(eventTypes.loadPortal, {
    detail: { id: id2, el, view }
  });
  activeWindow.dispatchEvent(evt);
};
var focusFlowEditor = (id2, top) => {
  const evt = new CustomEvent(eventTypes.focusPortal, {
    detail: { id: id2, parent: false, top }
  });
  activeWindow.dispatchEvent(evt);
};
var focusFlowEditorParent = (id2, top) => {
  const evt = new CustomEvent(eventTypes.focusPortal, {
    detail: { id: id2, parent: true, top }
  });
  activeWindow.dispatchEvent(evt);
};
var openFileFlowEditor = (file, source) => {
  const evt = new CustomEvent(eventTypes.openFilePortal, {
    detail: { file, source }
  });
  activeWindow.dispatchEvent(evt);
};

// src/i18n.ts
var T4 = class {
  constructor() {
    this.all = {
      en: {
        commands: {
          h1: "Heading 1",
          h2: "Heading 2",
          h3: "Heading 3",
          list: "Bullet List",
          "ordered-list": "Numbered List",
          todo: "To-do List",
          quote: "Quote",
          divider: "Divider",
          note: "Link to Note",
          link: "Web Link",
          callout: "Callout",
          table: "Table",
          codeblock: "Code Block",
          emoji: "Emoji",
          image: "Image",
          flow: "Flow Block",
          tag: "Tag",
          makeMenu: "Flow Menu",
          selectStyle: "Style",
          toggleKeyboard: "Toggle Keyboard"
        },
        styles: {
          bold: "Bold",
          italics: "Italics",
          strikethrough: "Strikethrough",
          code: "Code",
          link: "Web Link",
          blocklink: "Link to Note",
          textColor: "Text Color",
          highlight: "Highlight"
        },
        commandsSuggest: {
          noResult: "No result"
        },
        commandPalette: {
          enable: "Enable",
          disabled: "Disable",
          openFlow: "Open Flow Blocks in Selection",
          closeFlow: "Close Flow Blocks in Selection",
          toggleBold: "Toggle Bold",
          toggleItalics: "Toggle Italics",
          openSpaces: "Open Spaces",
          reloadSpaces: "Reload Spaces",
          blink: "Blink",
          openFileContext: "Open Context Explorer",
          convertFolderNote: "Convert to Folder Note",
          revealFile: "Reveal File in Spaces",
          toggleBacklinks: "Toggle Backlinks",
          collapseAllFolders: "Collapse All Folders",
          addFileSpace: "Add File to Space",
          removeFileSpace: "Remove File from Space"
        },
        menu: {
          fileMetadata: "File Metadata",
          fileMetadataDescription: "This note only",
          openFilePane: "Open in a new pane",
          rename: "Rename",
          changeToFolderNote: "Convert to Folder Note",
          moveFile: "Move file to...",
          duplicate: "Make a copy",
          edit: "Edit",
          delete: "Delete",
          getHelp: "Make.md Community",
          openVault: "Open Another Vault",
          obSettings: "Obsidian Settings",
          commandPalette: "Command Palette",
          backToSpace: "Back to Spaces",
          newSpace: "New Space",
          collapseAllSections: "Collapse All Spaces",
          expandAllSections: "Expand All Spaces",
          collapseAllFolders: "Collapse All Folders",
          expandAllFolders: "Expand All Folders",
          spaceTitle: "Add/Remove in Space",
          home: "Home",
          none: "None",
          tableView: "Table View",
          cardView: "Card View",
          listView: "List View",
          flowView: "Flow View",
          groupBy: "Group By",
          sortBy: "Sort By",
          newFilter: "New Filter",
          clearFilters: "Clear Filters",
          unhideFields: "Unhide All Properties",
          importDataview: "Import All Dataview Properties",
          saveAllProperties: "Save All Properties to Files",
          mergeProperties: "Merge Properties",
          openTag: "Open Tag",
          removeTag: "Remove Tag",
          editCode: "Edit Code",
          deleteProperty: "Delete Property",
          hideProperty: "Hide Property",
          unhideProperty: "Unhide Property",
          saveProperty: "Save Property",
          sortAscending: "Sort Ascending",
          sortDescending: "Sort Descending",
          deleteRow: "Delete Item",
          collapseAll: "Collapse All",
          customSort: "Custom Sort",
          fileNameSortAlphaAsc: "File Name (A to Z)",
          fileNameSortAlphaDesc: "File Name (Z to A)",
          createdTimeSortAsc: "Created Time (new to old)",
          createdTimeSortDesc: "Created Time (old to new)",
          modifiedTimeSortAsc: "Modified Time (new to old)",
          modifiedTimeSortDesc: "Modified Time (old to new)",
          spaces: "Spaces",
          tags: "Tags",
          manageHiddenFiles: "Manage Hidden Files",
          unpinSpace: "Remove from Waypoints",
          pinSpace: "Add to Waypoints",
          homeSpace: "Home",
          deleteSpace: "Delete Space",
          changeColor: "Change Color",
          changePropertyType: "Change Type",
          deleteFiles: "Delete Files",
          createFolderSpace: "Create Space from Folder",
          folder: "Folder",
          syncToContext: "Sync to Context"
        },
        buttons: {
          moreOptions: "More Options",
          newNote: "New Note",
          changeIcon: "Change Sticker",
          removeIcon: "Remove Sticker",
          changeBanner: "Change Cover",
          removeBanner: "Remove Cover",
          rename: "Change Name",
          saveSpace: "Save Space",
          createFolder: "New Folder",
          createNote: "New Note",
          createCanvas: "New Canvas",
          createSection: "New Space",
          createSectionSmart: "New Smart Space",
          cancel: "Cancel",
          search: "Search",
          delete: "Delete",
          toggleFlow: "Toggle Flow",
          openFlow: "Open Flow",
          hideFlow: "Hide Flow",
          openLink: "Open Link",
          addTag: "Add Tag",
          tag: "Tag",
          syncFields: "Sync Properties",
          convertTable: "Convert to Markdown",
          cutTable: "Cut Table",
          deleteTable: "Delete Table",
          blink: "Blink",
          addFile: "Add File",
          merge: "Merge",
          saveView: "Save View",
          saveTable: "Save Table",
          renameView: "Rename View",
          renameTable: "Rename Table",
          currentFolder: "Current Folder",
          sync: "Sync"
        },
        filterTypes: {
          contains: "contains",
          notContains: "does not contain",
          is: "is",
          isNot: "is not",
          before: "before",
          after: "after",
          anyOf: "is any of",
          noneOf: "is none of",
          checked: "is checked",
          unchecked: "is unchecked",
          isEmpty: "is empty",
          isNotEmpty: "is not empty"
        },
        sortTypes: {
          alphaAsc: "A to Z",
          alphaDesc: "Z to A",
          earliest: "Earliest",
          latest: "Latest",
          checkAsc: "Checked \u2192 Unchecked",
          checkDesc: "Unchecked \u2192 Checked",
          itemsAsc: "Least Items",
          itemsDesc: "Most Items"
        },
        properties: {
          defaultField: "Name",
          text: {
            label: "Text"
          },
          number: {
            label: "Number"
          },
          preview: {
            label: "Preview"
          },
          boolean: {
            label: "Yes/No"
          },
          date: {
            label: "Date"
          },
          option: {
            label: "Option"
          },
          file: {
            label: "File"
          },
          link: {
            label: "Link"
          },
          tag: {
            label: "Tag"
          },
          context: {
            label: "Context"
          },
          image: {
            label: "Image"
          },
          color: {
            label: "Color"
          },
          icon: {
            label: "Icon"
          },
          fileProperty: {
            label: "Look Up",
            createdTime: "Created",
            modifiedTime: "Last Edited",
            extension: "Extension",
            size: "Size",
            preview: "Note Preview",
            parentFolder: "Folder"
          }
        },
        labels: {
          createFolder: "New Folder Name",
          rename: "Rename",
          selectDateFormat: "Select/Type Date Format",
          renameSectionSmart: "Edit Smart Space",
          renameSection: "Edit Space",
          createSectionSmart: "New Smart Space",
          createSection: "New Space",
          createNote: "New Note Name",
          contextMaker: "Context Maker",
          select: "Select",
          collapse: "Collapse",
          expand: "Expand",
          findStickers: "Find Sticker",
          mergeProperties: "Merge Properties",
          placeholder: "Type '/' for commands",
          noFile: "is not created yet. Click to create.",
          blinkPlaceholder: "Quickly Search a File, Folder, Tag... Press Tab to Edit",
          searchPlaceholder: "Type to search...",
          contextItemSelectPlaceholder: "Find Item",
          linkItemSelectPlaceholder: "Find or Create Note",
          optionItemSelectPlaceholder: "Select Option",
          viewItemSelectPlaceholder: "Select View",
          tagItemSelectPlaceholder: "Find Tag",
          propertyItemSelectPlaceholder: "Select Property",
          sortItemSelectPlaceholder: "Select Sort",
          filterItemSelectPlaceholder: "Select Filter",
          syncFrontmatterProperty: "Sync Frontmatter Property",
          newProperty: "New Property",
          propertyType: "Type",
          propertyContext: "Context",
          dateFormat: "Date Format",
          propertyFileProp: "Property",
          multiple: "Multiple",
          filesCount: "{$1} Files",
          hiddenFiles: "Hidden Files",
          addExtension: "Add Extension",
          saveView: "Save View",
          saveTable: "Save Table",
          renameView: "Rename View",
          renameTable: "Rename Table",
          syncMetadata: "Sync Metadata",
          syncProperties: "Sync Properties",
          selectContext: "Select Context",
          metadata: "Metadata",
          backlinks: "Backlinks",
          context: "Context"
        },
        descriptions: {
          syncMetadata: "Select which fields from your notes to start syncing with the context.",
          syncProperties: "Contexts defines and syncs the same fields across your notes depending on their folder or tag.",
          selectContext: "Select which folder or tag context you want to sync the fields."
        },
        flowView: {
          emptyDoc: "Empty Document",
          itemsCount: " Items",
          emptyFolder: "This Folder is Empty"
        },
        notice: {
          duplicateFile: "Folder already contains note with same name",
          addedToSection: "Added to Space",
          fileExists: "File Already Exists",
          folderExists: "Folder Already Exists",
          noPropertyName: "Property Name is Required",
          duplicatePropertyName: "Duplicate Property Name",
          newSpaceName: "Enter a name for your space",
          duplicateSpaceName: "Space name already exists"
        },
        settings: {
          layoutVertical: "Vertical",
          layoutHorizontal: "Horizontal",
          sectionSidebar: "Spaces",
          sectionEditor: "Maker Mode",
          sectionFlow: "Flow",
          sectionAdvanced: "Advanced",
          sectionDataview: "Dataview",
          sectionAppearance: "Appearance",
          sectionContext: "Context",
          inlineStickerMenu: {
            name: "Inline Stickers",
            desc: "Add inline stickers by typing :"
          },
          openSpacesOnLaunch: {
            name: "Open Spaces as Default Tab",
            desc: "Open the Spaces tab when Obsidian launches"
          },
          defaultDateFormat: {
            name: "Default Date Format",
            desc: "Set the default date format, example: yyyy-MM-dd (see https://date-fns.org/v2.30.0/docs/format)"
          },
          folderIndentationLines: {
            name: "Show Folder Indentation Lines",
            desc: "Turn on to show a line on the left of folders to indicate indentation"
          },
          folderNoteLocation: {
            name: "Folder Note Location Inside Folder",
            desc: "Turn on to have folder notes inside the folder, turn off to have it outside"
          },
          folderViewDefault: {
            name: "Show Folder Note by Default",
            desc: "Show the folder note by default when opening a folder"
          },
          internalLinkFlowEditor: {
            name: "Open Flow Blocks on Internal Link Click",
            desc: "Turn on to toggle Flow Blocks directly by clicking on internal links, otherwise a tooltip will be shown"
          },
          syncContextToFrontmatter: {
            name: "Sync Context Fields to Frontmatter",
            desc: "Turn on to automatically save all context fields to frontmatter fields, not just existing frontmatter fields."
          },
          inlineBacklinks: {
            name: "Show Inline Backlinks (Inline Context required)",
            desc: "Show editable backlinks at the bottom of your notes"
          },
          dataviewInlineContext: {
            name: "Show Dataview in Inline Context",
            desc: "Show dataview when inline context is enabled"
          },
          inlineContextExplorer: {
            name: "Inline Context",
            desc: "Display the context and a banner at the top of your notes"
          },
          inlineContextExpanded: {
            name: "Auto Expand Inline Context",
            desc: "Expand the inline context sections when opening a note"
          },
          inlineContextHorizontal: {
            name: "Inline Title and Sticker Layout",
            desc: "Layout for inline title and sticker in Inline Context"
          },
          hideFrontmatter: {
            name: "Hide Frontmatter",
            desc: "Hide the frontmatter when inline context is enabled"
          },
          openFileContext: {
            name: "Auto Open Context Explorer",
            desc: "Automatically open context explorer panel in the right panel"
          },
          folderNote: {
            name: "Enable Folder Note",
            desc: "Access the folder note in the folder page and hide the folder note from spaces"
          },
          expandFolder: {
            name: "Auto Expand Folder",
            desc: "Auto expand folders on click"
          },
          hoverPreview: {
            name: "Preview on Hover",
            desc: "Preview on Hover while holding Control/Command key"
          },
          activeFile: {
            name: "Reveal Active File",
            desc: "Automatically reveal the active file in Spaces"
          },
          lineNumbers: {
            name: "Line Numbers",
            desc: "Display line numbers"
          },
          compactMode: {
            name: "Compact Mode",
            desc: "Display the Spaces menu in a more compact format"
          },
          contexts: {
            name: "Contexts",
            desc: `Contexts allows you to have full control over the metadata of your files`
          },
          spaces: {
            name: "Spaces",
            desc: `Spaces gives you control over how you organize your files`
          },
          spacesStickers: {
            name: "Stickers",
            desc: `Use Emojis to make it easier to find your notes`
          },
          spacesAlias: {
            name: "Alias",
            desc: `Use the alias metadata to show in Spaces`
          },
          spacesFileExplorerDual: {
            name: "Compatibility Mode",
            desc: "This will improve the compatibility of plugins while using Spaces"
          },
          spacesDeleteOption: {
            name: "Delete File Option",
            desc: "Select how you want files to be deleted"
          },
          spacesDeleteOptions: {
            permanant: "Delete Permanently",
            trash: "Move to Obsidian Trash",
            "system-trash": "Move to System Trash"
          },
          hideRibbon: {
            name: "App Ribbon",
            desc: `Show/hide the left menu aka. ribbon`
          },
          readableLineWidth: {
            name: "Readable Line Width",
            desc: `Use Readable Line Width`
          },
          sidebarTabs: {
            name: "Sidebar Tabs",
            desc: `Show/hide other sidebar tabs`
          },
          spacesPerformance: {
            name: "Performance Mode",
            desc: `Turn on performance mode for Spaces, may affect scrolling appearance. Requires Restart`
          },
          indexSVG: {
            name: "Use SVGs as Stickers",
            desc: `Use any svg file in your vault as a sticker`
          },
          inlineStyler: {
            name: "Flow Styler",
            desc: `Select text to add styling`
          },
          inlineStylerColor: {
            name: "Text and Highlight Colors \u{1F9EA}",
            desc: `Select text color and highlight color, (this may change in the future because of the limitations with HTML and Obsidian)`
          },
          spaceRowHeight: {
            name: "Row Height",
            desc: "The height for each row in spaces (in pixels), default is 28"
          },
          makeChar: {
            name: "Flow Menu Trigger",
            desc: "Character to open the Flow Menu"
          },
          mobileMakeBar: {
            name: "Flow Styler (Mobile)",
            desc: "Replaces the mobile toolbar"
          },
          editorMarkSans: {
            name: "Mark Sans \u{1F9EA}",
            desc: `Use the editor without Markdown.`
          },
          editorMakerMode: {
            name: "Flow (Beta)",
            desc: `An integrated and intuitive editor experience`
          },
          editorMakePlacholder: {
            name: "Flow Menu Hint Text",
            desc: `Show a hint text on how to open the Flow Menu Shortcut`
          },
          blink: {
            name: "Blink",
            desc: `A faster way to search and edit your notes`
          },
          editorMakeMenu: {
            name: "Flow Menu",
            desc: `Open the Flow menu to quickly add content`
          },
          editorMakeMenuTrigger: {
            name: "Flow Menu Shortcut",
            desc: `Trigger key to use flow menu`
          },
          editorFlowReplace: {
            name: "Flow Block",
            desc: `Open your internal links or toggle your embeds in the flow block.`
          },
          editorFlowStyle: {
            name: "Flow Block Style",
            desc: "Select a theme for your flow block",
            seamless: "Seamless",
            classic: "Classic",
            minimal: "Minimal"
          }
        }
      }
    };
    this.lang = localStorage.getItem("language");
  }
  get texts() {
    return this.all["en"];
  }
};
var i18n_default = new T4().texts;

// src/components/Space/Editor/FlowEditorHover.tsx
init_compat_module();

// src/utils/array.ts
var insert = (arr, index, newItem) => !index || index <= 0 ? [
  newItem,
  ...arr
] : [
  ...arr.slice(0, index),
  newItem,
  ...arr.slice(index)
];
var uniq = (a5) => [...new Set(a5)];
var uniqCaseInsensitive = (a5) => [
  ...new Map(a5.map((s5) => [s5.toLowerCase(), s5])).values()
];
var uniqueNameFromString = (name, cols) => {
  let newName = name;
  if (cols.includes(newName)) {
    let append = 1;
    while (cols.includes(newName)) {
      newName = name + append.toString();
      append += 1;
    }
  }
  return newName;
};
var onlyUniqueProp = (prop) => (value, index, self2) => {
  return self2.findIndex((v3) => value[prop] == v3[prop]) === index;
};

// src/utils/json.ts
var safelyParseJSON = (json) => {
  var parsed;
  try {
    parsed = JSON.parse(json);
  } catch (e4) {
  }
  return parsed;
};

// src/utils/strings.ts
function ensureArray(value) {
  if (Array.isArray(value)) {
    return value;
  }
  return [];
}
function ensureStringValueFromSet(value, values, defaultValue2) {
  const _v = ensureString(value);
  return values.some((f4) => f4 == _v) ? _v : defaultValue2;
}
function ensureString(value) {
  if (!value)
    return "";
  if (typeof value !== "string") {
    return value.toString();
  }
  return value;
}
function parseStickerString(input) {
  if (!input) {
    return ["", ""];
  }
  const match2 = input.match(/^(.*?)\s*\/\/\s*(.*)$/);
  if (match2) {
    return [match2[1], match2[2]];
  } else {
    return ["", input];
  }
}
var emojiFromString = (emoji) => {
  let html;
  try {
    html = unifiedToNative(emoji);
  } catch (e4) {
    html = emoji;
  }
  return html;
};
var unifiedToNative = (unified) => {
  const unicodes = unified.split("-");
  const codePoints = unicodes.map((u4) => `0x${u4}`);
  return String.fromCodePoint(...codePoints);
};
var indexOfCharElseEOS = (char, str) => {
  if (str.indexOf(char) > 0)
    return str.indexOf(char);
  return str.length;
};
var spaceNameFromContextPath = (contextPath) => contextPath;
var spacePathFromName = (spaceName) => "spaces://" + spaceName.replace(/\//g, "+");
var tagSpacePathFromTag = (tag) => "spaces://" + tag;
var wrapQuotes = (s5) => `"${s5}"`;
var removeQuotes = (s5) => {
  if (!s5)
    return s5;
  const singleQuoteWithSemicolon = s5.startsWith("'") && (s5.endsWith("';") || s5.endsWith("'"));
  const doubleQuoteWithSemicolon = s5.startsWith('"') && (s5.endsWith('";') || s5.endsWith('"'));
  if (singleQuoteWithSemicolon || doubleQuoteWithSemicolon) {
    s5 = s5.substring(1, s5.length - 1);
    if (s5.endsWith('"') || s5.endsWith("'")) {
      s5 = s5.substring(0, s5.length - 1);
    }
    return s5;
  } else {
    return s5;
  }
};
var filePathToString = (filename) => {
  if (filename.lastIndexOf("/") != -1) {
    if (filename.lastIndexOf(".") != -1)
      return removeLeadingSlash(
        filename.substring(
          filename.lastIndexOf("/") + 1,
          filename.lastIndexOf(".")
        )
      );
    return filename.substring(filename.lastIndexOf("/") + 1);
  }
  if (filename.lastIndexOf(".") != -1) {
    return filename.substring(0, filename.lastIndexOf("."));
  }
  return filename;
};
var stringFromTag = (string) => {
  if (string.charAt(0) == "#") {
    if (string.charAt(1) == "#") {
      return string.substring(2, string.length);
    }
    return string.substring(1, string.length);
  }
  return string;
};
var fileNameToString = (filename) => filename.substring(0, filename.lastIndexOf(".")) || filename;
var removeLeadingSlash = (path) => path.charAt(0) == "/" ? path.substring(1) : path;
var folderPathToString = (filename) => removeLeadingSlash(filename.substring(filename.lastIndexOf("/"))) || filename;
var pathDisplayName = (path) => {
  if (!path)
    return "";
  if ((path == null ? void 0 : path.type) == "folder") {
    if (path.path == "/")
      return app.vault.getName();
    return folderPathToString(path.path);
  }
  if ((path == null ? void 0 : path.type) == "tag")
    return stringFromTag(path.space);
  if ((path == null ? void 0 : path.type) == "space")
    return spaceNameFromContextPath(path.space);
  if (path.isRemote) {
    return folderPathToString(path.path);
  }
  return path.path;
};
var contextDisplayName = (space) => {
  if (!space)
    return "";
  if ((space == null ? void 0 : space.uri.type) == "folder")
    return folderPathToString(space.uri.path);
  if ((space == null ? void 0 : space.uri.type) == "tag")
    return stringFromTag(space.uri.space);
  if ((space == null ? void 0 : space.uri.type) == "space")
    return spaceNameFromContextPath(space.uri.space);
  if (space.isRemote) {
    return folderPathToString(space.uri.path);
  }
  return space.uri.path;
};
var folderNotePathFromAFile = (settings, aFile) => !aFile ? null : settings.folderNoteInsideFolder ? `${aFile.path}/${aFile.name}.md` : aFile.parent == "/" ? `${aFile.name}.md` : `${aFile.parent}/${aFile.name}.md`;
var folderPathFromFolderNoteFile = (settings, aFile) => !aFile ? null : settings.folderNoteInsideFolder ? aFile.parent : aFile.parent == "/" ? aFile.name : `${aFile.parent}/${aFile.name}`;

// src/utils/parser.tsx
var parseSortStrat = (str) => {
  const [a5, b4] = str.split("_");
  return [a5, b4 == "asc"];
};
var parseMultiString = (str) => {
  var _a2;
  return (_a2 = str == null ? void 0 : str.match(/(\\.|[^,])+/g)) != null ? _a2 : [];
};
var parseLinkString = (string) => {
  if (!string)
    return "";
  const match2 = /\[\[(.*?)\]\]/g.exec(string);
  const stringValue = (match2 == null ? void 0 : match2.length) > 1 ? match2[1].substring(0, indexOfCharElseEOS("|", match2[1])) : string;
  if (stringValue)
    return stringValue;
  return string;
};
var parseLinkDisplayString = (string) => {
  return filePathToString(parseLinkString(string));
};

// src/utils/serializer.ts
var serializeMultiString = (value) => value.join(",");
var serializeMultiDisplayString = (value) => value.join(", ");
var serializeSQLValues = (value) => value.join(", ");
var serializeSQLStatements = (value) => value.join("; ");
var serializeSQLFieldNames = (value) => value.join(",");

// src/components/FileView/FileView.tsx
var import_obsidian2 = require("obsidian");
init_compat_module();

// src/components/FileView/FileLinkViewComponent.tsx
var import_obsidian = require("obsidian");
init_hooks_module();
init_compat_module();
var FileLinkViewComponent = (props2) => {
  const ref2 = _2(null);
  const [markdown, setMarkdown] = h2("");
  p2(() => {
    if (ref2.current)
      import_obsidian.MarkdownRenderer.renderMarkdown(markdown, ref2.current, props2.path, null);
  }, [markdown]);
  p2(() => {
    fetch(props2.path).then((res) => res.text()).then((f4) => setMarkdown(f4));
  }, [props2.path]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "markdown-preview-view markdown-rendered node-insert-event is-readable-line-width allow-fold-headings show-indentation-guide allow-fold-lists show-frontmatter"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "markdown-preview-sizer markdown-preview-section",
    ref: ref2
  }));
};

// src/components/FileView/FileView.tsx
var FILE_VIEW_TYPE = "make-file-view";
var FileLinkView = class extends import_obsidian2.ItemView {
  constructor(leaf, plugin, viewType) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
    this.viewType = viewType;
  }
  getViewType() {
    return FILE_VIEW_TYPE;
  }
  getDisplayText() {
    return this.path;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.path = state.path;
    this.constructView(this.path);
    const displayName = this.path;
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = displayName;
    this.leaf.view.titleEl = displayName;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = displayName;
    }
    result.history = true;
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path;
    return state;
  }
  constructView(path) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", {
        className: "markdown-reading-view"
      }, /* @__PURE__ */ Cn.createElement(FileLinkViewComponent, {
        path,
        plugin: this.plugin
      }))
    );
  }
};

// src/utils/objects.ts
var replaceKeys = (object1, object2) => {
  const newObject = {};
  for (const key2 in object1) {
    const newKey = Object.prototype.hasOwnProperty.call(object2, key2) ? object2[key2] : key2;
    newObject[newKey] = object1[key2];
  }
  return newObject;
};
function applyFunctionToObject(object, func) {
  const newObject = {};
  for (const key2 in object) {
    if (Object.prototype.hasOwnProperty.call(object, key2)) {
      newObject[key2] = func(object[key2]);
    }
  }
  return newObject;
}
var replaceKeysByValue = (object1, object2) => {
  const reversedObject2 = {};
  for (const key2 in object2) {
    reversedObject2[object2[key2]] = key2;
  }
  return replaceKeys(object1, reversedObject2);
};

// src/utils/uri.ts
var import_obsidian3 = require("obsidian");

// src/utils/regex.ts
var urlRegex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/gi;

// src/utils/uri.ts
var openPath = (plugin, _path, location) => {
  if (!_path)
    return;
  const { type, path } = _path;
  if (type == "file" || type == "folder") {
    const afile = getAbstractFileAtPath(app, path);
    if (afile) {
      openAFile(afile, plugin, location);
    } else {
      if (type == "file")
        createNewMarkdownFile(
          plugin,
          defaultNoteFolder(plugin, null),
          path
        );
    }
    return;
  }
  if (type == "tag") {
    openTagContext(path, plugin, location);
    return;
  }
  if (type == "url") {
    openURL(path, location);
    return;
  }
};
var uriForFolder = (path) => {
  if (path == "/")
    return {
      type: "vault",
      basePath: path,
      fullPath: path,
      space: null,
      path,
      alias: null,
      ref: null,
      refStr: null,
      refType: null,
      query: null
    };
  return {
    type: "folder",
    basePath: path,
    fullPath: path,
    space: null,
    path,
    alias: null,
    ref: null,
    refStr: null,
    refType: null,
    query: null
  };
};
function uriByString(uri, source) {
  if (!uri)
    return null;
  const fullPath = uri;
  let refTypeChar = "";
  const parseQuery = (queryString) => {
    const query2 = {};
    queryString.split("&").forEach((param) => {
      const [key2, value] = param.split("=");
      query2[decodeURIComponent(key2)] = decodeURIComponent(value);
    });
    return query2;
  };
  const mapRefType = (refTypeChar2) => {
    if (refTypeChar2 === "^")
      return "context";
    if (refTypeChar2 === "*")
      return "frame";
    return null;
  };
  let space = null;
  let path = null;
  let alias = null;
  let reference = null;
  let refType = null;
  let query = null;
  if (uri.startsWith("spaces://")) {
    const spaceParts = uri.slice("spaces://".length).split("/");
    space = spaceParts[0];
    uri = "/" + (spaceParts.slice(1).join("/") || "");
  }
  const lastSlashIndex = uri.lastIndexOf("/");
  const lastHashIndex = uri.lastIndexOf("#");
  const lastPipeIndex = uri.lastIndexOf("|");
  const queryIndex = uri.lastIndexOf("?");
  if (queryIndex !== -1) {
    query = parseQuery(uri.slice(queryIndex + 1));
    uri = uri.slice(0, queryIndex);
  }
  if (lastHashIndex !== -1 && lastHashIndex > lastSlashIndex) {
    const refPart = uri.slice(lastHashIndex + 1);
    refType = mapRefType(refPart[0]);
    if (refType || lastHashIndex != lastSlashIndex + 1) {
      refTypeChar = refPart[0];
      reference = refType ? refPart.slice(1) : refPart;
      uri = uri.slice(0, lastHashIndex);
    }
  }
  if (lastPipeIndex !== -1 && lastPipeIndex > lastSlashIndex) {
    alias = uri.slice(lastPipeIndex + 1);
    uri = uri.slice(0, lastPipeIndex);
  }
  path = removeTrailingSlashFromFolder(uri);
  return {
    basePath: `${space ? `spaces://${space}` : path}`,
    type: uriTypeByString(space, path, source),
    space,
    fullPath,
    path,
    alias,
    ref: reference,
    refType,
    refStr: refTypeChar ? refTypeChar + reference : null,
    query
  };
}
var uriTypeByString = (space, file, source) => {
  if ((space == null ? void 0 : space.charAt(0)) == "#") {
    return "tag";
  }
  if ((space == null ? void 0 : space.length) > 0) {
    return "space";
  }
  if (file.charAt(file.length - 1) == "/") {
    if (file == "/")
      return "vault";
    return "folder";
  }
  let portalFile;
  if (source) {
    portalFile = app.metadataCache.getFirstLinkpathDest(file, source);
  } else {
    portalFile = app.vault.getAbstractFileByPath(file);
  }
  if (portalFile instanceof import_obsidian3.TFolder) {
    return "folder";
  }
  if (portalFile instanceof import_obsidian3.TFile) {
    return "file";
  }
  if (file.match(urlRegex))
    return "url";
  return "unknown";
};

// node_modules/acorn/dist/acorn.mjs
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];
var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};
var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
var keywords$1 = {
  5: ecma5AndLessKeywords,
  "5module": ecma5AndLessKeywords + " export import",
  6: ecma5AndLessKeywords + " const class extends export import super"
};
var keywordRelationalOperator = /^in(stanceof)?$/;
var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
function isInAstralSet(code, set) {
  var pos = 65536;
  for (var i4 = 0; i4 < set.length; i4 += 2) {
    pos += set[i4];
    if (pos > code) {
      return false;
    }
    pos += set[i4 + 1];
    if (pos >= code) {
      return true;
    }
  }
  return false;
}
function isIdentifierStart(code, astral) {
  if (code < 65) {
    return code === 36;
  }
  if (code < 91) {
    return true;
  }
  if (code < 97) {
    return code === 95;
  }
  if (code < 123) {
    return true;
  }
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code, astralIdentifierStartCodes);
}
function isIdentifierChar(code, astral) {
  if (code < 48) {
    return code === 36;
  }
  if (code < 58) {
    return true;
  }
  if (code < 65) {
    return false;
  }
  if (code < 91) {
    return true;
  }
  if (code < 97) {
    return code === 95;
  }
  if (code < 123) {
    return true;
  }
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
  }
  if (astral === false) {
    return false;
  }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}
var TokenType = function TokenType2(label, conf) {
  if (conf === void 0)
    conf = {};
  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};
function binop(name, prec) {
  return new TokenType(name, { beforeExpr: true, binop: prec });
}
var beforeExpr = { beforeExpr: true };
var startsExpr = { startsExpr: true };
var keywords = {};
function kw(name, options) {
  if (options === void 0)
    options = {};
  options.keyword = name;
  return keywords[name] = new TokenType(name, options);
}
var types$1 = {
  num: new TokenType("num", startsExpr),
  regexp: new TokenType("regexp", startsExpr),
  string: new TokenType("string", startsExpr),
  name: new TokenType("name", startsExpr),
  privateId: new TokenType("privateId", startsExpr),
  eof: new TokenType("eof"),
  bracketL: new TokenType("[", { beforeExpr: true, startsExpr: true }),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", { beforeExpr: true, startsExpr: true }),
  braceR: new TokenType("}"),
  parenL: new TokenType("(", { beforeExpr: true, startsExpr: true }),
  parenR: new TokenType(")"),
  comma: new TokenType(",", beforeExpr),
  semi: new TokenType(";", beforeExpr),
  colon: new TokenType(":", beforeExpr),
  dot: new TokenType("."),
  question: new TokenType("?", beforeExpr),
  questionDot: new TokenType("?."),
  arrow: new TokenType("=>", beforeExpr),
  template: new TokenType("template"),
  invalidTemplate: new TokenType("invalidTemplate"),
  ellipsis: new TokenType("...", beforeExpr),
  backQuote: new TokenType("`", startsExpr),
  dollarBraceL: new TokenType("${", { beforeExpr: true, startsExpr: true }),
  eq: new TokenType("=", { beforeExpr: true, isAssign: true }),
  assign: new TokenType("_=", { beforeExpr: true, isAssign: true }),
  incDec: new TokenType("++/--", { prefix: true, postfix: true, startsExpr: true }),
  prefix: new TokenType("!/~", { beforeExpr: true, prefix: true, startsExpr: true }),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType("**", { beforeExpr: true }),
  coalesce: binop("??", 1),
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", { isLoop: true, beforeExpr: true }),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", { isLoop: true }),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", { isLoop: true }),
  _with: kw("with"),
  _new: kw("new", { beforeExpr: true, startsExpr: true }),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import", startsExpr),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", { beforeExpr: true, binop: 7 }),
  _instanceof: kw("instanceof", { beforeExpr: true, binop: 7 }),
  _typeof: kw("typeof", { beforeExpr: true, prefix: true, startsExpr: true }),
  _void: kw("void", { beforeExpr: true, prefix: true, startsExpr: true }),
  _delete: kw("delete", { beforeExpr: true, prefix: true, startsExpr: true })
};
var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");
function isNewLine(code) {
  return code === 10 || code === 13 || code === 8232 || code === 8233;
}
function nextLineBreak(code, from, end) {
  if (end === void 0)
    end = code.length;
  for (var i4 = from; i4 < end; i4++) {
    var next = code.charCodeAt(i4);
    if (isNewLine(next)) {
      return i4 < end - 1 && next === 13 && code.charCodeAt(i4 + 1) === 10 ? i4 + 2 : i4 + 1;
    }
  }
  return -1;
}
var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
var ref = Object.prototype;
var hasOwnProperty = ref.hasOwnProperty;
var toString = ref.toString;
var hasOwn = Object.hasOwn || function(obj, propName) {
  return hasOwnProperty.call(obj, propName);
};
var isArray = Array.isArray || function(obj) {
  return toString.call(obj) === "[object Array]";
};
function wordsRegexp(words) {
  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
}
function codePointToString(code) {
  if (code <= 65535) {
    return String.fromCharCode(code);
  }
  code -= 65536;
  return String.fromCharCode((code >> 10) + 55296, (code & 1023) + 56320);
}
var loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;
var Position = function Position2(line, col) {
  this.line = line;
  this.column = col;
};
Position.prototype.offset = function offset(n2) {
  return new Position(this.line, this.column + n2);
};
var SourceLocation = function SourceLocation2(p3, start, end) {
  this.start = start;
  this.end = end;
  if (p3.sourceFile !== null) {
    this.source = p3.sourceFile;
  }
};
function getLineInfo(input, offset2) {
  for (var line = 1, cur = 0; ; ) {
    var nextBreak = nextLineBreak(input, cur, offset2);
    if (nextBreak < 0) {
      return new Position(line, offset2 - cur);
    }
    ++line;
    cur = nextBreak;
  }
}
var defaultOptions = {
  ecmaVersion: null,
  sourceType: "script",
  onInsertedSemicolon: null,
  onTrailingComma: null,
  allowReserved: null,
  allowReturnOutsideFunction: false,
  allowImportExportEverywhere: false,
  allowAwaitOutsideFunction: null,
  allowSuperOutsideMethod: null,
  allowHashBang: false,
  locations: false,
  onToken: null,
  onComment: null,
  ranges: false,
  program: null,
  sourceFile: null,
  directSourceFile: null,
  preserveParens: false
};
var warnedAboutEcmaVersion = false;
function getOptions(opts) {
  var options = {};
  for (var opt in defaultOptions) {
    options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt];
  }
  if (options.ecmaVersion === "latest") {
    options.ecmaVersion = 1e8;
  } else if (options.ecmaVersion == null) {
    if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
      warnedAboutEcmaVersion = true;
      console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
    }
    options.ecmaVersion = 11;
  } else if (options.ecmaVersion >= 2015) {
    options.ecmaVersion -= 2009;
  }
  if (options.allowReserved == null) {
    options.allowReserved = options.ecmaVersion < 5;
  }
  if (!opts || opts.allowHashBang == null) {
    options.allowHashBang = options.ecmaVersion >= 14;
  }
  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function(token) {
      return tokens.push(token);
    };
  }
  if (isArray(options.onComment)) {
    options.onComment = pushComment(options, options.onComment);
  }
  return options;
}
function pushComment(options, array) {
  return function(block, text2, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text2,
      start,
      end
    };
    if (options.locations) {
      comment.loc = new SourceLocation(this, startLoc, endLoc);
    }
    if (options.ranges) {
      comment.range = [start, end];
    }
    array.push(comment);
  };
}
var SCOPE_TOP = 1;
var SCOPE_FUNCTION = 2;
var SCOPE_ASYNC = 4;
var SCOPE_GENERATOR = 8;
var SCOPE_ARROW = 16;
var SCOPE_SIMPLE_CATCH = 32;
var SCOPE_SUPER = 64;
var SCOPE_DIRECT_SUPER = 128;
var SCOPE_CLASS_STATIC_BLOCK = 256;
var SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;
function functionFlags(async, generator) {
  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);
}
var BIND_NONE = 0;
var BIND_VAR = 1;
var BIND_LEXICAL = 2;
var BIND_FUNCTION = 3;
var BIND_SIMPLE_CATCH = 4;
var BIND_OUTSIDE = 5;
var Parser = function Parser2(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
  var reserved = "";
  if (options.allowReserved !== true) {
    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
    if (options.sourceType === "module") {
      reserved += " await";
    }
  }
  this.reservedWords = wordsRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = wordsRegexp(reservedStrict);
  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);
  this.containsEsc = false;
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }
  this.type = types$1.eof;
  this.value = null;
  this.start = this.end = this.pos;
  this.startLoc = this.endLoc = this.curPosition();
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;
  this.context = this.initialContext();
  this.exprAllowed = true;
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);
  this.potentialArrowAt = -1;
  this.potentialArrowInForAwait = false;
  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
  this.labels = [];
  this.undefinedExports = /* @__PURE__ */ Object.create(null);
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
    this.skipLineComment(2);
  }
  this.scopeStack = [];
  this.enterScope(SCOPE_TOP);
  this.regexpState = null;
  this.privateNameStack = [];
};
var prototypeAccessors = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, canAwait: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true }, allowNewDotTarget: { configurable: true }, inClassStaticBlock: { configurable: true } };
Parser.prototype.parse = function parse() {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node);
};
prototypeAccessors.inFunction.get = function() {
  return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
};
prototypeAccessors.inGenerator.get = function() {
  return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit;
};
prototypeAccessors.inAsync.get = function() {
  return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit;
};
prototypeAccessors.canAwait.get = function() {
  for (var i4 = this.scopeStack.length - 1; i4 >= 0; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) {
      return false;
    }
    if (scope.flags & SCOPE_FUNCTION) {
      return (scope.flags & SCOPE_ASYNC) > 0;
    }
  }
  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
};
prototypeAccessors.allowSuper.get = function() {
  var ref2 = this.currentThisScope();
  var flags = ref2.flags;
  var inClassFieldInit = ref2.inClassFieldInit;
  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;
};
prototypeAccessors.allowDirectSuper.get = function() {
  return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
};
prototypeAccessors.treatFunctionsAsVar.get = function() {
  return this.treatFunctionsAsVarInScope(this.currentScope());
};
prototypeAccessors.allowNewDotTarget.get = function() {
  var ref2 = this.currentThisScope();
  var flags = ref2.flags;
  var inClassFieldInit = ref2.inClassFieldInit;
  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit;
};
prototypeAccessors.inClassStaticBlock.get = function() {
  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0;
};
Parser.extend = function extend() {
  var plugins = [], len = arguments.length;
  while (len--)
    plugins[len] = arguments[len];
  var cls = this;
  for (var i4 = 0; i4 < plugins.length; i4++) {
    cls = plugins[i4](cls);
  }
  return cls;
};
Parser.parse = function parse2(input, options) {
  return new this(options, input).parse();
};
Parser.parseExpressionAt = function parseExpressionAt(input, pos, options) {
  var parser = new this(options, input, pos);
  parser.nextToken();
  return parser.parseExpression();
};
Parser.tokenizer = function tokenizer(input, options) {
  return new this(options, input);
};
Object.defineProperties(Parser.prototype, prototypeAccessors);
var pp$9 = Parser.prototype;
var literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
pp$9.strictDirective = function(start) {
  if (this.options.ecmaVersion < 5) {
    return false;
  }
  for (; ; ) {
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    var match2 = literal.exec(this.input.slice(start));
    if (!match2) {
      return false;
    }
    if ((match2[1] || match2[2]) === "use strict") {
      skipWhiteSpace.lastIndex = start + match2[0].length;
      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
      var next = this.input.charAt(end);
      return next === ";" || next === "}" || lineBreak.test(spaceAfter[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "=");
    }
    start += match2[0].length;
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    if (this.input[start] === ";") {
      start++;
    }
  }
};
pp$9.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true;
  } else {
    return false;
  }
};
pp$9.isContextual = function(name) {
  return this.type === types$1.name && this.value === name && !this.containsEsc;
};
pp$9.eatContextual = function(name) {
  if (!this.isContextual(name)) {
    return false;
  }
  this.next();
  return true;
};
pp$9.expectContextual = function(name) {
  if (!this.eatContextual(name)) {
    this.unexpected();
  }
};
pp$9.canInsertSemicolon = function() {
  return this.type === types$1.eof || this.type === types$1.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
};
pp$9.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon) {
      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
    }
    return true;
  }
};
pp$9.semicolon = function() {
  if (!this.eat(types$1.semi) && !this.insertSemicolon()) {
    this.unexpected();
  }
};
pp$9.afterTrailingComma = function(tokType, notNext) {
  if (this.type === tokType) {
    if (this.options.onTrailingComma) {
      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
    }
    if (!notNext) {
      this.next();
    }
    return true;
  }
};
pp$9.expect = function(type) {
  this.eat(type) || this.unexpected();
};
pp$9.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};
var DestructuringErrors = function DestructuringErrors2() {
  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
};
pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) {
    return;
  }
  if (refDestructuringErrors.trailingComma > -1) {
    this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
  }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) {
    this.raiseRecoverable(parens, isAssign ? "Assigning to rvalue" : "Parenthesized pattern");
  }
};
pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) {
    return false;
  }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) {
    return shorthandAssign >= 0 || doubleProto >= 0;
  }
  if (shorthandAssign >= 0) {
    this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
  }
  if (doubleProto >= 0) {
    this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
  }
};
pp$9.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
    this.raise(this.yieldPos, "Yield expression cannot be a default value");
  }
  if (this.awaitPos) {
    this.raise(this.awaitPos, "Await expression cannot be a default value");
  }
};
pp$9.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression") {
    return this.isSimpleAssignTarget(expr.expression);
  }
  return expr.type === "Identifier" || expr.type === "MemberExpression";
};
var pp$8 = Parser.prototype;
pp$8.parseTopLevel = function(node) {
  var exports2 = /* @__PURE__ */ Object.create(null);
  if (!node.body) {
    node.body = [];
  }
  while (this.type !== types$1.eof) {
    var stmt = this.parseStatement(null, true, exports2);
    node.body.push(stmt);
  }
  if (this.inModule) {
    for (var i4 = 0, list = Object.keys(this.undefinedExports); i4 < list.length; i4 += 1) {
      var name = list[i4];
      this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
    }
  }
  this.adaptDirectivePrologue(node.body);
  this.next();
  node.sourceType = this.options.sourceType;
  return this.finishNode(node, "Program");
};
var loopLabel = { kind: "loop" };
var switchLabel = { kind: "switch" };
pp$8.isLet = function(context) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
    return false;
  }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  if (nextCh === 91 || nextCh === 92) {
    return true;
  }
  if (context) {
    return false;
  }
  if (nextCh === 123 || nextCh > 55295 && nextCh < 56320) {
    return true;
  }
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) {
      ++pos;
    }
    if (nextCh === 92 || nextCh > 55295 && nextCh < 56320) {
      return true;
    }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) {
      return true;
    }
  }
  return false;
};
pp$8.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
    return false;
  }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, after;
  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 55295 && after < 56320));
};
pp$8.parseStatement = function(context, topLevel, exports2) {
  var starttype = this.type, node = this.startNode(), kind;
  if (this.isLet(context)) {
    starttype = types$1._var;
    kind = "let";
  }
  switch (starttype) {
    case types$1._break:
    case types$1._continue:
      return this.parseBreakContinueStatement(node, starttype.keyword);
    case types$1._debugger:
      return this.parseDebuggerStatement(node);
    case types$1._do:
      return this.parseDoStatement(node);
    case types$1._for:
      return this.parseForStatement(node);
    case types$1._function:
      if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
        this.unexpected();
      }
      return this.parseFunctionStatement(node, false, !context);
    case types$1._class:
      if (context) {
        this.unexpected();
      }
      return this.parseClass(node, true);
    case types$1._if:
      return this.parseIfStatement(node);
    case types$1._return:
      return this.parseReturnStatement(node);
    case types$1._switch:
      return this.parseSwitchStatement(node);
    case types$1._throw:
      return this.parseThrowStatement(node);
    case types$1._try:
      return this.parseTryStatement(node);
    case types$1._const:
    case types$1._var:
      kind = kind || this.value;
      if (context && kind !== "var") {
        this.unexpected();
      }
      return this.parseVarStatement(node, kind);
    case types$1._while:
      return this.parseWhileStatement(node);
    case types$1._with:
      return this.parseWithStatement(node);
    case types$1.braceL:
      return this.parseBlock(true, node);
    case types$1.semi:
      return this.parseEmptyStatement(node);
    case types$1._export:
    case types$1._import:
      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
        skipWhiteSpace.lastIndex = this.pos;
        var skip = skipWhiteSpace.exec(this.input);
        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
        if (nextCh === 40 || nextCh === 46) {
          return this.parseExpressionStatement(node, this.parseExpression());
        }
      }
      if (!this.options.allowImportExportEverywhere) {
        if (!topLevel) {
          this.raise(this.start, "'import' and 'export' may only appear at the top level");
        }
        if (!this.inModule) {
          this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
        }
      }
      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports2);
    default:
      if (this.isAsyncFunction()) {
        if (context) {
          this.unexpected();
        }
        this.next();
        return this.parseFunctionStatement(node, true, !context);
      }
      var maybeName = this.value, expr = this.parseExpression();
      if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon)) {
        return this.parseLabeledStatement(node, maybeName, expr, context);
      } else {
        return this.parseExpressionStatement(node, expr);
      }
  }
};
pp$8.parseBreakContinueStatement = function(node, keyword) {
  var isBreak = keyword === "break";
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) {
    node.label = null;
  } else if (this.type !== types$1.name) {
    this.unexpected();
  } else {
    node.label = this.parseIdent();
    this.semicolon();
  }
  var i4 = 0;
  for (; i4 < this.labels.length; ++i4) {
    var lab = this.labels[i4];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) {
        break;
      }
      if (node.label && isBreak) {
        break;
      }
    }
  }
  if (i4 === this.labels.length) {
    this.raise(node.start, "Unsyntactic " + keyword);
  }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
};
pp$8.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement");
};
pp$8.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("do");
  this.labels.pop();
  this.expect(types$1._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6) {
    this.eat(types$1.semi);
  } else {
    this.semicolon();
  }
  return this.finishNode(node, "DoWhileStatement");
};
pp$8.parseForStatement = function(node) {
  this.next();
  var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterScope(0);
  this.expect(types$1.parenL);
  if (this.type === types$1.semi) {
    if (awaitAt > -1) {
      this.unexpected(awaitAt);
    }
    return this.parseFor(node, null);
  }
  var isLet = this.isLet();
  if (this.type === types$1._var || this.type === types$1._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    if ((this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types$1._in) {
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
        } else {
          node.await = awaitAt > -1;
        }
      }
      return this.parseForIn(node, init$1);
    }
    if (awaitAt > -1) {
      this.unexpected(awaitAt);
    }
    return this.parseFor(node, init$1);
  }
  var startsWithLet = this.isContextual("let"), isForOf = false;
  var refDestructuringErrors = new DestructuringErrors();
  var init = this.parseExpression(awaitAt > -1 ? "await" : true, refDestructuringErrors);
  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (this.options.ecmaVersion >= 9) {
      if (this.type === types$1._in) {
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
      } else {
        node.await = awaitAt > -1;
      }
    }
    if (startsWithLet && isForOf) {
      this.raise(init.start, "The left-hand side of a for-of loop may not start with 'let'.");
    }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLValPattern(init);
    return this.parseForIn(node, init);
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) {
    this.unexpected(awaitAt);
  }
  return this.parseFor(node, init);
};
pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
  this.next();
  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);
};
pp$8.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  node.consequent = this.parseStatement("if");
  node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
  return this.finishNode(node, "IfStatement");
};
pp$8.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
    this.raise(this.start, "'return' outside of function");
  }
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) {
    node.argument = null;
  } else {
    node.argument = this.parseExpression();
    this.semicolon();
  }
  return this.finishNode(node, "ReturnStatement");
};
pp$8.parseSwitchStatement = function(node) {
  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types$1.braceL);
  this.labels.push(switchLabel);
  this.enterScope(0);
  var cur;
  for (var sawDefault = false; this.type !== types$1.braceR; ) {
    if (this.type === types$1._case || this.type === types$1._default) {
      var isCase = this.type === types$1._case;
      if (cur) {
        this.finishNode(cur, "SwitchCase");
      }
      node.cases.push(cur = this.startNode());
      cur.consequent = [];
      this.next();
      if (isCase) {
        cur.test = this.parseExpression();
      } else {
        if (sawDefault) {
          this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
        }
        sawDefault = true;
        cur.test = null;
      }
      this.expect(types$1.colon);
    } else {
      if (!cur) {
        this.unexpected();
      }
      cur.consequent.push(this.parseStatement(null));
    }
  }
  this.exitScope();
  if (cur) {
    this.finishNode(cur, "SwitchCase");
  }
  this.next();
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement");
};
pp$8.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {
    this.raise(this.lastTokEnd, "Illegal newline after throw");
  }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement");
};
var empty$1 = [];
pp$8.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types$1._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types$1.parenL)) {
      clause.param = this.parseBindingAtom();
      var simple = clause.param.type === "Identifier";
      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
      this.expect(types$1.parenR);
    } else {
      if (this.options.ecmaVersion < 10) {
        this.unexpected();
      }
      clause.param = null;
      this.enterScope(0);
    }
    clause.body = this.parseBlock(false);
    this.exitScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer) {
    this.raise(node.start, "Missing catch or finally clause");
  }
  return this.finishNode(node, "TryStatement");
};
pp$8.parseVarStatement = function(node, kind) {
  this.next();
  this.parseVar(node, false, kind);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration");
};
pp$8.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("while");
  this.labels.pop();
  return this.finishNode(node, "WhileStatement");
};
pp$8.parseWithStatement = function(node) {
  if (this.strict) {
    this.raise(this.start, "'with' in strict mode");
  }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement("with");
  return this.finishNode(node, "WithStatement");
};
pp$8.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement");
};
pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {
    var label = list[i$1];
    if (label.name === maybeName) {
      this.raise(expr.start, "Label '" + maybeName + "' is already declared");
    }
  }
  var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
  for (var i4 = this.labels.length - 1; i4 >= 0; i4--) {
    var label$1 = this.labels[i4];
    if (label$1.statementStart === node.start) {
      label$1.statementStart = this.start;
      label$1.kind = kind;
    } else {
      break;
    }
  }
  this.labels.push({ name: maybeName, kind, statementStart: this.start });
  node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement");
};
pp$8.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement");
};
pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
  if (createNewLexicalScope === void 0)
    createNewLexicalScope = true;
  if (node === void 0)
    node = this.startNode();
  node.body = [];
  this.expect(types$1.braceL);
  if (createNewLexicalScope) {
    this.enterScope(0);
  }
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  if (exitStrict) {
    this.strict = false;
  }
  this.next();
  if (createNewLexicalScope) {
    this.exitScope();
  }
  return this.finishNode(node, "BlockStatement");
};
pp$8.parseFor = function(node, init) {
  node.init = init;
  this.expect(types$1.semi);
  node.test = this.type === types$1.semi ? null : this.parseExpression();
  this.expect(types$1.semi);
  node.update = this.type === types$1.parenR ? null : this.parseExpression();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, "ForStatement");
};
pp$8.parseForIn = function(node, init) {
  var isForIn = this.type === types$1._in;
  this.next();
  if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {
    this.raise(
      init.start,
      (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
    );
  }
  node.left = init;
  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
};
pp$8.parseVar = function(node, isFor, kind) {
  node.declarations = [];
  node.kind = kind;
  for (; ; ) {
    var decl = this.startNode();
    this.parseVarId(decl, kind);
    if (this.eat(types$1.eq)) {
      decl.init = this.parseMaybeAssign(isFor);
    } else if (kind === "const" && !(this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
      this.unexpected();
    } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
      this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
    if (!this.eat(types$1.comma)) {
      break;
    }
  }
  return node;
};
pp$8.parseVarId = function(decl, kind) {
  decl.id = this.parseBindingAtom();
  this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
};
var FUNC_STATEMENT = 1;
var FUNC_HANGING_STATEMENT = 2;
var FUNC_NULLABLE_ID = 4;
pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
    if (this.type === types$1.star && statement & FUNC_HANGING_STATEMENT) {
      this.unexpected();
    }
    node.generator = this.eat(types$1.star);
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  if (statement & FUNC_STATEMENT) {
    node.id = statement & FUNC_NULLABLE_ID && this.type !== types$1.name ? null : this.parseIdent();
    if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {
      this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);
    }
  }
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(node.async, node.generator));
  if (!(statement & FUNC_STATEMENT)) {
    node.id = this.type === types$1.name ? this.parseIdent() : null;
  }
  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody, false, forInit);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");
};
pp$8.parseFunctionParams = function(node) {
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};
pp$8.parseClass = function(node, isStatement) {
  this.next();
  var oldStrict = this.strict;
  this.strict = true;
  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var privateNameMap = this.enterClassBody();
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types$1.braceL);
  while (this.type !== types$1.braceR) {
    var element = this.parseClassElement(node.superClass !== null);
    if (element) {
      classBody.body.push(element);
      if (element.type === "MethodDefinition" && element.kind === "constructor") {
        if (hadConstructor) {
          this.raise(element.start, "Duplicate constructor in the same class");
        }
        hadConstructor = true;
      } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element)) {
        this.raiseRecoverable(element.key.start, "Identifier '#" + element.key.name + "' has already been declared");
      }
    }
  }
  this.strict = oldStrict;
  this.next();
  node.body = this.finishNode(classBody, "ClassBody");
  this.exitClassBody();
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
};
pp$8.parseClassElement = function(constructorAllowsSuper) {
  if (this.eat(types$1.semi)) {
    return null;
  }
  var ecmaVersion = this.options.ecmaVersion;
  var node = this.startNode();
  var keyName = "";
  var isGenerator = false;
  var isAsync = false;
  var kind = "method";
  var isStatic = false;
  if (this.eatContextual("static")) {
    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
      this.parseClassStaticBlock(node);
      return node;
    }
    if (this.isClassElementNameStart() || this.type === types$1.star) {
      isStatic = true;
    } else {
      keyName = "static";
    }
  }
  node.static = isStatic;
  if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
      isAsync = true;
    } else {
      keyName = "async";
    }
  }
  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
    isGenerator = true;
  }
  if (!keyName && !isAsync && !isGenerator) {
    var lastValue = this.value;
    if (this.eatContextual("get") || this.eatContextual("set")) {
      if (this.isClassElementNameStart()) {
        kind = lastValue;
      } else {
        keyName = lastValue;
      }
    }
  }
  if (keyName) {
    node.computed = false;
    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
    node.key.name = keyName;
    this.finishNode(node.key, "Identifier");
  } else {
    this.parseClassElementName(node);
  }
  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
    var isConstructor = !node.static && checkKeyName(node, "constructor");
    var allowsDirectSuper = isConstructor && constructorAllowsSuper;
    if (isConstructor && kind !== "method") {
      this.raise(node.key.start, "Constructor can't have get/set modifier");
    }
    node.kind = isConstructor ? "constructor" : kind;
    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
  } else {
    this.parseClassField(node);
  }
  return node;
};
pp$8.isClassElementNameStart = function() {
  return this.type === types$1.name || this.type === types$1.privateId || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword;
};
pp$8.parseClassElementName = function(element) {
  if (this.type === types$1.privateId) {
    if (this.value === "constructor") {
      this.raise(this.start, "Classes can't have an element named '#constructor'");
    }
    element.computed = false;
    element.key = this.parsePrivateIdent();
  } else {
    this.parsePropertyName(element);
  }
};
pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
  var key2 = method.key;
  if (method.kind === "constructor") {
    if (isGenerator) {
      this.raise(key2.start, "Constructor can't be a generator");
    }
    if (isAsync) {
      this.raise(key2.start, "Constructor can't be an async method");
    }
  } else if (method.static && checkKeyName(method, "prototype")) {
    this.raise(key2.start, "Classes may not have a static property named prototype");
  }
  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
  if (method.kind === "get" && value.params.length !== 0) {
    this.raiseRecoverable(value.start, "getter should have no params");
  }
  if (method.kind === "set" && value.params.length !== 1) {
    this.raiseRecoverable(value.start, "setter should have exactly one param");
  }
  if (method.kind === "set" && value.params[0].type === "RestElement") {
    this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params");
  }
  return this.finishNode(method, "MethodDefinition");
};
pp$8.parseClassField = function(field) {
  if (checkKeyName(field, "constructor")) {
    this.raise(field.key.start, "Classes can't have a field named 'constructor'");
  } else if (field.static && checkKeyName(field, "prototype")) {
    this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
  }
  if (this.eat(types$1.eq)) {
    var scope = this.currentThisScope();
    var inClassFieldInit = scope.inClassFieldInit;
    scope.inClassFieldInit = true;
    field.value = this.parseMaybeAssign();
    scope.inClassFieldInit = inClassFieldInit;
  } else {
    field.value = null;
  }
  this.semicolon();
  return this.finishNode(field, "PropertyDefinition");
};
pp$8.parseClassStaticBlock = function(node) {
  node.body = [];
  var oldLabels = this.labels;
  this.labels = [];
  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  this.next();
  this.exitScope();
  this.labels = oldLabels;
  return this.finishNode(node, "StaticBlock");
};
pp$8.parseClassId = function(node, isStatement) {
  if (this.type === types$1.name) {
    node.id = this.parseIdent();
    if (isStatement) {
      this.checkLValSimple(node.id, BIND_LEXICAL, false);
    }
  } else {
    if (isStatement === true) {
      this.unexpected();
    }
    node.id = null;
  }
};
pp$8.parseClassSuper = function(node) {
  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;
};
pp$8.enterClassBody = function() {
  var element = { declared: /* @__PURE__ */ Object.create(null), used: [] };
  this.privateNameStack.push(element);
  return element.declared;
};
pp$8.exitClassBody = function() {
  var ref2 = this.privateNameStack.pop();
  var declared = ref2.declared;
  var used = ref2.used;
  var len = this.privateNameStack.length;
  var parent = len === 0 ? null : this.privateNameStack[len - 1];
  for (var i4 = 0; i4 < used.length; ++i4) {
    var id2 = used[i4];
    if (!hasOwn(declared, id2.name)) {
      if (parent) {
        parent.used.push(id2);
      } else {
        this.raiseRecoverable(id2.start, "Private field '#" + id2.name + "' must be declared in an enclosing class");
      }
    }
  }
};
function isPrivateNameConflicted(privateNameMap, element) {
  var name = element.key.name;
  var curr = privateNameMap[name];
  var next = "true";
  if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {
    next = (element.static ? "s" : "i") + element.kind;
  }
  if (curr === "iget" && next === "iset" || curr === "iset" && next === "iget" || curr === "sget" && next === "sset" || curr === "sset" && next === "sget") {
    privateNameMap[name] = "true";
    return false;
  } else if (!curr) {
    privateNameMap[name] = next;
    return false;
  } else {
    return true;
  }
}
function checkKeyName(node, name) {
  var computed = node.computed;
  var key2 = node.key;
  return !computed && (key2.type === "Identifier" && key2.name === name || key2.type === "Literal" && key2.value === name);
}
pp$8.parseExport = function(node, exports2) {
  this.next();
  if (this.eat(types$1.star)) {
    if (this.options.ecmaVersion >= 11) {
      if (this.eatContextual("as")) {
        node.exported = this.parseModuleExportName();
        this.checkExport(exports2, node.exported, this.lastTokStart);
      } else {
        node.exported = null;
      }
    }
    this.expectContextual("from");
    if (this.type !== types$1.string) {
      this.unexpected();
    }
    node.source = this.parseExprAtom();
    this.semicolon();
    return this.finishNode(node, "ExportAllDeclaration");
  }
  if (this.eat(types$1._default)) {
    this.checkExport(exports2, "default", this.lastTokStart);
    var isAsync;
    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
      var fNode = this.startNode();
      this.next();
      if (isAsync) {
        this.next();
      }
      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);
    } else if (this.type === types$1._class) {
      var cNode = this.startNode();
      node.declaration = this.parseClass(cNode, "nullableID");
    } else {
      node.declaration = this.parseMaybeAssign();
      this.semicolon();
    }
    return this.finishNode(node, "ExportDefaultDeclaration");
  }
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseStatement(null);
    if (node.declaration.type === "VariableDeclaration") {
      this.checkVariableExport(exports2, node.declaration.declarations);
    } else {
      this.checkExport(exports2, node.declaration.id, node.declaration.id.start);
    }
    node.specifiers = [];
    node.source = null;
  } else {
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports2);
    if (this.eatContextual("from")) {
      if (this.type !== types$1.string) {
        this.unexpected();
      }
      node.source = this.parseExprAtom();
    } else {
      for (var i4 = 0, list = node.specifiers; i4 < list.length; i4 += 1) {
        var spec = list[i4];
        this.checkUnreserved(spec.local);
        this.checkLocalExport(spec.local);
        if (spec.local.type === "Literal") {
          this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
        }
      }
      node.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration");
};
pp$8.checkExport = function(exports2, name, pos) {
  if (!exports2) {
    return;
  }
  if (typeof name !== "string") {
    name = name.type === "Identifier" ? name.name : name.value;
  }
  if (hasOwn(exports2, name)) {
    this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
  }
  exports2[name] = true;
};
pp$8.checkPatternExport = function(exports2, pat) {
  var type = pat.type;
  if (type === "Identifier") {
    this.checkExport(exports2, pat, pat.start);
  } else if (type === "ObjectPattern") {
    for (var i4 = 0, list = pat.properties; i4 < list.length; i4 += 1) {
      var prop = list[i4];
      this.checkPatternExport(exports2, prop);
    }
  } else if (type === "ArrayPattern") {
    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];
      if (elt) {
        this.checkPatternExport(exports2, elt);
      }
    }
  } else if (type === "Property") {
    this.checkPatternExport(exports2, pat.value);
  } else if (type === "AssignmentPattern") {
    this.checkPatternExport(exports2, pat.left);
  } else if (type === "RestElement") {
    this.checkPatternExport(exports2, pat.argument);
  } else if (type === "ParenthesizedExpression") {
    this.checkPatternExport(exports2, pat.expression);
  }
};
pp$8.checkVariableExport = function(exports2, decls) {
  if (!exports2) {
    return;
  }
  for (var i4 = 0, list = decls; i4 < list.length; i4 += 1) {
    var decl = list[i4];
    this.checkPatternExport(exports2, decl.id);
  }
};
pp$8.shouldParseExportStatement = function() {
  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
};
pp$8.parseExportSpecifiers = function(exports2) {
  var nodes = [], first = true;
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var node = this.startNode();
    node.local = this.parseModuleExportName();
    node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
    this.checkExport(
      exports2,
      node.exported,
      node.exported.start
    );
    nodes.push(this.finishNode(node, "ExportSpecifier"));
  }
  return nodes;
};
pp$8.parseImport = function(node) {
  this.next();
  if (this.type === types$1.string) {
    node.specifiers = empty$1;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
  }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration");
};
pp$8.parseImportSpecifiers = function() {
  var nodes = [], first = true;
  if (this.type === types$1.name) {
    var node = this.startNode();
    node.local = this.parseIdent();
    this.checkLValSimple(node.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
    if (!this.eat(types$1.comma)) {
      return nodes;
    }
  }
  if (this.type === types$1.star) {
    var node$1 = this.startNode();
    this.next();
    this.expectContextual("as");
    node$1.local = this.parseIdent();
    this.checkLValSimple(node$1.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
    return nodes;
  }
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var node$2 = this.startNode();
    node$2.imported = this.parseModuleExportName();
    if (this.eatContextual("as")) {
      node$2.local = this.parseIdent();
    } else {
      this.checkUnreserved(node$2.imported);
      node$2.local = node$2.imported;
    }
    this.checkLValSimple(node$2.local, BIND_LEXICAL);
    nodes.push(this.finishNode(node$2, "ImportSpecifier"));
  }
  return nodes;
};
pp$8.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
    var stringLiteral = this.parseLiteral(this.value);
    if (loneSurrogate.test(stringLiteral.value)) {
      this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
    }
    return stringLiteral;
  }
  return this.parseIdent(true);
};
pp$8.adaptDirectivePrologue = function(statements) {
  for (var i4 = 0; i4 < statements.length && this.isDirectiveCandidate(statements[i4]); ++i4) {
    statements[i4].directive = statements[i4].expression.raw.slice(1, -1);
  }
};
pp$8.isDirectiveCandidate = function(statement) {
  return this.options.ecmaVersion >= 5 && statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === '"' || this.input[statement.start] === "'");
};
var pp$7 = Parser.prototype;
pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
      case "Identifier":
        if (this.inAsync && node.name === "await") {
          this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
        }
        break;
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
      case "RestElement":
        break;
      case "ObjectExpression":
        node.type = "ObjectPattern";
        if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
          var prop = list[i4];
          this.toAssignable(prop, isBinding);
          if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
            this.raise(prop.argument.start, "Unexpected token");
          }
        }
        break;
      case "Property":
        if (node.kind !== "init") {
          this.raise(node.key.start, "Object pattern can't contain getter or setter");
        }
        this.toAssignable(node.value, isBinding);
        break;
      case "ArrayExpression":
        node.type = "ArrayPattern";
        if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        this.toAssignableList(node.elements, isBinding);
        break;
      case "SpreadElement":
        node.type = "RestElement";
        this.toAssignable(node.argument, isBinding);
        if (node.argument.type === "AssignmentPattern") {
          this.raise(node.argument.start, "Rest elements cannot have a default value");
        }
        break;
      case "AssignmentExpression":
        if (node.operator !== "=") {
          this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
        }
        node.type = "AssignmentPattern";
        delete node.operator;
        this.toAssignable(node.left, isBinding);
        break;
      case "ParenthesizedExpression":
        this.toAssignable(node.expression, isBinding, refDestructuringErrors);
        break;
      case "ChainExpression":
        this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        if (!isBinding) {
          break;
        }
      default:
        this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) {
    this.checkPatternErrors(refDestructuringErrors, true);
  }
  return node;
};
pp$7.toAssignableList = function(exprList, isBinding) {
  var end = exprList.length;
  for (var i4 = 0; i4 < end; i4++) {
    var elt = exprList[i4];
    if (elt) {
      this.toAssignable(elt, isBinding);
    }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
      this.unexpected(last.argument.start);
    }
  }
  return exprList;
};
pp$7.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement");
};
pp$7.parseRestBinding = function() {
  var node = this.startNode();
  this.next();
  if (this.options.ecmaVersion === 6 && this.type !== types$1.name) {
    this.unexpected();
  }
  node.argument = this.parseBindingAtom();
  return this.finishNode(node, "RestElement");
};
pp$7.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
      case types$1.bracketL:
        var node = this.startNode();
        this.next();
        node.elements = this.parseBindingList(types$1.bracketR, true, true);
        return this.finishNode(node, "ArrayPattern");
      case types$1.braceL:
        return this.parseObj(true);
    }
  }
  return this.parseIdent();
};
pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) {
      first = false;
    } else {
      this.expect(types$1.comma);
    }
    if (allowEmpty && this.type === types$1.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this.afterTrailingComma(close)) {
      break;
    } else if (this.type === types$1.ellipsis) {
      var rest = this.parseRestBinding();
      this.parseBindingListItem(rest);
      elts.push(rest);
      if (this.type === types$1.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      this.expect(close);
      break;
    } else {
      var elem = this.parseMaybeDefault(this.start, this.startLoc);
      this.parseBindingListItem(elem);
      elts.push(elem);
    }
  }
  return elts;
};
pp$7.parseBindingListItem = function(param) {
  return param;
};
pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) {
    return left;
  }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern");
};
pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  var isBind = bindingType !== BIND_NONE;
  switch (expr.type) {
    case "Identifier":
      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
        this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
      }
      if (isBind) {
        if (bindingType === BIND_LEXICAL && expr.name === "let") {
          this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
        }
        if (checkClashes) {
          if (hasOwn(checkClashes, expr.name)) {
            this.raiseRecoverable(expr.start, "Argument name clash");
          }
          checkClashes[expr.name] = true;
        }
        if (bindingType !== BIND_OUTSIDE) {
          this.declareName(expr.name, bindingType, expr.start);
        }
      }
      break;
    case "ChainExpression":
      this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
      break;
    case "MemberExpression":
      if (isBind) {
        this.raiseRecoverable(expr.start, "Binding member expression");
      }
      break;
    case "ParenthesizedExpression":
      if (isBind) {
        this.raiseRecoverable(expr.start, "Binding parenthesized expression");
      }
      return this.checkLValSimple(expr.expression, bindingType, checkClashes);
    default:
      this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
  }
};
pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  switch (expr.type) {
    case "ObjectPattern":
      for (var i4 = 0, list = expr.properties; i4 < list.length; i4 += 1) {
        var prop = list[i4];
        this.checkLValInnerPattern(prop, bindingType, checkClashes);
      }
      break;
    case "ArrayPattern":
      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
        var elem = list$1[i$1];
        if (elem) {
          this.checkLValInnerPattern(elem, bindingType, checkClashes);
        }
      }
      break;
    default:
      this.checkLValSimple(expr, bindingType, checkClashes);
  }
};
pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
  if (bindingType === void 0)
    bindingType = BIND_NONE;
  switch (expr.type) {
    case "Property":
      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
      break;
    case "AssignmentPattern":
      this.checkLValPattern(expr.left, bindingType, checkClashes);
      break;
    case "RestElement":
      this.checkLValPattern(expr.argument, bindingType, checkClashes);
      break;
    default:
      this.checkLValPattern(expr, bindingType, checkClashes);
  }
};
var TokContext = function TokContext2(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};
var types = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function(p3) {
    return p3.tryReadTemplateToken();
  }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};
var pp$6 = Parser.prototype;
pp$6.initialContext = function() {
  return [types.b_stat];
};
pp$6.curContext = function() {
  return this.context[this.context.length - 1];
};
pp$6.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types.f_expr || parent === types.f_stat) {
    return true;
  }
  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr)) {
    return !parent.isExpr;
  }
  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed) {
    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
  }
  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {
    return true;
  }
  if (prevType === types$1.braceL) {
    return parent === types.b_stat;
  }
  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {
    return false;
  }
  return !this.exprAllowed;
};
pp$6.inGeneratorContext = function() {
  for (var i4 = this.context.length - 1; i4 >= 1; i4--) {
    var context = this.context[i4];
    if (context.token === "function") {
      return context.generator;
    }
  }
  return false;
};
pp$6.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType === types$1.dot) {
    this.exprAllowed = false;
  } else if (update = type.updateContext) {
    update.call(this, prevType);
  } else {
    this.exprAllowed = type.beforeExpr;
  }
};
pp$6.overrideContext = function(tokenCtx) {
  if (this.curContext() !== tokenCtx) {
    this.context[this.context.length - 1] = tokenCtx;
  }
};
types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = true;
    return;
  }
  var out = this.context.pop();
  if (out === types.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};
types$1.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);
  this.exprAllowed = true;
};
types$1.dollarBraceL.updateContext = function() {
  this.context.push(types.b_tmpl);
  this.exprAllowed = true;
};
types$1.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
  this.context.push(statementParens ? types.p_stat : types.p_expr);
  this.exprAllowed = true;
};
types$1.incDec.updateContext = function() {
};
types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types$1._else && !(prevType === types$1.semi && this.curContext() !== types.p_stat) && !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {
    this.context.push(types.f_expr);
  } else {
    this.context.push(types.f_stat);
  }
  this.exprAllowed = false;
};
types$1.backQuote.updateContext = function() {
  if (this.curContext() === types.q_tmpl) {
    this.context.pop();
  } else {
    this.context.push(types.q_tmpl);
  }
  this.exprAllowed = false;
};
types$1.star.updateContext = function(prevType) {
  if (prevType === types$1._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types.f_expr) {
      this.context[index] = types.f_expr_gen;
    } else {
      this.context[index] = types.f_gen;
    }
  }
  this.exprAllowed = true;
};
types$1.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
    if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
      allowed = true;
    }
  }
  this.exprAllowed = allowed;
};
var pp$5 = Parser.prototype;
pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
    return;
  }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
    return;
  }
  var key2 = prop.key;
  var name;
  switch (key2.type) {
    case "Identifier":
      name = key2.name;
      break;
    case "Literal":
      name = String(key2.value);
      break;
    default:
      return;
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors) {
          if (refDestructuringErrors.doubleProto < 0) {
            refDestructuringErrors.doubleProto = key2.start;
          }
        } else {
          this.raiseRecoverable(key2.start, "Redefinition of __proto__ property");
        }
      }
      propHash.proto = true;
    }
    return;
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition) {
      this.raiseRecoverable(key2.start, "Redefinition of property");
    }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};
pp$5.parseExpression = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
  if (this.type === types$1.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types$1.comma)) {
      node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));
    }
    return this.finishNode(node, "SequenceExpression");
  }
  return expr;
};
pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
  if (this.isContextual("yield")) {
    if (this.inGenerator) {
      return this.parseYield(forInit);
    } else {
      this.exprAllowed = false;
    }
  }
  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    oldDoubleProto = refDestructuringErrors.doubleProto;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors();
    ownDestructuringErrors = true;
  }
  var startPos = this.start, startLoc = this.startLoc;
  if (this.type === types$1.parenL || this.type === types$1.name) {
    this.potentialArrowAt = this.start;
    this.potentialArrowInForAwait = forInit === "await";
  }
  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
  if (afterLeftParse) {
    left = afterLeftParse.call(this, left, startPos, startLoc);
  }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    if (this.type === types$1.eq) {
      left = this.toAssignable(left, false, refDestructuringErrors);
    }
    if (!ownDestructuringErrors) {
      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
    }
    if (refDestructuringErrors.shorthandAssign >= left.start) {
      refDestructuringErrors.shorthandAssign = -1;
    }
    if (this.type === types$1.eq) {
      this.checkLValPattern(left);
    } else {
      this.checkLValSimple(left);
    }
    node.left = left;
    this.next();
    node.right = this.parseMaybeAssign(forInit);
    if (oldDoubleProto > -1) {
      refDestructuringErrors.doubleProto = oldDoubleProto;
    }
    return this.finishNode(node, "AssignmentExpression");
  } else {
    if (ownDestructuringErrors) {
      this.checkExpressionErrors(refDestructuringErrors, true);
    }
  }
  if (oldParenAssign > -1) {
    refDestructuringErrors.parenthesizedAssign = oldParenAssign;
  }
  if (oldTrailingComma > -1) {
    refDestructuringErrors.trailingComma = oldTrailingComma;
  }
  return left;
};
pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(forInit, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) {
    return expr;
  }
  if (this.eat(types$1.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types$1.colon);
    node.alternate = this.parseMaybeAssign(forInit);
    return this.finishNode(node, "ConditionalExpression");
  }
  return expr;
};
pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
  if (this.checkExpressionErrors(refDestructuringErrors)) {
    return expr;
  }
  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);
};
pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
  var prec = this.type.binop;
  if (prec != null && (!forInit || this.type !== types$1._in)) {
    if (prec > minPrec) {
      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
      var coalesce = this.type === types$1.coalesce;
      if (coalesce) {
        prec = types$1.logicalAND.binop;
      }
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
      if (logical && this.type === types$1.coalesce || coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND)) {
        this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
      }
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);
    }
  }
  return left;
};
pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  if (right.type === "PrivateIdentifier") {
    this.raise(right.start, "Private identifier can only be left side of binary expression");
  }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
};
pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && this.canAwait) {
    expr = this.parseAwait(forInit);
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types$1.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true, update, forInit);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) {
      this.checkLValSimple(node.argument);
    } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
      this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
    } else if (node.operator === "delete" && isPrivateFieldAccess(node.argument)) {
      this.raiseRecoverable(node.start, "Private fields can not be deleted");
    } else {
      sawUnary = true;
    }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else if (!sawUnary && this.type === types$1.privateId) {
    if (forInit || this.privateNameStack.length === 0) {
      this.unexpected();
    }
    expr = this.parsePrivateIdent();
    if (this.type !== types$1._in) {
      this.unexpected();
    }
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
    if (this.checkExpressionErrors(refDestructuringErrors)) {
      return expr;
    }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this.startNodeAt(startPos, startLoc);
      node$1.operator = this.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this.checkLValSimple(expr);
      this.next();
      expr = this.finishNode(node$1, "UpdateExpression");
    }
  }
  if (!incDec && this.eat(types$1.starstar)) {
    if (sawUnary) {
      this.unexpected(this.lastTokStart);
    } else {
      return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false);
    }
  } else {
    return expr;
  }
};
function isPrivateFieldAccess(node) {
  return node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" || node.type === "ChainExpression" && isPrivateFieldAccess(node.expression);
}
pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors, forInit);
  if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
    return expr;
  }
  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) {
      refDestructuringErrors.parenthesizedAssign = -1;
    }
    if (refDestructuringErrors.parenthesizedBind >= result.start) {
      refDestructuringErrors.parenthesizedBind = -1;
    }
    if (refDestructuringErrors.trailingComma >= result.start) {
      refDestructuringErrors.trailingComma = -1;
    }
  }
  return result;
};
pp$5.parseSubscripts = function(base2, startPos, startLoc, noCalls, forInit) {
  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base2.type === "Identifier" && base2.name === "async" && this.lastTokEnd === base2.end && !this.canInsertSemicolon() && base2.end - base2.start === 5 && this.potentialArrowAt === base2.start;
  var optionalChained = false;
  while (true) {
    var element = this.parseSubscript(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);
    if (element.optional) {
      optionalChained = true;
    }
    if (element === base2 || element.type === "ArrowFunctionExpression") {
      if (optionalChained) {
        var chainNode = this.startNodeAt(startPos, startLoc);
        chainNode.expression = element;
        element = this.finishNode(chainNode, "ChainExpression");
      }
      return element;
    }
    base2 = element;
  }
};
pp$5.parseSubscript = function(base2, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
  var optionalSupported = this.options.ecmaVersion >= 11;
  var optional = optionalSupported && this.eat(types$1.questionDot);
  if (noCalls && optional) {
    this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
  }
  var computed = this.eat(types$1.bracketL);
  if (computed || optional && this.type !== types$1.parenL && this.type !== types$1.backQuote || this.eat(types$1.dot)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.object = base2;
    if (computed) {
      node.property = this.parseExpression();
      this.expect(types$1.bracketR);
    } else if (this.type === types$1.privateId && base2.type !== "Super") {
      node.property = this.parsePrivateIdent();
    } else {
      node.property = this.parseIdent(this.options.allowReserved !== "never");
    }
    node.computed = !!computed;
    if (optionalSupported) {
      node.optional = optional;
    }
    base2 = this.finishNode(node, "MemberExpression");
  } else if (!noCalls && this.eat(types$1.parenL)) {
    var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      if (this.awaitIdentPos > 0) {
        this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
      }
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
    var node$1 = this.startNodeAt(startPos, startLoc);
    node$1.callee = base2;
    node$1.arguments = exprList;
    if (optionalSupported) {
      node$1.optional = optional;
    }
    base2 = this.finishNode(node$1, "CallExpression");
  } else if (this.type === types$1.backQuote) {
    if (optional || optionalChained) {
      this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    }
    var node$2 = this.startNodeAt(startPos, startLoc);
    node$2.tag = base2;
    node$2.quasi = this.parseTemplate({ isTagged: true });
    base2 = this.finishNode(node$2, "TaggedTemplateExpression");
  }
  return base2;
};
pp$5.parseExprAtom = function(refDestructuringErrors, forInit) {
  if (this.type === types$1.slash) {
    this.readRegexp();
  }
  var node, canBeArrow = this.potentialArrowAt === this.start;
  switch (this.type) {
    case types$1._super:
      if (!this.allowSuper) {
        this.raise(this.start, "'super' keyword outside a method");
      }
      node = this.startNode();
      this.next();
      if (this.type === types$1.parenL && !this.allowDirectSuper) {
        this.raise(node.start, "super() call outside constructor of a subclass");
      }
      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL) {
        this.unexpected();
      }
      return this.finishNode(node, "Super");
    case types$1._this:
      node = this.startNode();
      this.next();
      return this.finishNode(node, "ThisExpression");
    case types$1.name:
      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
      var id2 = this.parseIdent(false);
      if (this.options.ecmaVersion >= 8 && !containsEsc && id2.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
        this.overrideContext(types.f_expr);
        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);
      }
      if (canBeArrow && !this.canInsertSemicolon()) {
        if (this.eat(types$1.arrow)) {
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id2], false, forInit);
        }
        if (this.options.ecmaVersion >= 8 && id2.name === "async" && this.type === types$1.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
          id2 = this.parseIdent(false);
          if (this.canInsertSemicolon() || !this.eat(types$1.arrow)) {
            this.unexpected();
          }
          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id2], true, forInit);
        }
      }
      return id2;
    case types$1.regexp:
      var value = this.value;
      node = this.parseLiteral(value.value);
      node.regex = { pattern: value.pattern, flags: value.flags };
      return node;
    case types$1.num:
    case types$1.string:
      return this.parseLiteral(this.value);
    case types$1._null:
    case types$1._true:
    case types$1._false:
      node = this.startNode();
      node.value = this.type === types$1._null ? null : this.type === types$1._true;
      node.raw = this.type.keyword;
      this.next();
      return this.finishNode(node, "Literal");
    case types$1.parenL:
      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
      if (refDestructuringErrors) {
        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
          refDestructuringErrors.parenthesizedAssign = start;
        }
        if (refDestructuringErrors.parenthesizedBind < 0) {
          refDestructuringErrors.parenthesizedBind = start;
        }
      }
      return expr;
    case types$1.bracketL:
      node = this.startNode();
      this.next();
      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
      return this.finishNode(node, "ArrayExpression");
    case types$1.braceL:
      this.overrideContext(types.b_expr);
      return this.parseObj(false, refDestructuringErrors);
    case types$1._function:
      node = this.startNode();
      this.next();
      return this.parseFunction(node, 0);
    case types$1._class:
      return this.parseClass(this.startNode(), false);
    case types$1._new:
      return this.parseNew();
    case types$1.backQuote:
      return this.parseTemplate();
    case types$1._import:
      if (this.options.ecmaVersion >= 11) {
        return this.parseExprImport();
      } else {
        return this.unexpected();
      }
    default:
      this.unexpected();
  }
};
pp$5.parseExprImport = function() {
  var node = this.startNode();
  if (this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword import");
  }
  var meta = this.parseIdent(true);
  switch (this.type) {
    case types$1.parenL:
      return this.parseDynamicImport(node);
    case types$1.dot:
      node.meta = meta;
      return this.parseImportMeta(node);
    default:
      this.unexpected();
  }
};
pp$5.parseDynamicImport = function(node) {
  this.next();
  node.source = this.parseMaybeAssign();
  if (!this.eat(types$1.parenR)) {
    var errorPos = this.start;
    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
      this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
    } else {
      this.unexpected(errorPos);
    }
  }
  return this.finishNode(node, "ImportExpression");
};
pp$5.parseImportMeta = function(node) {
  this.next();
  var containsEsc = this.containsEsc;
  node.property = this.parseIdent(true);
  if (node.property.name !== "meta") {
    this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'");
  }
  if (containsEsc) {
    this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters");
  }
  if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere) {
    this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module");
  }
  return this.finishNode(node, "MetaProperty");
};
pp$5.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
    node.bigint = node.raw.slice(0, -1).replace(/_/g, "");
  }
  this.next();
  return this.finishNode(node, "Literal");
};
pp$5.parseParenExpression = function() {
  this.expect(types$1.parenL);
  var val = this.parseExpression();
  this.expect(types$1.parenR);
  return val;
};
pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();
    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    while (this.type !== types$1.parenR) {
      first ? first = false : this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
        lastIsComma = true;
        break;
      } else if (this.type === types$1.ellipsis) {
        spreadStart = this.start;
        exprList.push(this.parseParenItem(this.parseRestBinding()));
        if (this.type === types$1.comma) {
          this.raise(this.start, "Comma is not permitted after the rest element");
        }
        break;
      } else {
        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
      }
    }
    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
    this.expect(types$1.parenR);
    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList, forInit);
    }
    if (!exprList.length || lastIsComma) {
      this.unexpected(this.lastTokStart);
    }
    if (spreadStart) {
      this.unexpected(spreadStart);
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }
  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression");
  } else {
    return val;
  }
};
pp$5.parseParenItem = function(item) {
  return item;
};
pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);
};
var empty = [];
pp$5.parseNew = function() {
  if (this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword new");
  }
  var node = this.startNode();
  var meta = this.parseIdent(true);
  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {
    node.meta = meta;
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target") {
      this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'");
    }
    if (containsEsc) {
      this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters");
    }
    if (!this.allowNewDotTarget) {
      this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block");
    }
    return this.finishNode(node, "MetaProperty");
  }
  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;
  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);
  if (isImport && node.callee.type === "ImportExpression") {
    this.raise(startPos, "Cannot use new with import()");
  }
  if (this.eat(types$1.parenL)) {
    node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false);
  } else {
    node.arguments = empty;
  }
  return this.finishNode(node, "NewExpression");
};
pp$5.parseTemplateElement = function(ref2) {
  var isTagged = ref2.isTagged;
  var elem = this.startNode();
  if (this.type === types$1.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value,
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types$1.backQuote;
  return this.finishNode(elem, "TemplateElement");
};
pp$5.parseTemplate = function(ref2) {
  if (ref2 === void 0)
    ref2 = {};
  var isTagged = ref2.isTagged;
  if (isTagged === void 0)
    isTagged = false;
  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({ isTagged });
  node.quasis = [curElt];
  while (!curElt.tail) {
    if (this.type === types$1.eof) {
      this.raise(this.pos, "Unterminated template literal");
    }
    this.expect(types$1.dollarBraceL);
    node.expressions.push(this.parseExpression());
    this.expect(types$1.braceR);
    node.quasis.push(curElt = this.parseTemplateElement({ isTagged }));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral");
};
pp$5.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types$1.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
};
pp$5.parseObj = function(isPattern, refDestructuringErrors) {
  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) {
        break;
      }
    } else {
      first = false;
    }
    var prop = this.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) {
      this.checkPropClash(prop, propHash, refDestructuringErrors);
    }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
};
pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types$1.comma) {
        this.raise(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement");
    }
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    return this.finishNode(prop, "SpreadElement");
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern) {
      isGenerator = this.eat(types$1.star);
    }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
    this.parsePropertyName(prop);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property");
};
pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types$1.colon) {
    this.unexpected();
  }
  if (this.eat(types$1.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
    if (isPattern) {
      this.unexpected();
    }
    prop.kind = "init";
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
    if (isGenerator || isAsync) {
      this.unexpected();
    }
    prop.kind = prop.key.name;
    this.parsePropertyName(prop);
    prop.value = this.parseMethod(false);
    var paramCount = prop.kind === "get" ? 0 : 1;
    if (prop.value.params.length !== paramCount) {
      var start = prop.value.start;
      if (prop.kind === "get") {
        this.raiseRecoverable(start, "getter should have no params");
      } else {
        this.raiseRecoverable(start, "setter should have exactly one param");
      }
    } else {
      if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
        this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
      }
    }
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    if (isGenerator || isAsync) {
      this.unexpected();
    }
    this.checkUnreserved(prop.key);
    if (prop.key.name === "await" && !this.awaitIdentPos) {
      this.awaitIdentPos = startPos;
    }
    prop.kind = "init";
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else if (this.type === types$1.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0) {
        refDestructuringErrors.shorthandAssign = this.start;
      }
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else {
      prop.value = this.copyNode(prop.key);
    }
    prop.shorthand = true;
  } else {
    this.unexpected();
  }
};
pp$5.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types$1.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types$1.bracketR);
      return prop.key;
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
};
pp$5.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) {
    node.generator = node.expression = false;
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = false;
  }
};
pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.initFunction(node);
  if (this.options.ecmaVersion >= 6) {
    node.generator = isGenerator;
  }
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false, true, false);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "FunctionExpression");
};
pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8) {
    node.async = !!isAsync;
  }
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true, false, forInit);
  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "ArrowFunctionExpression");
};
pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
  var isExpression = isArrowFunction && this.type !== types$1.braceL;
  var oldStrict = this.strict, useStrict = false;
  if (isExpression) {
    node.body = this.parseMaybeAssign(forInit);
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      if (useStrict && nonSimple) {
        this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
      }
    }
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) {
      this.strict = true;
    }
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
    if (this.strict && node.id) {
      this.checkLValSimple(node.id, BIND_OUTSIDE);
    }
    node.body = this.parseBlock(false, void 0, useStrict && !oldStrict);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitScope();
};
pp$5.isSimpleParamList = function(params) {
  for (var i4 = 0, list = params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    if (param.type !== "Identifier") {
      return false;
    }
  }
  return true;
};
pp$5.checkParams = function(node, allowDuplicates) {
  var nameHash = /* @__PURE__ */ Object.create(null);
  for (var i4 = 0, list = node.params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
  }
};
pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(close)) {
        break;
      }
    } else {
      first = false;
    }
    var elt = void 0;
    if (allowEmpty && this.type === types$1.comma) {
      elt = null;
    } else if (this.type === types$1.ellipsis) {
      elt = this.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0) {
        refDestructuringErrors.trailingComma = this.start;
      }
    } else {
      elt = this.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts;
};
pp$5.checkUnreserved = function(ref2) {
  var start = ref2.start;
  var end = ref2.end;
  var name = ref2.name;
  if (this.inGenerator && name === "yield") {
    this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator");
  }
  if (this.inAsync && name === "await") {
    this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function");
  }
  if (this.currentThisScope().inClassFieldInit && name === "arguments") {
    this.raiseRecoverable(start, "Cannot use 'arguments' in class field initializer");
  }
  if (this.inClassStaticBlock && (name === "arguments" || name === "await")) {
    this.raise(start, "Cannot use " + name + " in class static initialization block");
  }
  if (this.keywords.test(name)) {
    this.raise(start, "Unexpected keyword '" + name + "'");
  }
  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf("\\") !== -1) {
    return;
  }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await") {
      this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function");
    }
    this.raiseRecoverable(start, "The keyword '" + name + "' is reserved");
  }
};
pp$5.parseIdent = function(liberal) {
  var node = this.startNode();
  if (this.type === types$1.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;
    if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
  } else {
    this.unexpected();
  }
  this.next(!!liberal);
  this.finishNode(node, "Identifier");
  if (!liberal) {
    this.checkUnreserved(node);
    if (node.name === "await" && !this.awaitIdentPos) {
      this.awaitIdentPos = node.start;
    }
  }
  return node;
};
pp$5.parsePrivateIdent = function() {
  var node = this.startNode();
  if (this.type === types$1.privateId) {
    node.name = this.value;
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "PrivateIdentifier");
  if (this.privateNameStack.length === 0) {
    this.raise(node.start, "Private field '#" + node.name + "' must be declared in an enclosing class");
  } else {
    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
  }
  return node;
};
pp$5.parseYield = function(forInit) {
  if (!this.yieldPos) {
    this.yieldPos = this.start;
  }
  var node = this.startNode();
  this.next();
  if (this.type === types$1.semi || this.canInsertSemicolon() || this.type !== types$1.star && !this.type.startsExpr) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types$1.star);
    node.argument = this.parseMaybeAssign(forInit);
  }
  return this.finishNode(node, "YieldExpression");
};
pp$5.parseAwait = function(forInit) {
  if (!this.awaitPos) {
    this.awaitPos = this.start;
  }
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true, false, forInit);
  return this.finishNode(node, "AwaitExpression");
};
var pp$4 = Parser.prototype;
pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  var err = new SyntaxError(message);
  err.pos = pos;
  err.loc = loc;
  err.raisedAt = this.pos;
  throw err;
};
pp$4.raiseRecoverable = pp$4.raise;
pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart);
  }
};
var pp$3 = Parser.prototype;
var Scope = function Scope2(flags) {
  this.flags = flags;
  this.var = [];
  this.lexical = [];
  this.functions = [];
  this.inClassFieldInit = false;
};
pp$3.enterScope = function(flags) {
  this.scopeStack.push(new Scope(flags));
};
pp$3.exitScope = function() {
  this.scopeStack.pop();
};
pp$3.treatFunctionsAsVarInScope = function(scope) {
  return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;
};
pp$3.declareName = function(name, bindingType, pos) {
  var redeclared = false;
  if (bindingType === BIND_LEXICAL) {
    var scope = this.currentScope();
    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
    scope.lexical.push(name);
    if (this.inModule && scope.flags & SCOPE_TOP) {
      delete this.undefinedExports[name];
    }
  } else if (bindingType === BIND_SIMPLE_CATCH) {
    var scope$1 = this.currentScope();
    scope$1.lexical.push(name);
  } else if (bindingType === BIND_FUNCTION) {
    var scope$2 = this.currentScope();
    if (this.treatFunctionsAsVar) {
      redeclared = scope$2.lexical.indexOf(name) > -1;
    } else {
      redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
    }
    scope$2.functions.push(name);
  } else {
    for (var i4 = this.scopeStack.length - 1; i4 >= 0; --i4) {
      var scope$3 = this.scopeStack[i4];
      if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
        redeclared = true;
        break;
      }
      scope$3.var.push(name);
      if (this.inModule && scope$3.flags & SCOPE_TOP) {
        delete this.undefinedExports[name];
      }
      if (scope$3.flags & SCOPE_VAR) {
        break;
      }
    }
  }
  if (redeclared) {
    this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
  }
};
pp$3.checkLocalExport = function(id2) {
  if (this.scopeStack[0].lexical.indexOf(id2.name) === -1 && this.scopeStack[0].var.indexOf(id2.name) === -1) {
    this.undefinedExports[id2.name] = id2;
  }
};
pp$3.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1];
};
pp$3.currentVarScope = function() {
  for (var i4 = this.scopeStack.length - 1; ; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.flags & SCOPE_VAR) {
      return scope;
    }
  }
};
pp$3.currentThisScope = function() {
  for (var i4 = this.scopeStack.length - 1; ; i4--) {
    var scope = this.scopeStack[i4];
    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {
      return scope;
    }
  }
};
var Node = function Node2(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations) {
    this.loc = new SourceLocation(parser, loc);
  }
  if (parser.options.directSourceFile) {
    this.sourceFile = parser.options.directSourceFile;
  }
  if (parser.options.ranges) {
    this.range = [pos, 0];
  }
};
var pp$2 = Parser.prototype;
pp$2.startNode = function() {
  return new Node(this, this.start, this.startLoc);
};
pp$2.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc);
};
function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations) {
    node.loc.end = loc;
  }
  if (this.options.ranges) {
    node.range[1] = pos;
  }
  return node;
}
pp$2.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
};
pp$2.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc);
};
pp$2.copyNode = function(node) {
  var newNode = new Node(this, node.start, this.startLoc);
  for (var prop in node) {
    newNode[prop] = node[prop];
  }
  return newNode;
};
var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
var ecma11BinaryProperties = ecma10BinaryProperties;
var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
var ecma13BinaryProperties = ecma12BinaryProperties;
var ecma14BinaryProperties = ecma13BinaryProperties;
var unicodeBinaryProperties = {
  9: ecma9BinaryProperties,
  10: ecma10BinaryProperties,
  11: ecma11BinaryProperties,
  12: ecma12BinaryProperties,
  13: ecma13BinaryProperties,
  14: ecma14BinaryProperties
};
var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
var ecma14ScriptValues = ecma13ScriptValues + " Kawi Nag_Mundari Nagm";
var unicodeScriptValues = {
  9: ecma9ScriptValues,
  10: ecma10ScriptValues,
  11: ecma11ScriptValues,
  12: ecma12ScriptValues,
  13: ecma13ScriptValues,
  14: ecma14ScriptValues
};
var data = {};
function buildUnicodeData(ecmaVersion) {
  var d5 = data[ecmaVersion] = {
    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
    nonBinary: {
      General_Category: wordsRegexp(unicodeGeneralCategoryValues),
      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
    }
  };
  d5.nonBinary.Script_Extensions = d5.nonBinary.Script;
  d5.nonBinary.gc = d5.nonBinary.General_Category;
  d5.nonBinary.sc = d5.nonBinary.Script;
  d5.nonBinary.scx = d5.nonBinary.Script_Extensions;
}
for (i4 = 0, list = [9, 10, 11, 12, 13, 14]; i4 < list.length; i4 += 1) {
  ecmaVersion = list[i4];
  buildUnicodeData(ecmaVersion);
}
var ecmaVersion;
var i4;
var list;
var pp$1 = Parser.prototype;
var RegExpValidationState = function RegExpValidationState2(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "");
  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = [];
  this.backReferenceNames = [];
};
RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
};
RegExpValidationState.prototype.raise = function raise(message) {
  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
};
RegExpValidationState.prototype.at = function at(i4, forceU) {
  if (forceU === void 0)
    forceU = false;
  var s5 = this.source;
  var l3 = s5.length;
  if (i4 >= l3) {
    return -1;
  }
  var c4 = s5.charCodeAt(i4);
  if (!(forceU || this.switchU) || c4 <= 55295 || c4 >= 57344 || i4 + 1 >= l3) {
    return c4;
  }
  var next = s5.charCodeAt(i4 + 1);
  return next >= 56320 && next <= 57343 ? (c4 << 10) + next - 56613888 : c4;
};
RegExpValidationState.prototype.nextIndex = function nextIndex(i4, forceU) {
  if (forceU === void 0)
    forceU = false;
  var s5 = this.source;
  var l3 = s5.length;
  if (i4 >= l3) {
    return l3;
  }
  var c4 = s5.charCodeAt(i4), next;
  if (!(forceU || this.switchU) || c4 <= 55295 || c4 >= 57344 || i4 + 1 >= l3 || (next = s5.charCodeAt(i4 + 1)) < 56320 || next > 57343) {
    return i4 + 1;
  }
  return i4 + 2;
};
RegExpValidationState.prototype.current = function current(forceU) {
  if (forceU === void 0)
    forceU = false;
  return this.at(this.pos, forceU);
};
RegExpValidationState.prototype.lookahead = function lookahead(forceU) {
  if (forceU === void 0)
    forceU = false;
  return this.at(this.nextIndex(this.pos, forceU), forceU);
};
RegExpValidationState.prototype.advance = function advance(forceU) {
  if (forceU === void 0)
    forceU = false;
  this.pos = this.nextIndex(this.pos, forceU);
};
RegExpValidationState.prototype.eat = function eat(ch, forceU) {
  if (forceU === void 0)
    forceU = false;
  if (this.current(forceU) === ch) {
    this.advance(forceU);
    return true;
  }
  return false;
};
pp$1.validateRegExpFlags = function(state) {
  var validFlags = state.validFlags;
  var flags = state.flags;
  for (var i4 = 0; i4 < flags.length; i4++) {
    var flag = flags.charAt(i4);
    if (validFlags.indexOf(flag) === -1) {
      this.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i4 + 1) > -1) {
      this.raise(state.start, "Duplicate regular expression flag");
    }
  }
};
pp$1.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);
  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};
pp$1.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames.length = 0;
  state.backReferenceNames.length = 0;
  this.regexp_disjunction(state);
  if (state.pos !== state.source.length) {
    if (state.eat(41)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(93) || state.eat(125)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i4 = 0, list = state.backReferenceNames; i4 < list.length; i4 += 1) {
    var name = list[i4];
    if (state.groupNames.indexOf(name) === -1) {
      state.raise("Invalid named capture referenced");
    }
  }
};
pp$1.regexp_disjunction = function(state) {
  this.regexp_alternative(state);
  while (state.eat(124)) {
    this.regexp_alternative(state);
  }
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(123)) {
    state.raise("Lone quantifier brackets");
  }
};
pp$1.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {
  }
};
pp$1.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true;
  }
  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true;
  }
  return false;
};
pp$1.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;
  if (state.eat(94) || state.eat(36)) {
    return true;
  }
  if (state.eat(92)) {
    if (state.eat(66) || state.eat(98)) {
      return true;
    }
    state.pos = start;
  }
  if (state.eat(40) && state.eat(63)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(60);
    }
    if (state.eat(61) || state.eat(33)) {
      this.regexp_disjunction(state);
      if (!state.eat(41)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true;
    }
  }
  state.pos = start;
  return false;
};
pp$1.regexp_eatQuantifier = function(state, noError) {
  if (noError === void 0)
    noError = false;
  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(63);
    return true;
  }
  return false;
};
pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
  return state.eat(42) || state.eat(43) || state.eat(63) || this.regexp_eatBracedQuantifier(state, noError);
};
pp$1.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(123)) {
    var min3 = 0, max3 = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min3 = state.lastIntValue;
      if (state.eat(44) && this.regexp_eatDecimalDigits(state)) {
        max3 = state.lastIntValue;
      }
      if (state.eat(125)) {
        if (max3 !== -1 && max3 < min3 && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true;
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatAtom = function(state) {
  return this.regexp_eatPatternCharacters(state) || state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
};
pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(92)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(40)) {
    if (state.eat(63) && state.eat(58)) {
      this.regexp_disjunction(state);
      if (state.eat(41)) {
        return true;
      }
      state.raise("Unterminated group");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatCapturingGroup = function(state) {
  if (state.eat(40)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 63) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(41)) {
      state.numCapturingParens += 1;
      return true;
    }
    state.raise("Unterminated group");
  }
  return false;
};
pp$1.regexp_eatExtendedAtom = function(state) {
  return state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
};
pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false;
};
pp$1.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
function isSyntaxCharacter(ch) {
  return ch === 36 || ch >= 40 && ch <= 43 || ch === 46 || ch === 63 || ch >= 91 && ch <= 94 || ch >= 123 && ch <= 125;
}
pp$1.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start;
};
pp$1.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (ch !== -1 && ch !== 36 && !(ch >= 40 && ch <= 43) && ch !== 46 && ch !== 63 && ch !== 91 && ch !== 94 && ch !== 124) {
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_groupSpecifier = function(state) {
  if (state.eat(63)) {
    if (this.regexp_eatGroupName(state)) {
      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
        state.raise("Duplicate capture group name");
      }
      state.groupNames.push(state.lastStringValue);
      return;
    }
    state.raise("Invalid group");
  }
};
pp$1.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(60)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(62)) {
      return true;
    }
    state.raise("Invalid capture group name");
  }
  return false;
};
pp$1.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString(state.lastIntValue);
    }
    return true;
  }
  return false;
};
pp$1.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);
  if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true;
  }
  state.pos = start;
  return false;
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 36 || ch === 95;
}
pp$1.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);
  if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true;
  }
  state.pos = start;
  return false;
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 36 || ch === 95 || ch === 8204 || ch === 8205;
}
pp$1.regexp_eatAtomEscape = function(state) {
  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
    return true;
  }
  if (state.switchU) {
    if (state.current() === 99) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false;
};
pp$1.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n2 = state.lastIntValue;
    if (state.switchU) {
      if (n2 > state.maxBackReference) {
        state.maxBackReference = n2;
      }
      return true;
    }
    if (n2 <= state.numCapturingParens) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatKGroupName = function(state) {
  if (state.eat(107)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true;
    }
    state.raise("Invalid named reference");
  }
  return false;
};
pp$1.regexp_eatCharacterEscape = function(state) {
  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
};
pp$1.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(99)) {
    if (this.regexp_eatControlLetter(state)) {
      return true;
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatZero = function(state) {
  if (state.current() === 48 && !isDecimalDigit(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 116) {
    state.lastIntValue = 9;
    state.advance();
    return true;
  }
  if (ch === 110) {
    state.lastIntValue = 10;
    state.advance();
    return true;
  }
  if (ch === 118) {
    state.lastIntValue = 11;
    state.advance();
    return true;
  }
  if (ch === 102) {
    state.lastIntValue = 12;
    state.advance();
    return true;
  }
  if (ch === 114) {
    state.lastIntValue = 13;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 32;
    state.advance();
    return true;
  }
  return false;
};
function isControlLetter(ch) {
  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122;
}
pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
  if (forceU === void 0)
    forceU = false;
  var start = state.pos;
  var switchU = forceU || state.switchU;
  if (state.eat(117)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (switchU && lead >= 55296 && lead <= 56319) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(92) && state.eat(117) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 56320 && trail <= 57343) {
            state.lastIntValue = (lead - 55296) * 1024 + (trail - 56320) + 65536;
            return true;
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true;
    }
    if (switchU && state.eat(123) && this.regexp_eatHexDigits(state) && state.eat(125) && isValidUnicode(state.lastIntValue)) {
      return true;
    }
    if (switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }
  return false;
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 1114111;
}
pp$1.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true;
    }
    if (state.eat(47)) {
      state.lastIntValue = 47;
      return true;
    }
    return false;
  }
  var ch = state.current();
  if (ch !== 99 && (!state.switchN || ch !== 107)) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 49 && ch <= 57) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
      state.advance();
    } while ((ch = state.current()) >= 48 && ch <= 57);
    return true;
  }
  return false;
};
pp$1.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();
  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return true;
  }
  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 80 || ch === 112)) {
    state.lastIntValue = -1;
    state.advance();
    if (state.eat(123) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(125)) {
      return true;
    }
    state.raise("Invalid property name");
  }
  return false;
};
function isCharacterClassEscape(ch) {
  return ch === 100 || ch === 68 || ch === 115 || ch === 83 || ch === 119 || ch === 87;
}
pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(61)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return true;
    }
  }
  state.pos = start;
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
    return true;
  }
  return false;
};
pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!hasOwn(state.unicodeProperties.nonBinary, name)) {
    state.raise("Invalid property name");
  }
  if (!state.unicodeProperties.nonBinary[name].test(value)) {
    state.raise("Invalid property value");
  }
};
pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (!state.unicodeProperties.binary.test(nameOrValue)) {
    state.raise("Invalid property name");
  }
};
pp$1.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== "";
};
function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 95;
}
pp$1.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== "";
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
}
pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state);
};
pp$1.regexp_eatCharacterClass = function(state) {
  if (state.eat(91)) {
    state.eat(94);
    this.regexp_classRanges(state);
    if (state.eat(93)) {
      return true;
    }
    state.raise("Unterminated character class");
  }
  return false;
};
pp$1.regexp_classRanges = function(state) {
  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(45) && this.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};
pp$1.regexp_eatClassAtom = function(state) {
  var start = state.pos;
  if (state.eat(92)) {
    if (this.regexp_eatClassEscape(state)) {
      return true;
    }
    if (state.switchU) {
      var ch$1 = state.current();
      if (ch$1 === 99 || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  var ch = state.current();
  if (ch !== 93) {
    state.lastIntValue = ch;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatClassEscape = function(state) {
  var start = state.pos;
  if (state.eat(98)) {
    state.lastIntValue = 8;
    return true;
  }
  if (state.switchU && state.eat(45)) {
    state.lastIntValue = 45;
    return true;
  }
  if (!state.switchU && state.eat(99)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true;
    }
    state.pos = start;
  }
  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
};
pp$1.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit(ch) || ch === 95) {
    state.lastIntValue = ch % 32;
    state.advance();
    return true;
  }
  return false;
};
pp$1.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(120)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true;
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false;
};
pp$1.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
    state.advance();
  }
  return state.pos !== start;
};
function isDecimalDigit(ch) {
  return ch >= 48 && ch <= 57;
}
pp$1.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start;
};
function isHexDigit(ch) {
  return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102;
}
function hexToInt(ch) {
  if (ch >= 65 && ch <= 70) {
    return 10 + (ch - 65);
  }
  if (ch >= 97 && ch <= 102) {
    return 10 + (ch - 97);
  }
  return ch - 48;
}
pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true;
  }
  return false;
};
pp$1.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 48;
    state.advance();
    return true;
  }
  state.lastIntValue = 0;
  return false;
};
function isOctalDigit(ch) {
  return ch >= 48 && ch <= 55;
}
pp$1.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i4 = 0; i4 < length; ++i4) {
    var ch = state.current();
    if (!isHexDigit(ch)) {
      state.pos = start;
      return false;
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true;
};
var Token = function Token2(p3) {
  this.type = p3.type;
  this.value = p3.value;
  this.start = p3.start;
  this.end = p3.end;
  if (p3.options.locations) {
    this.loc = new SourceLocation(p3, p3.startLoc, p3.endLoc);
  }
  if (p3.options.ranges) {
    this.range = [p3.start, p3.end];
  }
};
var pp = Parser.prototype;
pp.next = function(ignoreEscapeSequenceInKeyword) {
  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
    this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
  }
  if (this.options.onToken) {
    this.options.onToken(new Token(this));
  }
  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};
pp.getToken = function() {
  this.next();
  return new Token(this);
};
if (typeof Symbol !== "undefined") {
  pp[Symbol.iterator] = function() {
    var this$1$1 = this;
    return {
      next: function() {
        var token = this$1$1.getToken();
        return {
          done: token.type === types$1.eof,
          value: token
        };
      }
    };
  };
}
pp.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) {
    this.skipSpace();
  }
  this.start = this.pos;
  if (this.options.locations) {
    this.startLoc = this.curPosition();
  }
  if (this.pos >= this.input.length) {
    return this.finishToken(types$1.eof);
  }
  if (curContext.override) {
    return curContext.override(this);
  } else {
    this.readToken(this.fullCharCodeAtPos());
  }
};
pp.readToken = function(code) {
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92) {
    return this.readWord();
  }
  return this.getTokenFromCode(code);
};
pp.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 55295 || code >= 56320) {
    return code;
  }
  var next = this.input.charCodeAt(this.pos + 1);
  return next <= 56319 || next >= 57344 ? code : (code << 10) + next - 56613888;
};
pp.skipBlockComment = function() {
  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) {
    this.raise(this.pos - 2, "Unterminated comment");
  }
  this.pos = end + 2;
  if (this.options.locations) {
    for (var nextBreak = void 0, pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1; ) {
      ++this.curLine;
      pos = this.lineStart = nextBreak;
    }
  }
  if (this.options.onComment) {
    this.options.onComment(
      true,
      this.input.slice(start + 2, end),
      start,
      this.pos,
      startLoc,
      this.curPosition()
    );
  }
};
pp.skipLineComment = function(startSkip) {
  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this.input.charCodeAt(++this.pos);
  }
  if (this.options.onComment) {
    this.options.onComment(
      false,
      this.input.slice(start + startSkip, this.pos),
      start,
      this.pos,
      startLoc,
      this.curPosition()
    );
  }
};
pp.skipSpace = function() {
  loop:
    while (this.pos < this.input.length) {
      var ch = this.input.charCodeAt(this.pos);
      switch (ch) {
        case 32:
        case 160:
          ++this.pos;
          break;
        case 13:
          if (this.input.charCodeAt(this.pos + 1) === 10) {
            ++this.pos;
          }
        case 10:
        case 8232:
        case 8233:
          ++this.pos;
          if (this.options.locations) {
            ++this.curLine;
            this.lineStart = this.pos;
          }
          break;
        case 47:
          switch (this.input.charCodeAt(this.pos + 1)) {
            case 42:
              this.skipBlockComment();
              break;
            case 47:
              this.skipLineComment(2);
              break;
            default:
              break loop;
          }
          break;
        default:
          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
            ++this.pos;
          } else {
            break loop;
          }
      }
    }
};
pp.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) {
    this.endLoc = this.curPosition();
  }
  var prevType = this.type;
  this.type = type;
  this.value = val;
  this.updateContext(prevType);
};
pp.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) {
    return this.readNumber(true);
  }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
    this.pos += 3;
    return this.finishToken(types$1.ellipsis);
  } else {
    ++this.pos;
    return this.finishToken(types$1.dot);
  }
};
pp.readToken_slash = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) {
    ++this.pos;
    return this.readRegexp();
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.slash, 1);
};
pp.readToken_mult_modulo_exp = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types$1.star : types$1.modulo;
  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
    ++size;
    tokentype = types$1.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, size + 1);
  }
  return this.finishOp(tokentype, size);
};
pp.readToken_pipe_amp = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (this.options.ecmaVersion >= 12) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 === 61) {
        return this.finishOp(types$1.assign, 3);
      }
    }
    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);
};
pp.readToken_caret = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.bitwiseXOR, 1);
};
pp.readToken_plus_min = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken();
    }
    return this.finishOp(types$1.incDec, 2);
  }
  if (next === 61) {
    return this.finishOp(types$1.assign, 2);
  }
  return this.finishOp(types$1.plusMin, 1);
};
pp.readToken_lt_gt = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) {
      return this.finishOp(types$1.assign, size + 1);
    }
    return this.finishOp(types$1.bitShift, size);
  }
  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken();
  }
  if (next === 61) {
    size = 2;
  }
  return this.finishOp(types$1.relational, size);
};
pp.readToken_eq_excl = function(code) {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) {
    return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
  }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {
    this.pos += 2;
    return this.finishToken(types$1.arrow);
  }
  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1);
};
pp.readToken_question = function() {
  var ecmaVersion = this.options.ecmaVersion;
  if (ecmaVersion >= 11) {
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 46) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 < 48 || next2 > 57) {
        return this.finishOp(types$1.questionDot, 2);
      }
    }
    if (next === 63) {
      if (ecmaVersion >= 12) {
        var next2$1 = this.input.charCodeAt(this.pos + 2);
        if (next2$1 === 61) {
          return this.finishOp(types$1.assign, 3);
        }
      }
      return this.finishOp(types$1.coalesce, 2);
    }
  }
  return this.finishOp(types$1.question, 1);
};
pp.readToken_numberSign = function() {
  var ecmaVersion = this.options.ecmaVersion;
  var code = 35;
  if (ecmaVersion >= 13) {
    ++this.pos;
    code = this.fullCharCodeAtPos();
    if (isIdentifierStart(code, true) || code === 92) {
      return this.finishToken(types$1.privateId, this.readWord1());
    }
  }
  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};
pp.getTokenFromCode = function(code) {
  switch (code) {
    case 46:
      return this.readToken_dot();
    case 40:
      ++this.pos;
      return this.finishToken(types$1.parenL);
    case 41:
      ++this.pos;
      return this.finishToken(types$1.parenR);
    case 59:
      ++this.pos;
      return this.finishToken(types$1.semi);
    case 44:
      ++this.pos;
      return this.finishToken(types$1.comma);
    case 91:
      ++this.pos;
      return this.finishToken(types$1.bracketL);
    case 93:
      ++this.pos;
      return this.finishToken(types$1.bracketR);
    case 123:
      ++this.pos;
      return this.finishToken(types$1.braceL);
    case 125:
      ++this.pos;
      return this.finishToken(types$1.braceR);
    case 58:
      ++this.pos;
      return this.finishToken(types$1.colon);
    case 96:
      if (this.options.ecmaVersion < 6) {
        break;
      }
      ++this.pos;
      return this.finishToken(types$1.backQuote);
    case 48:
      var next = this.input.charCodeAt(this.pos + 1);
      if (next === 120 || next === 88) {
        return this.readRadixNumber(16);
      }
      if (this.options.ecmaVersion >= 6) {
        if (next === 111 || next === 79) {
          return this.readRadixNumber(8);
        }
        if (next === 98 || next === 66) {
          return this.readRadixNumber(2);
        }
      }
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return this.readNumber(false);
    case 34:
    case 39:
      return this.readString(code);
    case 47:
      return this.readToken_slash();
    case 37:
    case 42:
      return this.readToken_mult_modulo_exp(code);
    case 124:
    case 38:
      return this.readToken_pipe_amp(code);
    case 94:
      return this.readToken_caret();
    case 43:
    case 45:
      return this.readToken_plus_min(code);
    case 60:
    case 62:
      return this.readToken_lt_gt(code);
    case 61:
    case 33:
      return this.readToken_eq_excl(code);
    case 63:
      return this.readToken_question();
    case 126:
      return this.finishOp(types$1.prefix, 1);
    case 35:
      return this.readToken_numberSign();
  }
  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};
pp.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str);
};
pp.readRegexp = function() {
  var escaped, inClass, start = this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(start, "Unterminated regular expression");
    }
    var ch = this.input.charAt(this.pos);
    if (lineBreak.test(ch)) {
      this.raise(start, "Unterminated regular expression");
    }
    if (!escaped) {
      if (ch === "[") {
        inClass = true;
      } else if (ch === "]" && inClass) {
        inClass = false;
      } else if (ch === "/" && !inClass) {
        break;
      }
      escaped = ch === "\\";
    } else {
      escaped = false;
    }
    ++this.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) {
    this.unexpected(flagsStart);
  }
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e4) {
  }
  return this.finishToken(types$1.regexp, { pattern, flags, value });
};
pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
  var allowSeparators = this.options.ecmaVersion >= 12 && len === void 0;
  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;
  var start = this.pos, total = 0, lastCode = 0;
  for (var i4 = 0, e4 = len == null ? Infinity : len; i4 < e4; ++i4, ++this.pos) {
    var code = this.input.charCodeAt(this.pos), val = void 0;
    if (allowSeparators && code === 95) {
      if (isLegacyOctalNumericLiteral) {
        this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals");
      }
      if (lastCode === 95) {
        this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore");
      }
      if (i4 === 0) {
        this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits");
      }
      lastCode = code;
      continue;
    }
    if (code >= 97) {
      val = code - 97 + 10;
    } else if (code >= 65) {
      val = code - 65 + 10;
    } else if (code >= 48 && code <= 57) {
      val = code - 48;
    } else {
      val = Infinity;
    }
    if (val >= radix) {
      break;
    }
    lastCode = code;
    total = total * radix + val;
  }
  if (allowSeparators && lastCode === 95) {
    this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits");
  }
  if (this.pos === start || len != null && this.pos - start !== len) {
    return null;
  }
  return total;
};
function stringToNumber(str, isLegacyOctalNumericLiteral) {
  if (isLegacyOctalNumericLiteral) {
    return parseInt(str, 8);
  }
  return parseFloat(str.replace(/_/g, ""));
}
function stringToBigInt(str) {
  if (typeof BigInt !== "function") {
    return null;
  }
  return BigInt(str.replace(/_/g, ""));
}
pp.readRadixNumber = function(radix) {
  var start = this.pos;
  this.pos += 2;
  var val = this.readInt(radix);
  if (val == null) {
    this.raise(this.start + 2, "Expected number in radix " + radix);
  }
  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
    val = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
  } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
    this.raise(this.pos, "Identifier directly after number");
  }
  return this.finishToken(types$1.num, val);
};
pp.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10, void 0, true) === null) {
    this.raise(start, "Invalid number");
  }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) {
    this.raise(start, "Invalid number");
  }
  var next = this.input.charCodeAt(this.pos);
  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
    var val$1 = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
    if (isIdentifierStart(this.fullCharCodeAtPos())) {
      this.raise(this.pos, "Identifier directly after number");
    }
    return this.finishToken(types$1.num, val$1);
  }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {
    octal = false;
  }
  if (next === 46 && !octal) {
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) {
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) {
      ++this.pos;
    }
    if (this.readInt(10) === null) {
      this.raise(start, "Invalid number");
    }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) {
    this.raise(this.pos, "Identifier directly after number");
  }
  var val = stringToNumber(this.input.slice(start, this.pos), octal);
  return this.finishToken(types$1.num, val);
};
pp.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;
  if (ch === 123) {
    if (this.options.ecmaVersion < 6) {
      this.unexpected();
    }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 1114111) {
      this.invalidStringToken(codePos, "Code point out of bounds");
    }
  } else {
    code = this.readHexChar(4);
  }
  return code;
};
pp.readString = function(quote) {
  var out = "", chunkStart = ++this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(this.start, "Unterminated string constant");
    }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === quote) {
      break;
    }
    if (ch === 92) {
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(false);
      chunkStart = this.pos;
    } else if (ch === 8232 || ch === 8233) {
      if (this.options.ecmaVersion < 10) {
        this.raise(this.start, "Unterminated string constant");
      }
      ++this.pos;
      if (this.options.locations) {
        this.curLine++;
        this.lineStart = this.pos;
      }
    } else {
      if (isNewLine(ch)) {
        this.raise(this.start, "Unterminated string constant");
      }
      ++this.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types$1.string, out);
};
var INVALID_TEMPLATE_ESCAPE_ERROR = {};
pp.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err;
    }
  }
  this.inTemplateElement = false;
};
pp.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR;
  } else {
    this.raise(position, message);
  }
};
pp.readTmplToken = function() {
  var out = "", chunkStart = this.pos;
  for (; ; ) {
    if (this.pos >= this.input.length) {
      this.raise(this.start, "Unterminated template");
    }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
        if (ch === 36) {
          this.pos += 2;
          return this.finishToken(types$1.dollarBraceL);
        } else {
          ++this.pos;
          return this.finishToken(types$1.backQuote);
        }
      }
      out += this.input.slice(chunkStart, this.pos);
      return this.finishToken(types$1.template, out);
    }
    if (ch === 92) {
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(true);
      chunkStart = this.pos;
    } else if (isNewLine(ch)) {
      out += this.input.slice(chunkStart, this.pos);
      ++this.pos;
      switch (ch) {
        case 13:
          if (this.input.charCodeAt(this.pos) === 10) {
            ++this.pos;
          }
        case 10:
          out += "\n";
          break;
        default:
          out += String.fromCharCode(ch);
          break;
      }
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      chunkStart = this.pos;
    } else {
      ++this.pos;
    }
  }
};
pp.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++) {
    switch (this.input[this.pos]) {
      case "\\":
        ++this.pos;
        break;
      case "$":
        if (this.input[this.pos + 1] !== "{") {
          break;
        }
      case "`":
        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos));
    }
  }
  this.raise(this.start, "Unterminated template");
};
pp.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
    case 110:
      return "\n";
    case 114:
      return "\r";
    case 120:
      return String.fromCharCode(this.readHexChar(2));
    case 117:
      return codePointToString(this.readCodePoint());
    case 116:
      return "	";
    case 98:
      return "\b";
    case 118:
      return "\v";
    case 102:
      return "\f";
    case 13:
      if (this.input.charCodeAt(this.pos) === 10) {
        ++this.pos;
      }
    case 10:
      if (this.options.locations) {
        this.lineStart = this.pos;
        ++this.curLine;
      }
      return "";
    case 56:
    case 57:
      if (this.strict) {
        this.invalidStringToken(
          this.pos - 1,
          "Invalid escape sequence"
        );
      }
      if (inTemplate) {
        var codePos = this.pos - 1;
        this.invalidStringToken(
          codePos,
          "Invalid escape sequence in template string"
        );
      }
    default:
      if (ch >= 48 && ch <= 55) {
        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
        var octal = parseInt(octalStr, 8);
        if (octal > 255) {
          octalStr = octalStr.slice(0, -1);
          octal = parseInt(octalStr, 8);
        }
        this.pos += octalStr.length - 1;
        ch = this.input.charCodeAt(this.pos);
        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
          this.invalidStringToken(
            this.pos - 1 - octalStr.length,
            inTemplate ? "Octal literal in template string" : "Octal literal in strict mode"
          );
        }
        return String.fromCharCode(octal);
      }
      if (isNewLine(ch)) {
        return "";
      }
      return String.fromCharCode(ch);
  }
};
pp.readHexChar = function(len) {
  var codePos = this.pos;
  var n2 = this.readInt(16, len);
  if (n2 === null) {
    this.invalidStringToken(codePos, "Bad character escape sequence");
  }
  return n2;
};
pp.readWord1 = function() {
  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this.pos += ch <= 65535 ? 1 : 2;
    } else if (ch === 92) {
      this.containsEsc = true;
      word += this.input.slice(chunkStart, this.pos);
      var escStart = this.pos;
      if (this.input.charCodeAt(++this.pos) !== 117) {
        this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
      }
      ++this.pos;
      var esc = this.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {
        this.invalidStringToken(escStart, "Invalid Unicode escape");
      }
      word += codePointToString(esc);
      chunkStart = this.pos;
    } else {
      break;
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos);
};
pp.readWord = function() {
  var word = this.readWord1();
  var type = types$1.name;
  if (this.keywords.test(word)) {
    type = keywords[word];
  }
  return this.finishToken(type, word);
};
var version = "8.8.2";
Parser.acorn = {
  Parser,
  version,
  defaultOptions,
  Position,
  SourceLocation,
  getLineInfo,
  Node,
  TokenType,
  tokTypes: types$1,
  keywordTypes: keywords,
  TokContext,
  tokContexts: types,
  isIdentifierChar,
  isIdentifierStart,
  Token,
  isNewLine,
  lineBreak,
  lineBreakG,
  nonASCIIwhitespace
};
function parse3(input, options) {
  return Parser.parse(input, options);
}

// node_modules/acorn-walk/dist/walk.mjs
function ancestor(node, visitors, baseVisitor, state, override) {
  var ancestors = [];
  if (!baseVisitor) {
    baseVisitor = base;
  }
  (function c4(node2, st, override2) {
    var type = override2 || node2.type, found = visitors[type];
    var isNew = node2 !== ancestors[ancestors.length - 1];
    if (isNew) {
      ancestors.push(node2);
    }
    baseVisitor[type](node2, st, c4);
    if (found) {
      found(node2, st || ancestors, ancestors);
    }
    if (isNew) {
      ancestors.pop();
    }
  })(node, state, override);
}
function skipThrough(node, st, c4) {
  c4(node, st);
}
function ignore(_node, _st, _c2) {
}
var base = {};
base.Program = base.BlockStatement = base.StaticBlock = function(node, st, c4) {
  for (var i4 = 0, list = node.body; i4 < list.length; i4 += 1) {
    var stmt = list[i4];
    c4(stmt, st, "Statement");
  }
};
base.Statement = skipThrough;
base.EmptyStatement = ignore;
base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression = function(node, st, c4) {
  return c4(node.expression, st, "Expression");
};
base.IfStatement = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.consequent, st, "Statement");
  if (node.alternate) {
    c4(node.alternate, st, "Statement");
  }
};
base.LabeledStatement = function(node, st, c4) {
  return c4(node.body, st, "Statement");
};
base.BreakStatement = base.ContinueStatement = ignore;
base.WithStatement = function(node, st, c4) {
  c4(node.object, st, "Expression");
  c4(node.body, st, "Statement");
};
base.SwitchStatement = function(node, st, c4) {
  c4(node.discriminant, st, "Expression");
  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {
    var cs = list$1[i$1];
    if (cs.test) {
      c4(cs.test, st, "Expression");
    }
    for (var i4 = 0, list = cs.consequent; i4 < list.length; i4 += 1) {
      var cons = list[i4];
      c4(cons, st, "Statement");
    }
  }
};
base.SwitchCase = function(node, st, c4) {
  if (node.test) {
    c4(node.test, st, "Expression");
  }
  for (var i4 = 0, list = node.consequent; i4 < list.length; i4 += 1) {
    var cons = list[i4];
    c4(cons, st, "Statement");
  }
};
base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function(node, st, c4) {
  if (node.argument) {
    c4(node.argument, st, "Expression");
  }
};
base.ThrowStatement = base.SpreadElement = function(node, st, c4) {
  return c4(node.argument, st, "Expression");
};
base.TryStatement = function(node, st, c4) {
  c4(node.block, st, "Statement");
  if (node.handler) {
    c4(node.handler, st);
  }
  if (node.finalizer) {
    c4(node.finalizer, st, "Statement");
  }
};
base.CatchClause = function(node, st, c4) {
  if (node.param) {
    c4(node.param, st, "Pattern");
  }
  c4(node.body, st, "Statement");
};
base.WhileStatement = base.DoWhileStatement = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.body, st, "Statement");
};
base.ForStatement = function(node, st, c4) {
  if (node.init) {
    c4(node.init, st, "ForInit");
  }
  if (node.test) {
    c4(node.test, st, "Expression");
  }
  if (node.update) {
    c4(node.update, st, "Expression");
  }
  c4(node.body, st, "Statement");
};
base.ForInStatement = base.ForOfStatement = function(node, st, c4) {
  c4(node.left, st, "ForInit");
  c4(node.right, st, "Expression");
  c4(node.body, st, "Statement");
};
base.ForInit = function(node, st, c4) {
  if (node.type === "VariableDeclaration") {
    c4(node, st);
  } else {
    c4(node, st, "Expression");
  }
};
base.DebuggerStatement = ignore;
base.FunctionDeclaration = function(node, st, c4) {
  return c4(node, st, "Function");
};
base.VariableDeclaration = function(node, st, c4) {
  for (var i4 = 0, list = node.declarations; i4 < list.length; i4 += 1) {
    var decl = list[i4];
    c4(decl, st);
  }
};
base.VariableDeclarator = function(node, st, c4) {
  c4(node.id, st, "Pattern");
  if (node.init) {
    c4(node.init, st, "Expression");
  }
};
base.Function = function(node, st, c4) {
  if (node.id) {
    c4(node.id, st, "Pattern");
  }
  for (var i4 = 0, list = node.params; i4 < list.length; i4 += 1) {
    var param = list[i4];
    c4(param, st, "Pattern");
  }
  c4(node.body, st, node.expression ? "Expression" : "Statement");
};
base.Pattern = function(node, st, c4) {
  if (node.type === "Identifier") {
    c4(node, st, "VariablePattern");
  } else if (node.type === "MemberExpression") {
    c4(node, st, "MemberPattern");
  } else {
    c4(node, st);
  }
};
base.VariablePattern = ignore;
base.MemberPattern = skipThrough;
base.RestElement = function(node, st, c4) {
  return c4(node.argument, st, "Pattern");
};
base.ArrayPattern = function(node, st, c4) {
  for (var i4 = 0, list = node.elements; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    if (elt) {
      c4(elt, st, "Pattern");
    }
  }
};
base.ObjectPattern = function(node, st, c4) {
  for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
    var prop = list[i4];
    if (prop.type === "Property") {
      if (prop.computed) {
        c4(prop.key, st, "Expression");
      }
      c4(prop.value, st, "Pattern");
    } else if (prop.type === "RestElement") {
      c4(prop.argument, st, "Pattern");
    }
  }
};
base.Expression = skipThrough;
base.ThisExpression = base.Super = base.MetaProperty = ignore;
base.ArrayExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.elements; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    if (elt) {
      c4(elt, st, "Expression");
    }
  }
};
base.ObjectExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.properties; i4 < list.length; i4 += 1) {
    var prop = list[i4];
    c4(prop, st);
  }
};
base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;
base.SequenceExpression = function(node, st, c4) {
  for (var i4 = 0, list = node.expressions; i4 < list.length; i4 += 1) {
    var expr = list[i4];
    c4(expr, st, "Expression");
  }
};
base.TemplateLiteral = function(node, st, c4) {
  for (var i4 = 0, list = node.quasis; i4 < list.length; i4 += 1) {
    var quasi = list[i4];
    c4(quasi, st);
  }
  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1) {
    var expr = list$1[i$1];
    c4(expr, st, "Expression");
  }
};
base.TemplateElement = ignore;
base.UnaryExpression = base.UpdateExpression = function(node, st, c4) {
  c4(node.argument, st, "Expression");
};
base.BinaryExpression = base.LogicalExpression = function(node, st, c4) {
  c4(node.left, st, "Expression");
  c4(node.right, st, "Expression");
};
base.AssignmentExpression = base.AssignmentPattern = function(node, st, c4) {
  c4(node.left, st, "Pattern");
  c4(node.right, st, "Expression");
};
base.ConditionalExpression = function(node, st, c4) {
  c4(node.test, st, "Expression");
  c4(node.consequent, st, "Expression");
  c4(node.alternate, st, "Expression");
};
base.NewExpression = base.CallExpression = function(node, st, c4) {
  c4(node.callee, st, "Expression");
  if (node.arguments) {
    for (var i4 = 0, list = node.arguments; i4 < list.length; i4 += 1) {
      var arg = list[i4];
      c4(arg, st, "Expression");
    }
  }
};
base.MemberExpression = function(node, st, c4) {
  c4(node.object, st, "Expression");
  if (node.computed) {
    c4(node.property, st, "Expression");
  }
};
base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function(node, st, c4) {
  if (node.declaration) {
    c4(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression");
  }
  if (node.source) {
    c4(node.source, st, "Expression");
  }
};
base.ExportAllDeclaration = function(node, st, c4) {
  if (node.exported) {
    c4(node.exported, st);
  }
  c4(node.source, st, "Expression");
};
base.ImportDeclaration = function(node, st, c4) {
  for (var i4 = 0, list = node.specifiers; i4 < list.length; i4 += 1) {
    var spec = list[i4];
    c4(spec, st);
  }
  c4(node.source, st, "Expression");
};
base.ImportExpression = function(node, st, c4) {
  c4(node.source, st, "Expression");
};
base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;
base.TaggedTemplateExpression = function(node, st, c4) {
  c4(node.tag, st, "Expression");
  c4(node.quasi, st, "Expression");
};
base.ClassDeclaration = base.ClassExpression = function(node, st, c4) {
  return c4(node, st, "Class");
};
base.Class = function(node, st, c4) {
  if (node.id) {
    c4(node.id, st, "Pattern");
  }
  if (node.superClass) {
    c4(node.superClass, st, "Expression");
  }
  c4(node.body, st);
};
base.ClassBody = function(node, st, c4) {
  for (var i4 = 0, list = node.body; i4 < list.length; i4 += 1) {
    var elt = list[i4];
    c4(elt, st);
  }
};
base.MethodDefinition = base.PropertyDefinition = base.Property = function(node, st, c4) {
  if (node.computed) {
    c4(node.key, st, "Expression");
  }
  if (node.value) {
    c4(node.value, st, "Expression");
  }
};

// node_modules/astring/dist/astring.mjs
var { stringify } = JSON;
if (!String.prototype.repeat) {
  throw new Error(
    "String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation"
  );
}
if (!String.prototype.endsWith) {
  throw new Error(
    "String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation"
  );
}
var OPERATOR_PRECEDENCE = {
  "||": 3,
  "&&": 4,
  "|": 5,
  "??": 5,
  "^": 6,
  "&": 7,
  "==": 8,
  "!=": 8,
  "===": 8,
  "!==": 8,
  "<": 9,
  ">": 9,
  "<=": 9,
  ">=": 9,
  in: 9,
  instanceof: 9,
  "<<": 10,
  ">>": 10,
  ">>>": 10,
  "+": 11,
  "-": 11,
  "*": 12,
  "%": 12,
  "/": 12,
  "**": 13
};
var NEEDS_PARENTHESES = 17;
var EXPRESSIONS_PRECEDENCE = {
  ArrayExpression: 20,
  TaggedTemplateExpression: 20,
  ThisExpression: 20,
  Identifier: 20,
  PrivateIdentifier: 20,
  Literal: 18,
  TemplateLiteral: 20,
  Super: 20,
  SequenceExpression: 20,
  MemberExpression: 19,
  ChainExpression: 19,
  CallExpression: 19,
  NewExpression: 19,
  ArrowFunctionExpression: NEEDS_PARENTHESES,
  ClassExpression: NEEDS_PARENTHESES,
  FunctionExpression: NEEDS_PARENTHESES,
  ObjectExpression: NEEDS_PARENTHESES,
  UpdateExpression: 16,
  UnaryExpression: 15,
  AwaitExpression: 15,
  BinaryExpression: 14,
  LogicalExpression: 13,
  ConditionalExpression: 4,
  AssignmentExpression: 3,
  YieldExpression: 2,
  RestElement: 1
};
function formatSequence(state, nodes) {
  const { generator } = state;
  state.write("(");
  if (nodes != null && nodes.length > 0) {
    generator[nodes[0].type](nodes[0], state);
    const { length } = nodes;
    for (let i4 = 1; i4 < length; i4++) {
      const param = nodes[i4];
      state.write(", ");
      generator[param.type](param, state);
    }
  }
  state.write(")");
}
function expressionNeedsParenthesis(state, node, parentNode, isRightHand) {
  const nodePrecedence = state.expressionsPrecedence[node.type];
  if (nodePrecedence === NEEDS_PARENTHESES) {
    return true;
  }
  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type];
  if (nodePrecedence !== parentNodePrecedence) {
    return !isRightHand && nodePrecedence === 15 && parentNodePrecedence === 14 && parentNode.operator === "**" || nodePrecedence < parentNodePrecedence;
  }
  if (nodePrecedence !== 13 && nodePrecedence !== 14) {
    return false;
  }
  if (node.operator === "**" && parentNode.operator === "**") {
    return !isRightHand;
  }
  if (isRightHand) {
    return OPERATOR_PRECEDENCE[node.operator] <= OPERATOR_PRECEDENCE[parentNode.operator];
  }
  return OPERATOR_PRECEDENCE[node.operator] < OPERATOR_PRECEDENCE[parentNode.operator];
}
function formatExpression(state, node, parentNode, isRightHand) {
  const { generator } = state;
  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {
    state.write("(");
    generator[node.type](node, state);
    state.write(")");
  } else {
    generator[node.type](node, state);
  }
}
function reindent(state, text2, indent, lineEnd) {
  const lines = text2.split("\n");
  const end = lines.length - 1;
  state.write(lines[0].trim());
  if (end > 0) {
    state.write(lineEnd);
    for (let i4 = 1; i4 < end; i4++) {
      state.write(indent + lines[i4].trim() + lineEnd);
    }
    state.write(indent + lines[end].trim());
  }
}
function formatComments(state, comments, indent, lineEnd) {
  const { length } = comments;
  for (let i4 = 0; i4 < length; i4++) {
    const comment = comments[i4];
    state.write(indent);
    if (comment.type[0] === "L") {
      state.write("// " + comment.value.trim() + "\n", comment);
    } else {
      state.write("/*");
      reindent(state, comment.value, indent, lineEnd);
      state.write("*/" + lineEnd);
    }
  }
}
function hasCallExpression(node) {
  let currentNode = node;
  while (currentNode != null) {
    const { type } = currentNode;
    if (type[0] === "C" && type[1] === "a") {
      return true;
    } else if (type[0] === "M" && type[1] === "e" && type[2] === "m") {
      currentNode = currentNode.object;
    } else {
      return false;
    }
  }
}
function formatVariableDeclaration(state, node) {
  const { generator } = state;
  const { declarations } = node;
  state.write(node.kind + " ");
  const { length } = declarations;
  if (length > 0) {
    generator.VariableDeclarator(declarations[0], state);
    for (let i4 = 1; i4 < length; i4++) {
      state.write(", ");
      generator.VariableDeclarator(declarations[i4], state);
    }
  }
}
var ForInStatement;
var FunctionDeclaration;
var RestElement;
var BinaryExpression;
var ArrayExpression;
var BlockStatement;
var GENERATOR = {
  Program(node, state) {
    const indent = state.indent.repeat(state.indentLevel);
    const { lineEnd, writeComments } = state;
    if (writeComments && node.comments != null) {
      formatComments(state, node.comments, indent, lineEnd);
    }
    const statements = node.body;
    const { length } = statements;
    for (let i4 = 0; i4 < length; i4++) {
      const statement = statements[i4];
      if (writeComments && statement.comments != null) {
        formatComments(state, statement.comments, indent, lineEnd);
      }
      state.write(indent);
      this[statement.type](statement, state);
      state.write(lineEnd);
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, indent, lineEnd);
    }
  },
  BlockStatement: BlockStatement = function(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const statementIndent = indent + state.indent;
    state.write("{");
    const statements = node.body;
    if (statements != null && statements.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, statementIndent, lineEnd);
      }
      const { length } = statements;
      for (let i4 = 0; i4 < length; i4++) {
        const statement = statements[i4];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
      state.write(indent);
    } else {
      if (writeComments && node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, statementIndent, lineEnd);
        state.write(indent);
      }
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, statementIndent, lineEnd);
    }
    state.write("}");
    state.indentLevel--;
  },
  ClassBody: BlockStatement,
  StaticBlock(node, state) {
    state.write("static ");
    this.BlockStatement(node, state);
  },
  EmptyStatement(node, state) {
    state.write(";");
  },
  ExpressionStatement(node, state) {
    const precedence = state.expressionsPrecedence[node.expression.type];
    if (precedence === NEEDS_PARENTHESES || precedence === 3 && node.expression.left.type[0] === "O") {
      state.write("(");
      this[node.expression.type](node.expression, state);
      state.write(")");
    } else {
      this[node.expression.type](node.expression, state);
    }
    state.write(";");
  },
  IfStatement(node, state) {
    state.write("if (");
    this[node.test.type](node.test, state);
    state.write(") ");
    this[node.consequent.type](node.consequent, state);
    if (node.alternate != null) {
      state.write(" else ");
      this[node.alternate.type](node.alternate, state);
    }
  },
  LabeledStatement(node, state) {
    this[node.label.type](node.label, state);
    state.write(": ");
    this[node.body.type](node.body, state);
  },
  BreakStatement(node, state) {
    state.write("break");
    if (node.label != null) {
      state.write(" ");
      this[node.label.type](node.label, state);
    }
    state.write(";");
  },
  ContinueStatement(node, state) {
    state.write("continue");
    if (node.label != null) {
      state.write(" ");
      this[node.label.type](node.label, state);
    }
    state.write(";");
  },
  WithStatement(node, state) {
    state.write("with (");
    this[node.object.type](node.object, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  SwitchStatement(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    state.indentLevel++;
    const caseIndent = indent + state.indent;
    const statementIndent = caseIndent + state.indent;
    state.write("switch (");
    this[node.discriminant.type](node.discriminant, state);
    state.write(") {" + lineEnd);
    const { cases: occurences } = node;
    const { length: occurencesCount } = occurences;
    for (let i4 = 0; i4 < occurencesCount; i4++) {
      const occurence = occurences[i4];
      if (writeComments && occurence.comments != null) {
        formatComments(state, occurence.comments, caseIndent, lineEnd);
      }
      if (occurence.test) {
        state.write(caseIndent + "case ");
        this[occurence.test.type](occurence.test, state);
        state.write(":" + lineEnd);
      } else {
        state.write(caseIndent + "default:" + lineEnd);
      }
      const { consequent } = occurence;
      const { length: consequentCount } = consequent;
      for (let i5 = 0; i5 < consequentCount; i5++) {
        const statement = consequent[i5];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
    }
    state.indentLevel -= 2;
    state.write(indent + "}");
  },
  ReturnStatement(node, state) {
    state.write("return");
    if (node.argument) {
      state.write(" ");
      this[node.argument.type](node.argument, state);
    }
    state.write(";");
  },
  ThrowStatement(node, state) {
    state.write("throw ");
    this[node.argument.type](node.argument, state);
    state.write(";");
  },
  TryStatement(node, state) {
    state.write("try ");
    this[node.block.type](node.block, state);
    if (node.handler) {
      const { handler } = node;
      if (handler.param == null) {
        state.write(" catch ");
      } else {
        state.write(" catch (");
        this[handler.param.type](handler.param, state);
        state.write(") ");
      }
      this[handler.body.type](handler.body, state);
    }
    if (node.finalizer) {
      state.write(" finally ");
      this[node.finalizer.type](node.finalizer, state);
    }
  },
  WhileStatement(node, state) {
    state.write("while (");
    this[node.test.type](node.test, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  DoWhileStatement(node, state) {
    state.write("do ");
    this[node.body.type](node.body, state);
    state.write(" while (");
    this[node.test.type](node.test, state);
    state.write(");");
  },
  ForStatement(node, state) {
    state.write("for (");
    if (node.init != null) {
      const { init } = node;
      if (init.type[0] === "V") {
        formatVariableDeclaration(state, init);
      } else {
        this[init.type](init, state);
      }
    }
    state.write("; ");
    if (node.test) {
      this[node.test.type](node.test, state);
    }
    state.write("; ");
    if (node.update) {
      this[node.update.type](node.update, state);
    }
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  ForInStatement: ForInStatement = function(node, state) {
    state.write(`for ${node.await ? "await " : ""}(`);
    const { left } = node;
    if (left.type[0] === "V") {
      formatVariableDeclaration(state, left);
    } else {
      this[left.type](left, state);
    }
    state.write(node.type[3] === "I" ? " in " : " of ");
    this[node.right.type](node.right, state);
    state.write(") ");
    this[node.body.type](node.body, state);
  },
  ForOfStatement: ForInStatement,
  DebuggerStatement(node, state) {
    state.write("debugger;", node);
  },
  FunctionDeclaration: FunctionDeclaration = function(node, state) {
    state.write(
      (node.async ? "async " : "") + (node.generator ? "function* " : "function ") + (node.id ? node.id.name : ""),
      node
    );
    formatSequence(state, node.params);
    state.write(" ");
    this[node.body.type](node.body, state);
  },
  FunctionExpression: FunctionDeclaration,
  VariableDeclaration(node, state) {
    formatVariableDeclaration(state, node);
    state.write(";");
  },
  VariableDeclarator(node, state) {
    this[node.id.type](node.id, state);
    if (node.init != null) {
      state.write(" = ");
      this[node.init.type](node.init, state);
    }
  },
  ClassDeclaration(node, state) {
    state.write("class " + (node.id ? `${node.id.name} ` : ""), node);
    if (node.superClass) {
      state.write("extends ");
      const { superClass } = node;
      const { type } = superClass;
      const precedence = state.expressionsPrecedence[type];
      if ((type[0] !== "C" || type[1] !== "l" || type[5] !== "E") && (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.ClassExpression)) {
        state.write("(");
        this[node.superClass.type](superClass, state);
        state.write(")");
      } else {
        this[superClass.type](superClass, state);
      }
      state.write(" ");
    }
    this.ClassBody(node.body, state);
  },
  ImportDeclaration(node, state) {
    state.write("import ");
    const { specifiers } = node;
    const { length } = specifiers;
    let i4 = 0;
    if (length > 0) {
      for (; i4 < length; ) {
        if (i4 > 0) {
          state.write(", ");
        }
        const specifier = specifiers[i4];
        const type = specifier.type[6];
        if (type === "D") {
          state.write(specifier.local.name, specifier);
          i4++;
        } else if (type === "N") {
          state.write("* as " + specifier.local.name, specifier);
          i4++;
        } else {
          break;
        }
      }
      if (i4 < length) {
        state.write("{");
        for (; ; ) {
          const specifier = specifiers[i4];
          const { name } = specifier.imported;
          state.write(name, specifier);
          if (name !== specifier.local.name) {
            state.write(" as " + specifier.local.name);
          }
          if (++i4 < length) {
            state.write(", ");
          } else {
            break;
          }
        }
        state.write("}");
      }
      state.write(" from ");
    }
    this.Literal(node.source, state);
    state.write(";");
  },
  ImportExpression(node, state) {
    state.write("import(");
    this[node.source.type](node.source, state);
    state.write(")");
  },
  ExportDefaultDeclaration(node, state) {
    state.write("export default ");
    this[node.declaration.type](node.declaration, state);
    if (state.expressionsPrecedence[node.declaration.type] != null && node.declaration.type[0] !== "F") {
      state.write(";");
    }
  },
  ExportNamedDeclaration(node, state) {
    state.write("export ");
    if (node.declaration) {
      this[node.declaration.type](node.declaration, state);
    } else {
      state.write("{");
      const { specifiers } = node, { length } = specifiers;
      if (length > 0) {
        for (let i4 = 0; ; ) {
          const specifier = specifiers[i4];
          const { name } = specifier.local;
          state.write(name, specifier);
          if (name !== specifier.exported.name) {
            state.write(" as " + specifier.exported.name);
          }
          if (++i4 < length) {
            state.write(", ");
          } else {
            break;
          }
        }
      }
      state.write("}");
      if (node.source) {
        state.write(" from ");
        this.Literal(node.source, state);
      }
      state.write(";");
    }
  },
  ExportAllDeclaration(node, state) {
    if (node.exported != null) {
      state.write("export * as " + node.exported.name + " from ");
    } else {
      state.write("export * from ");
    }
    this.Literal(node.source, state);
    state.write(";");
  },
  MethodDefinition(node, state) {
    if (node.static) {
      state.write("static ");
    }
    const kind = node.kind[0];
    if (kind === "g" || kind === "s") {
      state.write(node.kind + " ");
    }
    if (node.value.async) {
      state.write("async ");
    }
    if (node.value.generator) {
      state.write("*");
    }
    if (node.computed) {
      state.write("[");
      this[node.key.type](node.key, state);
      state.write("]");
    } else {
      this[node.key.type](node.key, state);
    }
    formatSequence(state, node.value.params);
    state.write(" ");
    this[node.value.body.type](node.value.body, state);
  },
  ClassExpression(node, state) {
    this.ClassDeclaration(node, state);
  },
  ArrowFunctionExpression(node, state) {
    state.write(node.async ? "async " : "", node);
    const { params } = node;
    if (params != null) {
      if (params.length === 1 && params[0].type[0] === "I") {
        state.write(params[0].name, params[0]);
      } else {
        formatSequence(state, node.params);
      }
    }
    state.write(" => ");
    if (node.body.type[0] === "O") {
      state.write("(");
      this.ObjectExpression(node.body, state);
      state.write(")");
    } else {
      this[node.body.type](node.body, state);
    }
  },
  ThisExpression(node, state) {
    state.write("this", node);
  },
  Super(node, state) {
    state.write("super", node);
  },
  RestElement: RestElement = function(node, state) {
    state.write("...");
    this[node.argument.type](node.argument, state);
  },
  SpreadElement: RestElement,
  YieldExpression(node, state) {
    state.write(node.delegate ? "yield*" : "yield");
    if (node.argument) {
      state.write(" ");
      this[node.argument.type](node.argument, state);
    }
  },
  AwaitExpression(node, state) {
    state.write("await ", node);
    formatExpression(state, node.argument, node);
  },
  TemplateLiteral(node, state) {
    const { quasis, expressions } = node;
    state.write("`");
    const { length } = expressions;
    for (let i4 = 0; i4 < length; i4++) {
      const expression = expressions[i4];
      const quasi2 = quasis[i4];
      state.write(quasi2.value.raw, quasi2);
      state.write("${");
      this[expression.type](expression, state);
      state.write("}");
    }
    const quasi = quasis[quasis.length - 1];
    state.write(quasi.value.raw, quasi);
    state.write("`");
  },
  TemplateElement(node, state) {
    state.write(node.value.raw, node);
  },
  TaggedTemplateExpression(node, state) {
    formatExpression(state, node.tag, node);
    this[node.quasi.type](node.quasi, state);
  },
  ArrayExpression: ArrayExpression = function(node, state) {
    state.write("[");
    if (node.elements.length > 0) {
      const { elements } = node, { length } = elements;
      for (let i4 = 0; ; ) {
        const element = elements[i4];
        if (element != null) {
          this[element.type](element, state);
        }
        if (++i4 < length) {
          state.write(", ");
        } else {
          if (element == null) {
            state.write(", ");
          }
          break;
        }
      }
    }
    state.write("]");
  },
  ArrayPattern: ArrayExpression,
  ObjectExpression(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const propertyIndent = indent + state.indent;
    state.write("{");
    if (node.properties.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, propertyIndent, lineEnd);
      }
      const comma = "," + lineEnd;
      const { properties: properties2 } = node, { length } = properties2;
      for (let i4 = 0; ; ) {
        const property2 = properties2[i4];
        if (writeComments && property2.comments != null) {
          formatComments(state, property2.comments, propertyIndent, lineEnd);
        }
        state.write(propertyIndent);
        this[property2.type](property2, state);
        if (++i4 < length) {
          state.write(comma);
        } else {
          break;
        }
      }
      state.write(lineEnd);
      if (writeComments && node.trailingComments != null) {
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
      }
      state.write(indent + "}");
    } else if (writeComments) {
      if (node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, propertyIndent, lineEnd);
        if (node.trailingComments != null) {
          formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        }
        state.write(indent + "}");
      } else if (node.trailingComments != null) {
        state.write(lineEnd);
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        state.write(indent + "}");
      } else {
        state.write("}");
      }
    } else {
      state.write("}");
    }
    state.indentLevel--;
  },
  Property(node, state) {
    if (node.method || node.kind[0] !== "i") {
      this.MethodDefinition(node, state);
    } else {
      if (!node.shorthand) {
        if (node.computed) {
          state.write("[");
          this[node.key.type](node.key, state);
          state.write("]");
        } else {
          this[node.key.type](node.key, state);
        }
        state.write(": ");
      }
      this[node.value.type](node.value, state);
    }
  },
  PropertyDefinition(node, state) {
    if (node.static) {
      state.write("static ");
    }
    if (node.computed) {
      state.write("[");
    }
    this[node.key.type](node.key, state);
    if (node.computed) {
      state.write("]");
    }
    if (node.value == null) {
      if (node.key.type[0] !== "F") {
        state.write(";");
      }
      return;
    }
    state.write(" = ");
    this[node.value.type](node.value, state);
    state.write(";");
  },
  ObjectPattern(node, state) {
    state.write("{");
    if (node.properties.length > 0) {
      const { properties: properties2 } = node, { length } = properties2;
      for (let i4 = 0; ; ) {
        this[properties2[i4].type](properties2[i4], state);
        if (++i4 < length) {
          state.write(", ");
        } else {
          break;
        }
      }
    }
    state.write("}");
  },
  SequenceExpression(node, state) {
    formatSequence(state, node.expressions);
  },
  UnaryExpression(node, state) {
    if (node.prefix) {
      const {
        operator,
        argument,
        argument: { type }
      } = node;
      state.write(operator);
      const needsParentheses = expressionNeedsParenthesis(state, argument, node);
      if (!needsParentheses && (operator.length > 1 || type[0] === "U" && (type[1] === "n" || type[1] === "p") && argument.prefix && argument.operator[0] === operator && (operator === "+" || operator === "-"))) {
        state.write(" ");
      }
      if (needsParentheses) {
        state.write(operator.length > 1 ? " (" : "(");
        this[type](argument, state);
        state.write(")");
      } else {
        this[type](argument, state);
      }
    } else {
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  UpdateExpression(node, state) {
    if (node.prefix) {
      state.write(node.operator);
      this[node.argument.type](node.argument, state);
    } else {
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  AssignmentExpression(node, state) {
    this[node.left.type](node.left, state);
    state.write(" " + node.operator + " ");
    this[node.right.type](node.right, state);
  },
  AssignmentPattern(node, state) {
    this[node.left.type](node.left, state);
    state.write(" = ");
    this[node.right.type](node.right, state);
  },
  BinaryExpression: BinaryExpression = function(node, state) {
    const isIn = node.operator === "in";
    if (isIn) {
      state.write("(");
    }
    formatExpression(state, node.left, node, false);
    state.write(" " + node.operator + " ");
    formatExpression(state, node.right, node, true);
    if (isIn) {
      state.write(")");
    }
  },
  LogicalExpression: BinaryExpression,
  ConditionalExpression(node, state) {
    const { test } = node;
    const precedence = state.expressionsPrecedence[test.type];
    if (precedence === NEEDS_PARENTHESES || precedence <= state.expressionsPrecedence.ConditionalExpression) {
      state.write("(");
      this[test.type](test, state);
      state.write(")");
    } else {
      this[test.type](test, state);
    }
    state.write(" ? ");
    this[node.consequent.type](node.consequent, state);
    state.write(" : ");
    this[node.alternate.type](node.alternate, state);
  },
  NewExpression(node, state) {
    state.write("new ");
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.CallExpression || hasCallExpression(node.callee)) {
      state.write("(");
      this[node.callee.type](node.callee, state);
      state.write(")");
    } else {
      this[node.callee.type](node.callee, state);
    }
    formatSequence(state, node["arguments"]);
  },
  CallExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.CallExpression) {
      state.write("(");
      this[node.callee.type](node.callee, state);
      state.write(")");
    } else {
      this[node.callee.type](node.callee, state);
    }
    if (node.optional) {
      state.write("?.");
    }
    formatSequence(state, node["arguments"]);
  },
  ChainExpression(node, state) {
    this[node.expression.type](node.expression, state);
  },
  MemberExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.object.type];
    if (precedence === NEEDS_PARENTHESES || precedence < state.expressionsPrecedence.MemberExpression) {
      state.write("(");
      this[node.object.type](node.object, state);
      state.write(")");
    } else {
      this[node.object.type](node.object, state);
    }
    if (node.computed) {
      if (node.optional) {
        state.write("?.");
      }
      state.write("[");
      this[node.property.type](node.property, state);
      state.write("]");
    } else {
      if (node.optional) {
        state.write("?.");
      } else {
        state.write(".");
      }
      this[node.property.type](node.property, state);
    }
  },
  MetaProperty(node, state) {
    state.write(node.meta.name + "." + node.property.name, node);
  },
  Identifier(node, state) {
    state.write(node.name, node);
  },
  PrivateIdentifier(node, state) {
    state.write(`#${node.name}`, node);
  },
  Literal(node, state) {
    if (node.raw != null) {
      state.write(node.raw, node);
    } else if (node.regex != null) {
      this.RegExpLiteral(node, state);
    } else if (node.bigint != null) {
      state.write(node.bigint + "n", node);
    } else {
      state.write(stringify(node.value), node);
    }
  },
  RegExpLiteral(node, state) {
    const { regex } = node;
    state.write(`/${regex.pattern}/${regex.flags}`, node);
  }
};
var EMPTY_OBJECT = {};
var State = class {
  constructor(options) {
    const setup = options == null ? EMPTY_OBJECT : options;
    this.output = "";
    if (setup.output != null) {
      this.output = setup.output;
      this.write = this.writeToStream;
    } else {
      this.output = "";
    }
    this.generator = setup.generator != null ? setup.generator : GENERATOR;
    this.expressionsPrecedence = setup.expressionsPrecedence != null ? setup.expressionsPrecedence : EXPRESSIONS_PRECEDENCE;
    this.indent = setup.indent != null ? setup.indent : "  ";
    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : "\n";
    this.indentLevel = setup.startingIndentLevel != null ? setup.startingIndentLevel : 0;
    this.writeComments = setup.comments ? setup.comments : false;
    if (setup.sourceMap != null) {
      this.write = setup.output == null ? this.writeAndMap : this.writeToStreamAndMap;
      this.sourceMap = setup.sourceMap;
      this.line = 1;
      this.column = 0;
      this.lineEndSize = this.lineEnd.split("\n").length - 1;
      this.mapping = {
        original: null,
        generated: this,
        name: void 0,
        source: setup.sourceMap.file || setup.sourceMap._file
      };
    }
  }
  write(code) {
    this.output += code;
  }
  writeToStream(code) {
    this.output.write(code);
  }
  writeAndMap(code, node) {
    this.output += code;
    this.map(code, node);
  }
  writeToStreamAndMap(code, node) {
    this.output.write(code);
    this.map(code, node);
  }
  map(code, node) {
    if (node != null) {
      const { type } = node;
      if (type[0] === "L" && type[2] === "n") {
        this.column = 0;
        this.line++;
        return;
      }
      if (node.loc != null) {
        const { mapping } = this;
        mapping.original = node.loc.start;
        mapping.name = node.name;
        this.sourceMap.addMapping(mapping);
      }
      if (type[0] === "T" && type[8] === "E" || type[0] === "L" && type[1] === "i" && typeof node.value === "string") {
        const { length: length2 } = code;
        let { column, line } = this;
        for (let i4 = 0; i4 < length2; i4++) {
          if (code[i4] === "\n") {
            column = 0;
            line++;
          } else {
            column++;
          }
        }
        this.column = column;
        this.line = line;
        return;
      }
    }
    const { length } = code;
    const { lineEnd } = this;
    if (length > 0) {
      if (this.lineEndSize > 0 && (lineEnd.length === 1 ? code[length - 1] === lineEnd : code.endsWith(lineEnd))) {
        this.line += this.lineEndSize;
        this.column = 0;
      } else {
        this.column += length;
      }
    }
  }
  toString() {
    return this.output;
  }
};
function generate(node, options) {
  const state = new State(options);
  state.generator[node.type](node, state);
  return state.output;
}

// src/utils/frames/linker.ts
var preprocessCode = (code, oldName, newName) => {
  let string;
  let codeBlock2 = ensureString(code);
  const isMultiLine = codeBlock2.includes("\n");
  if (isMultiLine) {
    const lines = codeBlock2.split("\n").filter((line) => line.trim() !== "");
    lines[lines.length - 1] = `${lines[lines.length - 1].replace("return ", "")}`;
    codeBlock2 = lines.join("\n");
  }
  try {
    const ast = parse3(codeBlock2, { ecmaVersion: 2020, locations: true });
    ancestor(ast, {
      Identifier(node, ancestors) {
        const parent = ancestors[ancestors.length - 2];
        if (parent.type !== "MemberExpression" || parent.object === node) {
          if (node.name == oldName) {
            node.name = newName;
          }
        }
      }
    });
    string = generate(ast).trimEnd();
  } catch (e4) {
    console.log(e4);
    string = `"error"`;
  }
  if (isMultiLine) {
    const lines = string.split("\n").filter((line) => line.trim() !== "");
    lines[lines.length - 1] = `return ${lines[lines.length - 1]}`;
    string = lines.join("\n");
  }
  return string;
};
var linkNodes = (parent, schemaId, props2, flattenedTree, uniqueID) => {
  const relinkProps = (oldParent, newParent2, props3, node) => {
    var _a2, _b2, _c2;
    return {
      ...node,
      parentId: node.parentId == oldParent ? newParent2 : node.parentId,
      props: Object.keys((_a2 = node == null ? void 0 : node.props) != null ? _a2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.props[c4], oldParent, newParent2)
          };
        },
        node.props
      ),
      actions: Object.keys((_b2 = node == null ? void 0 : node.actions) != null ? _b2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.actions[c4], oldParent, newParent2)
          };
        },
        node.actions
      ),
      styles: Object.keys((_c2 = node == null ? void 0 : node.styles) != null ? _c2 : {}).reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: preprocessCode(node.styles[c4], oldParent, newParent2)
          };
        },
        node.styles
      )
    };
  };
  const assignIDs = (parent2, nodes) => {
    const [newNodes, newID] = nodes.reduce((p3, c4, i4) => {
      const [oldNodes, id2] = p3;
      const newNodeID = c4.parentId ? c4.id + id2 : parent2.id;
      const newNode = {
        ...oldNodes[i4],
        id: newNodeID
      };
      const returnNodes = oldNodes.map((f4) => f4.id != c4.id ? relinkProps(c4.id, newNodeID, props2, f4) : relinkProps(c4.id, newNodeID, props2, newNode));
      return [returnNodes, id2 + 1];
    }, [nodes, uniqueID]);
    return [newNodes, newID];
  };
  const newParent = schemaId != parent.id ? relinkProps(schemaId, parent.id, props2, parent) : parent;
  return assignIDs(newParent, flattenedTree);
};
var linkTreeNodes = (parent, uniqueID) => {
  const relinkProps = (oldParent, newParent, treenode) => {
    var _a2, _b2, _c2;
    let children;
    const node = treenode.node;
    if (treenode.children) {
      children = treenode.children.map((child) => relinkProps(oldParent, newParent, child));
    }
    return {
      ...treenode,
      children,
      node: {
        ...treenode.node,
        parentId: node.parentId == oldParent ? newParent : node.parentId,
        props: Object.keys((_a2 = node == null ? void 0 : node.props) != null ? _a2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.props[c4], oldParent, newParent)
            };
          },
          node.props
        ),
        actions: Object.keys((_b2 = node == null ? void 0 : node.actions) != null ? _b2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.actions[c4], oldParent, newParent)
            };
          },
          node.actions
        ),
        styles: Object.keys((_c2 = node == null ? void 0 : node.styles) != null ? _c2 : {}).reduce(
          (p3, c4) => {
            return {
              ...p3,
              [c4]: preprocessCode(node.styles[c4], oldParent, newParent)
            };
          },
          node.styles
        )
      }
    };
  };
  const assignIDs = (parent2, node, uniqueID2) => {
    const assignIDToTree = (parent3, node2, id2) => {
      const newNodeID = node2.node.parentId ? node2.id + id2 : parent3.id;
      let newNode = { ...node2, node: { ...node2.node, id: newNodeID }, id: newNodeID };
      newNode = relinkProps(node2.id, newNodeID, newNode);
      if (newNode.children) {
        const [newChildren, newID] = newNode.children.reduce(
          (acc, child, i4) => {
            const [newChild, nextID] = assignIDToTree(newNode, child, id2 + i4 + 1);
            acc[0].push(newChild);
            return [acc[0], nextID];
          },
          [[], id2]
        );
        newNode.children = newChildren;
        id2 = newID;
      }
      return [newNode, id2 + 1];
    };
    return assignIDToTree(parent2, node, uniqueID2);
  };
  return assignIDs(parent, parent, uniqueID);
};

// src/utils/frames/nodes.ts
var mdbSchemaToFrameSchema = (schema) => {
  if (!schema)
    return null;
  return {
    ...schema,
    def: safelyParseJSON(schema.def)
  };
};
var frameSchemaToMDBSchema = (frameSchema) => {
  return {
    ...frameSchema,
    def: JSON.stringify(frameSchema.def)
  };
};
var frameToNode = (frame) => {
  return {
    ...frame,
    rank: parseInt(frame.rank),
    contexts: safelyParseJSON(frame.contexts),
    styles: safelyParseJSON(frame.styles),
    actions: safelyParseJSON(frame.actions),
    props: safelyParseJSON(frame.props),
    types: nodeToTypes(frame.type)
  };
};
var nodeToFrame = (node) => {
  var _a2, _b2;
  const { contexts, styles: styles2, props: props2, actions, ...otherProps } = node;
  return {
    ...otherProps,
    rank: (_b2 = (_a2 = node.rank) == null ? void 0 : _a2.toString()) != null ? _b2 : "0",
    contexts: JSON.stringify(contexts),
    styles: JSON.stringify(styles2),
    actions: JSON.stringify(actions),
    props: JSON.stringify(props2)
  };
};

// src/utils/frames/ast.ts
function replaceSubtree(tree, subtree) {
  if (tree.id === subtree.id) {
    return subtree;
  }
  if (tree.children) {
    for (let i4 = 0; i4 < tree.children.length; i4++) {
      const replacedChild = replaceSubtree(tree.children[i4], subtree);
      if (replacedChild !== tree.children[i4]) {
        tree.children[i4] = replacedChild;
      }
    }
  }
  return tree;
}
var getFrameNodesByPath = (plugin, ref2) => {
  const path = uriByString(ref2);
  if (path.space == "$kit") {
    return kit.find((f4) => f4.schema.id == path.ref);
  }
  const context = plugin.index.framesIndex.get(path.basePath);
  return context == null ? void 0 : context.frames[path.ref];
};
function flattenToFrameNodes(root2) {
  const flattenedTree = [];
  function traverseAndFlatten(node, parent) {
    var _a2;
    flattenedTree.push({ ...node.node, parentId: parent, schemaId: root2.node.schemaId });
    ((_a2 = node.children) != null ? _a2 : []).forEach((child) => {
      traverseAndFlatten(child, node.node.id);
    });
  }
  traverseAndFlatten(root2, "");
  return flattenedTree;
}
function insertFrameChildren(root2, newChildren) {
  function traverseAndInsert(node) {
    return {
      ...node,
      children: node.node.type === "content" && newChildren.length > 0 ? newChildren.map((f4) => ({ ...f4, node: { ...f4.node, parentId: node.id } })) : node.children.map((child) => {
        return traverseAndInsert(child);
      })
    };
  }
  const newRoot = traverseAndInsert(root2);
  return newRoot;
}
var expandNode = (treeNode, id2, plugin) => {
  if (treeNode.node.type == "frame") {
    const mdbFrame = getFrameNodesByPath(plugin, treeNode.node.ref);
    if (treeNode.node.schemaId == (mdbFrame == null ? void 0 : mdbFrame.schema.id))
      return [treeNode, id2];
    if (!mdbFrame || mdbFrame.rows.length == 0) {
      return [treeNode, id2];
    }
    const [linkedNodes, newUniqueID] = linkNodes(
      treeNode.node,
      mdbFrame.schema.id,
      treeNode.node.props,
      mdbFrame.rows.map((f4) => frameToNode(f4)),
      id2
    );
    const [newTreeNode, newID] = buildFrameTree(
      treeNode.node,
      linkedNodes,
      plugin,
      newUniqueID,
      true
    );
    if (!newTreeNode) {
      return [treeNode, newID];
    }
    return [insertFrameChildren(linkProps(mdbFrame.cols, { ...newTreeNode, isRef: false, node: { ...treeNode.node, type: "frame", styles: { ...newTreeNode.node.styles, ...treeNode.node.styles }, props: { ...newTreeNode.node.props, ...treeNode.node.props }, actions: { ...newTreeNode.node.actions, ...treeNode.node.actions }, id: newTreeNode.id } }), treeNode.children), newID];
  }
  return [treeNode, id2];
};
var expandFrame = (node, plugin, uniqueID = 0, parentType) => {
  const [children, lastID] = node.children.reduce((f4, c4) => {
    const [nodes, id2] = f4;
    const [newNode2, fid] = expandFrame(c4, plugin, id2 + 1, node.node.type);
    return [[...nodes, newNode2], fid + 1];
  }, [[], uniqueID]);
  const [newNode, newID] = expandNode({ ...node, children, parentType }, lastID, plugin);
  return [{
    ...newNode,
    parentType
  }, newID];
};
var linkProps = (fields, root2) => {
  const props2 = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: "" }), {});
  const types2 = fields.reduce((p3, c4) => ({ ...p3, [c4.name]: c4.type }), {});
  return { ...root2, node: {
    ...root2.node,
    props: { ...props2, ...root2.node.props },
    types: { ...types2, ...root2.node.types }
  } };
};
var applyPropsToRoot = (root2, props2) => ({
  ...root2,
  node: {
    ...root2.node,
    props: {
      ...root2.node.props,
      ...applyFunctionToObject(props2, (e4) => wrapQuotes(e4))
    }
  }
});
var schemaToRoot = (schema) => {
  return {
    schemaId: schema.id,
    id: schema.id,
    type: "group",
    rank: 0,
    name: schema.id
  };
};
var schemaToFrame = (schema) => {
  return {
    schemaId: schema.id,
    id: schema.id,
    type: "frame",
    rank: 0,
    name: schema.id
  };
};
var buildRootFromMDBFrame = (plugin, frame) => {
  return buildRoot(mdbSchemaToFrameSchema(frame.schema), frame.cols, frame.rows.map((f4) => frameToNode(f4)), plugin);
};
var buildRoot = (schema, fields, nodes, plugin) => {
  var _a2;
  const rootNode = (_a2 = nodes.find((f4) => f4.id == schema.id)) != null ? _a2 : schemaToRoot(schema);
  const root2 = buildFrameTree(rootNode, nodes, plugin, nodes.length, false)[0];
  return root2 && linkProps(fields, root2);
};
var propertiesForNode = (node) => Object.keys(node.types).map((f4) => ({
  type: node.types[f4],
  name: f4,
  schemaId: f4
}));
var buildFrameTree = (root2, nodes, plugin, uniqueID = 0, isRef) => {
  const rootNode = { node: root2, id: root2.id, children: [], isRef };
  const idToNodeMap = { [root2.id]: rootNode };
  nodes.forEach((node) => {
    idToNodeMap[node.id] = { id: node.id, node, children: [], isRef };
  });
  nodes.forEach((node) => {
    if (node.parentId) {
      const parentNode = idToNodeMap[node.parentId];
      if (parentNode) {
        parentNode.children.push({ ...idToNodeMap[node.id], parentType: parentNode.node.type });
        parentNode.children.sort((a5, b4) => a5.node.rank - b4.node.rank);
      }
    } else {
      if (node.id == root2.id)
        rootNode.node = idToNodeMap[node.id].node;
    }
  });
  const [treeNode, newID] = expandFrame(idToNodeMap[root2.id], plugin, uniqueID);
  return [treeNode, newID];
};
var findParent = (tree, targetId, parentId = null) => {
  for (const child of tree.children) {
    if (child.id === targetId) {
      return tree;
    }
  }
  for (const child of tree.children) {
    const foundParent = findParent(child, targetId, tree.id);
    if (foundParent) {
      return foundParent;
    }
  }
  return null;
};

// src/schemas/frames.ts
var defaultFrameSchema = {
  uniques: ["id,schemaId"],
  cols: [
    "id",
    "schemaId",
    "type",
    "parentId",
    "name",
    "rank",
    "icon",
    "props",
    "actions",
    "ref",
    "styles",
    "contexts"
  ]
};
var nodeToTypes = (type) => {
  return type == "flow" ? { value: "link" } : type == "group" || type == "content" || type == "frame" ? {} : {
    value: type
  };
};
var groupNode = {
  def: {
    icon: "lucide//box-select"
  },
  node: {
    id: "group",
    schemaId: "group",
    name: "Group",
    rank: 0,
    parentId: "",
    styles: {
      flexDirection: `"column"`,
      display: `"flex"`
    },
    type: "group"
  }
};
var columnsNode = {
  def: {
    icon: "lucide//columns"
  },
  node: {
    id: "group",
    schemaId: "group",
    name: "Group",
    rank: 0,
    parentId: "",
    styles: {
      layout: `"row"`,
      width: `'100%'`,
      gap: `'24px'`
    },
    type: "group"
  }
};
var columnNode = {
  def: {
    icon: "lucide//columns"
  },
  node: {
    icon: "lucide//columns",
    id: "column",
    schemaId: "column",
    name: "Column",
    rank: 0,
    parentId: "",
    styles: {
      layout: `"column"`,
      alignItems: `'flex-start'`,
      flex: `1`,
      gap: `'16px'`,
      width: "0"
    },
    type: "column"
  }
};
var groupableTypes = ["content", "group", "column", "list"];
var flowNode = {
  def: {
    icon: "lucide//file-text"
  },
  node: {
    icon: "lucide//file-text",
    schemaId: "flow",
    parentId: "",
    name: "Existing Note",
    rank: 0,
    id: "flow",
    type: "flow",
    props: {
      value: ""
    },
    styles: {
      width: `'100%'`
    },
    types: {
      value: "link"
    }
  }
};
var iconNode = {
  def: {
    icon: "lucide//gem"
  },
  node: {
    icon: "lucide//gem",
    schemaId: "icon",
    parentId: "",
    name: "Icon",
    rank: 0,
    id: "icon",
    styles: {},
    type: "icon",
    props: {
      value: ""
    },
    types: {
      value: "icon"
    }
  }
};
var spaceNode = {
  def: {
    icon: "lucide//layout-grid"
  },
  node: {
    icon: "lucide//layout-grid",
    schemaId: "space",
    parentId: "",
    name: "Space",
    rank: 0,
    id: "space",
    styles: { width: `'100%'` },
    type: "space",
    props: {
      value: ""
    },
    types: {
      value: "view"
    }
  }
};
var imageNode = {
  def: {
    icon: "lucide//image"
  },
  node: {
    icon: "lucide//image",
    schemaId: "image",
    parentId: "",
    name: "Image",
    rank: 0,
    id: "image",
    type: "image",
    props: {
      value: ""
    },
    types: {
      value: "image"
    }
  }
};
var textNode = {
  def: {
    icon: "lucide//type"
  },
  node: {
    icon: "lucide//type",
    schemaId: "text",
    parentId: "",
    name: "Text",
    rank: 0,
    id: "text",
    type: "text",
    props: {
      value: ""
    },
    types: {
      value: "text"
    }
  }
};
var buttonNode = {
  id: "button",
  def: {
    icon: "lucide//mouse-pointer-click"
  },
  node: {
    icon: "lucide//mouse-pointer-click",
    schemaId: "button",
    parentId: "",
    name: "Button",
    rank: 0,
    id: "button",
    type: "group",
    props: {
      icon: "",
      label: "",
      action: "",
      actionValue: ""
    },
    types: {
      icon: "icon",
      label: "text",
      action: "text",
      actionValue: "text"
    },
    actions: {
      onClick: `(a,b,c,api) => {api.buttonCommand(button.props.action, button.props.actionValue)}`
    },
    styles: {
      class: `'mk-button'`,
      gap: `'4px'`
    }
  },
  children: [
    { ...iconNode, node: { ...iconNode.node, props: {
      value: `button.props.icon`
    } } },
    { ...textNode, node: { ...textNode.node, props: { value: `button.props.label` } } }
  ]
};
var progressNode = {
  id: "progress",
  def: {
    icon: "lucide//pie-chart"
  },
  node: {
    icon: "lucide//pie-chart",
    schemaId: "progress",
    parentId: "",
    name: "Progress",
    rank: 0,
    id: "progress",
    type: "group",
    props: {
      value: "50",
      total: "100"
    },
    types: {
      total: "number",
      value: "number"
    },
    styles: {
      background: `'var(--background-modifier-form-field)'`,
      height: `'10px'`,
      width: `'100px'`,
      borderRadius: `'5px'`
    }
  },
  children: [
    { ...groupNode, node: { ...groupNode.node, styles: {
      width: `progress.props.value/progress.props.total*100+'%'`,
      height: `'100%'`,
      borderRadius: `'5px'`,
      background: `'var(--color-orange)'`,
      display: `'block'`
    } } }
  ]
};
var cardNode = {
  id: "card",
  def: {
    icon: "lucide//mouse-pointer-click"
  },
  node: {
    icon: "lucide//mouse-pointer-click",
    schemaId: "card",
    parentId: "",
    name: "Card",
    rank: 0,
    id: "card",
    type: "group",
    props: {
      icon: "",
      label: ""
    },
    types: {
      icon: "icon",
      label: "text"
    },
    actions: {},
    styles: {
      borderRadius: `'10px'`,
      background: `'var(--background-primary-alt)'`,
      width: `'160px'`,
      height: `'80px'`,
      padding: `'16px'`,
      border: `'thin solid var(--divider-color)'`
    }
  },
  children: [
    { ...iconNode, node: { ...iconNode.node, props: {
      value: `card.props.icon`
    } } },
    { ...textNode, node: { ...textNode.node, props: { value: `card.props.label` } } }
  ]
};
var linkNode = {
  id: "link",
  def: {
    icon: "lucide//link"
  },
  node: {
    icon: "lucide//link",
    schemaId: "link",
    parentId: "",
    name: "Link",
    rank: 0,
    id: "link",
    type: "group",
    props: {
      label: `"Link"`,
      link: ""
    },
    styles: {
      class: `'mk-a'`
    },
    actions: {
      onClick: "(e,v,k,api) => { api.openLink(link.props.link, false) }"
    },
    types: {
      label: "text",
      link: "link"
    }
  },
  children: [
    { ...textNode, node: { ...textNode.node, props: { value: `link.props.label` } } }
  ]
};
var rootToFrame = (root2) => {
  return {
    schema: { id: root2.id, name: root2.node.name, type: "frame" },
    cols: Object.keys(root2.node.types).map((f4) => {
      return {
        name: f4,
        schemaId: root2.id,
        type: root2.node.types[f4]
      };
    }),
    rows: flattenToFrameNodes(root2).map((f4) => nodeToFrame(f4))
  };
};
var kit = [rootToFrame(buttonNode), rootToFrame(progressNode), rootToFrame(cardNode), rootToFrame(linkNode)];

// src/types/context.ts
var FilePropertyName = "File";

// src/utils/contexts/parsers.ts
var parsePropString = (str) => {
  var _a2;
  const [p1, p22] = (_a2 = str == null ? void 0 : str.match(/(\\.|[^.])+/g)) != null ? _a2 : [];
  if (p22)
    return {
      field: p1,
      property: p22
    };
  return { field: "File", property: p1 };
};

// src/schemas/mdb.ts
var fieldTypeForType = (type) => fieldTypes.find((t4) => type == t4.type) || fieldTypes.find((t4) => type == t4.multiType);
var fieldTypes = [
  {
    type: "unknown",
    label: "",
    restricted: true,
    icon: "lucide//file-question"
  },
  {
    type: "preview",
    label: i18n_default.properties.preview.label,
    restricted: true
  },
  {
    type: "text",
    label: i18n_default.properties.text.label,
    metadata: true,
    icon: "lucide//text"
  },
  {
    type: "number",
    label: i18n_default.properties.number.label,
    metadata: true,
    icon: "lucide//binary"
  },
  {
    type: "boolean",
    label: i18n_default.properties.boolean.label,
    metadata: true,
    icon: "lucide//check-square"
  },
  {
    type: "date",
    label: i18n_default.properties.date.label,
    metadata: true,
    icon: "lucide//calendar"
  },
  {
    type: "option",
    label: i18n_default.properties.option.label,
    multi: true,
    multiType: "option-multi",
    icon: "lucide//list"
  },
  {
    type: "file",
    label: i18n_default.properties.file.label,
    restricted: true,
    icon: "ui//mk-make-h3"
  },
  {
    type: "fileprop",
    label: i18n_default.properties.fileProperty.label,
    icon: "lucide//list"
  },
  {
    type: "link",
    label: i18n_default.properties.link.label,
    multi: true,
    multiType: "link-multi",
    metadata: true,
    icon: "ui//mk-make-note"
  },
  {
    type: "context",
    label: i18n_default.properties.context.label,
    multi: true,
    multiType: "context-multi",
    icon: "ui//mk-make-note"
  },
  {
    type: "object",
    label: i18n_default.properties.context.label,
    restricted: true,
    metadata: true
  },
  {
    type: "icon",
    label: i18n_default.properties.icon.label,
    multi: true,
    multiType: "icon-multi",
    metadata: true,
    icon: "lucide//gem"
  },
  {
    type: "image",
    label: i18n_default.properties.image.label,
    multi: true,
    multiType: "image-multi",
    metadata: true,
    icon: "ui//mk-make-image"
  },
  {
    type: "color",
    label: i18n_default.properties.color.label,
    metadata: true,
    icon: "ui//mk-make-image"
  },
  {
    type: "space",
    label: i18n_default.properties.color.label,
    metadata: true,
    icon: "ui//mk-ui-spaces"
  }
];
var defaultFileDBSchema = {
  id: "files",
  name: "Files",
  type: "db",
  primary: "true"
};
var defaultFileListSchema = {
  id: "filesView",
  name: "Files",
  type: "list",
  def: { db: "files" }
};
var mainFrameID = "main";
var defaultMainFrameSchema = (id2) => ({ id: id2, name: id2, type: "frame", def: "", predicate: "", primary: "true" });
var defaultFramesSchema = {
  uniques: [],
  cols: ["id", "name", "type", "def", "predicate", "primary"],
  rows: [defaultMainFrameSchema(mainFrameID), frameSchemaToMDBSchema(defaultFileListSchema)]
};
var defaultFolderSchema = {
  uniques: [],
  cols: ["id", "name", "type", "def", "predicate", "primary"],
  rows: [defaultFileDBSchema]
};
var fieldSchema = {
  uniques: ["name,schemaId"],
  cols: [
    "name",
    "schemaId",
    "type",
    "value",
    "attrs",
    "hidden",
    "unique",
    "primary"
  ]
};
var defaultFolderFields = {
  ...fieldSchema,
  rows: [
    {
      name: i18n_default.properties.preview.label,
      schemaId: "files",
      type: "preview",
      hidden: "",
      unique: "",
      attrs: "",
      value: "",
      primary: ""
    },
    {
      name: FilePropertyName,
      schemaId: "files",
      type: "file",
      primary: "true",
      hidden: "",
      unique: "",
      attrs: "",
      value: ""
    },
    {
      name: i18n_default.properties.fileProperty.createdTime,
      schemaId: "files",
      type: "fileprop",
      value: "File.ctime",
      hidden: "",
      unique: "",
      attrs: "",
      primary: ""
    }
  ]
};
var defaultFieldsForContext = (space) => {
  if (space.uri.type == "tag") {
    return defaultTagFields;
  } else if (space.uri.type == "folder") {
    return defaultFolderFields;
  }
  return defaultFolderFields;
};
var defaultTableFields = [
  {
    name: i18n_default.properties.defaultField,
    schemaId: "",
    type: "text"
  }
];
var defaultTagFields = {
  ...fieldSchema,
  rows: [
    {
      name: FilePropertyName,
      schemaId: "files",
      type: "file",
      primary: "true",
      hidden: "",
      unique: "",
      attrs: "",
      value: ""
    }
  ]
};
var defaultMDBTableForContext = (space) => {
  return defaultFolderMDBTable;
};
var defaultFolderMDBTable = {
  schema: defaultFileDBSchema,
  cols: defaultFolderFields.rows,
  rows: []
};
var defaultQueryMDBTable = {
  schema: defaultFileDBSchema,
  cols: defaultFolderFields.rows,
  rows: []
};
var defaultTagMDBTable = {
  schema: defaultFileDBSchema,
  cols: defaultTagFields.rows,
  rows: []
};
var fieldsToTable = (fields, schemas) => {
  return fields.filter((s5) => schemas.find((g4) => g4.id == s5.schemaId && g4.type == "db")).reduce((p3, c4) => {
    return {
      ...p3,
      ...p3[c4.schemaId] ? {
        [c4.schemaId]: {
          uniques: c4.unique == "true" ? [...p3[c4.schemaId].uniques, c4.name] : p3[c4.schemaId].uniques,
          cols: [...p3[c4.schemaId].cols, c4.name],
          rows: []
        }
      } : {
        [c4.schemaId]: {
          uniques: c4.unique == "true" ? [c4.name] : [],
          cols: [c4.name],
          rows: []
        }
      }
    };
  }, {});
};
var defaultTablesForContext = (space) => {
  if (space.uri.type == "tag") {
    return defaultTagTables;
  } else if (space.uri.type == "folder") {
    return defaultFolderTables;
  }
  return defaultFolderTables;
};
var defaultFolderTables = {
  m_schema: defaultFolderSchema,
  m_fields: defaultFolderFields,
  ...fieldsToTable(
    defaultFolderFields.rows,
    defaultFolderSchema.rows
  )
};
var defaultTagTables = {
  m_schema: defaultFolderSchema,
  m_fields: defaultTagFields,
  ...fieldsToTable(
    defaultTagFields.rows,
    defaultFolderSchema.rows
  )
};

// src/components/Space/Frames/DefaultFrames/DefaultFrames.ts
var defaultMainFrame = [
  {
    ...groupNode.node,
    id: "main",
    type: "group",
    schemaId: "main",
    props: {
      note: "",
      space: ""
    },
    types: {
      note: "link",
      space: "space"
    },
    styles: {
      layout: `"column"`
    }
  },
  {
    ...flowNode.node,
    props: {
      value: `main.props.note`
    },
    style: { width: `'100%'` },
    parentId: "main",
    schemaId: "main"
  },
  {
    ...spaceNode.node,
    id: "context",
    props: {
      value: `main.props.space`
    },
    style: { width: `'100%'` },
    parentId: "main",
    schemaId: "main"
  }
];
var DefaultMDBTables = {
  main: {
    schema: defaultMainFrameSchema(mainFrameID),
    cols: [{ name: "space", type: "space", schemaId: "main" }, { name: "note", type: "link", schemaId: "main" }],
    rows: defaultMainFrame.map((f4) => nodeToFrame(f4))
  },
  filesView: {
    schema: frameSchemaToMDBSchema(defaultFileListSchema),
    cols: defaultFolderFields.rows,
    rows: []
  }
};

// src/context/FramesMDBContext.tsx
var import_obsidian5 = require("obsidian");
init_compat_module();

// src/utils/sanitize.ts
var sanitizeTableName = (name) => {
  return name == null ? void 0 : name.replace(/[^a-z0-9+]+/gi, "");
};
var sanitizeColumnName = (name) => {
  if ((name == null ? void 0 : name.charAt(0)) == "_") {
    return sanitizeColumnName(name.substring(1));
  }
  return name == null ? void 0 : name.replace(/"/g, ``);
};
var folderReservedRe = /^[+\$#^]+/;
var illegalRe = /[\/\?<>\\:\*\|":]/g;
var controlRe = /[\x00-\x1f\x80-\x9f]/g;
var reservedRe = /^\.+$/;
var windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i;
var sanitizeFolderName = (name) => {
  const replacement = "";
  return name.replace(folderReservedRe, replacement).replace(illegalRe, replacement).replace(controlRe, replacement).replace(reservedRe, replacement).replace(windowsReservedRe, replacement);
};
var sanitizeFileName = (name) => {
  const replacement = "";
  return name.replace(illegalRe, replacement).replace(controlRe, replacement).replace(reservedRe, replacement).replace(windowsReservedRe, replacement);
};
var sanitizeSQLStatement = (name) => {
  return name == null ? void 0 : name.replace(/'/g, `''`);
};

// src/utils/db/db.ts
var import_obsidian4 = require("obsidian");
var getDBFile = async (path, isRemote) => {
  if (isRemote) {
    return fetch(path).then((res) => res.arrayBuffer());
  }
  if (!await app.vault.adapter.exists((0, import_obsidian4.normalizePath)(path))) {
    return null;
  }
  const file = await app.vault.adapter.readBinary(
    (0, import_obsidian4.normalizePath)(path)
  );
  return file;
};
var getDB = async (sqlJS, path, isRemote) => {
  const buf = await getDBFile(path, isRemote);
  if (buf) {
    return new sqlJS.Database(new Uint8Array(buf));
  }
  return new sqlJS.Database();
};
var saveDBFile = async (path, binary) => {
  if (!await app.vault.adapter.exists(
    removeTrailingSlashFromFolder(getParentPathFromString(path))
  )) {
    await app.vault.createFolder(getParentPathFromString(path));
  }
  const file = app.vault.adapter.writeBinary(
    (0, import_obsidian4.normalizePath)(path),
    binary
  );
  return file;
};
var mdbFrameToDBTables = (tables, uniques) => {
  return Object.keys(tables).reduce((p3, c4) => {
    return {
      ...p3,
      [c4]: {
        uniques: defaultFrameSchema.uniques,
        cols: defaultFrameSchema.cols,
        rows: tables[c4].rows
      }
    };
  }, {});
};
var schemasAndFields = (tables) => {
  return {
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: Object.values(tables).flatMap((f4) => f4.cols)
    },
    m_schema: defaultFramesSchema
  };
};
var dbResultsToDBTables = (res) => {
  return res.reduce(
    (p3, c4, i4) => [
      ...p3,
      {
        cols: c4.columns,
        rows: c4 ? c4.values.map(
          (r3) => c4.columns.reduce(
            (prev, curr, index) => ({ ...prev, [curr]: r3[index] }),
            {}
          )
        ) : []
      }
    ],
    []
  );
};
var selectDB = (db, table, condition, fields) => {
  const fieldsStr = fields != null ? fields : "*";
  const sqlstr = condition ? `SELECT ${fieldsStr} FROM "${table}" WHERE ${condition};` : `SELECT ${fieldsStr} FROM ${table};`;
  let tables;
  try {
    tables = dbResultsToDBTables(db.exec(sqlstr));
  } catch (e4) {
    return null;
  }
  if (tables.length == 1)
    return tables[0];
  return null;
};
var deleteFromDB = (db, table, condition) => {
  const sqlstr = `DELETE FROM "${table}" WHERE ${condition};`;
  try {
    db.exec(sqlstr);
  } catch (e4) {
    console.log(e4);
  }
};
var dropTable = (db, table) => {
  const sqlstr = `DROP TABLE IF EXISTS "${table}";`;
  try {
    db.exec(sqlstr);
  } catch (e4) {
    console.log(e4);
  }
};
var replaceDB = (db, tables) => {
  const sqlstr = serializeSQLStatements(Object.keys(tables).map((t4) => {
    const tableFields = tables[t4].cols;
    const fieldQuery = serializeSQLFieldNames(uniq(tableFields).filter((f4) => f4).map((f4) => `'${sanitizeSQLStatement(f4)}' char`));
    const rowsQuery = tables[t4].rows.reduce((prev, curr) => {
      return `${prev} REPLACE INTO "${t4}" VALUES (${serializeSQLValues(tableFields.map((c4) => {
        var _a2;
        return `'${sanitizeSQLStatement((_a2 = curr == null ? void 0 : curr[c4]) != null ? _a2 : "")}'`;
      }))});`;
    }, "");
    const idxQuery = tables[t4].uniques.filter((f4) => f4).reduce((p3, c4) => {
      return `${p3} CREATE UNIQUE INDEX IF NOT EXISTS "idx_${t4}_${c4.replace(
        /,/g,
        "_"
      )}" ON "${t4}"(${c4});`;
    }, "");
    const insertQuery = `CREATE TABLE IF NOT EXISTS "${t4}" (${fieldQuery}); ${idxQuery} BEGIN TRANSACTION; ${rowsQuery} COMMIT;`;
    return `DROP INDEX IF EXISTS "idx_${t4}__id"; DROP TABLE IF EXISTS "${t4}"; ${fieldQuery.length > 0 ? insertQuery : ""}`;
  }));
  try {
    db.exec(sqlstr);
  } catch (e4) {
    console.log(sqlstr);
    console.log(e4);
  }
};
var saveDBToPath = async (plugin, path, tables) => {
  const sqlJS = await plugin.sqlJS();
  let db = await getDB(sqlJS, path);
  if (!db) {
    db.close();
    return false;
  }
  replaceDB(db, tables);
  await saveDBFile(path, db.export().buffer);
  db.close();
  const mdbInfo = plugin.index.spacesIndex.get(spaceFolderForMDBPath(path, plugin));
  if (mdbInfo) {
    if ((mdbInfo == null ? void 0 : mdbInfo.space.framePath) == path) {
      plugin.index.reloadFrames(mdbInfo.space);
    } else if ((mdbInfo == null ? void 0 : mdbInfo.space.dbPath) == path) {
      plugin.index.reloadContext(mdbInfo.space);
    }
  }
  return true;
};

// src/utils/contexts/mdb.ts
var dbTableToMDBTable = (table, schema, fields) => {
  var _a2;
  return {
    schema,
    cols: fields,
    rows: (_a2 = table == null ? void 0 : table.rows) != null ? _a2 : []
  };
};
var updateFieldsToSchema = (fields, space) => {
  const defaultFields = defaultFieldsForContext(space);
  return [
    ...fields,
    ...defaultFields.rows.filter(
      (f4) => !fields.some((g4) => g4.name == f4.name && g4.schemaId == f4.schemaId)
    )
  ];
};
var getContextMDB = async (plugin, space) => {
  if (!space)
    return null;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(space.dbPath, space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  await sanitizeTableSchema(plugin, db, space, "context");
  let fields;
  let schemas;
  try {
    fields = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_fields`)
    )[0].rows;
    schemas = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_schema`)
    )[0].rows;
  } catch (e4) {
    db.close();
    return null;
  }
  let dbTable;
  try {
    dbTable = schemas.filter((f4) => f4.type == "db").map((f4) => ({ [f4.id]: dbResultsToDBTables(
      db.exec(
        `SELECT * FROM "${f4.id}"`
      )
    )[0] })).reduce((p3, c4) => ({ ...p3, ...c4 }), {});
  } catch (e4) {
    db.close();
    return null;
  }
  db.close();
  return {
    schemas,
    fields,
    tables: dbTable
  };
};
var getFramesMDB = async (plugin, space) => {
  var _a2, _b2, _c2, _d2;
  if (!space)
    return null;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(space.framePath, space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  let fields;
  let schemas;
  try {
    fields = (_b2 = (_a2 = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_fields`)
    )[0]) == null ? void 0 : _a2.rows) != null ? _b2 : [];
    schemas = (_d2 = (_c2 = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_schema`)
    )[0]) == null ? void 0 : _c2.rows) != null ? _d2 : [];
  } catch (e4) {
    console.log(e4);
    db.close();
    return null;
  }
  const dbTable = schemas.filter((f4) => f4.type == "frame" || f4.type == "listitem").map((f4) => {
    try {
      const table = dbResultsToDBTables(
        db.exec(
          `SELECT * FROM "${f4.id}"`
        )
      )[0];
      return { [f4.id]: table };
    } catch (e4) {
      return {};
    }
  }).reduce((p3, c4) => ({ ...p3, ...c4 }), {});
  db.close();
  return {
    schemas,
    fields,
    tables: dbTable
  };
};
var dbPathForSpaceInfo = (spaceInfo, type) => type == "context" ? spaceInfo.dbPath : type == "frames" ? spaceInfo.framePath : null;
var getMDBTable = async (plugin, space, table, dbType) => {
  if (!space)
    return null;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(space.dbPath, space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  await sanitizeTableSchema(plugin, db, space, dbType);
  let fieldsTables;
  let schema;
  try {
    fieldsTables = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_fields WHERE schemaId = '${table}'`)
    );
    schema = dbResultsToDBTables(
      db.exec(`SELECT * FROM m_schema WHERE id = '${table}'`)
    )[0].rows[0];
  } catch (e4) {
    db.close();
    return null;
  }
  if (fieldsTables.length == 0) {
    db.close();
    return {
      schema,
      cols: [],
      rows: []
    };
  }
  const fields = fieldsTables[0].rows.filter(
    (f4) => f4.name.length > 0
  );
  const dbTable = dbResultsToDBTables(
    db.exec(
      `SELECT ${serializeSQLFieldNames(
        fields.reduce((p3, c4) => [...p3, `"${c4.name}"`], [])
      )} FROM "${table}"`
    )
  );
  db.close();
  return dbTableToMDBTable(
    dbTable[0],
    schema,
    schema.primary ? updateFieldsToSchema(fields, space) : fields
  );
};
var deleteMDBTable = async (plugin, space, table, dbPath) => {
  if (space.readOnly)
    return false;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(dbPath, space.isRemote);
  if (!buf) {
    return false;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  deleteFromDB(db, "m_schema", `id = '${sanitizeSQLStatement(table)}'`);
  deleteFromDB(db, "m_schema", `def = '${sanitizeSQLStatement(table)}'`);
  deleteFromDB(db, "m_fields", `schemaId = '${sanitizeSQLStatement(table)}'`);
  dropTable(db, table);
  await saveDBFile(dbPath, db.export().buffer);
  db.close();
  return true;
};
var getMDBTableSchemas = async (plugin, space, dbType) => {
  var _a2, _b2;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(dbPathForSpaceInfo(space, dbType), space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  await sanitizeTableSchema(plugin, db, space, dbType);
  const tables = db.exec(`SELECT * FROM m_schema`);
  db.close();
  return ((_b2 = (_a2 = tables[0]) == null ? void 0 : _a2.values) != null ? _b2 : []).map((f4) => {
    const [id2, name, type, def, predicate, primary] = f4;
    return { id: id2, name, type, def, predicate, primary };
  });
};
var saveMDBToPath = async (plugin, context, mdb) => {
  var _a2, _b2;
  if (context.readOnly)
    return;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(context.dbPath, context.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  const fieldsTables = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_fields WHERE schemaId != '${mdb.schema.id}'`)
  );
  const schemaTables = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_schema`)
  );
  const newSchemas = schemaTables.length > 0 ? { ...schemaTables[0], uniques: [], rows: [...schemaTables[0].rows.filter((f4) => f4.id != mdb.schema.id), mdb.schema] } : { ...defaultFolderSchema, rows: [...defaultFolderSchema.rows, mdb.schema] };
  const tables = {
    m_schema: newSchemas,
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: [...(_b2 = (_a2 = fieldsTables[0]) == null ? void 0 : _a2.rows) != null ? _b2 : [], ...mdb.cols]
    },
    [mdb.schema.id]: {
      uniques: [],
      cols: mdb.cols.map((c4) => c4.name),
      rows: mdb.rows
    }
  };
  db.close();
  return saveDBToPath(plugin, context.dbPath, tables);
};
var optionValuesForColumn = (column, table) => {
  var _a2;
  return uniq(
    (_a2 = table == null ? void 0 : table.rows.reduce((p3, c4) => {
      return [...p3, ...parseMultiString(c4[column])];
    }, [])) != null ? _a2 : []
  );
};
var defaultTableDataForContext = (plugin, space) => {
  const files = [...plugin.index.spacesMap.getInverse(space.path)];
  return {
    ...defaultMDBTableForContext(space),
    rows: files.map((f4) => ({ File: f4 }))
  };
};
var createFramesMDB = async (plugin, space) => {
  const dbField = {
    m_schema: defaultFramesSchema,
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: []
    }
  };
  const result = await saveDBToPath(plugin, space.framePath, dbField);
  if (result) {
    await plugin.index.reloadFrames(space);
    return true;
  }
  return false;
};
var createContextMDB = async (plugin, space) => {
  var _a2;
  const table = defaultTableDataForContext(plugin, space);
  if (table) {
    const defaultFields = defaultFieldsForContext(space);
    const defaultTable = defaultTablesForContext(space);
    const dbField = {
      ...defaultTable,
      m_fields: {
        uniques: defaultFields.uniques,
        cols: defaultFields.cols,
        rows: [...(_a2 = defaultFields.rows) != null ? _a2 : [], ...table.cols]
      },
      [table.schema.id]: {
        uniques: table.cols.filter((c4) => c4.unique == "true").map((c4) => c4.name),
        cols: table.cols.map((c4) => c4.name),
        rows: table.rows
      }
    };
    const result = await saveDBToPath(plugin, space.dbPath, dbField);
    if (result) {
      await plugin.index.reloadContext(space);
      table.rows.map((f4) => getAbstractFileAtPath(app, f4.File)).forEach((f4) => f4 && plugin.index.reloadFile(f4, true));
      return true;
    }
    return false;
  }
  return false;
};
var sanitizeTableSchema = async (plugin, db, space, dbType) => {
  const sqlJS = await plugin.sqlJS();
  const tableRes = db.exec(
    `SELECT name FROM sqlite_master WHERE type='table';`
  );
  if (dbType == "context") {
    if (!tableRes[0] || !tableRes[0].values.some((f4) => f4[0] == "m_schema") || !tableRes[0].values.some((f4) => f4[0] == "m_fields") || !tableRes[0].values.some((f4) => f4[0] == "files")) {
      await createContextMDB(plugin, space);
    }
  } else {
    if (!tableRes[0] || !tableRes[0].values.some((f4) => f4[0] == "m_schema") || !tableRes[0].values.some((f4) => f4[0] == "m_fields")) {
      await createFramesMDB(plugin, space);
    }
  }
};
var createNewRow = (mdb, row, index) => {
  if (index) {
    return {
      ...mdb,
      rows: insert(mdb.rows, index, row)
    };
  }
  return {
    ...mdb,
    rows: [...mdb.rows, row]
  };
};
var deleteSpaceFolder = async (plugin, space) => {
  const spacePath = folderForSpace(space, plugin);
  if (getAbstractFileAtPath(app, spacePath)) {
    await deleteFile(plugin, getAbstractFileAtPath(app, spacePath));
  }
};
var spaceFolderDelete = (space) => {
  app.workspace.iterateLeaves((leaf) => {
    if (leaf.view.getViewType() == SPACE_VIEW_TYPE && leaf.view.getState().path == space) {
      leaf.setViewState({ type: "empty" });
    }
  }, app.workspace["rootSplit"]);
};
var renameSpaceFolder = async (plugin, space, newSpace) => {
  const spacePath = folderForSpace(space, plugin);
  if (getAbstractFileAtPath(app, spacePath)) {
    if (!getAbstractFileAtPath(
      app,
      folderForSpace(newSpace, plugin)
    )) {
      await renameFile(
        plugin,
        getAbstractFileAtPath(app, spacePath),
        newSpace
      );
    } else {
      await deleteFile(plugin, getAbstractFileAtPath(app, spacePath));
    }
  }
};

// src/utils/frames/mdb.ts
var getMFrameTables = async (plugin, space) => {
  if (!frames)
    return null;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(space.framePath, space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  const schemas = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_schema`)
  )[0].rows;
  const mdbTables = {};
  schemas.forEach((schema) => {
    var _a2, _b2;
    let fieldsTables;
    try {
      fieldsTables = dbResultsToDBTables(
        db.exec(`SELECT * FROM m_fields WHERE schemaId = '${schema.id}'`)
      );
    } catch (e4) {
      return;
    }
    const fields = ((_b2 = (_a2 = fieldsTables == null ? void 0 : fieldsTables[0]) == null ? void 0 : _a2.rows) != null ? _b2 : []).filter(
      (f4) => f4.name.length > 0
    );
    let dbTable;
    try {
      dbTable = dbResultsToDBTables(db.exec(`SELECT * FROM "${schema.id}"`));
      mdbTables[schema.id] = dbTableToMDBTable(
        dbTable[0],
        schema,
        fields
      );
    } catch (e4) {
      mdbTables[schema.id] = {
        schema,
        cols: fields,
        rows: []
      };
      return;
    }
  });
  db.close();
  return mdbTables;
};
var saveMFramesToPath = async (plugin, space, mdb) => {
  var _a2, _b2, _c2;
  if (space.readOnly)
    return;
  const sqlJS = await plugin.sqlJS();
  const buf = await getDBFile(space.framePath, space.isRemote);
  if (!buf) {
    return null;
  }
  const db = new sqlJS.Database(new Uint8Array(buf));
  const fieldsTables = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_fields WHERE schemaId != '${mdb.schema.id}'`)
  );
  const schemaTables = dbResultsToDBTables(
    db.exec(`SELECT * FROM m_schema`)
  );
  const newSchemas = ((_a2 = schemaTables[0]) == null ? void 0 : _a2.rows) ? { ...schemaTables[0], uniques: [], rows: [...schemaTables[0].rows.filter((f4) => f4.id != mdb.schema.id), mdb.schema] } : { ...defaultFramesSchema, rows: [...defaultFramesSchema.rows, mdb.schema] };
  const tables = {
    m_schema: newSchemas,
    m_fields: {
      uniques: fieldSchema.uniques,
      cols: fieldSchema.cols,
      rows: [...(_c2 = (_b2 = fieldsTables[0]) == null ? void 0 : _b2.rows) != null ? _c2 : [], ...mdb.cols]
    },
    [mdb.schema.id]: {
      uniques: defaultFrameSchema.uniques,
      cols: defaultFrameSchema.cols,
      rows: mdb.rows
    }
  };
  db.close();
  return saveDBToPath(plugin, space.framePath, tables);
};

// src/context/SpaceContext.tsx
init_compat_module();
var SpaceContext = F({
  contexts: [],
  spaceInfo: null,
  readMode: false
});
var SpaceContextProvider = (props2) => {
  var _a2;
  const readMode = (_a2 = props2.space) == null ? void 0 : _a2.readOnly;
  const spaceInfo = F2(() => {
    return props2.space;
  }, [props2.space]);
  const [contexts, setContexts] = h2([]);
  const reloadSpace = () => {
    var _a3;
    const spaceCache = props2.plugin.index.spacesIndex.get(spaceInfo.path);
    if (spaceCache) {
      setContexts((_a3 = spaceCache.contexts) != null ? _a3 : []);
    }
  };
  p2(() => {
    reloadSpace();
  }, []);
  const refreshSpace = T2(
    async (evt) => {
      if (evt.detail.type == "space") {
        if (evt.detail.name == spaceInfo.path) {
          reloadSpace();
        }
      }
    },
    [props2.plugin, spaceInfo]
  );
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpace);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpace);
    };
  }, [refreshSpace]);
  return /* @__PURE__ */ Cn.createElement(SpaceContext.Provider, {
    value: {
      contexts,
      readMode,
      spaceInfo
    }
  }, props2.children);
};

// src/context/FramesMDBContext.tsx
var FramesMDBContext = F({
  frameSchemas: [],
  frames: [],
  tableData: null,
  saveFrame: () => null,
  frameSchema: null,
  setFrameSchema: () => null,
  saveSchema: () => null,
  deleteSchema: () => null,
  dbFileExists: false,
  getMDBData: () => null
});
var FramesMDBProvider = (props2) => {
  const [dbFileExists, setDBFileExists] = h2(false);
  const [schemaTable, setSchemaTable] = h2(null);
  const schemas = F2(
    () => {
      var _a2, _b2;
      return (_b2 = ((_a2 = schemaTable == null ? void 0 : schemaTable.rows) != null ? _a2 : []).map(
        (f4) => mdbSchemaToFrameSchema(f4)
      )) != null ? _b2 : [];
    },
    [schemaTable]
  );
  const frames2 = schemas.filter((f4) => f4.type == "frame");
  const [frameData, setFrameData] = h2(null);
  const [frameSchema, setFrameSchema] = h2(null);
  const tableData = F2(() => {
    return frameData == null ? void 0 : frameData[frameSchema == null ? void 0 : frameSchema.id];
  }, [frameData, frameSchema]);
  const defaultSchema = defaultFramesSchema;
  const { spaceInfo, readMode } = q2(SpaceContext);
  const deleteSchema = async (table) => {
    if (table.primary)
      return;
    const deleteResult = await deleteMDBTable(
      props2.plugin,
      spaceInfo,
      table.id,
      spaceInfo.framePath
    );
    if (deleteResult) {
      const newSchemaTable = {
        ...schemaTable,
        rows: schemaTable.rows.filter(
          (f4) => f4.id != table.id && f4.def != table.id
        )
      };
      setSchemaTable(newSchemaTable);
    }
  };
  const saveSchema = async (table) => {
    const newSchema = schemaTable.rows.find((f4) => f4.id == table.id) ? true : false;
    const newSchemaTable = newSchema ? {
      ...schemaTable,
      rows: schemaTable.rows.map(
        (f4) => f4.id == table.id ? frameSchemaToMDBSchema(table) : f4
      )
    } : {
      ...schemaTable,
      rows: [...schemaTable.rows, frameSchemaToMDBSchema(table)]
    };
    if (!spaceInfo.readOnly) {
      await saveDBToPath(props2.plugin, spaceInfo.framePath, {
        m_schema: newSchemaTable
      });
      if (!dbFileExists) {
        saveFrame(
          tableData != null ? tableData : {
            schema: frameSchemaToMDBSchema(table),
            cols: [],
            rows: []
          }
        );
      }
    }
    if (table.id == (frameSchema == null ? void 0 : frameSchema.id)) {
      setFrameSchema(table);
      setFrameData((f4) => ({
        ...f4,
        [table.id]: {
          ...f4[table.id],
          schema: frameSchemaToMDBSchema(table)
        }
      }));
    }
    setSchemaTable(newSchemaTable);
  };
  p2(() => {
    if (schemaTable)
      getMDBData().then((f4) => {
        if (f4 && Object.keys(f4).length > 0) {
          setFrameData(f4);
        }
      });
  }, [schemaTable]);
  p2(() => {
    var _a2, _b2;
    if (schemaTable) {
      if (props2.schema) {
        if ((frameSchema == null ? void 0 : frameSchema.id) != props2.schema) {
          const preselectSchema = schemaTable.rows.find(
            (g4) => g4.id == props2.schema
          );
          if (preselectSchema) {
            if (preselectSchema.type == "frame" || preselectSchema.type == "listitem") {
              setFrameSchema(mdbSchemaToFrameSchema(preselectSchema));
              return;
            } else {
              const preselectDBSchema = schemaTable.rows.find(
                (g4) => g4.id == preselectSchema.def
              );
              if (preselectDBSchema) {
                setFrameSchema(mdbSchemaToFrameSchema(preselectDBSchema));
                return;
              }
            }
          } else {
            const newSchema = {
              id: uniqueNameFromString(
                sanitizeTableName(props2.schema),
                schemaTable.rows.map((g4) => g4.id)
              ),
              name: props2.schema,
              type: "frame"
            };
            setFrameSchema(newSchema);
          }
        }
      } else {
        if (!frameSchema) {
          setFrameSchema(
            mdbSchemaToFrameSchema(
              (_a2 = schemaTable.rows) == null ? void 0 : _a2.find((g4) => g4.type == "frame")
            )
          );
        } else {
          setFrameSchema(
            mdbSchemaToFrameSchema(
              (_b2 = schemaTable.rows) == null ? void 0 : _b2.find((g4) => g4.id == frameSchema.id)
            )
          );
        }
      }
    }
  }, [schemaTable]);
  const loadTables = T2(async () => {
    if (!spaceInfo)
      return;
    const mdbExists = await app.vault.adapter.exists(spaceInfo.framePath);
    if (mdbExists || spaceInfo.isRemote) {
      setDBFileExists(true);
      getMDBTableSchemas(props2.plugin, spaceInfo, "frames").then((f4) => {
        if (f4)
          setSchemaTable((prev) => ({
            ...defaultSchema,
            rows: f4
          }));
      });
    } else {
      if (props2.schema) {
        setSchemaTable((prev) => defaultSchema);
      } else {
        setSchemaTable((prev) => defaultSchema);
      }
    }
  }, [defaultSchema, props2.plugin, props2.schema, spaceInfo]);
  const refreshSpace = T2(
    async (evt) => {
      if (evt.detail.type == "frames" && evt.detail.name == spaceInfo.path) {
        loadTables();
        return;
      }
    },
    [spaceInfo, loadTables]
  );
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpace);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpace);
    };
  }, [refreshSpace]);
  const getMDBData = async () => {
    if (dbFileExists) {
      return await getMFrameTables(props2.plugin, spaceInfo);
    } else {
      return DefaultMDBTables;
    }
  };
  p2(() => {
    loadTables();
  }, [spaceInfo]);
  const saveFrame = async (newTable) => {
    if (spaceInfo.readOnly)
      return;
    if (!dbFileExists) {
      const dbTables = {
        ...mdbFrameToDBTables(DefaultMDBTables, {
          m_fields: fieldSchema.uniques,
          main: defaultFrameSchema.uniques
        }),
        ...schemasAndFields(DefaultMDBTables),
        [newTable.schema.id]: {
          uniques: defaultFrameSchema.uniques,
          cols: defaultFrameSchema.cols,
          rows: newTable.rows
        }
      };
      await saveDBToPath(props2.plugin, spaceInfo.framePath, dbTables).then(
        (f4) => {
          setDBFileExists(true);
          f4 ? getMDBData() : new import_obsidian5.Notice("DB ERROR");
        }
      );
    } else {
      await saveMFramesToPath(
        props2.plugin,
        spaceInfo,
        newTable
      ).then((f4) => {
        f4 ? setFrameData((p3) => ({
          ...p3,
          [newTable.schema.id]: newTable
        })) : new import_obsidian5.Notice("DB ERROR");
      });
    }
  };
  return /* @__PURE__ */ Cn.createElement(FramesMDBContext.Provider, {
    value: {
      frames: frames2,
      tableData,
      saveFrame,
      frameSchemas: schemas,
      saveSchema,
      deleteSchema,
      dbFileExists,
      frameSchema,
      setFrameSchema,
      getMDBData
    }
  }, props2.children);
};

// src/components/Space/Contexts/SpaceView.tsx
var import_obsidian46 = require("obsidian");
init_compat_module();

// node_modules/@dnd-kit/core/dist/core.esm.js
init_compat_module();
init_compat_module();

// node_modules/@dnd-kit/utilities/dist/utilities.esm.js
init_compat_module();
function useCombinedRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return F2(
    () => (node) => {
      refs.forEach((ref2) => ref2(node));
    },
    refs
  );
}
var canUseDOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
function isWindow(element) {
  const elementString = Object.prototype.toString.call(element);
  return elementString === "[object Window]" || elementString === "[object global]";
}
function isNode(node) {
  return "nodeType" in node;
}
function getWindow(target) {
  var _target$ownerDocument, _target$ownerDocument2;
  if (!target) {
    return window;
  }
  if (isWindow(target)) {
    return target;
  }
  if (!isNode(target)) {
    return window;
  }
  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;
}
function isDocument(node) {
  const {
    Document
  } = getWindow(node);
  return node instanceof Document;
}
function isHTMLElement(node) {
  if (isWindow(node)) {
    return false;
  }
  return node instanceof getWindow(node).HTMLElement;
}
function isSVGElement(node) {
  return node instanceof getWindow(node).SVGElement;
}
function getOwnerDocument(target) {
  if (!target) {
    return document;
  }
  if (isWindow(target)) {
    return target.document;
  }
  if (!isNode(target)) {
    return document;
  }
  if (isDocument(target)) {
    return target;
  }
  if (isHTMLElement(target)) {
    return target.ownerDocument;
  }
  return document;
}
var useIsomorphicLayoutEffect = canUseDOM ? y2 : p2;
function useEvent(handler) {
  const handlerRef = _2(handler);
  useIsomorphicLayoutEffect(() => {
    handlerRef.current = handler;
  });
  return T2(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return handlerRef.current == null ? void 0 : handlerRef.current(...args);
  }, []);
}
function useInterval() {
  const intervalRef = _2(null);
  const set = T2((listener, duration) => {
    intervalRef.current = setInterval(listener, duration);
  }, []);
  const clear = T2(() => {
    if (intervalRef.current !== null) {
      clearInterval(intervalRef.current);
      intervalRef.current = null;
    }
  }, []);
  return [set, clear];
}
function useLatestValue(value, dependencies) {
  if (dependencies === void 0) {
    dependencies = [value];
  }
  const valueRef = _2(value);
  useIsomorphicLayoutEffect(() => {
    if (valueRef.current !== value) {
      valueRef.current = value;
    }
  }, dependencies);
  return valueRef;
}
function useLazyMemo(callback, dependencies) {
  const valueRef = _2();
  return F2(
    () => {
      const newValue = callback(valueRef.current);
      valueRef.current = newValue;
      return newValue;
    },
    [...dependencies]
  );
}
function useNodeRef(onChange) {
  const onChangeHandler = useEvent(onChange);
  const node = _2(null);
  const setNodeRef = T2(
    (element) => {
      if (element !== node.current) {
        onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);
      }
      node.current = element;
    },
    []
  );
  return [node, setNodeRef];
}
function usePrevious(value) {
  const ref2 = _2();
  p2(() => {
    ref2.current = value;
  }, [value]);
  return ref2.current;
}
var ids = {};
function useUniqueId(prefix, value) {
  return F2(() => {
    if (value) {
      return value;
    }
    const id2 = ids[prefix] == null ? 0 : ids[prefix] + 1;
    ids[prefix] = id2;
    return prefix + "-" + id2;
  }, [prefix, value]);
}
function createAdjustmentFn(modifier) {
  return function(object) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((accumulator, adjustment) => {
      const entries = Object.entries(adjustment);
      for (const [key2, valueAdjustment] of entries) {
        const value = accumulator[key2];
        if (value != null) {
          accumulator[key2] = value + modifier * valueAdjustment;
        }
      }
      return accumulator;
    }, {
      ...object
    });
  };
}
var add = /* @__PURE__ */ createAdjustmentFn(1);
var subtract = /* @__PURE__ */ createAdjustmentFn(-1);
function hasViewportRelativeCoordinates(event) {
  return "clientX" in event && "clientY" in event;
}
function isKeyboardEvent(event) {
  if (!event) {
    return false;
  }
  const {
    KeyboardEvent
  } = getWindow(event.target);
  return KeyboardEvent && event instanceof KeyboardEvent;
}
function isTouchEvent(event) {
  if (!event) {
    return false;
  }
  const {
    TouchEvent
  } = getWindow(event.target);
  return TouchEvent && event instanceof TouchEvent;
}
function getEventCoordinates(event) {
  if (isTouchEvent(event)) {
    if (event.touches && event.touches.length) {
      const {
        clientX: x5,
        clientY: y5
      } = event.touches[0];
      return {
        x: x5,
        y: y5
      };
    } else if (event.changedTouches && event.changedTouches.length) {
      const {
        clientX: x5,
        clientY: y5
      } = event.changedTouches[0];
      return {
        x: x5,
        y: y5
      };
    }
  }
  if (hasViewportRelativeCoordinates(event)) {
    return {
      x: event.clientX,
      y: event.clientY
    };
  }
  return null;
}
var CSS = /* @__PURE__ */ Object.freeze({
  Translate: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        x: x5,
        y: y5
      } = transform;
      return "translate3d(" + (x5 ? Math.round(x5) : 0) + "px, " + (y5 ? Math.round(y5) : 0) + "px, 0)";
    }
  },
  Scale: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        scaleX,
        scaleY
      } = transform;
      return "scaleX(" + scaleX + ") scaleY(" + scaleY + ")";
    }
  },
  Transform: {
    toString(transform) {
      if (!transform) {
        return;
      }
      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(" ");
    }
  },
  Transition: {
    toString(_ref) {
      let {
        property: property2,
        duration,
        easing
      } = _ref;
      return property2 + " " + duration + "ms " + easing;
    }
  }
});
var SELECTOR = "a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]";
function findFirstFocusableNode(element) {
  if (element.matches(SELECTOR)) {
    return element;
  }
  return element.querySelector(SELECTOR);
}

// node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js
init_compat_module();
var hiddenStyles = {
  display: "none"
};
function HiddenText(_ref) {
  let {
    id: id2,
    value
  } = _ref;
  return Cn.createElement("div", {
    id: id2,
    style: hiddenStyles
  }, value);
}
var visuallyHidden = {
  position: "fixed",
  width: 1,
  height: 1,
  margin: -1,
  border: 0,
  padding: 0,
  overflow: "hidden",
  clip: "rect(0 0 0 0)",
  clipPath: "inset(100%)",
  whiteSpace: "nowrap"
};
function LiveRegion(_ref) {
  let {
    id: id2,
    announcement
  } = _ref;
  return Cn.createElement("div", {
    id: id2,
    style: visuallyHidden,
    role: "status",
    "aria-live": "assertive",
    "aria-atomic": true
  }, announcement);
}
function useAnnouncement() {
  const [announcement, setAnnouncement] = h2("");
  const announce = T2((value) => {
    if (value != null) {
      setAnnouncement(value);
    }
  }, []);
  return {
    announce,
    announcement
  };
}

// node_modules/@dnd-kit/core/dist/core.esm.js
var DndMonitorContext = /* @__PURE__ */ F(null);
function useDndMonitor(listener) {
  const registerListener = q2(DndMonitorContext);
  p2(() => {
    if (!registerListener) {
      throw new Error("useDndMonitor must be used within a children of <DndContext>");
    }
    const unsubscribe = registerListener(listener);
    return unsubscribe;
  }, [listener, registerListener]);
}
function useDndMonitorProvider() {
  const [listeners] = h2(() => /* @__PURE__ */ new Set());
  const registerListener = T2((listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  }, [listeners]);
  const dispatch = T2((_ref) => {
    let {
      type,
      event
    } = _ref;
    listeners.forEach((listener) => {
      var _listener$type;
      return (_listener$type = listener[type]) == null ? void 0 : _listener$type.call(listener, event);
    });
  }, [listeners]);
  return [dispatch, registerListener];
}
var defaultScreenReaderInstructions = {
  draggable: "\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  "
};
var defaultAnnouncements = {
  onDragStart(_ref) {
    let {
      active
    } = _ref;
    return "Picked up draggable item " + active.id + ".";
  },
  onDragOver(_ref2) {
    let {
      active,
      over
    } = _ref2;
    if (over) {
      return "Draggable item " + active.id + " was moved over droppable area " + over.id + ".";
    }
    return "Draggable item " + active.id + " is no longer over a droppable area.";
  },
  onDragEnd(_ref3) {
    let {
      active,
      over
    } = _ref3;
    if (over) {
      return "Draggable item " + active.id + " was dropped over droppable area " + over.id;
    }
    return "Draggable item " + active.id + " was dropped.";
  },
  onDragCancel(_ref4) {
    let {
      active
    } = _ref4;
    return "Dragging was cancelled. Draggable item " + active.id + " was dropped.";
  }
};
function Accessibility(_ref) {
  let {
    announcements = defaultAnnouncements,
    container,
    hiddenTextDescribedById,
    screenReaderInstructions = defaultScreenReaderInstructions
  } = _ref;
  const {
    announce,
    announcement
  } = useAnnouncement();
  const liveRegionId = useUniqueId("DndLiveRegion");
  const [mounted, setMounted] = h2(false);
  p2(() => {
    setMounted(true);
  }, []);
  useDndMonitor(F2(() => ({
    onDragStart(_ref2) {
      let {
        active
      } = _ref2;
      announce(announcements.onDragStart({
        active
      }));
    },
    onDragMove(_ref3) {
      let {
        active,
        over
      } = _ref3;
      if (announcements.onDragMove) {
        announce(announcements.onDragMove({
          active,
          over
        }));
      }
    },
    onDragOver(_ref4) {
      let {
        active,
        over
      } = _ref4;
      announce(announcements.onDragOver({
        active,
        over
      }));
    },
    onDragEnd(_ref5) {
      let {
        active,
        over
      } = _ref5;
      announce(announcements.onDragEnd({
        active,
        over
      }));
    },
    onDragCancel(_ref6) {
      let {
        active,
        over
      } = _ref6;
      announce(announcements.onDragCancel({
        active,
        over
      }));
    }
  }), [announce, announcements]));
  if (!mounted) {
    return null;
  }
  const markup = Cn.createElement(Cn.Fragment, null, Cn.createElement(HiddenText, {
    id: hiddenTextDescribedById,
    value: screenReaderInstructions.draggable
  }), Cn.createElement(LiveRegion, {
    id: liveRegionId,
    announcement
  }));
  return container ? z3(markup, container) : markup;
}
var Action;
(function(Action2) {
  Action2["DragStart"] = "dragStart";
  Action2["DragMove"] = "dragMove";
  Action2["DragEnd"] = "dragEnd";
  Action2["DragCancel"] = "dragCancel";
  Action2["DragOver"] = "dragOver";
  Action2["RegisterDroppable"] = "registerDroppable";
  Action2["SetDroppableDisabled"] = "setDroppableDisabled";
  Action2["UnregisterDroppable"] = "unregisterDroppable";
})(Action || (Action = {}));
function noop() {
}
function useSensor(sensor, options) {
  return F2(
    () => ({
      sensor,
      options: options != null ? options : {}
    }),
    [sensor, options]
  );
}
function useSensors() {
  for (var _len = arguments.length, sensors = new Array(_len), _key = 0; _key < _len; _key++) {
    sensors[_key] = arguments[_key];
  }
  return F2(
    () => [...sensors].filter((sensor) => sensor != null),
    [...sensors]
  );
}
var defaultCoordinates = /* @__PURE__ */ Object.freeze({
  x: 0,
  y: 0
});
function distanceBetween(p1, p22) {
  return Math.sqrt(Math.pow(p1.x - p22.x, 2) + Math.pow(p1.y - p22.y, 2));
}
function getRelativeTransformOrigin(event, rect) {
  const eventCoordinates = getEventCoordinates(event);
  if (!eventCoordinates) {
    return "0 0";
  }
  const transformOrigin = {
    x: (eventCoordinates.x - rect.left) / rect.width * 100,
    y: (eventCoordinates.y - rect.top) / rect.height * 100
  };
  return transformOrigin.x + "% " + transformOrigin.y + "%";
}
function sortCollisionsAsc(_ref, _ref2) {
  let {
    data: {
      value: a5
    }
  } = _ref;
  let {
    data: {
      value: b4
    }
  } = _ref2;
  return a5 - b4;
}
function sortCollisionsDesc(_ref3, _ref4) {
  let {
    data: {
      value: a5
    }
  } = _ref3;
  let {
    data: {
      value: b4
    }
  } = _ref4;
  return b4 - a5;
}
function cornersOfRectangle(_ref5) {
  let {
    left,
    top,
    height,
    width
  } = _ref5;
  return [{
    x: left,
    y: top
  }, {
    x: left + width,
    y: top
  }, {
    x: left,
    y: top + height
  }, {
    x: left + width,
    y: top + height
  }];
}
function getFirstCollision(collisions, property2) {
  if (!collisions || collisions.length === 0) {
    return null;
  }
  const [firstCollision] = collisions;
  return property2 ? firstCollision[property2] : firstCollision;
}
function centerOfRectangle(rect, left, top) {
  if (left === void 0) {
    left = rect.left;
  }
  if (top === void 0) {
    top = rect.top;
  }
  return {
    x: left + rect.width * 0.5,
    y: top + rect.height * 0.5
  };
}
var closestCenter = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);
      collisions.push({
        id: id2,
        data: {
          droppableContainer,
          value: distBetween
        }
      });
    }
  }
  return collisions.sort(sortCollisionsAsc);
};
var closestCorners = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const corners = cornersOfRectangle(collisionRect);
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const rectCorners = cornersOfRectangle(rect);
      const distances = corners.reduce((accumulator, corner, index) => {
        return accumulator + distanceBetween(rectCorners[index], corner);
      }, 0);
      const effectiveDistance = Number((distances / 4).toFixed(4));
      collisions.push({
        id: id2,
        data: {
          droppableContainer,
          value: effectiveDistance
        }
      });
    }
  }
  return collisions.sort(sortCollisionsAsc);
};
function getIntersectionRatio(entry, target) {
  const top = Math.max(target.top, entry.top);
  const left = Math.max(target.left, entry.left);
  const right = Math.min(target.left + target.width, entry.left + entry.width);
  const bottom = Math.min(target.top + target.height, entry.top + entry.height);
  const width = right - left;
  const height = bottom - top;
  if (left < right && top < bottom) {
    const targetArea = target.width * target.height;
    const entryArea = entry.width * entry.height;
    const intersectionArea = width * height;
    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
    return Number(intersectionRatio.toFixed(4));
  }
  return 0;
}
var rectIntersection = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id: id2
    } = droppableContainer;
    const rect = droppableRects.get(id2);
    if (rect) {
      const intersectionRatio = getIntersectionRatio(rect, collisionRect);
      if (intersectionRatio > 0) {
        collisions.push({
          id: id2,
          data: {
            droppableContainer,
            value: intersectionRatio
          }
        });
      }
    }
  }
  return collisions.sort(sortCollisionsDesc);
};
function adjustScale(transform, rect1, rect2) {
  return {
    ...transform,
    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,
    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1
  };
}
function getRectDelta(rect1, rect2) {
  return rect1 && rect2 ? {
    x: rect1.left - rect2.left,
    y: rect1.top - rect2.top
  } : defaultCoordinates;
}
function createRectAdjustmentFn(modifier) {
  return function adjustClientRect(rect) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((acc, adjustment) => ({
      ...acc,
      top: acc.top + modifier * adjustment.y,
      bottom: acc.bottom + modifier * adjustment.y,
      left: acc.left + modifier * adjustment.x,
      right: acc.right + modifier * adjustment.x
    }), {
      ...rect
    });
  };
}
var getAdjustedRect = /* @__PURE__ */ createRectAdjustmentFn(1);
function parseTransform(transform) {
  if (transform.startsWith("matrix3d(")) {
    const transformArray = transform.slice(9, -1).split(/, /);
    return {
      x: +transformArray[12],
      y: +transformArray[13],
      scaleX: +transformArray[0],
      scaleY: +transformArray[5]
    };
  } else if (transform.startsWith("matrix(")) {
    const transformArray = transform.slice(7, -1).split(/, /);
    return {
      x: +transformArray[4],
      y: +transformArray[5],
      scaleX: +transformArray[0],
      scaleY: +transformArray[3]
    };
  }
  return null;
}
function inverseTransform(rect, transform, transformOrigin) {
  const parsedTransform = parseTransform(transform);
  if (!parsedTransform) {
    return rect;
  }
  const {
    scaleX,
    scaleY,
    x: translateX,
    y: translateY
  } = parsedTransform;
  const x5 = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);
  const y5 = rect.top - translateY - (1 - scaleY) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(" ") + 1));
  const w5 = scaleX ? rect.width / scaleX : rect.width;
  const h5 = scaleY ? rect.height / scaleY : rect.height;
  return {
    width: w5,
    height: h5,
    top: y5,
    right: x5 + w5,
    bottom: y5 + h5,
    left: x5
  };
}
var defaultOptions2 = {
  ignoreTransform: false
};
function getClientRect(element, options) {
  if (options === void 0) {
    options = defaultOptions2;
  }
  let rect = element.getBoundingClientRect();
  if (options.ignoreTransform) {
    const {
      transform,
      transformOrigin
    } = getWindow(element).getComputedStyle(element);
    if (transform) {
      rect = inverseTransform(rect, transform, transformOrigin);
    }
  }
  const {
    top,
    left,
    width,
    height,
    bottom,
    right
  } = rect;
  return {
    top,
    left,
    width,
    height,
    bottom,
    right
  };
}
function getTransformAgnosticClientRect(element) {
  return getClientRect(element, {
    ignoreTransform: true
  });
}
function getWindowClientRect(element) {
  const width = element.innerWidth;
  const height = element.innerHeight;
  return {
    top: 0,
    left: 0,
    right: width,
    bottom: height,
    width,
    height
  };
}
function isFixed(node, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(node).getComputedStyle(node);
  }
  return computedStyle.position === "fixed";
}
function isScrollable(element, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(element).getComputedStyle(element);
  }
  const overflowRegex = /(auto|scroll|overlay)/;
  const properties2 = ["overflow", "overflowX", "overflowY"];
  return properties2.some((property2) => {
    const value = computedStyle[property2];
    return typeof value === "string" ? overflowRegex.test(value) : false;
  });
}
function getScrollableAncestors(element, limit) {
  const scrollParents = [];
  function findScrollableAncestors(node) {
    if (limit != null && scrollParents.length >= limit) {
      return scrollParents;
    }
    if (!node) {
      return scrollParents;
    }
    if (isDocument(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {
      scrollParents.push(node.scrollingElement);
      return scrollParents;
    }
    if (!isHTMLElement(node) || isSVGElement(node)) {
      return scrollParents;
    }
    if (scrollParents.includes(node)) {
      return scrollParents;
    }
    const computedStyle = getWindow(element).getComputedStyle(node);
    if (node !== element) {
      if (isScrollable(node, computedStyle)) {
        scrollParents.push(node);
      }
    }
    if (isFixed(node, computedStyle)) {
      return scrollParents;
    }
    return findScrollableAncestors(node.parentNode);
  }
  if (!element) {
    return scrollParents;
  }
  return findScrollableAncestors(element);
}
function getFirstScrollableAncestor(node) {
  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);
  return firstScrollableAncestor != null ? firstScrollableAncestor : null;
}
function getScrollableElement(element) {
  if (!canUseDOM || !element) {
    return null;
  }
  if (isWindow(element)) {
    return element;
  }
  if (!isNode(element)) {
    return null;
  }
  if (isDocument(element) || element === getOwnerDocument(element).scrollingElement) {
    return window;
  }
  if (isHTMLElement(element)) {
    return element;
  }
  return null;
}
function getScrollXCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollX;
  }
  return element.scrollLeft;
}
function getScrollYCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollY;
  }
  return element.scrollTop;
}
function getScrollCoordinates(element) {
  return {
    x: getScrollXCoordinate(element),
    y: getScrollYCoordinate(element)
  };
}
var Direction2;
(function(Direction3) {
  Direction3[Direction3["Forward"] = 1] = "Forward";
  Direction3[Direction3["Backward"] = -1] = "Backward";
})(Direction2 || (Direction2 = {}));
function isDocumentScrollingElement(element) {
  if (!canUseDOM || !element) {
    return false;
  }
  return element === document.scrollingElement;
}
function getScrollPosition(scrollingContainer) {
  const minScroll = {
    x: 0,
    y: 0
  };
  const dimensions = isDocumentScrollingElement(scrollingContainer) ? {
    height: window.innerHeight,
    width: window.innerWidth
  } : {
    height: scrollingContainer.clientHeight,
    width: scrollingContainer.clientWidth
  };
  const maxScroll = {
    x: scrollingContainer.scrollWidth - dimensions.width,
    y: scrollingContainer.scrollHeight - dimensions.height
  };
  const isTop = scrollingContainer.scrollTop <= minScroll.y;
  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;
  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;
  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;
  return {
    isTop,
    isLeft,
    isBottom,
    isRight,
    maxScroll,
    minScroll
  };
}
var defaultThreshold = {
  x: 0.2,
  y: 0.2
};
function getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, _ref, acceleration, thresholdPercentage) {
  let {
    top,
    left,
    right,
    bottom
  } = _ref;
  if (acceleration === void 0) {
    acceleration = 10;
  }
  if (thresholdPercentage === void 0) {
    thresholdPercentage = defaultThreshold;
  }
  const {
    isTop,
    isBottom,
    isLeft,
    isRight
  } = getScrollPosition(scrollContainer);
  const direction = {
    x: 0,
    y: 0
  };
  const speed = {
    x: 0,
    y: 0
  };
  const threshold = {
    height: scrollContainerRect.height * thresholdPercentage.y,
    width: scrollContainerRect.width * thresholdPercentage.x
  };
  if (!isTop && top <= scrollContainerRect.top + threshold.height) {
    direction.y = Direction2.Backward;
    speed.y = acceleration * Math.abs((scrollContainerRect.top + threshold.height - top) / threshold.height);
  } else if (!isBottom && bottom >= scrollContainerRect.bottom - threshold.height) {
    direction.y = Direction2.Forward;
    speed.y = acceleration * Math.abs((scrollContainerRect.bottom - threshold.height - bottom) / threshold.height);
  }
  if (!isRight && right >= scrollContainerRect.right - threshold.width) {
    direction.x = Direction2.Forward;
    speed.x = acceleration * Math.abs((scrollContainerRect.right - threshold.width - right) / threshold.width);
  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {
    direction.x = Direction2.Backward;
    speed.x = acceleration * Math.abs((scrollContainerRect.left + threshold.width - left) / threshold.width);
  }
  return {
    direction,
    speed
  };
}
function getScrollElementRect(element) {
  if (element === document.scrollingElement) {
    const {
      innerWidth: innerWidth2,
      innerHeight: innerHeight2
    } = window;
    return {
      top: 0,
      left: 0,
      right: innerWidth2,
      bottom: innerHeight2,
      width: innerWidth2,
      height: innerHeight2
    };
  }
  const {
    top,
    left,
    right,
    bottom
  } = element.getBoundingClientRect();
  return {
    top,
    left,
    right,
    bottom,
    width: element.clientWidth,
    height: element.clientHeight
  };
}
function getScrollOffsets(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return add(acc, getScrollCoordinates(node));
  }, defaultCoordinates);
}
function getScrollXOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollXCoordinate(node);
  }, 0);
}
function getScrollYOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollYCoordinate(node);
  }, 0);
}
function scrollIntoViewIfNeeded(element, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  if (!element) {
    return;
  }
  const {
    top,
    left,
    bottom,
    right
  } = measure(element);
  const firstScrollableAncestor = getFirstScrollableAncestor(element);
  if (!firstScrollableAncestor) {
    return;
  }
  if (bottom <= 0 || right <= 0 || top >= window.innerHeight || left >= window.innerWidth) {
    element.scrollIntoView({
      block: "center",
      inline: "center"
    });
  }
}
var properties = [["x", ["left", "right"], getScrollXOffset], ["y", ["top", "bottom"], getScrollYOffset]];
var Rect = class {
  constructor(rect, element) {
    this.rect = void 0;
    this.width = void 0;
    this.height = void 0;
    this.top = void 0;
    this.bottom = void 0;
    this.right = void 0;
    this.left = void 0;
    const scrollableAncestors = getScrollableAncestors(element);
    const scrollOffsets = getScrollOffsets(scrollableAncestors);
    this.rect = {
      ...rect
    };
    this.width = rect.width;
    this.height = rect.height;
    for (const [axis, keys2, getScrollOffset] of properties) {
      for (const key2 of keys2) {
        Object.defineProperty(this, key2, {
          get: () => {
            const currentOffsets = getScrollOffset(scrollableAncestors);
            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;
            return this.rect[key2] + scrollOffsetsDeltla;
          },
          enumerable: true
        });
      }
    }
    Object.defineProperty(this, "rect", {
      enumerable: false
    });
  }
};
var Listeners = class {
  constructor(target) {
    this.target = void 0;
    this.listeners = [];
    this.removeAll = () => {
      this.listeners.forEach((listener) => {
        var _this$target;
        return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);
      });
    };
    this.target = target;
  }
  add(eventName, handler, options) {
    var _this$target2;
    (_this$target2 = this.target) == null ? void 0 : _this$target2.addEventListener(eventName, handler, options);
    this.listeners.push([eventName, handler, options]);
  }
};
function getEventListenerTarget(target) {
  const {
    EventTarget
  } = getWindow(target);
  return target instanceof EventTarget ? target : getOwnerDocument(target);
}
function hasExceededDistance(delta, measurement) {
  const dx = Math.abs(delta.x);
  const dy = Math.abs(delta.y);
  if (typeof measurement === "number") {
    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;
  }
  if ("x" in measurement && "y" in measurement) {
    return dx > measurement.x && dy > measurement.y;
  }
  if ("x" in measurement) {
    return dx > measurement.x;
  }
  if ("y" in measurement) {
    return dy > measurement.y;
  }
  return false;
}
var EventName;
(function(EventName2) {
  EventName2["Click"] = "click";
  EventName2["DragStart"] = "dragstart";
  EventName2["Keydown"] = "keydown";
  EventName2["ContextMenu"] = "contextmenu";
  EventName2["Resize"] = "resize";
  EventName2["SelectionChange"] = "selectionchange";
  EventName2["VisibilityChange"] = "visibilitychange";
})(EventName || (EventName = {}));
function preventDefault(event) {
  event.preventDefault();
}
function stopPropagation(event) {
  event.stopPropagation();
}
var KeyboardCode;
(function(KeyboardCode2) {
  KeyboardCode2["Space"] = "Space";
  KeyboardCode2["Down"] = "ArrowDown";
  KeyboardCode2["Right"] = "ArrowRight";
  KeyboardCode2["Left"] = "ArrowLeft";
  KeyboardCode2["Up"] = "ArrowUp";
  KeyboardCode2["Esc"] = "Escape";
  KeyboardCode2["Enter"] = "Enter";
})(KeyboardCode || (KeyboardCode = {}));
var defaultKeyboardCodes = {
  start: [KeyboardCode.Space, KeyboardCode.Enter],
  cancel: [KeyboardCode.Esc],
  end: [KeyboardCode.Space, KeyboardCode.Enter]
};
var defaultKeyboardCoordinateGetter = (event, _ref) => {
  let {
    currentCoordinates
  } = _ref;
  switch (event.code) {
    case KeyboardCode.Right:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x + 25
      };
    case KeyboardCode.Left:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x - 25
      };
    case KeyboardCode.Down:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y + 25
      };
    case KeyboardCode.Up:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y - 25
      };
  }
  return void 0;
};
var KeyboardSensor = class {
  constructor(props2) {
    this.props = void 0;
    this.autoScrollEnabled = false;
    this.referenceCoordinates = void 0;
    this.listeners = void 0;
    this.windowListeners = void 0;
    this.props = props2;
    const {
      event: {
        target
      }
    } = props2;
    this.props = props2;
    this.listeners = new Listeners(getOwnerDocument(target));
    this.windowListeners = new Listeners(getWindow(target));
    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.attach();
  }
  attach() {
    this.handleStart();
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));
  }
  handleStart() {
    const {
      activeNode,
      onStart
    } = this.props;
    const node = activeNode.node.current;
    if (node) {
      scrollIntoViewIfNeeded(node);
    }
    onStart(defaultCoordinates);
  }
  handleKeyDown(event) {
    if (isKeyboardEvent(event)) {
      const {
        active,
        context,
        options
      } = this.props;
      const {
        keyboardCodes = defaultKeyboardCodes,
        coordinateGetter = defaultKeyboardCoordinateGetter,
        scrollBehavior = "smooth"
      } = options;
      const {
        code
      } = event;
      if (keyboardCodes.end.includes(code)) {
        this.handleEnd(event);
        return;
      }
      if (keyboardCodes.cancel.includes(code)) {
        this.handleCancel(event);
        return;
      }
      const {
        collisionRect
      } = context.current;
      const currentCoordinates = collisionRect ? {
        x: collisionRect.left,
        y: collisionRect.top
      } : defaultCoordinates;
      if (!this.referenceCoordinates) {
        this.referenceCoordinates = currentCoordinates;
      }
      const newCoordinates = coordinateGetter(event, {
        active,
        context: context.current,
        currentCoordinates
      });
      if (newCoordinates) {
        const coordinatesDelta = subtract(newCoordinates, currentCoordinates);
        const scrollDelta = {
          x: 0,
          y: 0
        };
        const {
          scrollableAncestors
        } = context.current;
        for (const scrollContainer of scrollableAncestors) {
          const direction = event.code;
          const {
            isTop,
            isRight,
            isLeft,
            isBottom,
            maxScroll,
            minScroll
          } = getScrollPosition(scrollContainer);
          const scrollElementRect = getScrollElementRect(scrollContainer);
          const clampedCoordinates = {
            x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),
            y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))
          };
          const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;
          const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;
          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {
            const newScrollCoordinates = scrollContainer.scrollLeft + coordinatesDelta.x;
            const canScrollToNewCoordinates = direction === KeyboardCode.Right && newScrollCoordinates <= maxScroll.x || direction === KeyboardCode.Left && newScrollCoordinates >= minScroll.x;
            if (canScrollToNewCoordinates && !coordinatesDelta.y) {
              scrollContainer.scrollTo({
                left: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;
            } else {
              scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;
            }
            if (scrollDelta.x) {
              scrollContainer.scrollBy({
                left: -scrollDelta.x,
                behavior: scrollBehavior
              });
            }
            break;
          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {
            const newScrollCoordinates = scrollContainer.scrollTop + coordinatesDelta.y;
            const canScrollToNewCoordinates = direction === KeyboardCode.Down && newScrollCoordinates <= maxScroll.y || direction === KeyboardCode.Up && newScrollCoordinates >= minScroll.y;
            if (canScrollToNewCoordinates && !coordinatesDelta.x) {
              scrollContainer.scrollTo({
                top: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;
            } else {
              scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;
            }
            if (scrollDelta.y) {
              scrollContainer.scrollBy({
                top: -scrollDelta.y,
                behavior: scrollBehavior
              });
            }
            break;
          }
        }
        this.handleMove(event, add(subtract(newCoordinates, this.referenceCoordinates), scrollDelta));
      }
    }
  }
  handleMove(event, coordinates) {
    const {
      onMove
    } = this.props;
    event.preventDefault();
    onMove(coordinates);
  }
  handleEnd(event) {
    const {
      onEnd
    } = this.props;
    event.preventDefault();
    this.detach();
    onEnd();
  }
  handleCancel(event) {
    const {
      onCancel
    } = this.props;
    event.preventDefault();
    this.detach();
    onCancel();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
  }
};
KeyboardSensor.activators = [{
  eventName: "onKeyDown",
  handler: (event, _ref, _ref2) => {
    let {
      keyboardCodes = defaultKeyboardCodes,
      onActivation
    } = _ref;
    let {
      active
    } = _ref2;
    const {
      code
    } = event.nativeEvent;
    if (keyboardCodes.start.includes(code)) {
      const activator = active.activatorNode.current;
      if (activator && event.target !== activator) {
        return false;
      }
      event.preventDefault();
      onActivation == null ? void 0 : onActivation({
        event: event.nativeEvent
      });
      return true;
    }
    return false;
  }
}];
function isDistanceConstraint(constraint) {
  return Boolean(constraint && "distance" in constraint);
}
function isDelayConstraint(constraint) {
  return Boolean(constraint && "delay" in constraint);
}
var AbstractPointerSensor = class {
  constructor(props2, events2, listenerTarget) {
    var _getEventCoordinates;
    if (listenerTarget === void 0) {
      listenerTarget = getEventListenerTarget(props2.event.target);
    }
    this.props = void 0;
    this.events = void 0;
    this.autoScrollEnabled = true;
    this.document = void 0;
    this.activated = false;
    this.initialCoordinates = void 0;
    this.timeoutId = null;
    this.listeners = void 0;
    this.documentListeners = void 0;
    this.windowListeners = void 0;
    this.props = props2;
    this.events = events2;
    const {
      event
    } = props2;
    const {
      target
    } = event;
    this.props = props2;
    this.events = events2;
    this.document = getOwnerDocument(target);
    this.documentListeners = new Listeners(this.document);
    this.listeners = new Listeners(listenerTarget);
    this.windowListeners = new Listeners(getWindow(target));
    this.initialCoordinates = (_getEventCoordinates = getEventCoordinates(event)) != null ? _getEventCoordinates : defaultCoordinates;
    this.handleStart = this.handleStart.bind(this);
    this.handleMove = this.handleMove.bind(this);
    this.handleEnd = this.handleEnd.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.handleKeydown = this.handleKeydown.bind(this);
    this.removeTextSelection = this.removeTextSelection.bind(this);
    this.attach();
  }
  attach() {
    const {
      events: events2,
      props: {
        options: {
          activationConstraint
        }
      }
    } = this;
    this.listeners.add(events2.move.name, this.handleMove, {
      passive: false
    });
    this.listeners.add(events2.end.name, this.handleEnd);
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.DragStart, preventDefault);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    this.windowListeners.add(EventName.ContextMenu, preventDefault);
    this.documentListeners.add(EventName.Keydown, this.handleKeydown);
    if (activationConstraint) {
      if (isDistanceConstraint(activationConstraint)) {
        return;
      }
      if (isDelayConstraint(activationConstraint)) {
        this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);
        return;
      }
    }
    this.handleStart();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
    setTimeout(this.documentListeners.removeAll, 50);
    if (this.timeoutId !== null) {
      clearTimeout(this.timeoutId);
      this.timeoutId = null;
    }
  }
  handleStart() {
    const {
      initialCoordinates
    } = this;
    const {
      onStart
    } = this.props;
    if (initialCoordinates) {
      this.activated = true;
      this.documentListeners.add(EventName.Click, stopPropagation, {
        capture: true
      });
      this.removeTextSelection();
      this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);
      onStart(initialCoordinates);
    }
  }
  handleMove(event) {
    var _getEventCoordinates2;
    const {
      activated,
      initialCoordinates,
      props: props2
    } = this;
    const {
      onMove,
      options: {
        activationConstraint
      }
    } = props2;
    if (!initialCoordinates) {
      return;
    }
    const coordinates = (_getEventCoordinates2 = getEventCoordinates(event)) != null ? _getEventCoordinates2 : defaultCoordinates;
    const delta = subtract(initialCoordinates, coordinates);
    if (!activated && activationConstraint) {
      if (isDelayConstraint(activationConstraint)) {
        if (hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
        return;
      }
      if (isDistanceConstraint(activationConstraint)) {
        if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
        if (hasExceededDistance(delta, activationConstraint.distance)) {
          return this.handleStart();
        }
        return;
      }
    }
    if (event.cancelable) {
      event.preventDefault();
    }
    onMove(coordinates);
  }
  handleEnd() {
    const {
      onEnd
    } = this.props;
    this.detach();
    onEnd();
  }
  handleCancel() {
    const {
      onCancel
    } = this.props;
    this.detach();
    onCancel();
  }
  handleKeydown(event) {
    if (event.code === KeyboardCode.Esc) {
      this.handleCancel();
    }
  }
  removeTextSelection() {
    var _this$document$getSel;
    (_this$document$getSel = this.document.getSelection()) == null ? void 0 : _this$document$getSel.removeAllRanges();
  }
};
var events = {
  move: {
    name: "pointermove"
  },
  end: {
    name: "pointerup"
  }
};
var PointerSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    const {
      event
    } = props2;
    const listenerTarget = getOwnerDocument(event.target);
    super(props2, events, listenerTarget);
  }
};
PointerSensor.activators = [{
  eventName: "onPointerDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (!event.isPrimary || event.button !== 0) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$1 = {
  move: {
    name: "mousemove"
  },
  end: {
    name: "mouseup"
  }
};
var MouseButton;
(function(MouseButton2) {
  MouseButton2[MouseButton2["RightClick"] = 2] = "RightClick";
})(MouseButton || (MouseButton = {}));
var MouseSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    super(props2, events$1, getOwnerDocument(props2.event.target));
  }
};
MouseSensor.activators = [{
  eventName: "onMouseDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (event.button === MouseButton.RightClick) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$2 = {
  move: {
    name: "touchmove"
  },
  end: {
    name: "touchend"
  }
};
var TouchSensor = class extends AbstractPointerSensor {
  constructor(props2) {
    super(props2, events$2);
  }
  static setup() {
    window.addEventListener(events$2.move.name, noop3, {
      capture: false,
      passive: false
    });
    return function teardown() {
      window.removeEventListener(events$2.move.name, noop3);
    };
    function noop3() {
    }
  }
};
TouchSensor.activators = [{
  eventName: "onTouchStart",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    const {
      touches
    } = event;
    if (touches.length > 1) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var AutoScrollActivator;
(function(AutoScrollActivator2) {
  AutoScrollActivator2[AutoScrollActivator2["Pointer"] = 0] = "Pointer";
  AutoScrollActivator2[AutoScrollActivator2["DraggableRect"] = 1] = "DraggableRect";
})(AutoScrollActivator || (AutoScrollActivator = {}));
var TraversalOrder;
(function(TraversalOrder2) {
  TraversalOrder2[TraversalOrder2["TreeOrder"] = 0] = "TreeOrder";
  TraversalOrder2[TraversalOrder2["ReversedTreeOrder"] = 1] = "ReversedTreeOrder";
})(TraversalOrder || (TraversalOrder = {}));
function useAutoScroller(_ref) {
  let {
    acceleration,
    activator = AutoScrollActivator.Pointer,
    canScroll,
    draggingRect,
    enabled,
    interval = 5,
    order = TraversalOrder.TreeOrder,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects,
    delta,
    threshold
  } = _ref;
  const scrollIntent = useScrollIntent({
    delta,
    disabled: !enabled
  });
  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();
  const scrollSpeed = _2({
    x: 0,
    y: 0
  });
  const scrollDirection = _2({
    x: 0,
    y: 0
  });
  const rect = F2(() => {
    switch (activator) {
      case AutoScrollActivator.Pointer:
        return pointerCoordinates ? {
          top: pointerCoordinates.y,
          bottom: pointerCoordinates.y,
          left: pointerCoordinates.x,
          right: pointerCoordinates.x
        } : null;
      case AutoScrollActivator.DraggableRect:
        return draggingRect;
    }
  }, [activator, draggingRect, pointerCoordinates]);
  const scrollContainerRef = _2(null);
  const autoScroll = T2(() => {
    const scrollContainer = scrollContainerRef.current;
    if (!scrollContainer) {
      return;
    }
    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;
    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;
    scrollContainer.scrollBy(scrollLeft, scrollTop);
  }, []);
  const sortedScrollableAncestors = F2(() => order === TraversalOrder.TreeOrder ? [...scrollableAncestors].reverse() : scrollableAncestors, [order, scrollableAncestors]);
  p2(
    () => {
      if (!enabled || !scrollableAncestors.length || !rect) {
        clearAutoScrollInterval();
        return;
      }
      for (const scrollContainer of sortedScrollableAncestors) {
        if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) {
          continue;
        }
        const index = scrollableAncestors.indexOf(scrollContainer);
        const scrollContainerRect = scrollableAncestorRects[index];
        if (!scrollContainerRect) {
          continue;
        }
        const {
          direction,
          speed
        } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);
        for (const axis of ["x", "y"]) {
          if (!scrollIntent[axis][direction[axis]]) {
            speed[axis] = 0;
            direction[axis] = 0;
          }
        }
        if (speed.x > 0 || speed.y > 0) {
          clearAutoScrollInterval();
          scrollContainerRef.current = scrollContainer;
          setAutoScrollInterval(autoScroll, interval);
          scrollSpeed.current = speed;
          scrollDirection.current = direction;
          return;
        }
      }
      scrollSpeed.current = {
        x: 0,
        y: 0
      };
      scrollDirection.current = {
        x: 0,
        y: 0
      };
      clearAutoScrollInterval();
    },
    [
      acceleration,
      autoScroll,
      canScroll,
      clearAutoScrollInterval,
      enabled,
      interval,
      JSON.stringify(rect),
      JSON.stringify(scrollIntent),
      setAutoScrollInterval,
      scrollableAncestors,
      sortedScrollableAncestors,
      scrollableAncestorRects,
      JSON.stringify(threshold)
    ]
  );
}
var defaultScrollIntent = {
  x: {
    [Direction2.Backward]: false,
    [Direction2.Forward]: false
  },
  y: {
    [Direction2.Backward]: false,
    [Direction2.Forward]: false
  }
};
function useScrollIntent(_ref2) {
  let {
    delta,
    disabled
  } = _ref2;
  const previousDelta = usePrevious(delta);
  return useLazyMemo((previousIntent) => {
    if (disabled || !previousDelta || !previousIntent) {
      return defaultScrollIntent;
    }
    const direction = {
      x: Math.sign(delta.x - previousDelta.x),
      y: Math.sign(delta.y - previousDelta.y)
    };
    return {
      x: {
        [Direction2.Backward]: previousIntent.x[Direction2.Backward] || direction.x === -1,
        [Direction2.Forward]: previousIntent.x[Direction2.Forward] || direction.x === 1
      },
      y: {
        [Direction2.Backward]: previousIntent.y[Direction2.Backward] || direction.y === -1,
        [Direction2.Forward]: previousIntent.y[Direction2.Forward] || direction.y === 1
      }
    };
  }, [disabled, delta, previousDelta]);
}
function useCachedNode(draggableNodes, id2) {
  const draggableNode = id2 !== null ? draggableNodes.get(id2) : void 0;
  const node = draggableNode ? draggableNode.node.current : null;
  return useLazyMemo((cachedNode) => {
    var _ref;
    if (id2 === null) {
      return null;
    }
    return (_ref = node != null ? node : cachedNode) != null ? _ref : null;
  }, [node, id2]);
}
function useCombineActivators(sensors, getSyntheticHandler) {
  return F2(() => sensors.reduce((accumulator, sensor) => {
    const {
      sensor: Sensor
    } = sensor;
    const sensorActivators = Sensor.activators.map((activator) => ({
      eventName: activator.eventName,
      handler: getSyntheticHandler(activator.handler, sensor)
    }));
    return [...accumulator, ...sensorActivators];
  }, []), [sensors, getSyntheticHandler]);
}
var MeasuringStrategy;
(function(MeasuringStrategy2) {
  MeasuringStrategy2[MeasuringStrategy2["Always"] = 0] = "Always";
  MeasuringStrategy2[MeasuringStrategy2["BeforeDragging"] = 1] = "BeforeDragging";
  MeasuringStrategy2[MeasuringStrategy2["WhileDragging"] = 2] = "WhileDragging";
})(MeasuringStrategy || (MeasuringStrategy = {}));
var MeasuringFrequency;
(function(MeasuringFrequency2) {
  MeasuringFrequency2["Optimized"] = "optimized";
})(MeasuringFrequency || (MeasuringFrequency = {}));
var defaultValue = /* @__PURE__ */ new Map();
function useDroppableMeasuring(containers, _ref) {
  let {
    dragging,
    dependencies,
    config
  } = _ref;
  const [queue, setQueue] = h2(null);
  const {
    frequency,
    measure,
    strategy
  } = config;
  const containersRef = _2(containers);
  const disabled = isDisabled();
  const disabledRef = useLatestValue(disabled);
  const measureDroppableContainers = T2(function(ids2) {
    if (ids2 === void 0) {
      ids2 = [];
    }
    if (disabledRef.current) {
      return;
    }
    setQueue((value) => {
      if (value === null) {
        return ids2;
      }
      return value.concat(ids2.filter((id2) => !value.includes(id2)));
    });
  }, [disabledRef]);
  const timeoutId = _2(null);
  const droppableRects = useLazyMemo((previousValue) => {
    if (disabled && !dragging) {
      return defaultValue;
    }
    if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || queue != null) {
      const map2 = /* @__PURE__ */ new Map();
      for (let container of containers) {
        if (!container) {
          continue;
        }
        if (queue && queue.length > 0 && !queue.includes(container.id) && container.rect.current) {
          map2.set(container.id, container.rect.current);
          continue;
        }
        const node = container.node.current;
        const rect = node ? new Rect(measure(node), node) : null;
        container.rect.current = rect;
        if (rect) {
          map2.set(container.id, rect);
        }
      }
      return map2;
    }
    return previousValue;
  }, [containers, queue, dragging, disabled, measure]);
  p2(() => {
    containersRef.current = containers;
  }, [containers]);
  p2(
    () => {
      if (disabled) {
        return;
      }
      measureDroppableContainers();
    },
    [dragging, disabled]
  );
  p2(
    () => {
      if (queue && queue.length > 0) {
        setQueue(null);
      }
    },
    [JSON.stringify(queue)]
  );
  p2(
    () => {
      if (disabled || typeof frequency !== "number" || timeoutId.current !== null) {
        return;
      }
      timeoutId.current = setTimeout(() => {
        measureDroppableContainers();
        timeoutId.current = null;
      }, frequency);
    },
    [frequency, disabled, measureDroppableContainers, ...dependencies]
  );
  return {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled: queue != null
  };
  function isDisabled() {
    switch (strategy) {
      case MeasuringStrategy.Always:
        return false;
      case MeasuringStrategy.BeforeDragging:
        return dragging;
      default:
        return !dragging;
    }
  }
}
function useInitialValue(value, computeFn) {
  return useLazyMemo((previousValue) => {
    if (!value) {
      return null;
    }
    if (previousValue) {
      return previousValue;
    }
    return typeof computeFn === "function" ? computeFn(value) : value;
  }, [computeFn, value]);
}
function useInitialRect(node, measure) {
  return useInitialValue(node, measure);
}
function useMutationObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleMutations = useEvent(callback);
  const mutationObserver = F2(() => {
    if (disabled || typeof window === "undefined" || typeof window.MutationObserver === "undefined") {
      return void 0;
    }
    const {
      MutationObserver
    } = window;
    return new MutationObserver(handleMutations);
  }, [handleMutations, disabled]);
  p2(() => {
    return () => mutationObserver == null ? void 0 : mutationObserver.disconnect();
  }, [mutationObserver]);
  return mutationObserver;
}
function useResizeObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleResize = useEvent(callback);
  const resizeObserver = F2(
    () => {
      if (disabled || typeof window === "undefined" || typeof window.ResizeObserver === "undefined") {
        return void 0;
      }
      const {
        ResizeObserver
      } = window;
      return new ResizeObserver(handleResize);
    },
    [disabled]
  );
  p2(() => {
    return () => resizeObserver == null ? void 0 : resizeObserver.disconnect();
  }, [resizeObserver]);
  return resizeObserver;
}
function defaultMeasure(element) {
  return new Rect(getClientRect(element), element);
}
function useRect(element, measure, fallbackRect) {
  if (measure === void 0) {
    measure = defaultMeasure;
  }
  const [rect, measureRect] = s2(reducer3, null);
  const mutationObserver = useMutationObserver({
    callback(records) {
      if (!element) {
        return;
      }
      for (const record of records) {
        const {
          type,
          target
        } = record;
        if (type === "childList" && target instanceof HTMLElement && target.contains(element)) {
          measureRect();
          break;
        }
      }
    }
  });
  const resizeObserver = useResizeObserver({
    callback: measureRect
  });
  useIsomorphicLayoutEffect(() => {
    measureRect();
    if (element) {
      resizeObserver == null ? void 0 : resizeObserver.observe(element);
      mutationObserver == null ? void 0 : mutationObserver.observe(document.body, {
        childList: true,
        subtree: true
      });
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      mutationObserver == null ? void 0 : mutationObserver.disconnect();
    }
  }, [element]);
  return rect;
  function reducer3(currentRect) {
    if (!element) {
      return null;
    }
    if (element.isConnected === false) {
      var _ref;
      return (_ref = currentRect != null ? currentRect : fallbackRect) != null ? _ref : null;
    }
    const newRect = measure(element);
    if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {
      return currentRect;
    }
    return newRect;
  }
}
function useRectDelta(rect) {
  const initialRect = useInitialValue(rect);
  return getRectDelta(rect, initialRect);
}
var defaultValue$1 = [];
function useScrollableAncestors(node) {
  const previousNode = _2(node);
  const ancestors = useLazyMemo((previousValue) => {
    if (!node) {
      return defaultValue$1;
    }
    if (previousValue && previousValue !== defaultValue$1 && node && previousNode.current && node.parentNode === previousNode.current.parentNode) {
      return previousValue;
    }
    return getScrollableAncestors(node);
  }, [node]);
  p2(() => {
    previousNode.current = node;
  }, [node]);
  return ancestors;
}
function useScrollOffsets(elements) {
  const [scrollCoordinates, setScrollCoordinates] = h2(null);
  const prevElements = _2(elements);
  const handleScroll = T2((event) => {
    const scrollingElement = getScrollableElement(event.target);
    if (!scrollingElement) {
      return;
    }
    setScrollCoordinates((scrollCoordinates2) => {
      if (!scrollCoordinates2) {
        return null;
      }
      scrollCoordinates2.set(scrollingElement, getScrollCoordinates(scrollingElement));
      return new Map(scrollCoordinates2);
    });
  }, []);
  p2(() => {
    const previousElements = prevElements.current;
    if (elements !== previousElements) {
      cleanup(previousElements);
      const entries = elements.map((element) => {
        const scrollableElement = getScrollableElement(element);
        if (scrollableElement) {
          scrollableElement.addEventListener("scroll", handleScroll, {
            passive: true
          });
          return [scrollableElement, getScrollCoordinates(scrollableElement)];
        }
        return null;
      }).filter((entry) => entry != null);
      setScrollCoordinates(entries.length ? new Map(entries) : null);
      prevElements.current = elements;
    }
    return () => {
      cleanup(elements);
      cleanup(previousElements);
    };
    function cleanup(elements2) {
      elements2.forEach((element) => {
        const scrollableElement = getScrollableElement(element);
        scrollableElement == null ? void 0 : scrollableElement.removeEventListener("scroll", handleScroll);
      });
    }
  }, [handleScroll, elements]);
  return F2(() => {
    if (elements.length) {
      return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates) => add(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);
    }
    return defaultCoordinates;
  }, [elements, scrollCoordinates]);
}
function useScrollOffsetsDelta(scrollOffsets, dependencies) {
  if (dependencies === void 0) {
    dependencies = [];
  }
  const initialScrollOffsets = _2(null);
  p2(
    () => {
      initialScrollOffsets.current = null;
    },
    dependencies
  );
  p2(() => {
    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;
    if (hasScrollOffsets && !initialScrollOffsets.current) {
      initialScrollOffsets.current = scrollOffsets;
    }
    if (!hasScrollOffsets && initialScrollOffsets.current) {
      initialScrollOffsets.current = null;
    }
  }, [scrollOffsets]);
  return initialScrollOffsets.current ? subtract(scrollOffsets, initialScrollOffsets.current) : defaultCoordinates;
}
function useSensorSetup(sensors) {
  p2(
    () => {
      if (!canUseDOM) {
        return;
      }
      const teardownFns = sensors.map((_ref) => {
        let {
          sensor
        } = _ref;
        return sensor.setup == null ? void 0 : sensor.setup();
      });
      return () => {
        for (const teardown of teardownFns) {
          teardown == null ? void 0 : teardown();
        }
      };
    },
    sensors.map((_ref2) => {
      let {
        sensor
      } = _ref2;
      return sensor;
    })
  );
}
function useSyntheticListeners(listeners, id2) {
  return F2(() => {
    return listeners.reduce((acc, _ref) => {
      let {
        eventName,
        handler
      } = _ref;
      acc[eventName] = (event) => {
        handler(event, id2);
      };
      return acc;
    }, {});
  }, [listeners, id2]);
}
function useWindowRect(element) {
  return F2(() => element ? getWindowClientRect(element) : null, [element]);
}
var defaultValue$2 = [];
function useRects(elements, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  const [firstElement] = elements;
  const windowRect = useWindowRect(firstElement ? getWindow(firstElement) : null);
  const [rects, measureRects] = s2(reducer3, defaultValue$2);
  const resizeObserver = useResizeObserver({
    callback: measureRects
  });
  if (elements.length > 0 && rects === defaultValue$2) {
    measureRects();
  }
  useIsomorphicLayoutEffect(() => {
    if (elements.length) {
      elements.forEach((element) => resizeObserver == null ? void 0 : resizeObserver.observe(element));
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      measureRects();
    }
  }, [elements]);
  return rects;
  function reducer3() {
    if (!elements.length) {
      return defaultValue$2;
    }
    return elements.map((element) => isDocumentScrollingElement(element) ? windowRect : new Rect(measure(element), element));
  }
}
function getMeasurableNode(node) {
  if (!node) {
    return null;
  }
  if (node.children.length > 1) {
    return node;
  }
  const firstChild = node.children[0];
  return isHTMLElement(firstChild) ? firstChild : node;
}
function useDragOverlayMeasuring(_ref) {
  let {
    measure
  } = _ref;
  const [rect, setRect] = h2(null);
  const handleResize = T2((entries) => {
    for (const {
      target
    } of entries) {
      if (isHTMLElement(target)) {
        setRect((rect2) => {
          const newRect = measure(target);
          return rect2 ? {
            ...rect2,
            width: newRect.width,
            height: newRect.height
          } : newRect;
        });
        break;
      }
    }
  }, [measure]);
  const resizeObserver = useResizeObserver({
    callback: handleResize
  });
  const handleNodeChange = T2((element) => {
    const node = getMeasurableNode(element);
    resizeObserver == null ? void 0 : resizeObserver.disconnect();
    if (node) {
      resizeObserver == null ? void 0 : resizeObserver.observe(node);
    }
    setRect(node ? measure(node) : null);
  }, [measure, resizeObserver]);
  const [nodeRef, setRef] = useNodeRef(handleNodeChange);
  return F2(() => ({
    nodeRef,
    rect,
    setRef
  }), [rect, nodeRef, setRef]);
}
var defaultSensors = [{
  sensor: PointerSensor,
  options: {}
}, {
  sensor: KeyboardSensor,
  options: {}
}];
var defaultData = {
  current: {}
};
var defaultMeasuringConfiguration = {
  draggable: {
    measure: getTransformAgnosticClientRect
  },
  droppable: {
    measure: getTransformAgnosticClientRect,
    strategy: MeasuringStrategy.WhileDragging,
    frequency: MeasuringFrequency.Optimized
  },
  dragOverlay: {
    measure: getClientRect
  }
};
var DroppableContainersMap = class extends Map {
  get(id2) {
    var _super$get;
    return id2 != null ? (_super$get = super.get(id2)) != null ? _super$get : void 0 : void 0;
  }
  toArray() {
    return Array.from(this.values());
  }
  getEnabled() {
    return this.toArray().filter((_ref) => {
      let {
        disabled
      } = _ref;
      return !disabled;
    });
  }
  getNodeFor(id2) {
    var _this$get$node$curren, _this$get;
    return (_this$get$node$curren = (_this$get = this.get(id2)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : void 0;
  }
};
var defaultPublicContext = {
  activatorEvent: null,
  active: null,
  activeNode: null,
  activeNodeRect: null,
  collisions: null,
  containerNodeRect: null,
  draggableNodes: /* @__PURE__ */ new Map(),
  droppableRects: /* @__PURE__ */ new Map(),
  droppableContainers: /* @__PURE__ */ new DroppableContainersMap(),
  over: null,
  dragOverlay: {
    nodeRef: {
      current: null
    },
    rect: null,
    setRef: noop
  },
  scrollableAncestors: [],
  scrollableAncestorRects: [],
  measuringConfiguration: defaultMeasuringConfiguration,
  measureDroppableContainers: noop,
  windowRect: null,
  measuringScheduled: false
};
var defaultInternalContext = {
  activatorEvent: null,
  activators: [],
  active: null,
  activeNodeRect: null,
  ariaDescribedById: {
    draggable: ""
  },
  dispatch: noop,
  draggableNodes: /* @__PURE__ */ new Map(),
  over: null,
  measureDroppableContainers: noop
};
var InternalContext = /* @__PURE__ */ F(defaultInternalContext);
var PublicContext = /* @__PURE__ */ F(defaultPublicContext);
function getInitialState() {
  return {
    draggable: {
      active: null,
      initialCoordinates: {
        x: 0,
        y: 0
      },
      nodes: /* @__PURE__ */ new Map(),
      translate: {
        x: 0,
        y: 0
      }
    },
    droppable: {
      containers: new DroppableContainersMap()
    }
  };
}
function reducer(state, action) {
  switch (action.type) {
    case Action.DragStart:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          initialCoordinates: action.initialCoordinates,
          active: action.active
        }
      };
    case Action.DragMove:
      if (!state.draggable.active) {
        return state;
      }
      return {
        ...state,
        draggable: {
          ...state.draggable,
          translate: {
            x: action.coordinates.x - state.draggable.initialCoordinates.x,
            y: action.coordinates.y - state.draggable.initialCoordinates.y
          }
        }
      };
    case Action.DragEnd:
    case Action.DragCancel:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          active: null,
          initialCoordinates: {
            x: 0,
            y: 0
          },
          translate: {
            x: 0,
            y: 0
          }
        }
      };
    case Action.RegisterDroppable: {
      const {
        element
      } = action;
      const {
        id: id2
      } = element;
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id2, element);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.SetDroppableDisabled: {
      const {
        id: id2,
        key: key2,
        disabled
      } = action;
      const element = state.droppable.containers.get(id2);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id2, {
        ...element,
        disabled
      });
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.UnregisterDroppable: {
      const {
        id: id2,
        key: key2
      } = action;
      const element = state.droppable.containers.get(id2);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.delete(id2);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    default: {
      return state;
    }
  }
}
function RestoreFocus(_ref) {
  let {
    disabled
  } = _ref;
  const {
    active,
    activatorEvent,
    draggableNodes
  } = q2(InternalContext);
  const previousActivatorEvent = usePrevious(activatorEvent);
  const previousActiveId = usePrevious(active == null ? void 0 : active.id);
  p2(() => {
    if (disabled) {
      return;
    }
    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {
      if (!isKeyboardEvent(previousActivatorEvent)) {
        return;
      }
      if (document.activeElement === previousActivatorEvent.target) {
        return;
      }
      const draggableNode = draggableNodes.get(previousActiveId);
      if (!draggableNode) {
        return;
      }
      const {
        activatorNode,
        node
      } = draggableNode;
      if (!activatorNode.current && !node.current) {
        return;
      }
      requestAnimationFrame(() => {
        for (const element of [activatorNode.current, node.current]) {
          if (!element) {
            continue;
          }
          const focusableNode = findFirstFocusableNode(element);
          if (focusableNode) {
            focusableNode.focus();
            break;
          }
        }
      });
    }
  }, [activatorEvent, disabled, draggableNodes, previousActiveId, previousActivatorEvent]);
  return null;
}
function applyModifiers(modifiers, _ref) {
  let {
    transform,
    ...args
  } = _ref;
  return modifiers != null && modifiers.length ? modifiers.reduce((accumulator, modifier) => {
    return modifier({
      transform: accumulator,
      ...args
    });
  }, transform) : transform;
}
function useMeasuringConfiguration(config) {
  return F2(
    () => ({
      draggable: {
        ...defaultMeasuringConfiguration.draggable,
        ...config == null ? void 0 : config.draggable
      },
      droppable: {
        ...defaultMeasuringConfiguration.droppable,
        ...config == null ? void 0 : config.droppable
      },
      dragOverlay: {
        ...defaultMeasuringConfiguration.dragOverlay,
        ...config == null ? void 0 : config.dragOverlay
      }
    }),
    [config == null ? void 0 : config.draggable, config == null ? void 0 : config.droppable, config == null ? void 0 : config.dragOverlay]
  );
}
function useLayoutShiftScrollCompensation(_ref) {
  let {
    activeNode,
    measure,
    initialRect,
    config = true
  } = _ref;
  const initialized = _2(false);
  const {
    x: x5,
    y: y5
  } = typeof config === "boolean" ? {
    x: config,
    y: config
  } : config;
  useIsomorphicLayoutEffect(() => {
    const disabled = !x5 && !y5;
    if (disabled || !activeNode) {
      initialized.current = false;
      return;
    }
    if (initialized.current || !initialRect) {
      return;
    }
    const node = activeNode == null ? void 0 : activeNode.node.current;
    if (!node || node.isConnected === false) {
      return;
    }
    const rect = measure(node);
    const rectDelta = getRectDelta(rect, initialRect);
    if (!x5) {
      rectDelta.x = 0;
    }
    if (!y5) {
      rectDelta.y = 0;
    }
    initialized.current = true;
    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {
      const firstScrollableAncestor = getFirstScrollableAncestor(node);
      if (firstScrollableAncestor) {
        firstScrollableAncestor.scrollBy({
          top: rectDelta.y,
          left: rectDelta.x
        });
      }
    }
  }, [activeNode, x5, y5, initialRect, measure]);
}
var ActiveDraggableContext = /* @__PURE__ */ F({
  ...defaultCoordinates,
  scaleX: 1,
  scaleY: 1
});
var Status;
(function(Status2) {
  Status2[Status2["Uninitialized"] = 0] = "Uninitialized";
  Status2[Status2["Initializing"] = 1] = "Initializing";
  Status2[Status2["Initialized"] = 2] = "Initialized";
})(Status || (Status = {}));
var DndContext = /* @__PURE__ */ x3(function DndContext2(_ref) {
  var _sensorContext$curren, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;
  let {
    id: id2,
    accessibility,
    autoScroll = true,
    children,
    sensors = defaultSensors,
    collisionDetection = rectIntersection,
    measuring,
    modifiers,
    ...props2
  } = _ref;
  const store = s2(reducer, void 0, getInitialState);
  const [state, dispatch] = store;
  const [dispatchMonitorEvent, registerMonitorListener] = useDndMonitorProvider();
  const [status, setStatus] = h2(Status.Uninitialized);
  const isInitialized = status === Status.Initialized;
  const {
    draggable: {
      active: activeId,
      nodes: draggableNodes,
      translate
    },
    droppable: {
      containers: droppableContainers
    }
  } = state;
  const node = activeId ? draggableNodes.get(activeId) : null;
  const activeRects = _2({
    initial: null,
    translated: null
  });
  const active = F2(() => {
    var _node$data;
    return activeId != null ? {
      id: activeId,
      data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,
      rect: activeRects
    } : null;
  }, [activeId, node]);
  const activeRef = _2(null);
  const [activeSensor, setActiveSensor] = h2(null);
  const [activatorEvent, setActivatorEvent] = h2(null);
  const latestProps = useLatestValue(props2, Object.values(props2));
  const draggableDescribedById = useUniqueId("DndDescribedBy", id2);
  const enabledDroppableContainers = F2(() => droppableContainers.getEnabled(), [droppableContainers]);
  const measuringConfiguration = useMeasuringConfiguration(measuring);
  const {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled
  } = useDroppableMeasuring(enabledDroppableContainers, {
    dragging: isInitialized,
    dependencies: [translate.x, translate.y],
    config: measuringConfiguration.droppable
  });
  const activeNode = useCachedNode(draggableNodes, activeId);
  const activationCoordinates = F2(() => activatorEvent ? getEventCoordinates(activatorEvent) : null, [activatorEvent]);
  const autoScrollOptions = getAutoScrollerOptions();
  const initialActiveNodeRect = useInitialRect(activeNode, measuringConfiguration.draggable.measure);
  useLayoutShiftScrollCompensation({
    activeNode: activeId ? draggableNodes.get(activeId) : null,
    config: autoScrollOptions.layoutShiftCompensation,
    initialRect: initialActiveNodeRect,
    measure: measuringConfiguration.draggable.measure
  });
  const activeNodeRect = useRect(activeNode, measuringConfiguration.draggable.measure, initialActiveNodeRect);
  const containerNodeRect = useRect(activeNode ? activeNode.parentElement : null);
  const sensorContext = _2({
    activatorEvent: null,
    active: null,
    activeNode,
    collisionRect: null,
    collisions: null,
    droppableRects,
    draggableNodes,
    draggingNode: null,
    draggingNodeRect: null,
    droppableContainers,
    over: null,
    scrollableAncestors: [],
    scrollAdjustedTranslate: null
  });
  const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);
  const dragOverlay = useDragOverlayMeasuring({
    measure: measuringConfiguration.dragOverlay.measure
  });
  const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;
  const draggingNodeRect = isInitialized ? (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect : null;
  const usesDragOverlay = Boolean(dragOverlay.nodeRef.current && dragOverlay.rect);
  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);
  const windowRect = useWindowRect(draggingNode ? getWindow(draggingNode) : null);
  const scrollableAncestors = useScrollableAncestors(isInitialized ? overNode != null ? overNode : activeNode : null);
  const scrollableAncestorRects = useRects(scrollableAncestors);
  const modifiedTranslate = applyModifiers(modifiers, {
    transform: {
      x: translate.x - nodeRectDelta.x,
      y: translate.y - nodeRectDelta.y,
      scaleX: 1,
      scaleY: 1
    },
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect,
    over: sensorContext.current.over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  });
  const pointerCoordinates = activationCoordinates ? add(activationCoordinates, translate) : null;
  const scrollOffsets = useScrollOffsets(scrollableAncestors);
  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);
  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [activeNodeRect]);
  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);
  const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;
  const collisions = active && collisionRect ? collisionDetection({
    active,
    collisionRect,
    droppableRects,
    droppableContainers: enabledDroppableContainers,
    pointerCoordinates
  }) : null;
  const overId = getFirstCollision(collisions, "id");
  const [over, setOver] = h2(null);
  const appliedTranslate = usesDragOverlay ? modifiedTranslate : add(modifiedTranslate, activeNodeScrollDelta);
  const transform = adjustScale(appliedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);
  const instantiateSensor = T2(
    (event, _ref2) => {
      let {
        sensor: Sensor,
        options
      } = _ref2;
      if (activeRef.current == null) {
        return;
      }
      const activeNode2 = draggableNodes.get(activeRef.current);
      if (!activeNode2) {
        return;
      }
      const activatorEvent2 = event.nativeEvent;
      const sensorInstance = new Sensor({
        active: activeRef.current,
        activeNode: activeNode2,
        event: activatorEvent2,
        options,
        context: sensorContext,
        onStart(initialCoordinates) {
          const id3 = activeRef.current;
          if (id3 == null) {
            return;
          }
          const draggableNode = draggableNodes.get(id3);
          if (!draggableNode) {
            return;
          }
          const {
            onDragStart
          } = latestProps.current;
          const event2 = {
            active: {
              id: id3,
              data: draggableNode.data,
              rect: activeRects
            }
          };
          dn(() => {
            onDragStart == null ? void 0 : onDragStart(event2);
            setStatus(Status.Initializing);
            dispatch({
              type: Action.DragStart,
              initialCoordinates,
              active: id3
            });
            dispatchMonitorEvent({
              type: "onDragStart",
              event: event2
            });
          });
        },
        onMove(coordinates) {
          dispatch({
            type: Action.DragMove,
            coordinates
          });
        },
        onEnd: createHandler(Action.DragEnd),
        onCancel: createHandler(Action.DragCancel)
      });
      dn(() => {
        setActiveSensor(sensorInstance);
        setActivatorEvent(event.nativeEvent);
      });
      function createHandler(type) {
        return async function handler() {
          const {
            active: active2,
            collisions: collisions2,
            over: over2,
            scrollAdjustedTranslate: scrollAdjustedTranslate2
          } = sensorContext.current;
          let event2 = null;
          if (active2 && scrollAdjustedTranslate2) {
            const {
              cancelDrop
            } = latestProps.current;
            event2 = {
              activatorEvent: activatorEvent2,
              active: active2,
              collisions: collisions2,
              delta: scrollAdjustedTranslate2,
              over: over2
            };
            if (type === Action.DragEnd && typeof cancelDrop === "function") {
              const shouldCancel = await Promise.resolve(cancelDrop(event2));
              if (shouldCancel) {
                type = Action.DragCancel;
              }
            }
          }
          activeRef.current = null;
          dn(() => {
            dispatch({
              type
            });
            setStatus(Status.Uninitialized);
            setOver(null);
            setActiveSensor(null);
            setActivatorEvent(null);
            const eventName = type === Action.DragEnd ? "onDragEnd" : "onDragCancel";
            if (event2) {
              const handler2 = latestProps.current[eventName];
              handler2 == null ? void 0 : handler2(event2);
              dispatchMonitorEvent({
                type: eventName,
                event: event2
              });
            }
          });
        };
      }
    },
    [draggableNodes]
  );
  const bindActivatorToSensorInstantiator = T2((handler, sensor) => {
    return (event, active2) => {
      const nativeEvent = event.nativeEvent;
      const activeDraggableNode = draggableNodes.get(active2);
      if (activeRef.current !== null || !activeDraggableNode || nativeEvent.dndKit || nativeEvent.defaultPrevented) {
        return;
      }
      const activationContext = {
        active: activeDraggableNode
      };
      const shouldActivate = handler(event, sensor.options, activationContext);
      if (shouldActivate === true) {
        nativeEvent.dndKit = {
          capturedBy: sensor.sensor
        };
        activeRef.current = active2;
        instantiateSensor(event, sensor);
      }
    };
  }, [draggableNodes, instantiateSensor]);
  const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);
  useSensorSetup(sensors);
  useIsomorphicLayoutEffect(() => {
    if (activeNodeRect && status === Status.Initializing) {
      setStatus(Status.Initialized);
    }
  }, [activeNodeRect, status]);
  p2(
    () => {
      const {
        onDragMove
      } = latestProps.current;
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        over: over2
      } = sensorContext.current;
      if (!active2 || !activatorEvent2) {
        return;
      }
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate.x,
          y: scrollAdjustedTranslate.y
        },
        over: over2
      };
      dn(() => {
        onDragMove == null ? void 0 : onDragMove(event);
        dispatchMonitorEvent({
          type: "onDragMove",
          event
        });
      });
    },
    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]
  );
  p2(
    () => {
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        droppableContainers: droppableContainers2,
        scrollAdjustedTranslate: scrollAdjustedTranslate2
      } = sensorContext.current;
      if (!active2 || activeRef.current == null || !activatorEvent2 || !scrollAdjustedTranslate2) {
        return;
      }
      const {
        onDragOver
      } = latestProps.current;
      const overContainer = droppableContainers2.get(overId);
      const over2 = overContainer && overContainer.rect.current ? {
        id: overContainer.id,
        rect: overContainer.rect.current,
        data: overContainer.data,
        disabled: overContainer.disabled
      } : null;
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate2.x,
          y: scrollAdjustedTranslate2.y
        },
        over: over2
      };
      dn(() => {
        setOver(over2);
        onDragOver == null ? void 0 : onDragOver(event);
        dispatchMonitorEvent({
          type: "onDragOver",
          event
        });
      });
    },
    [overId]
  );
  useIsomorphicLayoutEffect(() => {
    sensorContext.current = {
      activatorEvent,
      active,
      activeNode,
      collisionRect,
      collisions,
      droppableRects,
      draggableNodes,
      draggingNode,
      draggingNodeRect,
      droppableContainers,
      over,
      scrollableAncestors,
      scrollAdjustedTranslate
    };
    activeRects.current = {
      initial: draggingNodeRect,
      translated: collisionRect
    };
  }, [active, activeNode, collisions, collisionRect, draggableNodes, draggingNode, draggingNodeRect, droppableRects, droppableContainers, over, scrollableAncestors, scrollAdjustedTranslate]);
  useAutoScroller({
    ...autoScrollOptions,
    delta: translate,
    draggingRect: collisionRect,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects
  });
  const publicContext = F2(() => {
    const context = {
      active,
      activeNode,
      activeNodeRect,
      activatorEvent,
      collisions,
      containerNodeRect,
      dragOverlay,
      draggableNodes,
      droppableContainers,
      droppableRects,
      over,
      measureDroppableContainers,
      scrollableAncestors,
      scrollableAncestorRects,
      measuringConfiguration,
      measuringScheduled,
      windowRect
    };
    return context;
  }, [active, activeNode, activeNodeRect, activatorEvent, collisions, containerNodeRect, dragOverlay, draggableNodes, droppableContainers, droppableRects, over, measureDroppableContainers, scrollableAncestors, scrollableAncestorRects, measuringConfiguration, measuringScheduled, windowRect]);
  const internalContext = F2(() => {
    const context = {
      activatorEvent,
      activators,
      active,
      activeNodeRect,
      ariaDescribedById: {
        draggable: draggableDescribedById
      },
      dispatch,
      draggableNodes,
      over,
      measureDroppableContainers
    };
    return context;
  }, [activatorEvent, activators, active, activeNodeRect, dispatch, draggableDescribedById, draggableNodes, over, measureDroppableContainers]);
  return Cn.createElement(DndMonitorContext.Provider, {
    value: registerMonitorListener
  }, Cn.createElement(InternalContext.Provider, {
    value: internalContext
  }, Cn.createElement(PublicContext.Provider, {
    value: publicContext
  }, Cn.createElement(ActiveDraggableContext.Provider, {
    value: transform
  }, children)), Cn.createElement(RestoreFocus, {
    disabled: (accessibility == null ? void 0 : accessibility.restoreFocus) === false
  })), Cn.createElement(Accessibility, {
    ...accessibility,
    hiddenTextDescribedById: draggableDescribedById
  }));
  function getAutoScrollerOptions() {
    const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;
    const autoScrollGloballyDisabled = typeof autoScroll === "object" ? autoScroll.enabled === false : autoScroll === false;
    const enabled = isInitialized && !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;
    if (typeof autoScroll === "object") {
      return {
        ...autoScroll,
        enabled
      };
    }
    return {
      enabled
    };
  }
});
var NullContext = /* @__PURE__ */ F(null);
var defaultRole = "button";
var ID_PREFIX = "Droppable";
function useDraggable(_ref) {
  let {
    id: id2,
    data: data2,
    disabled = false,
    attributes
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX);
  const {
    activators,
    activatorEvent,
    active,
    activeNodeRect,
    ariaDescribedById,
    draggableNodes,
    over
  } = q2(InternalContext);
  const {
    role = defaultRole,
    roleDescription = "draggable",
    tabIndex = 0
  } = attributes != null ? attributes : {};
  const isDragging = (active == null ? void 0 : active.id) === id2;
  const transform = q2(isDragging ? ActiveDraggableContext : NullContext);
  const [node, setNodeRef] = useNodeRef();
  const [activatorNode, setActivatorNodeRef] = useNodeRef();
  const listeners = useSyntheticListeners(activators, id2);
  const dataRef = useLatestValue(data2);
  useIsomorphicLayoutEffect(
    () => {
      draggableNodes.set(id2, {
        id: id2,
        key: key2,
        node,
        activatorNode,
        data: dataRef
      });
      return () => {
        const node2 = draggableNodes.get(id2);
        if (node2 && node2.key === key2) {
          draggableNodes.delete(id2);
        }
      };
    },
    [draggableNodes, id2]
  );
  const memoizedAttributes = F2(() => ({
    role,
    tabIndex,
    "aria-disabled": disabled,
    "aria-pressed": isDragging && role === defaultRole ? true : void 0,
    "aria-roledescription": roleDescription,
    "aria-describedby": ariaDescribedById.draggable
  }), [disabled, role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]);
  return {
    active,
    activatorEvent,
    activeNodeRect,
    attributes: memoizedAttributes,
    isDragging,
    listeners: disabled ? void 0 : listeners,
    node,
    over,
    setNodeRef,
    setActivatorNodeRef,
    transform
  };
}
function useDndContext() {
  return q2(PublicContext);
}
var ID_PREFIX$1 = "Droppable";
var defaultResizeObserverConfig = {
  timeout: 25
};
function useDroppable(_ref) {
  let {
    data: data2,
    disabled = false,
    id: id2,
    resizeObserverConfig
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX$1);
  const {
    active,
    dispatch,
    over,
    measureDroppableContainers
  } = q2(InternalContext);
  const previous = _2({
    disabled
  });
  const resizeObserverConnected = _2(false);
  const rect = _2(null);
  const callbackId = _2(null);
  const {
    disabled: resizeObserverDisabled,
    updateMeasurementsFor,
    timeout: resizeObserverTimeout
  } = {
    ...defaultResizeObserverConfig,
    ...resizeObserverConfig
  };
  const ids2 = useLatestValue(updateMeasurementsFor != null ? updateMeasurementsFor : id2);
  const handleResize = T2(
    () => {
      if (!resizeObserverConnected.current) {
        resizeObserverConnected.current = true;
        return;
      }
      if (callbackId.current != null) {
        clearTimeout(callbackId.current);
      }
      callbackId.current = setTimeout(() => {
        measureDroppableContainers(Array.isArray(ids2.current) ? ids2.current : [ids2.current]);
        callbackId.current = null;
      }, resizeObserverTimeout);
    },
    [resizeObserverTimeout]
  );
  const resizeObserver = useResizeObserver({
    callback: handleResize,
    disabled: resizeObserverDisabled || !active
  });
  const handleNodeChange = T2((newElement, previousElement) => {
    if (!resizeObserver) {
      return;
    }
    if (previousElement) {
      resizeObserver.unobserve(previousElement);
      resizeObserverConnected.current = false;
    }
    if (newElement) {
      resizeObserver.observe(newElement);
    }
  }, [resizeObserver]);
  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);
  const dataRef = useLatestValue(data2);
  p2(() => {
    if (!resizeObserver || !nodeRef.current) {
      return;
    }
    resizeObserver.disconnect();
    resizeObserverConnected.current = false;
    resizeObserver.observe(nodeRef.current);
  }, [nodeRef, resizeObserver]);
  useIsomorphicLayoutEffect(
    () => {
      dispatch({
        type: Action.RegisterDroppable,
        element: {
          id: id2,
          key: key2,
          disabled,
          node: nodeRef,
          rect,
          data: dataRef
        }
      });
      return () => dispatch({
        type: Action.UnregisterDroppable,
        key: key2,
        id: id2
      });
    },
    [id2]
  );
  p2(() => {
    if (disabled !== previous.current.disabled) {
      dispatch({
        type: Action.SetDroppableDisabled,
        id: id2,
        key: key2,
        disabled
      });
      previous.current.disabled = disabled;
    }
  }, [id2, key2, disabled, dispatch]);
  return {
    active,
    rect,
    isOver: (over == null ? void 0 : over.id) === id2,
    node: nodeRef,
    over,
    setNodeRef
  };
}
function AnimationManager(_ref) {
  let {
    animation,
    children
  } = _ref;
  const [clonedChildren, setClonedChildren] = h2(null);
  const [element, setElement] = h2(null);
  const previousChildren = usePrevious(children);
  if (!children && !clonedChildren && previousChildren) {
    setClonedChildren(previousChildren);
  }
  useIsomorphicLayoutEffect(() => {
    if (!element) {
      return;
    }
    const key2 = clonedChildren == null ? void 0 : clonedChildren.key;
    const id2 = clonedChildren == null ? void 0 : clonedChildren.props.id;
    if (key2 == null || id2 == null) {
      setClonedChildren(null);
      return;
    }
    Promise.resolve(animation(id2, element)).then(() => {
      setClonedChildren(null);
    });
  }, [animation, clonedChildren, element]);
  return Cn.createElement(Cn.Fragment, null, children, clonedChildren ? sn(clonedChildren, {
    ref: setElement
  }) : null);
}
var defaultTransform = {
  x: 0,
  y: 0,
  scaleX: 1,
  scaleY: 1
};
function NullifiedContextProvider(_ref) {
  let {
    children
  } = _ref;
  return Cn.createElement(InternalContext.Provider, {
    value: defaultInternalContext
  }, Cn.createElement(ActiveDraggableContext.Provider, {
    value: defaultTransform
  }, children));
}
var baseStyles = {
  position: "fixed",
  touchAction: "none"
};
var defaultTransition = (activatorEvent) => {
  const isKeyboardActivator = isKeyboardEvent(activatorEvent);
  return isKeyboardActivator ? "transform 250ms ease" : void 0;
};
var PositionedOverlay = /* @__PURE__ */ k3((_ref, ref2) => {
  let {
    as,
    activatorEvent,
    adjustScale: adjustScale2,
    children,
    className,
    rect,
    style,
    transform,
    transition = defaultTransition
  } = _ref;
  if (!rect) {
    return null;
  }
  const scaleAdjustedTransform = adjustScale2 ? transform : {
    ...transform,
    scaleX: 1,
    scaleY: 1
  };
  const styles2 = {
    ...baseStyles,
    width: rect.width,
    height: rect.height,
    top: rect.top,
    left: rect.left,
    transform: CSS.Transform.toString(scaleAdjustedTransform),
    transformOrigin: adjustScale2 && activatorEvent ? getRelativeTransformOrigin(activatorEvent, rect) : void 0,
    transition: typeof transition === "function" ? transition(activatorEvent) : transition,
    ...style
  };
  return Cn.createElement(as, {
    className,
    style: styles2,
    ref: ref2
  }, children);
});
var defaultDropAnimationSideEffects = (options) => (_ref) => {
  let {
    active,
    dragOverlay
  } = _ref;
  const originalStyles = {};
  const {
    styles: styles2,
    className
  } = options;
  if (styles2 != null && styles2.active) {
    for (const [key2, value] of Object.entries(styles2.active)) {
      if (value === void 0) {
        continue;
      }
      originalStyles[key2] = active.node.style.getPropertyValue(key2);
      active.node.style.setProperty(key2, value);
    }
  }
  if (styles2 != null && styles2.dragOverlay) {
    for (const [key2, value] of Object.entries(styles2.dragOverlay)) {
      if (value === void 0) {
        continue;
      }
      dragOverlay.node.style.setProperty(key2, value);
    }
  }
  if (className != null && className.active) {
    active.node.classList.add(className.active);
  }
  if (className != null && className.dragOverlay) {
    dragOverlay.node.classList.add(className.dragOverlay);
  }
  return function cleanup() {
    for (const [key2, value] of Object.entries(originalStyles)) {
      active.node.style.setProperty(key2, value);
    }
    if (className != null && className.active) {
      active.node.classList.remove(className.active);
    }
  };
};
var defaultKeyframeResolver = (_ref2) => {
  let {
    transform: {
      initial,
      final
    }
  } = _ref2;
  return [{
    transform: CSS.Transform.toString(initial)
  }, {
    transform: CSS.Transform.toString(final)
  }];
};
var defaultDropAnimationConfiguration = {
  duration: 250,
  easing: "ease",
  keyframes: defaultKeyframeResolver,
  sideEffects: /* @__PURE__ */ defaultDropAnimationSideEffects({
    styles: {
      active: {
        opacity: "0"
      }
    }
  })
};
function useDropAnimation(_ref3) {
  let {
    config,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  } = _ref3;
  return useEvent((id2, node) => {
    if (config === null) {
      return;
    }
    const activeDraggable = draggableNodes.get(id2);
    if (!activeDraggable) {
      return;
    }
    const activeNode = activeDraggable.node.current;
    if (!activeNode) {
      return;
    }
    const measurableNode = getMeasurableNode(node);
    if (!measurableNode) {
      return;
    }
    const {
      transform
    } = getWindow(node).getComputedStyle(node);
    const parsedTransform = parseTransform(transform);
    if (!parsedTransform) {
      return;
    }
    const animation = typeof config === "function" ? config : createDefaultDropAnimation(config);
    scrollIntoViewIfNeeded(activeNode, measuringConfiguration.draggable.measure);
    return animation({
      active: {
        id: id2,
        data: activeDraggable.data,
        node: activeNode,
        rect: measuringConfiguration.draggable.measure(activeNode)
      },
      draggableNodes,
      dragOverlay: {
        node,
        rect: measuringConfiguration.dragOverlay.measure(measurableNode)
      },
      droppableContainers,
      measuringConfiguration,
      transform: parsedTransform
    });
  });
}
function createDefaultDropAnimation(options) {
  const {
    duration,
    easing,
    sideEffects,
    keyframes
  } = {
    ...defaultDropAnimationConfiguration,
    ...options
  };
  return (_ref4) => {
    let {
      active,
      dragOverlay,
      transform,
      ...rest
    } = _ref4;
    if (!duration) {
      return;
    }
    const delta = {
      x: dragOverlay.rect.left - active.rect.left,
      y: dragOverlay.rect.top - active.rect.top
    };
    const scale = {
      scaleX: transform.scaleX !== 1 ? active.rect.width * transform.scaleX / dragOverlay.rect.width : 1,
      scaleY: transform.scaleY !== 1 ? active.rect.height * transform.scaleY / dragOverlay.rect.height : 1
    };
    const finalTransform = {
      x: transform.x - delta.x,
      y: transform.y - delta.y,
      ...scale
    };
    const animationKeyframes = keyframes({
      ...rest,
      active,
      dragOverlay,
      transform: {
        initial: transform,
        final: finalTransform
      }
    });
    const [firstKeyframe] = animationKeyframes;
    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];
    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {
      return;
    }
    const cleanup = sideEffects == null ? void 0 : sideEffects({
      active,
      dragOverlay,
      ...rest
    });
    const animation = dragOverlay.node.animate(animationKeyframes, {
      duration,
      easing,
      fill: "forwards"
    });
    return new Promise((resolve) => {
      animation.onfinish = () => {
        cleanup == null ? void 0 : cleanup();
        resolve();
      };
    });
  };
}
var key = 0;
function useKey(id2) {
  return F2(() => {
    if (id2 == null) {
      return;
    }
    key++;
    return key;
  }, [id2]);
}
var DragOverlay = /* @__PURE__ */ Cn.memo((_ref) => {
  let {
    adjustScale: adjustScale2 = false,
    children,
    dropAnimation: dropAnimationConfig,
    style,
    transition,
    modifiers,
    wrapperElement = "div",
    className,
    zIndex = 999
  } = _ref;
  const {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggableNodes,
    droppableContainers,
    dragOverlay,
    over,
    measuringConfiguration,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  } = useDndContext();
  const transform = q2(ActiveDraggableContext);
  const key2 = useKey(active == null ? void 0 : active.id);
  const modifiedTransform = applyModifiers(modifiers, {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect: dragOverlay.rect,
    over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    transform,
    windowRect
  });
  const initialRect = useInitialValue(activeNodeRect);
  const dropAnimation = useDropAnimation({
    config: dropAnimationConfig,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  });
  const ref2 = initialRect ? dragOverlay.setRef : void 0;
  return Cn.createElement(NullifiedContextProvider, null, Cn.createElement(AnimationManager, {
    animation: dropAnimation
  }, active && key2 ? Cn.createElement(PositionedOverlay, {
    key: key2,
    id: active.id,
    ref: ref2,
    as: wrapperElement,
    activatorEvent,
    adjustScale: adjustScale2,
    className,
    transition,
    rect: initialRect,
    style: {
      zIndex,
      ...style
    },
    transform: modifiedTransform
  }, children) : null));
});

// node_modules/@dnd-kit/sortable/dist/sortable.esm.js
init_compat_module();
function arrayMove(array, from, to) {
  const newArray = array.slice();
  newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);
  return newArray;
}
function getSortedRects(items, rects) {
  return items.reduce((accumulator, id2, index) => {
    const rect = rects.get(id2);
    if (rect) {
      accumulator[index] = rect;
    }
    return accumulator;
  }, Array(items.length));
}
function isValidIndex(index) {
  return index !== null && index >= 0;
}
function itemsEqual(a5, b4) {
  if (a5 === b4) {
    return true;
  }
  if (a5.length !== b4.length) {
    return false;
  }
  for (let i4 = 0; i4 < a5.length; i4++) {
    if (a5[i4] !== b4[i4]) {
      return false;
    }
  }
  return true;
}
function normalizeDisabled(disabled) {
  if (typeof disabled === "boolean") {
    return {
      draggable: disabled,
      droppable: disabled
    };
  }
  return disabled;
}
var defaultScale = {
  scaleX: 1,
  scaleY: 1
};
var horizontalListSortingStrategy = (_ref) => {
  var _rects$activeIndex;
  let {
    rects,
    activeNodeRect: fallbackActiveRect,
    activeIndex,
    overIndex,
    index
  } = _ref;
  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
  if (!activeNodeRect) {
    return null;
  }
  const itemGap = getItemGap(rects, index, activeIndex);
  if (index === activeIndex) {
    const newIndexRect = rects[overIndex];
    if (!newIndexRect) {
      return null;
    }
    return {
      x: activeIndex < overIndex ? newIndexRect.left + newIndexRect.width - (activeNodeRect.left + activeNodeRect.width) : newIndexRect.left - activeNodeRect.left,
      y: 0,
      ...defaultScale
    };
  }
  if (index > activeIndex && index <= overIndex) {
    return {
      x: -activeNodeRect.width - itemGap,
      y: 0,
      ...defaultScale
    };
  }
  if (index < activeIndex && index >= overIndex) {
    return {
      x: activeNodeRect.width + itemGap,
      y: 0,
      ...defaultScale
    };
  }
  return {
    x: 0,
    y: 0,
    ...defaultScale
  };
};
function getItemGap(rects, index, activeIndex) {
  const currentRect = rects[index];
  const previousRect = rects[index - 1];
  const nextRect = rects[index + 1];
  if (!currentRect || !previousRect && !nextRect) {
    return 0;
  }
  if (activeIndex < index) {
    return previousRect ? currentRect.left - (previousRect.left + previousRect.width) : nextRect.left - (currentRect.left + currentRect.width);
  }
  return nextRect ? nextRect.left - (currentRect.left + currentRect.width) : currentRect.left - (previousRect.left + previousRect.width);
}
var rectSortingStrategy = (_ref) => {
  let {
    rects,
    activeIndex,
    overIndex,
    index
  } = _ref;
  const newRects = arrayMove(rects, overIndex, activeIndex);
  const oldRect = rects[index];
  const newRect = newRects[index];
  if (!newRect || !oldRect) {
    return null;
  }
  return {
    x: newRect.left - oldRect.left,
    y: newRect.top - oldRect.top,
    scaleX: newRect.width / oldRect.width,
    scaleY: newRect.height / oldRect.height
  };
};
var defaultScale$1 = {
  scaleX: 1,
  scaleY: 1
};
var verticalListSortingStrategy = (_ref) => {
  var _rects$activeIndex;
  let {
    activeIndex,
    activeNodeRect: fallbackActiveRect,
    index,
    rects,
    overIndex
  } = _ref;
  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
  if (!activeNodeRect) {
    return null;
  }
  if (index === activeIndex) {
    const overIndexRect = rects[overIndex];
    if (!overIndexRect) {
      return null;
    }
    return {
      x: 0,
      y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,
      ...defaultScale$1
    };
  }
  const itemGap = getItemGap$1(rects, index, activeIndex);
  if (index > activeIndex && index <= overIndex) {
    return {
      x: 0,
      y: -activeNodeRect.height - itemGap,
      ...defaultScale$1
    };
  }
  if (index < activeIndex && index >= overIndex) {
    return {
      x: 0,
      y: activeNodeRect.height + itemGap,
      ...defaultScale$1
    };
  }
  return {
    x: 0,
    y: 0,
    ...defaultScale$1
  };
};
function getItemGap$1(clientRects, index, activeIndex) {
  const currentRect = clientRects[index];
  const previousRect = clientRects[index - 1];
  const nextRect = clientRects[index + 1];
  if (!currentRect) {
    return 0;
  }
  if (activeIndex < index) {
    return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;
  }
  return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;
}
var ID_PREFIX2 = "Sortable";
var Context = /* @__PURE__ */ Cn.createContext({
  activeIndex: -1,
  containerId: ID_PREFIX2,
  disableTransforms: false,
  items: [],
  overIndex: -1,
  useDragOverlay: false,
  sortedRects: [],
  strategy: rectSortingStrategy,
  disabled: {
    draggable: false,
    droppable: false
  }
});
function SortableContext(_ref) {
  let {
    children,
    id: id2,
    items: userDefinedItems,
    strategy = rectSortingStrategy,
    disabled: disabledProp = false
  } = _ref;
  const {
    active,
    dragOverlay,
    droppableRects,
    over,
    measureDroppableContainers
  } = useDndContext();
  const containerId = useUniqueId(ID_PREFIX2, id2);
  const useDragOverlay = Boolean(dragOverlay.rect !== null);
  const items = F2(() => userDefinedItems.map((item) => typeof item === "object" && "id" in item ? item.id : item), [userDefinedItems]);
  const isDragging = active != null;
  const activeIndex = active ? items.indexOf(active.id) : -1;
  const overIndex = over ? items.indexOf(over.id) : -1;
  const previousItemsRef = _2(items);
  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);
  const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;
  const disabled = normalizeDisabled(disabledProp);
  useIsomorphicLayoutEffect(() => {
    if (itemsHaveChanged && isDragging) {
      measureDroppableContainers(items);
    }
  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);
  p2(() => {
    previousItemsRef.current = items;
  }, [items]);
  const contextValue = F2(
    () => ({
      activeIndex,
      containerId,
      disabled,
      disableTransforms,
      items,
      overIndex,
      useDragOverlay,
      sortedRects: getSortedRects(items, droppableRects),
      strategy
    }),
    [activeIndex, containerId, disabled.draggable, disabled.droppable, disableTransforms, items, overIndex, droppableRects, useDragOverlay, strategy]
  );
  return Cn.createElement(Context.Provider, {
    value: contextValue
  }, children);
}
var defaultNewIndexGetter = (_ref) => {
  let {
    id: id2,
    items,
    activeIndex,
    overIndex
  } = _ref;
  return arrayMove(items, activeIndex, overIndex).indexOf(id2);
};
var defaultAnimateLayoutChanges = (_ref2) => {
  let {
    containerId,
    isSorting,
    wasDragging,
    index,
    items,
    newIndex,
    previousItems,
    previousContainerId,
    transition
  } = _ref2;
  if (!transition || !wasDragging) {
    return false;
  }
  if (previousItems !== items && index === newIndex) {
    return false;
  }
  if (isSorting) {
    return true;
  }
  return newIndex !== index && containerId === previousContainerId;
};
var defaultTransition2 = {
  duration: 200,
  easing: "ease"
};
var transitionProperty = "transform";
var disabledTransition = /* @__PURE__ */ CSS.Transition.toString({
  property: transitionProperty,
  duration: 0,
  easing: "linear"
});
var defaultAttributes = {
  roleDescription: "sortable"
};
function useDerivedTransform(_ref) {
  let {
    disabled,
    index,
    node,
    rect
  } = _ref;
  const [derivedTransform, setDerivedtransform] = h2(null);
  const previousIndex = _2(index);
  useIsomorphicLayoutEffect(() => {
    if (!disabled && index !== previousIndex.current && node.current) {
      const initial = rect.current;
      if (initial) {
        const current2 = getClientRect(node.current, {
          ignoreTransform: true
        });
        const delta = {
          x: initial.left - current2.left,
          y: initial.top - current2.top,
          scaleX: initial.width / current2.width,
          scaleY: initial.height / current2.height
        };
        if (delta.x || delta.y) {
          setDerivedtransform(delta);
        }
      }
    }
    if (index !== previousIndex.current) {
      previousIndex.current = index;
    }
  }, [disabled, index, node, rect]);
  p2(() => {
    if (derivedTransform) {
      setDerivedtransform(null);
    }
  }, [derivedTransform]);
  return derivedTransform;
}
function useSortable(_ref) {
  let {
    animateLayoutChanges: animateLayoutChanges4 = defaultAnimateLayoutChanges,
    attributes: userDefinedAttributes,
    disabled: localDisabled,
    data: customData,
    getNewIndex = defaultNewIndexGetter,
    id: id2,
    strategy: localStrategy,
    resizeObserverConfig,
    transition = defaultTransition2
  } = _ref;
  const {
    items,
    containerId,
    activeIndex,
    disabled: globalDisabled,
    disableTransforms,
    sortedRects,
    overIndex,
    useDragOverlay,
    strategy: globalStrategy
  } = q2(Context);
  const disabled = normalizeLocalDisabled(localDisabled, globalDisabled);
  const index = items.indexOf(id2);
  const data2 = F2(() => ({
    sortable: {
      containerId,
      index,
      items
    },
    ...customData
  }), [containerId, customData, index, items]);
  const itemsAfterCurrentSortable = F2(() => items.slice(items.indexOf(id2)), [items, id2]);
  const {
    rect,
    node,
    isOver,
    setNodeRef: setDroppableNodeRef
  } = useDroppable({
    id: id2,
    data: data2,
    disabled: disabled.droppable,
    resizeObserverConfig: {
      updateMeasurementsFor: itemsAfterCurrentSortable,
      ...resizeObserverConfig
    }
  });
  const {
    active,
    activatorEvent,
    activeNodeRect,
    attributes,
    setNodeRef: setDraggableNodeRef,
    listeners,
    isDragging,
    over,
    setActivatorNodeRef,
    transform
  } = useDraggable({
    id: id2,
    data: data2,
    attributes: {
      ...defaultAttributes,
      ...userDefinedAttributes
    },
    disabled: disabled.draggable
  });
  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);
  const isSorting = Boolean(active);
  const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);
  const shouldDisplaceDragSource = !useDragOverlay && isDragging;
  const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;
  const strategy = localStrategy != null ? localStrategy : globalStrategy;
  const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({
    rects: sortedRects,
    activeNodeRect,
    activeIndex,
    overIndex,
    index
  }) : null;
  const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({
    id: id2,
    items,
    activeIndex,
    overIndex
  }) : index;
  const activeId = active == null ? void 0 : active.id;
  const previous = _2({
    activeId,
    items,
    newIndex,
    containerId
  });
  const itemsHaveChanged = items !== previous.current.items;
  const shouldAnimateLayoutChanges = animateLayoutChanges4({
    active,
    containerId,
    isDragging,
    isSorting,
    id: id2,
    index,
    items,
    newIndex: previous.current.newIndex,
    previousItems: previous.current.items,
    previousContainerId: previous.current.containerId,
    transition,
    wasDragging: previous.current.activeId != null
  });
  const derivedTransform = useDerivedTransform({
    disabled: !shouldAnimateLayoutChanges,
    index,
    node,
    rect
  });
  p2(() => {
    if (isSorting && previous.current.newIndex !== newIndex) {
      previous.current.newIndex = newIndex;
    }
    if (containerId !== previous.current.containerId) {
      previous.current.containerId = containerId;
    }
    if (items !== previous.current.items) {
      previous.current.items = items;
    }
  }, [isSorting, newIndex, containerId, items]);
  p2(() => {
    if (activeId === previous.current.activeId) {
      return;
    }
    if (activeId && !previous.current.activeId) {
      previous.current.activeId = activeId;
      return;
    }
    const timeoutId = setTimeout(() => {
      previous.current.activeId = activeId;
    }, 50);
    return () => clearTimeout(timeoutId);
  }, [activeId]);
  return {
    active,
    activeIndex,
    attributes,
    data: data2,
    rect,
    index,
    newIndex,
    items,
    isOver,
    isSorting,
    isDragging,
    listeners,
    node,
    overIndex,
    over,
    setNodeRef,
    setActivatorNodeRef,
    setDroppableNodeRef,
    setDraggableNodeRef,
    transform: derivedTransform != null ? derivedTransform : finalTransform,
    transition: getTransition()
  };
  function getTransition() {
    if (derivedTransform || itemsHaveChanged && previous.current.newIndex === index) {
      return disabledTransition;
    }
    if (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent) || !transition) {
      return void 0;
    }
    if (isSorting || shouldAnimateLayoutChanges) {
      return CSS.Transition.toString({
        ...transition,
        property: transitionProperty
      });
    }
    return void 0;
  }
}
function normalizeLocalDisabled(localDisabled, globalDisabled) {
  var _localDisabled$dragga, _localDisabled$droppa;
  if (typeof localDisabled === "boolean") {
    return {
      draggable: localDisabled,
      droppable: false
    };
  }
  return {
    draggable: (_localDisabled$dragga = localDisabled == null ? void 0 : localDisabled.draggable) != null ? _localDisabled$dragga : globalDisabled.draggable,
    droppable: (_localDisabled$droppa = localDisabled == null ? void 0 : localDisabled.droppable) != null ? _localDisabled$droppa : globalDisabled.droppable
  };
}
function hasSortableData(entry) {
  if (!entry) {
    return false;
  }
  const data2 = entry.data.current;
  if (data2 && "sortable" in data2 && typeof data2.sortable === "object" && "containerId" in data2.sortable && "items" in data2.sortable && "index" in data2.sortable) {
    return true;
  }
  return false;
}
var directions = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];
var sortableKeyboardCoordinates = (event, _ref) => {
  let {
    context: {
      active,
      collisionRect,
      droppableRects,
      droppableContainers,
      over,
      scrollableAncestors
    }
  } = _ref;
  if (directions.includes(event.code)) {
    event.preventDefault();
    if (!active || !collisionRect) {
      return;
    }
    const filteredContainers = [];
    droppableContainers.getEnabled().forEach((entry) => {
      if (!entry || entry != null && entry.disabled) {
        return;
      }
      const rect = droppableRects.get(entry.id);
      if (!rect) {
        return;
      }
      switch (event.code) {
        case KeyboardCode.Down:
          if (collisionRect.top < rect.top) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Up:
          if (collisionRect.top > rect.top) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Left:
          if (collisionRect.left > rect.left) {
            filteredContainers.push(entry);
          }
          break;
        case KeyboardCode.Right:
          if (collisionRect.left < rect.left) {
            filteredContainers.push(entry);
          }
          break;
      }
    });
    const collisions = closestCorners({
      active,
      collisionRect,
      droppableRects,
      droppableContainers: filteredContainers,
      pointerCoordinates: null
    });
    let closestId = getFirstCollision(collisions, "id");
    if (closestId === (over == null ? void 0 : over.id) && collisions.length > 1) {
      closestId = collisions[1].id;
    }
    if (closestId != null) {
      const activeDroppable = droppableContainers.get(active.id);
      const newDroppable = droppableContainers.get(closestId);
      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;
      const newNode = newDroppable == null ? void 0 : newDroppable.node.current;
      if (newNode && newRect && activeDroppable && newDroppable) {
        const newScrollAncestors = getScrollableAncestors(newNode);
        const hasDifferentScrollAncestors = newScrollAncestors.some((element, index) => scrollableAncestors[index] !== element);
        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);
        const isAfterActive = isAfter(activeDroppable, newDroppable);
        const offset2 = hasDifferentScrollAncestors || !hasSameContainer ? {
          x: 0,
          y: 0
        } : {
          x: isAfterActive ? collisionRect.width - newRect.width : 0,
          y: isAfterActive ? collisionRect.height - newRect.height : 0
        };
        const rectCoordinates = {
          x: newRect.left,
          y: newRect.top
        };
        const newCoordinates = offset2.x && offset2.y ? rectCoordinates : subtract(rectCoordinates, offset2);
        return newCoordinates;
      }
    }
  }
  return void 0;
};
function isSameContainer(a5, b4) {
  if (!hasSortableData(a5) || !hasSortableData(b4)) {
    return false;
  }
  return a5.data.current.sortable.containerId === b4.data.current.sortable.containerId;
}
function isAfter(a5, b4) {
  if (!hasSortableData(a5) || !hasSortableData(b4)) {
    return false;
  }
  if (!isSameContainer(a5, b4)) {
    return false;
  }
  return a5.data.current.sortable.index < b4.data.current.sortable.index;
}

// src/components/Space/Editor/StickerMenu/emojis/default.ts
var emojis = {
  smileys_people: [
    { n: ["grinning", "grinning face"], u: "1f600" },
    { n: ["smiley", "smiling face with open mouth"], u: "1f603" },
    {
      n: ["smile", "smiling face with open mouth and smiling eyes"],
      u: "1f604"
    },
    { n: ["grin", "grinning face with smiling eyes"], u: "1f601" },
    {
      n: [
        "laughing",
        "satisfied",
        "smiling face with open mouth and tightly-closed eyes"
      ],
      u: "1f606"
    },
    {
      n: ["sweat smile", "smiling face with open mouth and cold sweat"],
      u: "1f605"
    },
    { n: ["rolling on the floor laughing"], u: "1f923" },
    { n: ["joy", "face with tears of joy"], u: "1f602" },
    { n: ["slightly smiling face"], u: "1f642" },
    { n: ["upside-down face", "upside down face"], u: "1f643" },
    { n: ["melting face"], u: "1fae0" },
    { n: ["wink", "winking face"], u: "1f609" },
    { n: ["blush", "smiling face with smiling eyes"], u: "1f60a" },
    { n: ["innocent", "smiling face with halo"], u: "1f607" },
    {
      n: [
        "smiling face with 3 hearts",
        "smiling face with smiling eyes and three hearts"
      ],
      u: "1f970"
    },
    { n: ["heart eyes", "smiling face with heart-shaped eyes"], u: "1f60d" },
    { n: ["star-struck", "grinning face with star eyes"], u: "1f929" },
    { n: ["kissing heart", "face throwing a kiss"], u: "1f618" },
    { n: ["kissing", "kissing face"], u: "1f617" },
    { n: ["relaxed", "white smiling face"], u: "263a-fe0f" },
    { n: ["kissing closed eyes", "kissing face with closed eyes"], u: "1f61a" },
    {
      n: ["kissing smiling eyes", "kissing face with smiling eyes"],
      u: "1f619"
    },
    { n: ["smiling face with tear"], u: "1f972" },
    { n: ["yum", "face savouring delicious food"], u: "1f60b" },
    { n: ["stuck out tongue", "face with stuck-out tongue"], u: "1f61b" },
    {
      n: [
        "stuck out tongue winking eye",
        "face with stuck-out tongue and winking eye"
      ],
      u: "1f61c"
    },
    {
      n: ["zany face", "grinning face with one large and one small eye"],
      u: "1f92a"
    },
    {
      n: [
        "stuck out tongue closed eyes",
        "face with stuck-out tongue and tightly-closed eyes"
      ],
      u: "1f61d"
    },
    { n: ["money-mouth face", "money mouth face"], u: "1f911" },
    { n: ["hugging face"], u: "1f917" },
    {
      n: [
        "face with hand over mouth",
        "smiling face with smiling eyes and hand covering mouth"
      ],
      u: "1f92d"
    },
    { n: ["face with open eyes and hand over mouth"], u: "1fae2" },
    { n: ["face with peeking eye"], u: "1fae3" },
    {
      n: ["shushing face", "face with finger covering closed lips"],
      u: "1f92b"
    },
    { n: ["thinking face"], u: "1f914" },
    { n: ["saluting face"], u: "1fae1" },
    { n: ["zipper-mouth face", "zipper mouth face"], u: "1f910" },
    {
      n: ["face with raised eyebrow", "face with one eyebrow raised"],
      u: "1f928"
    },
    { n: ["neutral face"], u: "1f610" },
    { n: ["expressionless", "expressionless face"], u: "1f611" },
    { n: ["no mouth", "face without mouth"], u: "1f636" },
    { n: ["dotted line face"], u: "1fae5" },
    { n: ["face in clouds"], u: "1f636-200d-1f32b-fe0f" },
    { n: ["smirk", "smirking face"], u: "1f60f" },
    { n: ["unamused", "unamused face"], u: "1f612" },
    { n: ["face with rolling eyes"], u: "1f644" },
    { n: ["grimacing", "grimacing face"], u: "1f62c" },
    { n: ["face exhaling"], u: "1f62e-200d-1f4a8" },
    { n: ["lying face"], u: "1f925" },
    { n: ["relieved", "relieved face"], u: "1f60c" },
    { n: ["pensive", "pensive face"], u: "1f614" },
    { n: ["sleepy", "sleepy face"], u: "1f62a" },
    { n: ["drooling face"], u: "1f924" },
    { n: ["sleeping", "sleeping face"], u: "1f634" },
    { n: ["mask", "face with medical mask"], u: "1f637" },
    { n: ["face with thermometer"], u: "1f912" },
    { n: ["face with head-bandage", "face with head bandage"], u: "1f915" },
    { n: ["nauseated face"], u: "1f922" },
    { n: ["face vomiting", "face with open mouth vomiting"], u: "1f92e" },
    { n: ["sneezing face"], u: "1f927" },
    { n: ["hot face", "overheated face"], u: "1f975" },
    { n: ["cold face", "freezing face"], u: "1f976" },
    { n: ["woozy face", "face with uneven eyes and wavy mouth"], u: "1f974" },
    { n: ["dizzy face"], u: "1f635" },
    { n: ["face with spiral eyes"], u: "1f635-200d-1f4ab" },
    { n: ["exploding head", "shocked face with exploding head"], u: "1f92f" },
    { n: ["face with cowboy hat"], u: "1f920" },
    { n: ["partying face", "face with party horn and party hat"], u: "1f973" },
    { n: ["disguised face"], u: "1f978" },
    { n: ["sunglasses", "smiling face with sunglasses"], u: "1f60e" },
    { n: ["nerd face"], u: "1f913" },
    { n: ["face with monocle"], u: "1f9d0" },
    { n: ["confused", "confused face"], u: "1f615" },
    { n: ["face with diagonal mouth"], u: "1fae4" },
    { n: ["worried", "worried face"], u: "1f61f" },
    { n: ["slightly frowning face"], u: "1f641" },
    { n: ["frowning face", "white frowning face"], u: "2639-fe0f" },
    { n: ["open mouth", "face with open mouth"], u: "1f62e" },
    { n: ["hushed", "hushed face"], u: "1f62f" },
    { n: ["astonished", "astonished face"], u: "1f632" },
    { n: ["flushed", "flushed face"], u: "1f633" },
    { n: ["pleading face", "face with pleading eyes"], u: "1f97a" },
    { n: ["face holding back tears"], u: "1f979" },
    { n: ["frowning", "frowning face with open mouth"], u: "1f626" },
    { n: ["anguished", "anguished face"], u: "1f627" },
    { n: ["fearful", "fearful face"], u: "1f628" },
    { n: ["cold sweat", "face with open mouth and cold sweat"], u: "1f630" },
    {
      n: ["disappointed relieved", "disappointed but relieved face"],
      u: "1f625"
    },
    { n: ["cry", "crying face"], u: "1f622" },
    { n: ["sob", "loudly crying face"], u: "1f62d" },
    { n: ["scream", "face screaming in fear"], u: "1f631" },
    { n: ["confounded", "confounded face"], u: "1f616" },
    { n: ["persevere", "persevering face"], u: "1f623" },
    { n: ["disappointed", "disappointed face"], u: "1f61e" },
    { n: ["sweat", "face with cold sweat"], u: "1f613" },
    { n: ["weary", "weary face"], u: "1f629" },
    { n: ["tired face"], u: "1f62b" },
    { n: ["yawning face"], u: "1f971" },
    { n: ["triumph", "face with look of triumph"], u: "1f624" },
    { n: ["rage", "pouting face"], u: "1f621" },
    { n: ["angry", "angry face"], u: "1f620" },
    {
      n: [
        "face with symbols on mouth",
        "serious face with symbols covering mouth"
      ],
      u: "1f92c"
    },
    { n: ["smiling imp", "smiling face with horns"], u: "1f608" },
    { n: ["imp"], u: "1f47f" },
    { n: ["skull"], u: "1f480" },
    { n: ["skull and crossbones"], u: "2620-fe0f" },
    { n: ["poop", "shit", "hankey", "pile of poo"], u: "1f4a9" },
    { n: ["clown face"], u: "1f921" },
    { n: ["japanese ogre"], u: "1f479" },
    { n: ["japanese goblin"], u: "1f47a" },
    { n: ["ghost"], u: "1f47b" },
    { n: ["alien", "extraterrestrial alien"], u: "1f47d" },
    { n: ["alien monster", "space invader"], u: "1f47e" },
    { n: ["robot face"], u: "1f916" },
    { n: ["smiley cat", "smiling cat face with open mouth"], u: "1f63a" },
    { n: ["smile cat", "grinning cat face with smiling eyes"], u: "1f638" },
    { n: ["joy cat", "cat face with tears of joy"], u: "1f639" },
    {
      n: ["heart eyes cat", "smiling cat face with heart-shaped eyes"],
      u: "1f63b"
    },
    { n: ["smirk cat", "cat face with wry smile"], u: "1f63c" },
    { n: ["kissing cat", "kissing cat face with closed eyes"], u: "1f63d" },
    { n: ["scream cat", "weary cat face"], u: "1f640" },
    { n: ["crying cat face"], u: "1f63f" },
    { n: ["pouting cat", "pouting cat face"], u: "1f63e" },
    { n: ["see no evil", "see-no-evil monkey"], u: "1f648" },
    { n: ["hear no evil", "hear-no-evil monkey"], u: "1f649" },
    { n: ["speak no evil", "speak-no-evil monkey"], u: "1f64a" },
    { n: ["kiss", "kiss mark"], u: "1f48b" },
    { n: ["love letter"], u: "1f48c" },
    { n: ["cupid", "heart with arrow"], u: "1f498" },
    { n: ["gift heart", "heart with ribbon"], u: "1f49d" },
    { n: ["sparkling heart"], u: "1f496" },
    { n: ["heartpulse", "growing heart"], u: "1f497" },
    { n: ["heartbeat", "beating heart"], u: "1f493" },
    { n: ["revolving hearts"], u: "1f49e" },
    { n: ["two hearts"], u: "1f495" },
    { n: ["heart decoration"], u: "1f49f" },
    {
      n: ["heart exclamation", "heavy heart exclamation mark ornament"],
      u: "2763-fe0f"
    },
    { n: ["broken heart"], u: "1f494" },
    { n: ["heart on fire"], u: "2764-fe0f-200d-1f525" },
    { n: ["mending heart"], u: "2764-fe0f-200d-1fa79" },
    { n: ["heart", "heavy black heart"], u: "2764-fe0f" },
    { n: ["orange heart"], u: "1f9e1" },
    { n: ["yellow heart"], u: "1f49b" },
    { n: ["green heart"], u: "1f49a" },
    { n: ["blue heart"], u: "1f499" },
    { n: ["purple heart"], u: "1f49c" },
    { n: ["brown heart"], u: "1f90e" },
    { n: ["black heart"], u: "1f5a4" },
    { n: ["white heart"], u: "1f90d" },
    { n: ["100", "hundred points symbol"], u: "1f4af" },
    { n: ["anger", "anger symbol"], u: "1f4a2" },
    { n: ["boom", "collision", "collision symbol"], u: "1f4a5" },
    { n: ["dizzy", "dizzy symbol"], u: "1f4ab" },
    { n: ["sweat drops", "splashing sweat symbol"], u: "1f4a6" },
    { n: ["dash", "dash symbol"], u: "1f4a8" },
    { n: ["hole"], u: "1f573-fe0f" },
    { n: ["bomb"], u: "1f4a3" },
    { n: ["speech balloon"], u: "1f4ac" },
    {
      n: ["eye in speech bubble", "eye-in-speech-bubble"],
      u: "1f441-fe0f-200d-1f5e8-fe0f"
    },
    { n: ["left speech bubble"], u: "1f5e8-fe0f" },
    { n: ["right anger bubble"], u: "1f5ef-fe0f" },
    { n: ["thought balloon"], u: "1f4ad" },
    { n: ["zzz", "sleeping symbol"], u: "1f4a4" },
    {
      n: ["wave", "waving hand sign"],
      u: "1f44b",
      v: [
        "1f44b-1f3fb",
        "1f44b-1f3fc",
        "1f44b-1f3fd",
        "1f44b-1f3fe",
        "1f44b-1f3ff"
      ]
    },
    {
      n: ["raised back of hand"],
      u: "1f91a",
      v: [
        "1f91a-1f3fb",
        "1f91a-1f3fc",
        "1f91a-1f3fd",
        "1f91a-1f3fe",
        "1f91a-1f3ff"
      ]
    },
    {
      n: ["hand with fingers splayed", "raised hand with fingers splayed"],
      u: "1f590-fe0f",
      v: [
        "1f590-1f3fb",
        "1f590-1f3fc",
        "1f590-1f3fd",
        "1f590-1f3fe",
        "1f590-1f3ff"
      ]
    },
    {
      n: ["hand", "raised hand"],
      u: "270b",
      v: ["270b-1f3fb", "270b-1f3fc", "270b-1f3fd", "270b-1f3fe", "270b-1f3ff"]
    },
    {
      n: [
        "spock-hand",
        "raised hand with part between middle and ring fingers"
      ],
      u: "1f596",
      v: [
        "1f596-1f3fb",
        "1f596-1f3fc",
        "1f596-1f3fd",
        "1f596-1f3fe",
        "1f596-1f3ff"
      ]
    },
    {
      n: ["rightwards hand"],
      u: "1faf1",
      v: [
        "1faf1-1f3fb",
        "1faf1-1f3fc",
        "1faf1-1f3fd",
        "1faf1-1f3fe",
        "1faf1-1f3ff"
      ]
    },
    {
      n: ["leftwards hand"],
      u: "1faf2",
      v: [
        "1faf2-1f3fb",
        "1faf2-1f3fc",
        "1faf2-1f3fd",
        "1faf2-1f3fe",
        "1faf2-1f3ff"
      ]
    },
    {
      n: ["palm down hand"],
      u: "1faf3",
      v: [
        "1faf3-1f3fb",
        "1faf3-1f3fc",
        "1faf3-1f3fd",
        "1faf3-1f3fe",
        "1faf3-1f3ff"
      ]
    },
    {
      n: ["palm up hand"],
      u: "1faf4",
      v: [
        "1faf4-1f3fb",
        "1faf4-1f3fc",
        "1faf4-1f3fd",
        "1faf4-1f3fe",
        "1faf4-1f3ff"
      ]
    },
    {
      n: ["ok hand", "ok hand sign"],
      u: "1f44c",
      v: [
        "1f44c-1f3fb",
        "1f44c-1f3fc",
        "1f44c-1f3fd",
        "1f44c-1f3fe",
        "1f44c-1f3ff"
      ]
    },
    {
      n: ["pinched fingers"],
      u: "1f90c",
      v: [
        "1f90c-1f3fb",
        "1f90c-1f3fc",
        "1f90c-1f3fd",
        "1f90c-1f3fe",
        "1f90c-1f3ff"
      ]
    },
    {
      n: ["pinching hand"],
      u: "1f90f",
      v: [
        "1f90f-1f3fb",
        "1f90f-1f3fc",
        "1f90f-1f3fd",
        "1f90f-1f3fe",
        "1f90f-1f3ff"
      ]
    },
    {
      n: ["v", "victory hand"],
      u: "270c-fe0f",
      v: ["270c-1f3fb", "270c-1f3fc", "270c-1f3fd", "270c-1f3fe", "270c-1f3ff"]
    },
    {
      n: ["crossed fingers", "hand with index and middle fingers crossed"],
      u: "1f91e",
      v: [
        "1f91e-1f3fb",
        "1f91e-1f3fc",
        "1f91e-1f3fd",
        "1f91e-1f3fe",
        "1f91e-1f3ff"
      ]
    },
    {
      n: ["hand with index finger and thumb crossed"],
      u: "1faf0",
      v: [
        "1faf0-1f3fb",
        "1faf0-1f3fc",
        "1faf0-1f3fd",
        "1faf0-1f3fe",
        "1faf0-1f3ff"
      ]
    },
    {
      n: ["i love you hand sign"],
      u: "1f91f",
      v: [
        "1f91f-1f3fb",
        "1f91f-1f3fc",
        "1f91f-1f3fd",
        "1f91f-1f3fe",
        "1f91f-1f3ff"
      ]
    },
    {
      n: ["the horns", "sign of the horns"],
      u: "1f918",
      v: [
        "1f918-1f3fb",
        "1f918-1f3fc",
        "1f918-1f3fd",
        "1f918-1f3fe",
        "1f918-1f3ff"
      ]
    },
    {
      n: ["call me hand"],
      u: "1f919",
      v: [
        "1f919-1f3fb",
        "1f919-1f3fc",
        "1f919-1f3fd",
        "1f919-1f3fe",
        "1f919-1f3ff"
      ]
    },
    {
      n: ["point left", "white left pointing backhand index"],
      u: "1f448",
      v: [
        "1f448-1f3fb",
        "1f448-1f3fc",
        "1f448-1f3fd",
        "1f448-1f3fe",
        "1f448-1f3ff"
      ]
    },
    {
      n: ["point right", "white right pointing backhand index"],
      u: "1f449",
      v: [
        "1f449-1f3fb",
        "1f449-1f3fc",
        "1f449-1f3fd",
        "1f449-1f3fe",
        "1f449-1f3ff"
      ]
    },
    {
      n: ["point up 2", "white up pointing backhand index"],
      u: "1f446",
      v: [
        "1f446-1f3fb",
        "1f446-1f3fc",
        "1f446-1f3fd",
        "1f446-1f3fe",
        "1f446-1f3ff"
      ]
    },
    {
      n: ["middle finger", "reversed hand with middle finger extended"],
      u: "1f595",
      v: [
        "1f595-1f3fb",
        "1f595-1f3fc",
        "1f595-1f3fd",
        "1f595-1f3fe",
        "1f595-1f3ff"
      ]
    },
    {
      n: ["point down", "white down pointing backhand index"],
      u: "1f447",
      v: [
        "1f447-1f3fb",
        "1f447-1f3fc",
        "1f447-1f3fd",
        "1f447-1f3fe",
        "1f447-1f3ff"
      ]
    },
    {
      n: ["point up", "white up pointing index"],
      u: "261d-fe0f",
      v: ["261d-1f3fb", "261d-1f3fc", "261d-1f3fd", "261d-1f3fe", "261d-1f3ff"]
    },
    {
      n: ["index pointing at the viewer"],
      u: "1faf5",
      v: [
        "1faf5-1f3fb",
        "1faf5-1f3fc",
        "1faf5-1f3fd",
        "1faf5-1f3fe",
        "1faf5-1f3ff"
      ]
    },
    {
      n: ["+1", "thumbsup", "thumbs up sign"],
      u: "1f44d",
      v: [
        "1f44d-1f3fb",
        "1f44d-1f3fc",
        "1f44d-1f3fd",
        "1f44d-1f3fe",
        "1f44d-1f3ff"
      ]
    },
    {
      n: ["-1", "thumbsdown", "thumbs down sign"],
      u: "1f44e",
      v: [
        "1f44e-1f3fb",
        "1f44e-1f3fc",
        "1f44e-1f3fd",
        "1f44e-1f3fe",
        "1f44e-1f3ff"
      ]
    },
    {
      n: ["fist", "raised fist"],
      u: "270a",
      v: ["270a-1f3fb", "270a-1f3fc", "270a-1f3fd", "270a-1f3fe", "270a-1f3ff"]
    },
    {
      n: ["punch", "facepunch", "fisted hand sign"],
      u: "1f44a",
      v: [
        "1f44a-1f3fb",
        "1f44a-1f3fc",
        "1f44a-1f3fd",
        "1f44a-1f3fe",
        "1f44a-1f3ff"
      ]
    },
    {
      n: ["left-facing fist"],
      u: "1f91b",
      v: [
        "1f91b-1f3fb",
        "1f91b-1f3fc",
        "1f91b-1f3fd",
        "1f91b-1f3fe",
        "1f91b-1f3ff"
      ]
    },
    {
      n: ["right-facing fist"],
      u: "1f91c",
      v: [
        "1f91c-1f3fb",
        "1f91c-1f3fc",
        "1f91c-1f3fd",
        "1f91c-1f3fe",
        "1f91c-1f3ff"
      ]
    },
    {
      n: ["clap", "clapping hands sign"],
      u: "1f44f",
      v: [
        "1f44f-1f3fb",
        "1f44f-1f3fc",
        "1f44f-1f3fd",
        "1f44f-1f3fe",
        "1f44f-1f3ff"
      ]
    },
    {
      n: ["raised hands", "person raising both hands in celebration"],
      u: "1f64c",
      v: [
        "1f64c-1f3fb",
        "1f64c-1f3fc",
        "1f64c-1f3fd",
        "1f64c-1f3fe",
        "1f64c-1f3ff"
      ]
    },
    {
      n: ["heart hands"],
      u: "1faf6",
      v: [
        "1faf6-1f3fb",
        "1faf6-1f3fc",
        "1faf6-1f3fd",
        "1faf6-1f3fe",
        "1faf6-1f3ff"
      ]
    },
    {
      n: ["open hands", "open hands sign"],
      u: "1f450",
      v: [
        "1f450-1f3fb",
        "1f450-1f3fc",
        "1f450-1f3fd",
        "1f450-1f3fe",
        "1f450-1f3ff"
      ]
    },
    {
      n: ["palms up together"],
      u: "1f932",
      v: [
        "1f932-1f3fb",
        "1f932-1f3fc",
        "1f932-1f3fd",
        "1f932-1f3fe",
        "1f932-1f3ff"
      ]
    },
    {
      n: ["handshake"],
      u: "1f91d",
      v: [
        "1f91d-1f3fb",
        "1f91d-1f3fc",
        "1f91d-1f3fd",
        "1f91d-1f3fe",
        "1f91d-1f3ff",
        "1faf1-1f3fb-200d-1faf2-1f3fc",
        "1faf1-1f3fb-200d-1faf2-1f3fd",
        "1faf1-1f3fb-200d-1faf2-1f3fe",
        "1faf1-1f3fb-200d-1faf2-1f3ff",
        "1faf1-1f3fc-200d-1faf2-1f3fb",
        "1faf1-1f3fc-200d-1faf2-1f3fd",
        "1faf1-1f3fc-200d-1faf2-1f3fe",
        "1faf1-1f3fc-200d-1faf2-1f3ff",
        "1faf1-1f3fd-200d-1faf2-1f3fb",
        "1faf1-1f3fd-200d-1faf2-1f3fc",
        "1faf1-1f3fd-200d-1faf2-1f3fe",
        "1faf1-1f3fd-200d-1faf2-1f3ff",
        "1faf1-1f3fe-200d-1faf2-1f3fb",
        "1faf1-1f3fe-200d-1faf2-1f3fc",
        "1faf1-1f3fe-200d-1faf2-1f3fd",
        "1faf1-1f3fe-200d-1faf2-1f3ff",
        "1faf1-1f3ff-200d-1faf2-1f3fb",
        "1faf1-1f3ff-200d-1faf2-1f3fc",
        "1faf1-1f3ff-200d-1faf2-1f3fd",
        "1faf1-1f3ff-200d-1faf2-1f3fe"
      ]
    },
    {
      n: ["pray", "person with folded hands"],
      u: "1f64f",
      v: [
        "1f64f-1f3fb",
        "1f64f-1f3fc",
        "1f64f-1f3fd",
        "1f64f-1f3fe",
        "1f64f-1f3ff"
      ]
    },
    {
      n: ["writing hand"],
      u: "270d-fe0f",
      v: ["270d-1f3fb", "270d-1f3fc", "270d-1f3fd", "270d-1f3fe", "270d-1f3ff"]
    },
    {
      n: ["nail care", "nail polish"],
      u: "1f485",
      v: [
        "1f485-1f3fb",
        "1f485-1f3fc",
        "1f485-1f3fd",
        "1f485-1f3fe",
        "1f485-1f3ff"
      ]
    },
    {
      n: ["selfie"],
      u: "1f933",
      v: [
        "1f933-1f3fb",
        "1f933-1f3fc",
        "1f933-1f3fd",
        "1f933-1f3fe",
        "1f933-1f3ff"
      ]
    },
    {
      n: ["muscle", "flexed biceps"],
      u: "1f4aa",
      v: [
        "1f4aa-1f3fb",
        "1f4aa-1f3fc",
        "1f4aa-1f3fd",
        "1f4aa-1f3fe",
        "1f4aa-1f3ff"
      ]
    },
    { n: ["mechanical arm"], u: "1f9be" },
    { n: ["mechanical leg"], u: "1f9bf" },
    {
      n: ["leg"],
      u: "1f9b5",
      v: [
        "1f9b5-1f3fb",
        "1f9b5-1f3fc",
        "1f9b5-1f3fd",
        "1f9b5-1f3fe",
        "1f9b5-1f3ff"
      ]
    },
    {
      n: ["foot"],
      u: "1f9b6",
      v: [
        "1f9b6-1f3fb",
        "1f9b6-1f3fc",
        "1f9b6-1f3fd",
        "1f9b6-1f3fe",
        "1f9b6-1f3ff"
      ]
    },
    {
      n: ["ear"],
      u: "1f442",
      v: [
        "1f442-1f3fb",
        "1f442-1f3fc",
        "1f442-1f3fd",
        "1f442-1f3fe",
        "1f442-1f3ff"
      ]
    },
    {
      n: ["ear with hearing aid"],
      u: "1f9bb",
      v: [
        "1f9bb-1f3fb",
        "1f9bb-1f3fc",
        "1f9bb-1f3fd",
        "1f9bb-1f3fe",
        "1f9bb-1f3ff"
      ]
    },
    {
      n: ["nose"],
      u: "1f443",
      v: [
        "1f443-1f3fb",
        "1f443-1f3fc",
        "1f443-1f3fd",
        "1f443-1f3fe",
        "1f443-1f3ff"
      ]
    },
    { n: ["brain"], u: "1f9e0" },
    { n: ["anatomical heart"], u: "1fac0" },
    { n: ["lungs"], u: "1fac1" },
    { n: ["tooth"], u: "1f9b7" },
    { n: ["bone"], u: "1f9b4" },
    { n: ["eyes"], u: "1f440" },
    { n: ["eye"], u: "1f441-fe0f" },
    { n: ["tongue"], u: "1f445" },
    { n: ["lips", "mouth"], u: "1f444" },
    { n: ["biting lip"], u: "1fae6" },
    {
      n: ["baby"],
      u: "1f476",
      v: [
        "1f476-1f3fb",
        "1f476-1f3fc",
        "1f476-1f3fd",
        "1f476-1f3fe",
        "1f476-1f3ff"
      ]
    },
    {
      n: ["child"],
      u: "1f9d2",
      v: [
        "1f9d2-1f3fb",
        "1f9d2-1f3fc",
        "1f9d2-1f3fd",
        "1f9d2-1f3fe",
        "1f9d2-1f3ff"
      ]
    },
    {
      n: ["boy"],
      u: "1f466",
      v: [
        "1f466-1f3fb",
        "1f466-1f3fc",
        "1f466-1f3fd",
        "1f466-1f3fe",
        "1f466-1f3ff"
      ]
    },
    {
      n: ["girl"],
      u: "1f467",
      v: [
        "1f467-1f3fb",
        "1f467-1f3fc",
        "1f467-1f3fd",
        "1f467-1f3fe",
        "1f467-1f3ff"
      ]
    },
    {
      n: ["adult"],
      u: "1f9d1",
      v: [
        "1f9d1-1f3fb",
        "1f9d1-1f3fc",
        "1f9d1-1f3fd",
        "1f9d1-1f3fe",
        "1f9d1-1f3ff"
      ]
    },
    {
      n: ["person with blond hair"],
      u: "1f471",
      v: [
        "1f471-1f3fb",
        "1f471-1f3fc",
        "1f471-1f3fd",
        "1f471-1f3fe",
        "1f471-1f3ff"
      ]
    },
    {
      n: ["man"],
      u: "1f468",
      v: [
        "1f468-1f3fb",
        "1f468-1f3fc",
        "1f468-1f3fd",
        "1f468-1f3fe",
        "1f468-1f3ff"
      ]
    },
    {
      n: ["bearded person"],
      u: "1f9d4",
      v: [
        "1f9d4-1f3fb",
        "1f9d4-1f3fc",
        "1f9d4-1f3fd",
        "1f9d4-1f3fe",
        "1f9d4-1f3ff"
      ]
    },
    {
      n: ["man: beard", "man with beard"],
      u: "1f9d4-200d-2642-fe0f",
      v: [
        "1f9d4-1f3fb-200d-2642-fe0f",
        "1f9d4-1f3fc-200d-2642-fe0f",
        "1f9d4-1f3fd-200d-2642-fe0f",
        "1f9d4-1f3fe-200d-2642-fe0f",
        "1f9d4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman: beard", "woman with beard"],
      u: "1f9d4-200d-2640-fe0f",
      v: [
        "1f9d4-1f3fb-200d-2640-fe0f",
        "1f9d4-1f3fc-200d-2640-fe0f",
        "1f9d4-1f3fd-200d-2640-fe0f",
        "1f9d4-1f3fe-200d-2640-fe0f",
        "1f9d4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man: red hair", "red haired man"],
      u: "1f468-200d-1f9b0",
      v: [
        "1f468-1f3fb-200d-1f9b0",
        "1f468-1f3fc-200d-1f9b0",
        "1f468-1f3fd-200d-1f9b0",
        "1f468-1f3fe-200d-1f9b0",
        "1f468-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["man: curly hair", "curly haired man"],
      u: "1f468-200d-1f9b1",
      v: [
        "1f468-1f3fb-200d-1f9b1",
        "1f468-1f3fc-200d-1f9b1",
        "1f468-1f3fd-200d-1f9b1",
        "1f468-1f3fe-200d-1f9b1",
        "1f468-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["man: white hair", "white haired man"],
      u: "1f468-200d-1f9b3",
      v: [
        "1f468-1f3fb-200d-1f9b3",
        "1f468-1f3fc-200d-1f9b3",
        "1f468-1f3fd-200d-1f9b3",
        "1f468-1f3fe-200d-1f9b3",
        "1f468-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["bald man", "man: bald"],
      u: "1f468-200d-1f9b2",
      v: [
        "1f468-1f3fb-200d-1f9b2",
        "1f468-1f3fc-200d-1f9b2",
        "1f468-1f3fd-200d-1f9b2",
        "1f468-1f3fe-200d-1f9b2",
        "1f468-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["woman"],
      u: "1f469",
      v: [
        "1f469-1f3fb",
        "1f469-1f3fc",
        "1f469-1f3fd",
        "1f469-1f3fe",
        "1f469-1f3ff"
      ]
    },
    {
      n: ["woman: red hair", "red haired woman"],
      u: "1f469-200d-1f9b0",
      v: [
        "1f469-1f3fb-200d-1f9b0",
        "1f469-1f3fc-200d-1f9b0",
        "1f469-1f3fd-200d-1f9b0",
        "1f469-1f3fe-200d-1f9b0",
        "1f469-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["person: red hair", "red haired person"],
      u: "1f9d1-200d-1f9b0",
      v: [
        "1f9d1-1f3fb-200d-1f9b0",
        "1f9d1-1f3fc-200d-1f9b0",
        "1f9d1-1f3fd-200d-1f9b0",
        "1f9d1-1f3fe-200d-1f9b0",
        "1f9d1-1f3ff-200d-1f9b0"
      ]
    },
    {
      n: ["woman: curly hair", "curly haired woman"],
      u: "1f469-200d-1f9b1",
      v: [
        "1f469-1f3fb-200d-1f9b1",
        "1f469-1f3fc-200d-1f9b1",
        "1f469-1f3fd-200d-1f9b1",
        "1f469-1f3fe-200d-1f9b1",
        "1f469-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["person: curly hair", "curly haired person"],
      u: "1f9d1-200d-1f9b1",
      v: [
        "1f9d1-1f3fb-200d-1f9b1",
        "1f9d1-1f3fc-200d-1f9b1",
        "1f9d1-1f3fd-200d-1f9b1",
        "1f9d1-1f3fe-200d-1f9b1",
        "1f9d1-1f3ff-200d-1f9b1"
      ]
    },
    {
      n: ["woman: white hair", "white haired woman"],
      u: "1f469-200d-1f9b3",
      v: [
        "1f469-1f3fb-200d-1f9b3",
        "1f469-1f3fc-200d-1f9b3",
        "1f469-1f3fd-200d-1f9b3",
        "1f469-1f3fe-200d-1f9b3",
        "1f469-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["person: white hair", "white haired person"],
      u: "1f9d1-200d-1f9b3",
      v: [
        "1f9d1-1f3fb-200d-1f9b3",
        "1f9d1-1f3fc-200d-1f9b3",
        "1f9d1-1f3fd-200d-1f9b3",
        "1f9d1-1f3fe-200d-1f9b3",
        "1f9d1-1f3ff-200d-1f9b3"
      ]
    },
    {
      n: ["bald woman", "woman: bald"],
      u: "1f469-200d-1f9b2",
      v: [
        "1f469-1f3fb-200d-1f9b2",
        "1f469-1f3fc-200d-1f9b2",
        "1f469-1f3fd-200d-1f9b2",
        "1f469-1f3fe-200d-1f9b2",
        "1f469-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["bald person", "person: bald"],
      u: "1f9d1-200d-1f9b2",
      v: [
        "1f9d1-1f3fb-200d-1f9b2",
        "1f9d1-1f3fc-200d-1f9b2",
        "1f9d1-1f3fd-200d-1f9b2",
        "1f9d1-1f3fe-200d-1f9b2",
        "1f9d1-1f3ff-200d-1f9b2"
      ]
    },
    {
      n: ["woman: blond hair", "blond-haired-woman"],
      u: "1f471-200d-2640-fe0f",
      v: [
        "1f471-1f3fb-200d-2640-fe0f",
        "1f471-1f3fc-200d-2640-fe0f",
        "1f471-1f3fd-200d-2640-fe0f",
        "1f471-1f3fe-200d-2640-fe0f",
        "1f471-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man: blond hair", "blond-haired-man"],
      u: "1f471-200d-2642-fe0f",
      v: [
        "1f471-1f3fb-200d-2642-fe0f",
        "1f471-1f3fc-200d-2642-fe0f",
        "1f471-1f3fd-200d-2642-fe0f",
        "1f471-1f3fe-200d-2642-fe0f",
        "1f471-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["older adult"],
      u: "1f9d3",
      v: [
        "1f9d3-1f3fb",
        "1f9d3-1f3fc",
        "1f9d3-1f3fd",
        "1f9d3-1f3fe",
        "1f9d3-1f3ff"
      ]
    },
    {
      n: ["older man"],
      u: "1f474",
      v: [
        "1f474-1f3fb",
        "1f474-1f3fc",
        "1f474-1f3fd",
        "1f474-1f3fe",
        "1f474-1f3ff"
      ]
    },
    {
      n: ["older woman"],
      u: "1f475",
      v: [
        "1f475-1f3fb",
        "1f475-1f3fc",
        "1f475-1f3fd",
        "1f475-1f3fe",
        "1f475-1f3ff"
      ]
    },
    {
      n: ["person frowning"],
      u: "1f64d",
      v: [
        "1f64d-1f3fb",
        "1f64d-1f3fc",
        "1f64d-1f3fd",
        "1f64d-1f3fe",
        "1f64d-1f3ff"
      ]
    },
    {
      n: ["man frowning", "man-frowning"],
      u: "1f64d-200d-2642-fe0f",
      v: [
        "1f64d-1f3fb-200d-2642-fe0f",
        "1f64d-1f3fc-200d-2642-fe0f",
        "1f64d-1f3fd-200d-2642-fe0f",
        "1f64d-1f3fe-200d-2642-fe0f",
        "1f64d-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman frowning", "woman-frowning"],
      u: "1f64d-200d-2640-fe0f",
      v: [
        "1f64d-1f3fb-200d-2640-fe0f",
        "1f64d-1f3fc-200d-2640-fe0f",
        "1f64d-1f3fd-200d-2640-fe0f",
        "1f64d-1f3fe-200d-2640-fe0f",
        "1f64d-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with pouting face"],
      u: "1f64e",
      v: [
        "1f64e-1f3fb",
        "1f64e-1f3fc",
        "1f64e-1f3fd",
        "1f64e-1f3fe",
        "1f64e-1f3ff"
      ]
    },
    {
      n: ["man pouting", "man-pouting"],
      u: "1f64e-200d-2642-fe0f",
      v: [
        "1f64e-1f3fb-200d-2642-fe0f",
        "1f64e-1f3fc-200d-2642-fe0f",
        "1f64e-1f3fd-200d-2642-fe0f",
        "1f64e-1f3fe-200d-2642-fe0f",
        "1f64e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman pouting", "woman-pouting"],
      u: "1f64e-200d-2640-fe0f",
      v: [
        "1f64e-1f3fb-200d-2640-fe0f",
        "1f64e-1f3fc-200d-2640-fe0f",
        "1f64e-1f3fd-200d-2640-fe0f",
        "1f64e-1f3fe-200d-2640-fe0f",
        "1f64e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["no good", "face with no good gesture"],
      u: "1f645",
      v: [
        "1f645-1f3fb",
        "1f645-1f3fc",
        "1f645-1f3fd",
        "1f645-1f3fe",
        "1f645-1f3ff"
      ]
    },
    {
      n: ["man gesturing no", "man-gesturing-no"],
      u: "1f645-200d-2642-fe0f",
      v: [
        "1f645-1f3fb-200d-2642-fe0f",
        "1f645-1f3fc-200d-2642-fe0f",
        "1f645-1f3fd-200d-2642-fe0f",
        "1f645-1f3fe-200d-2642-fe0f",
        "1f645-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman gesturing no", "woman-gesturing-no"],
      u: "1f645-200d-2640-fe0f",
      v: [
        "1f645-1f3fb-200d-2640-fe0f",
        "1f645-1f3fc-200d-2640-fe0f",
        "1f645-1f3fd-200d-2640-fe0f",
        "1f645-1f3fe-200d-2640-fe0f",
        "1f645-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["ok woman", "face with ok gesture"],
      u: "1f646",
      v: [
        "1f646-1f3fb",
        "1f646-1f3fc",
        "1f646-1f3fd",
        "1f646-1f3fe",
        "1f646-1f3ff"
      ]
    },
    {
      n: ["man gesturing ok", "man-gesturing-ok"],
      u: "1f646-200d-2642-fe0f",
      v: [
        "1f646-1f3fb-200d-2642-fe0f",
        "1f646-1f3fc-200d-2642-fe0f",
        "1f646-1f3fd-200d-2642-fe0f",
        "1f646-1f3fe-200d-2642-fe0f",
        "1f646-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman gesturing ok", "woman-gesturing-ok"],
      u: "1f646-200d-2640-fe0f",
      v: [
        "1f646-1f3fb-200d-2640-fe0f",
        "1f646-1f3fc-200d-2640-fe0f",
        "1f646-1f3fd-200d-2640-fe0f",
        "1f646-1f3fe-200d-2640-fe0f",
        "1f646-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["information desk person"],
      u: "1f481",
      v: [
        "1f481-1f3fb",
        "1f481-1f3fc",
        "1f481-1f3fd",
        "1f481-1f3fe",
        "1f481-1f3ff"
      ]
    },
    {
      n: ["man tipping hand", "man-tipping-hand"],
      u: "1f481-200d-2642-fe0f",
      v: [
        "1f481-1f3fb-200d-2642-fe0f",
        "1f481-1f3fc-200d-2642-fe0f",
        "1f481-1f3fd-200d-2642-fe0f",
        "1f481-1f3fe-200d-2642-fe0f",
        "1f481-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman tipping hand", "woman-tipping-hand"],
      u: "1f481-200d-2640-fe0f",
      v: [
        "1f481-1f3fb-200d-2640-fe0f",
        "1f481-1f3fc-200d-2640-fe0f",
        "1f481-1f3fd-200d-2640-fe0f",
        "1f481-1f3fe-200d-2640-fe0f",
        "1f481-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["raising hand", "happy person raising one hand"],
      u: "1f64b",
      v: [
        "1f64b-1f3fb",
        "1f64b-1f3fc",
        "1f64b-1f3fd",
        "1f64b-1f3fe",
        "1f64b-1f3ff"
      ]
    },
    {
      n: ["man raising hand", "man-raising-hand"],
      u: "1f64b-200d-2642-fe0f",
      v: [
        "1f64b-1f3fb-200d-2642-fe0f",
        "1f64b-1f3fc-200d-2642-fe0f",
        "1f64b-1f3fd-200d-2642-fe0f",
        "1f64b-1f3fe-200d-2642-fe0f",
        "1f64b-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman raising hand", "woman-raising-hand"],
      u: "1f64b-200d-2640-fe0f",
      v: [
        "1f64b-1f3fb-200d-2640-fe0f",
        "1f64b-1f3fc-200d-2640-fe0f",
        "1f64b-1f3fd-200d-2640-fe0f",
        "1f64b-1f3fe-200d-2640-fe0f",
        "1f64b-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["deaf person"],
      u: "1f9cf",
      v: [
        "1f9cf-1f3fb",
        "1f9cf-1f3fc",
        "1f9cf-1f3fd",
        "1f9cf-1f3fe",
        "1f9cf-1f3ff"
      ]
    },
    {
      n: ["deaf man"],
      u: "1f9cf-200d-2642-fe0f",
      v: [
        "1f9cf-1f3fb-200d-2642-fe0f",
        "1f9cf-1f3fc-200d-2642-fe0f",
        "1f9cf-1f3fd-200d-2642-fe0f",
        "1f9cf-1f3fe-200d-2642-fe0f",
        "1f9cf-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["deaf woman"],
      u: "1f9cf-200d-2640-fe0f",
      v: [
        "1f9cf-1f3fb-200d-2640-fe0f",
        "1f9cf-1f3fc-200d-2640-fe0f",
        "1f9cf-1f3fd-200d-2640-fe0f",
        "1f9cf-1f3fe-200d-2640-fe0f",
        "1f9cf-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bow", "person bowing deeply"],
      u: "1f647",
      v: [
        "1f647-1f3fb",
        "1f647-1f3fc",
        "1f647-1f3fd",
        "1f647-1f3fe",
        "1f647-1f3ff"
      ]
    },
    {
      n: ["man bowing", "man-bowing"],
      u: "1f647-200d-2642-fe0f",
      v: [
        "1f647-1f3fb-200d-2642-fe0f",
        "1f647-1f3fc-200d-2642-fe0f",
        "1f647-1f3fd-200d-2642-fe0f",
        "1f647-1f3fe-200d-2642-fe0f",
        "1f647-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman bowing", "woman-bowing"],
      u: "1f647-200d-2640-fe0f",
      v: [
        "1f647-1f3fb-200d-2640-fe0f",
        "1f647-1f3fc-200d-2640-fe0f",
        "1f647-1f3fd-200d-2640-fe0f",
        "1f647-1f3fe-200d-2640-fe0f",
        "1f647-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["face palm"],
      u: "1f926",
      v: [
        "1f926-1f3fb",
        "1f926-1f3fc",
        "1f926-1f3fd",
        "1f926-1f3fe",
        "1f926-1f3ff"
      ]
    },
    {
      n: ["man facepalming", "man-facepalming"],
      u: "1f926-200d-2642-fe0f",
      v: [
        "1f926-1f3fb-200d-2642-fe0f",
        "1f926-1f3fc-200d-2642-fe0f",
        "1f926-1f3fd-200d-2642-fe0f",
        "1f926-1f3fe-200d-2642-fe0f",
        "1f926-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman facepalming", "woman-facepalming"],
      u: "1f926-200d-2640-fe0f",
      v: [
        "1f926-1f3fb-200d-2640-fe0f",
        "1f926-1f3fc-200d-2640-fe0f",
        "1f926-1f3fd-200d-2640-fe0f",
        "1f926-1f3fe-200d-2640-fe0f",
        "1f926-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["shrug"],
      u: "1f937",
      v: [
        "1f937-1f3fb",
        "1f937-1f3fc",
        "1f937-1f3fd",
        "1f937-1f3fe",
        "1f937-1f3ff"
      ]
    },
    {
      n: ["man shrugging", "man-shrugging"],
      u: "1f937-200d-2642-fe0f",
      v: [
        "1f937-1f3fb-200d-2642-fe0f",
        "1f937-1f3fc-200d-2642-fe0f",
        "1f937-1f3fd-200d-2642-fe0f",
        "1f937-1f3fe-200d-2642-fe0f",
        "1f937-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman shrugging", "woman-shrugging"],
      u: "1f937-200d-2640-fe0f",
      v: [
        "1f937-1f3fb-200d-2640-fe0f",
        "1f937-1f3fc-200d-2640-fe0f",
        "1f937-1f3fd-200d-2640-fe0f",
        "1f937-1f3fe-200d-2640-fe0f",
        "1f937-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["health worker"],
      u: "1f9d1-200d-2695-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2695-fe0f",
        "1f9d1-1f3fc-200d-2695-fe0f",
        "1f9d1-1f3fd-200d-2695-fe0f",
        "1f9d1-1f3fe-200d-2695-fe0f",
        "1f9d1-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["male-doctor", "man health worker"],
      u: "1f468-200d-2695-fe0f",
      v: [
        "1f468-1f3fb-200d-2695-fe0f",
        "1f468-1f3fc-200d-2695-fe0f",
        "1f468-1f3fd-200d-2695-fe0f",
        "1f468-1f3fe-200d-2695-fe0f",
        "1f468-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["female-doctor", "woman health worker"],
      u: "1f469-200d-2695-fe0f",
      v: [
        "1f469-1f3fb-200d-2695-fe0f",
        "1f469-1f3fc-200d-2695-fe0f",
        "1f469-1f3fd-200d-2695-fe0f",
        "1f469-1f3fe-200d-2695-fe0f",
        "1f469-1f3ff-200d-2695-fe0f"
      ]
    },
    {
      n: ["student"],
      u: "1f9d1-200d-1f393",
      v: [
        "1f9d1-1f3fb-200d-1f393",
        "1f9d1-1f3fc-200d-1f393",
        "1f9d1-1f3fd-200d-1f393",
        "1f9d1-1f3fe-200d-1f393",
        "1f9d1-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["man student", "male-student"],
      u: "1f468-200d-1f393",
      v: [
        "1f468-1f3fb-200d-1f393",
        "1f468-1f3fc-200d-1f393",
        "1f468-1f3fd-200d-1f393",
        "1f468-1f3fe-200d-1f393",
        "1f468-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["woman student", "female-student"],
      u: "1f469-200d-1f393",
      v: [
        "1f469-1f3fb-200d-1f393",
        "1f469-1f3fc-200d-1f393",
        "1f469-1f3fd-200d-1f393",
        "1f469-1f3fe-200d-1f393",
        "1f469-1f3ff-200d-1f393"
      ]
    },
    {
      n: ["teacher"],
      u: "1f9d1-200d-1f3eb",
      v: [
        "1f9d1-1f3fb-200d-1f3eb",
        "1f9d1-1f3fc-200d-1f3eb",
        "1f9d1-1f3fd-200d-1f3eb",
        "1f9d1-1f3fe-200d-1f3eb",
        "1f9d1-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["man teacher", "male-teacher"],
      u: "1f468-200d-1f3eb",
      v: [
        "1f468-1f3fb-200d-1f3eb",
        "1f468-1f3fc-200d-1f3eb",
        "1f468-1f3fd-200d-1f3eb",
        "1f468-1f3fe-200d-1f3eb",
        "1f468-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["woman teacher", "female-teacher"],
      u: "1f469-200d-1f3eb",
      v: [
        "1f469-1f3fb-200d-1f3eb",
        "1f469-1f3fc-200d-1f3eb",
        "1f469-1f3fd-200d-1f3eb",
        "1f469-1f3fe-200d-1f3eb",
        "1f469-1f3ff-200d-1f3eb"
      ]
    },
    {
      n: ["judge"],
      u: "1f9d1-200d-2696-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2696-fe0f",
        "1f9d1-1f3fc-200d-2696-fe0f",
        "1f9d1-1f3fd-200d-2696-fe0f",
        "1f9d1-1f3fe-200d-2696-fe0f",
        "1f9d1-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["man judge", "male-judge"],
      u: "1f468-200d-2696-fe0f",
      v: [
        "1f468-1f3fb-200d-2696-fe0f",
        "1f468-1f3fc-200d-2696-fe0f",
        "1f468-1f3fd-200d-2696-fe0f",
        "1f468-1f3fe-200d-2696-fe0f",
        "1f468-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["woman judge", "female-judge"],
      u: "1f469-200d-2696-fe0f",
      v: [
        "1f469-1f3fb-200d-2696-fe0f",
        "1f469-1f3fc-200d-2696-fe0f",
        "1f469-1f3fd-200d-2696-fe0f",
        "1f469-1f3fe-200d-2696-fe0f",
        "1f469-1f3ff-200d-2696-fe0f"
      ]
    },
    {
      n: ["farmer"],
      u: "1f9d1-200d-1f33e",
      v: [
        "1f9d1-1f3fb-200d-1f33e",
        "1f9d1-1f3fc-200d-1f33e",
        "1f9d1-1f3fd-200d-1f33e",
        "1f9d1-1f3fe-200d-1f33e",
        "1f9d1-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["man farmer", "male-farmer"],
      u: "1f468-200d-1f33e",
      v: [
        "1f468-1f3fb-200d-1f33e",
        "1f468-1f3fc-200d-1f33e",
        "1f468-1f3fd-200d-1f33e",
        "1f468-1f3fe-200d-1f33e",
        "1f468-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["woman farmer", "female-farmer"],
      u: "1f469-200d-1f33e",
      v: [
        "1f469-1f3fb-200d-1f33e",
        "1f469-1f3fc-200d-1f33e",
        "1f469-1f3fd-200d-1f33e",
        "1f469-1f3fe-200d-1f33e",
        "1f469-1f3ff-200d-1f33e"
      ]
    },
    {
      n: ["cook"],
      u: "1f9d1-200d-1f373",
      v: [
        "1f9d1-1f3fb-200d-1f373",
        "1f9d1-1f3fc-200d-1f373",
        "1f9d1-1f3fd-200d-1f373",
        "1f9d1-1f3fe-200d-1f373",
        "1f9d1-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["man cook", "male-cook"],
      u: "1f468-200d-1f373",
      v: [
        "1f468-1f3fb-200d-1f373",
        "1f468-1f3fc-200d-1f373",
        "1f468-1f3fd-200d-1f373",
        "1f468-1f3fe-200d-1f373",
        "1f468-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["woman cook", "female-cook"],
      u: "1f469-200d-1f373",
      v: [
        "1f469-1f3fb-200d-1f373",
        "1f469-1f3fc-200d-1f373",
        "1f469-1f3fd-200d-1f373",
        "1f469-1f3fe-200d-1f373",
        "1f469-1f3ff-200d-1f373"
      ]
    },
    {
      n: ["mechanic"],
      u: "1f9d1-200d-1f527",
      v: [
        "1f9d1-1f3fb-200d-1f527",
        "1f9d1-1f3fc-200d-1f527",
        "1f9d1-1f3fd-200d-1f527",
        "1f9d1-1f3fe-200d-1f527",
        "1f9d1-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["man mechanic", "male-mechanic"],
      u: "1f468-200d-1f527",
      v: [
        "1f468-1f3fb-200d-1f527",
        "1f468-1f3fc-200d-1f527",
        "1f468-1f3fd-200d-1f527",
        "1f468-1f3fe-200d-1f527",
        "1f468-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["woman mechanic", "female-mechanic"],
      u: "1f469-200d-1f527",
      v: [
        "1f469-1f3fb-200d-1f527",
        "1f469-1f3fc-200d-1f527",
        "1f469-1f3fd-200d-1f527",
        "1f469-1f3fe-200d-1f527",
        "1f469-1f3ff-200d-1f527"
      ]
    },
    {
      n: ["factory worker"],
      u: "1f9d1-200d-1f3ed",
      v: [
        "1f9d1-1f3fb-200d-1f3ed",
        "1f9d1-1f3fc-200d-1f3ed",
        "1f9d1-1f3fd-200d-1f3ed",
        "1f9d1-1f3fe-200d-1f3ed",
        "1f9d1-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["man factory worker", "male-factory-worker"],
      u: "1f468-200d-1f3ed",
      v: [
        "1f468-1f3fb-200d-1f3ed",
        "1f468-1f3fc-200d-1f3ed",
        "1f468-1f3fd-200d-1f3ed",
        "1f468-1f3fe-200d-1f3ed",
        "1f468-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["woman factory worker", "female-factory-worker"],
      u: "1f469-200d-1f3ed",
      v: [
        "1f469-1f3fb-200d-1f3ed",
        "1f469-1f3fc-200d-1f3ed",
        "1f469-1f3fd-200d-1f3ed",
        "1f469-1f3fe-200d-1f3ed",
        "1f469-1f3ff-200d-1f3ed"
      ]
    },
    {
      n: ["office worker"],
      u: "1f9d1-200d-1f4bc",
      v: [
        "1f9d1-1f3fb-200d-1f4bc",
        "1f9d1-1f3fc-200d-1f4bc",
        "1f9d1-1f3fd-200d-1f4bc",
        "1f9d1-1f3fe-200d-1f4bc",
        "1f9d1-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["man office worker", "male-office-worker"],
      u: "1f468-200d-1f4bc",
      v: [
        "1f468-1f3fb-200d-1f4bc",
        "1f468-1f3fc-200d-1f4bc",
        "1f468-1f3fd-200d-1f4bc",
        "1f468-1f3fe-200d-1f4bc",
        "1f468-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["woman office worker", "female-office-worker"],
      u: "1f469-200d-1f4bc",
      v: [
        "1f469-1f3fb-200d-1f4bc",
        "1f469-1f3fc-200d-1f4bc",
        "1f469-1f3fd-200d-1f4bc",
        "1f469-1f3fe-200d-1f4bc",
        "1f469-1f3ff-200d-1f4bc"
      ]
    },
    {
      n: ["scientist"],
      u: "1f9d1-200d-1f52c",
      v: [
        "1f9d1-1f3fb-200d-1f52c",
        "1f9d1-1f3fc-200d-1f52c",
        "1f9d1-1f3fd-200d-1f52c",
        "1f9d1-1f3fe-200d-1f52c",
        "1f9d1-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["man scientist", "male-scientist"],
      u: "1f468-200d-1f52c",
      v: [
        "1f468-1f3fb-200d-1f52c",
        "1f468-1f3fc-200d-1f52c",
        "1f468-1f3fd-200d-1f52c",
        "1f468-1f3fe-200d-1f52c",
        "1f468-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["woman scientist", "female-scientist"],
      u: "1f469-200d-1f52c",
      v: [
        "1f469-1f3fb-200d-1f52c",
        "1f469-1f3fc-200d-1f52c",
        "1f469-1f3fd-200d-1f52c",
        "1f469-1f3fe-200d-1f52c",
        "1f469-1f3ff-200d-1f52c"
      ]
    },
    {
      n: ["technologist"],
      u: "1f9d1-200d-1f4bb",
      v: [
        "1f9d1-1f3fb-200d-1f4bb",
        "1f9d1-1f3fc-200d-1f4bb",
        "1f9d1-1f3fd-200d-1f4bb",
        "1f9d1-1f3fe-200d-1f4bb",
        "1f9d1-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["man technologist", "male-technologist"],
      u: "1f468-200d-1f4bb",
      v: [
        "1f468-1f3fb-200d-1f4bb",
        "1f468-1f3fc-200d-1f4bb",
        "1f468-1f3fd-200d-1f4bb",
        "1f468-1f3fe-200d-1f4bb",
        "1f468-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["woman technologist", "female-technologist"],
      u: "1f469-200d-1f4bb",
      v: [
        "1f469-1f3fb-200d-1f4bb",
        "1f469-1f3fc-200d-1f4bb",
        "1f469-1f3fd-200d-1f4bb",
        "1f469-1f3fe-200d-1f4bb",
        "1f469-1f3ff-200d-1f4bb"
      ]
    },
    {
      n: ["singer"],
      u: "1f9d1-200d-1f3a4",
      v: [
        "1f9d1-1f3fb-200d-1f3a4",
        "1f9d1-1f3fc-200d-1f3a4",
        "1f9d1-1f3fd-200d-1f3a4",
        "1f9d1-1f3fe-200d-1f3a4",
        "1f9d1-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["man singer", "male-singer"],
      u: "1f468-200d-1f3a4",
      v: [
        "1f468-1f3fb-200d-1f3a4",
        "1f468-1f3fc-200d-1f3a4",
        "1f468-1f3fd-200d-1f3a4",
        "1f468-1f3fe-200d-1f3a4",
        "1f468-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["woman singer", "female-singer"],
      u: "1f469-200d-1f3a4",
      v: [
        "1f469-1f3fb-200d-1f3a4",
        "1f469-1f3fc-200d-1f3a4",
        "1f469-1f3fd-200d-1f3a4",
        "1f469-1f3fe-200d-1f3a4",
        "1f469-1f3ff-200d-1f3a4"
      ]
    },
    {
      n: ["artist"],
      u: "1f9d1-200d-1f3a8",
      v: [
        "1f9d1-1f3fb-200d-1f3a8",
        "1f9d1-1f3fc-200d-1f3a8",
        "1f9d1-1f3fd-200d-1f3a8",
        "1f9d1-1f3fe-200d-1f3a8",
        "1f9d1-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["man artist", "male-artist"],
      u: "1f468-200d-1f3a8",
      v: [
        "1f468-1f3fb-200d-1f3a8",
        "1f468-1f3fc-200d-1f3a8",
        "1f468-1f3fd-200d-1f3a8",
        "1f468-1f3fe-200d-1f3a8",
        "1f468-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["woman artist", "female-artist"],
      u: "1f469-200d-1f3a8",
      v: [
        "1f469-1f3fb-200d-1f3a8",
        "1f469-1f3fc-200d-1f3a8",
        "1f469-1f3fd-200d-1f3a8",
        "1f469-1f3fe-200d-1f3a8",
        "1f469-1f3ff-200d-1f3a8"
      ]
    },
    {
      n: ["pilot"],
      u: "1f9d1-200d-2708-fe0f",
      v: [
        "1f9d1-1f3fb-200d-2708-fe0f",
        "1f9d1-1f3fc-200d-2708-fe0f",
        "1f9d1-1f3fd-200d-2708-fe0f",
        "1f9d1-1f3fe-200d-2708-fe0f",
        "1f9d1-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["man pilot", "male-pilot"],
      u: "1f468-200d-2708-fe0f",
      v: [
        "1f468-1f3fb-200d-2708-fe0f",
        "1f468-1f3fc-200d-2708-fe0f",
        "1f468-1f3fd-200d-2708-fe0f",
        "1f468-1f3fe-200d-2708-fe0f",
        "1f468-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["woman pilot", "female-pilot"],
      u: "1f469-200d-2708-fe0f",
      v: [
        "1f469-1f3fb-200d-2708-fe0f",
        "1f469-1f3fc-200d-2708-fe0f",
        "1f469-1f3fd-200d-2708-fe0f",
        "1f469-1f3fe-200d-2708-fe0f",
        "1f469-1f3ff-200d-2708-fe0f"
      ]
    },
    {
      n: ["astronaut"],
      u: "1f9d1-200d-1f680",
      v: [
        "1f9d1-1f3fb-200d-1f680",
        "1f9d1-1f3fc-200d-1f680",
        "1f9d1-1f3fd-200d-1f680",
        "1f9d1-1f3fe-200d-1f680",
        "1f9d1-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["man astronaut", "male-astronaut"],
      u: "1f468-200d-1f680",
      v: [
        "1f468-1f3fb-200d-1f680",
        "1f468-1f3fc-200d-1f680",
        "1f468-1f3fd-200d-1f680",
        "1f468-1f3fe-200d-1f680",
        "1f468-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["woman astronaut", "female-astronaut"],
      u: "1f469-200d-1f680",
      v: [
        "1f469-1f3fb-200d-1f680",
        "1f469-1f3fc-200d-1f680",
        "1f469-1f3fd-200d-1f680",
        "1f469-1f3fe-200d-1f680",
        "1f469-1f3ff-200d-1f680"
      ]
    },
    {
      n: ["firefighter"],
      u: "1f9d1-200d-1f692",
      v: [
        "1f9d1-1f3fb-200d-1f692",
        "1f9d1-1f3fc-200d-1f692",
        "1f9d1-1f3fd-200d-1f692",
        "1f9d1-1f3fe-200d-1f692",
        "1f9d1-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["man firefighter", "male-firefighter"],
      u: "1f468-200d-1f692",
      v: [
        "1f468-1f3fb-200d-1f692",
        "1f468-1f3fc-200d-1f692",
        "1f468-1f3fd-200d-1f692",
        "1f468-1f3fe-200d-1f692",
        "1f468-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["woman firefighter", "female-firefighter"],
      u: "1f469-200d-1f692",
      v: [
        "1f469-1f3fb-200d-1f692",
        "1f469-1f3fc-200d-1f692",
        "1f469-1f3fd-200d-1f692",
        "1f469-1f3fe-200d-1f692",
        "1f469-1f3ff-200d-1f692"
      ]
    },
    {
      n: ["cop", "police officer"],
      u: "1f46e",
      v: [
        "1f46e-1f3fb",
        "1f46e-1f3fc",
        "1f46e-1f3fd",
        "1f46e-1f3fe",
        "1f46e-1f3ff"
      ]
    },
    {
      n: ["man police officer", "male-police-officer"],
      u: "1f46e-200d-2642-fe0f",
      v: [
        "1f46e-1f3fb-200d-2642-fe0f",
        "1f46e-1f3fc-200d-2642-fe0f",
        "1f46e-1f3fd-200d-2642-fe0f",
        "1f46e-1f3fe-200d-2642-fe0f",
        "1f46e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman police officer", "female-police-officer"],
      u: "1f46e-200d-2640-fe0f",
      v: [
        "1f46e-1f3fb-200d-2640-fe0f",
        "1f46e-1f3fc-200d-2640-fe0f",
        "1f46e-1f3fd-200d-2640-fe0f",
        "1f46e-1f3fe-200d-2640-fe0f",
        "1f46e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["detective", "sleuth or spy"],
      u: "1f575-fe0f",
      v: [
        "1f575-1f3fb",
        "1f575-1f3fc",
        "1f575-1f3fd",
        "1f575-1f3fe",
        "1f575-1f3ff"
      ]
    },
    {
      n: ["man detective", "male-detective"],
      u: "1f575-fe0f-200d-2642-fe0f",
      v: [
        "1f575-1f3fb-200d-2642-fe0f",
        "1f575-1f3fc-200d-2642-fe0f",
        "1f575-1f3fd-200d-2642-fe0f",
        "1f575-1f3fe-200d-2642-fe0f",
        "1f575-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman detective", "female-detective"],
      u: "1f575-fe0f-200d-2640-fe0f",
      v: [
        "1f575-1f3fb-200d-2640-fe0f",
        "1f575-1f3fc-200d-2640-fe0f",
        "1f575-1f3fd-200d-2640-fe0f",
        "1f575-1f3fe-200d-2640-fe0f",
        "1f575-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["guardsman"],
      u: "1f482",
      v: [
        "1f482-1f3fb",
        "1f482-1f3fc",
        "1f482-1f3fd",
        "1f482-1f3fe",
        "1f482-1f3ff"
      ]
    },
    {
      n: ["man guard", "male-guard"],
      u: "1f482-200d-2642-fe0f",
      v: [
        "1f482-1f3fb-200d-2642-fe0f",
        "1f482-1f3fc-200d-2642-fe0f",
        "1f482-1f3fd-200d-2642-fe0f",
        "1f482-1f3fe-200d-2642-fe0f",
        "1f482-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman guard", "female-guard"],
      u: "1f482-200d-2640-fe0f",
      v: [
        "1f482-1f3fb-200d-2640-fe0f",
        "1f482-1f3fc-200d-2640-fe0f",
        "1f482-1f3fd-200d-2640-fe0f",
        "1f482-1f3fe-200d-2640-fe0f",
        "1f482-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["ninja"],
      u: "1f977",
      v: [
        "1f977-1f3fb",
        "1f977-1f3fc",
        "1f977-1f3fd",
        "1f977-1f3fe",
        "1f977-1f3ff"
      ]
    },
    {
      n: ["construction worker"],
      u: "1f477",
      v: [
        "1f477-1f3fb",
        "1f477-1f3fc",
        "1f477-1f3fd",
        "1f477-1f3fe",
        "1f477-1f3ff"
      ]
    },
    {
      n: ["man construction worker", "male-construction-worker"],
      u: "1f477-200d-2642-fe0f",
      v: [
        "1f477-1f3fb-200d-2642-fe0f",
        "1f477-1f3fc-200d-2642-fe0f",
        "1f477-1f3fd-200d-2642-fe0f",
        "1f477-1f3fe-200d-2642-fe0f",
        "1f477-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman construction worker", "female-construction-worker"],
      u: "1f477-200d-2640-fe0f",
      v: [
        "1f477-1f3fb-200d-2640-fe0f",
        "1f477-1f3fc-200d-2640-fe0f",
        "1f477-1f3fd-200d-2640-fe0f",
        "1f477-1f3fe-200d-2640-fe0f",
        "1f477-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with crown"],
      u: "1fac5",
      v: [
        "1fac5-1f3fb",
        "1fac5-1f3fc",
        "1fac5-1f3fd",
        "1fac5-1f3fe",
        "1fac5-1f3ff"
      ]
    },
    {
      n: ["prince"],
      u: "1f934",
      v: [
        "1f934-1f3fb",
        "1f934-1f3fc",
        "1f934-1f3fd",
        "1f934-1f3fe",
        "1f934-1f3ff"
      ]
    },
    {
      n: ["princess"],
      u: "1f478",
      v: [
        "1f478-1f3fb",
        "1f478-1f3fc",
        "1f478-1f3fd",
        "1f478-1f3fe",
        "1f478-1f3ff"
      ]
    },
    {
      n: ["man with turban"],
      u: "1f473",
      v: [
        "1f473-1f3fb",
        "1f473-1f3fc",
        "1f473-1f3fd",
        "1f473-1f3fe",
        "1f473-1f3ff"
      ]
    },
    {
      n: ["man wearing turban", "man-wearing-turban"],
      u: "1f473-200d-2642-fe0f",
      v: [
        "1f473-1f3fb-200d-2642-fe0f",
        "1f473-1f3fc-200d-2642-fe0f",
        "1f473-1f3fd-200d-2642-fe0f",
        "1f473-1f3fe-200d-2642-fe0f",
        "1f473-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman wearing turban", "woman-wearing-turban"],
      u: "1f473-200d-2640-fe0f",
      v: [
        "1f473-1f3fb-200d-2640-fe0f",
        "1f473-1f3fc-200d-2640-fe0f",
        "1f473-1f3fd-200d-2640-fe0f",
        "1f473-1f3fe-200d-2640-fe0f",
        "1f473-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["man with gua pi mao"],
      u: "1f472",
      v: [
        "1f472-1f3fb",
        "1f472-1f3fc",
        "1f472-1f3fd",
        "1f472-1f3fe",
        "1f472-1f3ff"
      ]
    },
    {
      n: ["person with headscarf"],
      u: "1f9d5",
      v: [
        "1f9d5-1f3fb",
        "1f9d5-1f3fc",
        "1f9d5-1f3fd",
        "1f9d5-1f3fe",
        "1f9d5-1f3ff"
      ]
    },
    {
      n: ["man in tuxedo", "person in tuxedo"],
      u: "1f935",
      v: [
        "1f935-1f3fb",
        "1f935-1f3fc",
        "1f935-1f3fd",
        "1f935-1f3fe",
        "1f935-1f3ff"
      ]
    },
    {
      n: ["man in tuxedo"],
      u: "1f935-200d-2642-fe0f",
      v: [
        "1f935-1f3fb-200d-2642-fe0f",
        "1f935-1f3fc-200d-2642-fe0f",
        "1f935-1f3fd-200d-2642-fe0f",
        "1f935-1f3fe-200d-2642-fe0f",
        "1f935-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in tuxedo"],
      u: "1f935-200d-2640-fe0f",
      v: [
        "1f935-1f3fb-200d-2640-fe0f",
        "1f935-1f3fc-200d-2640-fe0f",
        "1f935-1f3fd-200d-2640-fe0f",
        "1f935-1f3fe-200d-2640-fe0f",
        "1f935-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bride with veil"],
      u: "1f470",
      v: [
        "1f470-1f3fb",
        "1f470-1f3fc",
        "1f470-1f3fd",
        "1f470-1f3fe",
        "1f470-1f3ff"
      ]
    },
    {
      n: ["man with veil"],
      u: "1f470-200d-2642-fe0f",
      v: [
        "1f470-1f3fb-200d-2642-fe0f",
        "1f470-1f3fc-200d-2642-fe0f",
        "1f470-1f3fd-200d-2642-fe0f",
        "1f470-1f3fe-200d-2642-fe0f",
        "1f470-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman with veil"],
      u: "1f470-200d-2640-fe0f",
      v: [
        "1f470-1f3fb-200d-2640-fe0f",
        "1f470-1f3fc-200d-2640-fe0f",
        "1f470-1f3fd-200d-2640-fe0f",
        "1f470-1f3fe-200d-2640-fe0f",
        "1f470-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["pregnant woman"],
      u: "1f930",
      v: [
        "1f930-1f3fb",
        "1f930-1f3fc",
        "1f930-1f3fd",
        "1f930-1f3fe",
        "1f930-1f3ff"
      ]
    },
    {
      n: ["pregnant man"],
      u: "1fac3",
      v: [
        "1fac3-1f3fb",
        "1fac3-1f3fc",
        "1fac3-1f3fd",
        "1fac3-1f3fe",
        "1fac3-1f3ff"
      ]
    },
    {
      n: ["pregnant person"],
      u: "1fac4",
      v: [
        "1fac4-1f3fb",
        "1fac4-1f3fc",
        "1fac4-1f3fd",
        "1fac4-1f3fe",
        "1fac4-1f3ff"
      ]
    },
    {
      n: ["breast-feeding"],
      u: "1f931",
      v: [
        "1f931-1f3fb",
        "1f931-1f3fc",
        "1f931-1f3fd",
        "1f931-1f3fe",
        "1f931-1f3ff"
      ]
    },
    {
      n: ["woman feeding baby"],
      u: "1f469-200d-1f37c",
      v: [
        "1f469-1f3fb-200d-1f37c",
        "1f469-1f3fc-200d-1f37c",
        "1f469-1f3fd-200d-1f37c",
        "1f469-1f3fe-200d-1f37c",
        "1f469-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["man feeding baby"],
      u: "1f468-200d-1f37c",
      v: [
        "1f468-1f3fb-200d-1f37c",
        "1f468-1f3fc-200d-1f37c",
        "1f468-1f3fd-200d-1f37c",
        "1f468-1f3fe-200d-1f37c",
        "1f468-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["person feeding baby"],
      u: "1f9d1-200d-1f37c",
      v: [
        "1f9d1-1f3fb-200d-1f37c",
        "1f9d1-1f3fc-200d-1f37c",
        "1f9d1-1f3fd-200d-1f37c",
        "1f9d1-1f3fe-200d-1f37c",
        "1f9d1-1f3ff-200d-1f37c"
      ]
    },
    {
      n: ["angel", "baby angel"],
      u: "1f47c",
      v: [
        "1f47c-1f3fb",
        "1f47c-1f3fc",
        "1f47c-1f3fd",
        "1f47c-1f3fe",
        "1f47c-1f3ff"
      ]
    },
    {
      n: ["santa", "father christmas"],
      u: "1f385",
      v: [
        "1f385-1f3fb",
        "1f385-1f3fc",
        "1f385-1f3fd",
        "1f385-1f3fe",
        "1f385-1f3ff"
      ]
    },
    {
      n: ["mrs claus", "mother christmas"],
      u: "1f936",
      v: [
        "1f936-1f3fb",
        "1f936-1f3fc",
        "1f936-1f3fd",
        "1f936-1f3fe",
        "1f936-1f3ff"
      ]
    },
    {
      n: ["mx claus"],
      u: "1f9d1-200d-1f384",
      v: [
        "1f9d1-1f3fb-200d-1f384",
        "1f9d1-1f3fc-200d-1f384",
        "1f9d1-1f3fd-200d-1f384",
        "1f9d1-1f3fe-200d-1f384",
        "1f9d1-1f3ff-200d-1f384"
      ]
    },
    {
      n: ["superhero"],
      u: "1f9b8",
      v: [
        "1f9b8-1f3fb",
        "1f9b8-1f3fc",
        "1f9b8-1f3fd",
        "1f9b8-1f3fe",
        "1f9b8-1f3ff"
      ]
    },
    {
      n: ["man superhero", "male superhero"],
      u: "1f9b8-200d-2642-fe0f",
      v: [
        "1f9b8-1f3fb-200d-2642-fe0f",
        "1f9b8-1f3fc-200d-2642-fe0f",
        "1f9b8-1f3fd-200d-2642-fe0f",
        "1f9b8-1f3fe-200d-2642-fe0f",
        "1f9b8-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman superhero", "female superhero"],
      u: "1f9b8-200d-2640-fe0f",
      v: [
        "1f9b8-1f3fb-200d-2640-fe0f",
        "1f9b8-1f3fc-200d-2640-fe0f",
        "1f9b8-1f3fd-200d-2640-fe0f",
        "1f9b8-1f3fe-200d-2640-fe0f",
        "1f9b8-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["supervillain"],
      u: "1f9b9",
      v: [
        "1f9b9-1f3fb",
        "1f9b9-1f3fc",
        "1f9b9-1f3fd",
        "1f9b9-1f3fe",
        "1f9b9-1f3ff"
      ]
    },
    {
      n: ["man supervillain", "male supervillain"],
      u: "1f9b9-200d-2642-fe0f",
      v: [
        "1f9b9-1f3fb-200d-2642-fe0f",
        "1f9b9-1f3fc-200d-2642-fe0f",
        "1f9b9-1f3fd-200d-2642-fe0f",
        "1f9b9-1f3fe-200d-2642-fe0f",
        "1f9b9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman supervillain", "female supervillain"],
      u: "1f9b9-200d-2640-fe0f",
      v: [
        "1f9b9-1f3fb-200d-2640-fe0f",
        "1f9b9-1f3fc-200d-2640-fe0f",
        "1f9b9-1f3fd-200d-2640-fe0f",
        "1f9b9-1f3fe-200d-2640-fe0f",
        "1f9b9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["mage"],
      u: "1f9d9",
      v: [
        "1f9d9-1f3fb",
        "1f9d9-1f3fc",
        "1f9d9-1f3fd",
        "1f9d9-1f3fe",
        "1f9d9-1f3ff"
      ]
    },
    {
      n: ["man mage", "male mage"],
      u: "1f9d9-200d-2642-fe0f",
      v: [
        "1f9d9-1f3fb-200d-2642-fe0f",
        "1f9d9-1f3fc-200d-2642-fe0f",
        "1f9d9-1f3fd-200d-2642-fe0f",
        "1f9d9-1f3fe-200d-2642-fe0f",
        "1f9d9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman mage", "female mage"],
      u: "1f9d9-200d-2640-fe0f",
      v: [
        "1f9d9-1f3fb-200d-2640-fe0f",
        "1f9d9-1f3fc-200d-2640-fe0f",
        "1f9d9-1f3fd-200d-2640-fe0f",
        "1f9d9-1f3fe-200d-2640-fe0f",
        "1f9d9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["fairy"],
      u: "1f9da",
      v: [
        "1f9da-1f3fb",
        "1f9da-1f3fc",
        "1f9da-1f3fd",
        "1f9da-1f3fe",
        "1f9da-1f3ff"
      ]
    },
    {
      n: ["man fairy", "male fairy"],
      u: "1f9da-200d-2642-fe0f",
      v: [
        "1f9da-1f3fb-200d-2642-fe0f",
        "1f9da-1f3fc-200d-2642-fe0f",
        "1f9da-1f3fd-200d-2642-fe0f",
        "1f9da-1f3fe-200d-2642-fe0f",
        "1f9da-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman fairy", "female fairy"],
      u: "1f9da-200d-2640-fe0f",
      v: [
        "1f9da-1f3fb-200d-2640-fe0f",
        "1f9da-1f3fc-200d-2640-fe0f",
        "1f9da-1f3fd-200d-2640-fe0f",
        "1f9da-1f3fe-200d-2640-fe0f",
        "1f9da-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["vampire"],
      u: "1f9db",
      v: [
        "1f9db-1f3fb",
        "1f9db-1f3fc",
        "1f9db-1f3fd",
        "1f9db-1f3fe",
        "1f9db-1f3ff"
      ]
    },
    {
      n: ["man vampire", "male vampire"],
      u: "1f9db-200d-2642-fe0f",
      v: [
        "1f9db-1f3fb-200d-2642-fe0f",
        "1f9db-1f3fc-200d-2642-fe0f",
        "1f9db-1f3fd-200d-2642-fe0f",
        "1f9db-1f3fe-200d-2642-fe0f",
        "1f9db-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman vampire", "female vampire"],
      u: "1f9db-200d-2640-fe0f",
      v: [
        "1f9db-1f3fb-200d-2640-fe0f",
        "1f9db-1f3fc-200d-2640-fe0f",
        "1f9db-1f3fd-200d-2640-fe0f",
        "1f9db-1f3fe-200d-2640-fe0f",
        "1f9db-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["merperson"],
      u: "1f9dc",
      v: [
        "1f9dc-1f3fb",
        "1f9dc-1f3fc",
        "1f9dc-1f3fd",
        "1f9dc-1f3fe",
        "1f9dc-1f3ff"
      ]
    },
    {
      n: ["merman"],
      u: "1f9dc-200d-2642-fe0f",
      v: [
        "1f9dc-1f3fb-200d-2642-fe0f",
        "1f9dc-1f3fc-200d-2642-fe0f",
        "1f9dc-1f3fd-200d-2642-fe0f",
        "1f9dc-1f3fe-200d-2642-fe0f",
        "1f9dc-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["mermaid"],
      u: "1f9dc-200d-2640-fe0f",
      v: [
        "1f9dc-1f3fb-200d-2640-fe0f",
        "1f9dc-1f3fc-200d-2640-fe0f",
        "1f9dc-1f3fd-200d-2640-fe0f",
        "1f9dc-1f3fe-200d-2640-fe0f",
        "1f9dc-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["elf"],
      u: "1f9dd",
      v: [
        "1f9dd-1f3fb",
        "1f9dd-1f3fc",
        "1f9dd-1f3fd",
        "1f9dd-1f3fe",
        "1f9dd-1f3ff"
      ]
    },
    {
      n: ["man elf", "male elf"],
      u: "1f9dd-200d-2642-fe0f",
      v: [
        "1f9dd-1f3fb-200d-2642-fe0f",
        "1f9dd-1f3fc-200d-2642-fe0f",
        "1f9dd-1f3fd-200d-2642-fe0f",
        "1f9dd-1f3fe-200d-2642-fe0f",
        "1f9dd-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman elf", "female elf"],
      u: "1f9dd-200d-2640-fe0f",
      v: [
        "1f9dd-1f3fb-200d-2640-fe0f",
        "1f9dd-1f3fc-200d-2640-fe0f",
        "1f9dd-1f3fd-200d-2640-fe0f",
        "1f9dd-1f3fe-200d-2640-fe0f",
        "1f9dd-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["genie"], u: "1f9de" },
    { n: ["man genie", "male genie"], u: "1f9de-200d-2642-fe0f" },
    { n: ["woman genie", "female genie"], u: "1f9de-200d-2640-fe0f" },
    { n: ["zombie"], u: "1f9df" },
    { n: ["man zombie", "male zombie"], u: "1f9df-200d-2642-fe0f" },
    { n: ["woman zombie", "female zombie"], u: "1f9df-200d-2640-fe0f" },
    { n: ["troll"], u: "1f9cc" },
    {
      n: ["massage", "face massage"],
      u: "1f486",
      v: [
        "1f486-1f3fb",
        "1f486-1f3fc",
        "1f486-1f3fd",
        "1f486-1f3fe",
        "1f486-1f3ff"
      ]
    },
    {
      n: ["man getting massage", "man-getting-massage"],
      u: "1f486-200d-2642-fe0f",
      v: [
        "1f486-1f3fb-200d-2642-fe0f",
        "1f486-1f3fc-200d-2642-fe0f",
        "1f486-1f3fd-200d-2642-fe0f",
        "1f486-1f3fe-200d-2642-fe0f",
        "1f486-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman getting massage", "woman-getting-massage"],
      u: "1f486-200d-2640-fe0f",
      v: [
        "1f486-1f3fb-200d-2640-fe0f",
        "1f486-1f3fc-200d-2640-fe0f",
        "1f486-1f3fd-200d-2640-fe0f",
        "1f486-1f3fe-200d-2640-fe0f",
        "1f486-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["haircut"],
      u: "1f487",
      v: [
        "1f487-1f3fb",
        "1f487-1f3fc",
        "1f487-1f3fd",
        "1f487-1f3fe",
        "1f487-1f3ff"
      ]
    },
    {
      n: ["man getting haircut", "man-getting-haircut"],
      u: "1f487-200d-2642-fe0f",
      v: [
        "1f487-1f3fb-200d-2642-fe0f",
        "1f487-1f3fc-200d-2642-fe0f",
        "1f487-1f3fd-200d-2642-fe0f",
        "1f487-1f3fe-200d-2642-fe0f",
        "1f487-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman getting haircut", "woman-getting-haircut"],
      u: "1f487-200d-2640-fe0f",
      v: [
        "1f487-1f3fb-200d-2640-fe0f",
        "1f487-1f3fc-200d-2640-fe0f",
        "1f487-1f3fd-200d-2640-fe0f",
        "1f487-1f3fe-200d-2640-fe0f",
        "1f487-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["walking", "pedestrian"],
      u: "1f6b6",
      v: [
        "1f6b6-1f3fb",
        "1f6b6-1f3fc",
        "1f6b6-1f3fd",
        "1f6b6-1f3fe",
        "1f6b6-1f3ff"
      ]
    },
    {
      n: ["man walking", "man-walking"],
      u: "1f6b6-200d-2642-fe0f",
      v: [
        "1f6b6-1f3fb-200d-2642-fe0f",
        "1f6b6-1f3fc-200d-2642-fe0f",
        "1f6b6-1f3fd-200d-2642-fe0f",
        "1f6b6-1f3fe-200d-2642-fe0f",
        "1f6b6-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman walking", "woman-walking"],
      u: "1f6b6-200d-2640-fe0f",
      v: [
        "1f6b6-1f3fb-200d-2640-fe0f",
        "1f6b6-1f3fc-200d-2640-fe0f",
        "1f6b6-1f3fd-200d-2640-fe0f",
        "1f6b6-1f3fe-200d-2640-fe0f",
        "1f6b6-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["standing person"],
      u: "1f9cd",
      v: [
        "1f9cd-1f3fb",
        "1f9cd-1f3fc",
        "1f9cd-1f3fd",
        "1f9cd-1f3fe",
        "1f9cd-1f3ff"
      ]
    },
    {
      n: ["man standing"],
      u: "1f9cd-200d-2642-fe0f",
      v: [
        "1f9cd-1f3fb-200d-2642-fe0f",
        "1f9cd-1f3fc-200d-2642-fe0f",
        "1f9cd-1f3fd-200d-2642-fe0f",
        "1f9cd-1f3fe-200d-2642-fe0f",
        "1f9cd-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman standing"],
      u: "1f9cd-200d-2640-fe0f",
      v: [
        "1f9cd-1f3fb-200d-2640-fe0f",
        "1f9cd-1f3fc-200d-2640-fe0f",
        "1f9cd-1f3fd-200d-2640-fe0f",
        "1f9cd-1f3fe-200d-2640-fe0f",
        "1f9cd-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["kneeling person"],
      u: "1f9ce",
      v: [
        "1f9ce-1f3fb",
        "1f9ce-1f3fc",
        "1f9ce-1f3fd",
        "1f9ce-1f3fe",
        "1f9ce-1f3ff"
      ]
    },
    {
      n: ["man kneeling"],
      u: "1f9ce-200d-2642-fe0f",
      v: [
        "1f9ce-1f3fb-200d-2642-fe0f",
        "1f9ce-1f3fc-200d-2642-fe0f",
        "1f9ce-1f3fd-200d-2642-fe0f",
        "1f9ce-1f3fe-200d-2642-fe0f",
        "1f9ce-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman kneeling"],
      u: "1f9ce-200d-2640-fe0f",
      v: [
        "1f9ce-1f3fb-200d-2640-fe0f",
        "1f9ce-1f3fc-200d-2640-fe0f",
        "1f9ce-1f3fd-200d-2640-fe0f",
        "1f9ce-1f3fe-200d-2640-fe0f",
        "1f9ce-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with white cane", "person with probing cane"],
      u: "1f9d1-200d-1f9af",
      v: [
        "1f9d1-1f3fb-200d-1f9af",
        "1f9d1-1f3fc-200d-1f9af",
        "1f9d1-1f3fd-200d-1f9af",
        "1f9d1-1f3fe-200d-1f9af",
        "1f9d1-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["man with white cane", "man with probing cane"],
      u: "1f468-200d-1f9af",
      v: [
        "1f468-1f3fb-200d-1f9af",
        "1f468-1f3fc-200d-1f9af",
        "1f468-1f3fd-200d-1f9af",
        "1f468-1f3fe-200d-1f9af",
        "1f468-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["woman with white cane", "woman with probing cane"],
      u: "1f469-200d-1f9af",
      v: [
        "1f469-1f3fb-200d-1f9af",
        "1f469-1f3fc-200d-1f9af",
        "1f469-1f3fd-200d-1f9af",
        "1f469-1f3fe-200d-1f9af",
        "1f469-1f3ff-200d-1f9af"
      ]
    },
    {
      n: ["person in motorized wheelchair"],
      u: "1f9d1-200d-1f9bc",
      v: [
        "1f9d1-1f3fb-200d-1f9bc",
        "1f9d1-1f3fc-200d-1f9bc",
        "1f9d1-1f3fd-200d-1f9bc",
        "1f9d1-1f3fe-200d-1f9bc",
        "1f9d1-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["man in motorized wheelchair"],
      u: "1f468-200d-1f9bc",
      v: [
        "1f468-1f3fb-200d-1f9bc",
        "1f468-1f3fc-200d-1f9bc",
        "1f468-1f3fd-200d-1f9bc",
        "1f468-1f3fe-200d-1f9bc",
        "1f468-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["woman in motorized wheelchair"],
      u: "1f469-200d-1f9bc",
      v: [
        "1f469-1f3fb-200d-1f9bc",
        "1f469-1f3fc-200d-1f9bc",
        "1f469-1f3fd-200d-1f9bc",
        "1f469-1f3fe-200d-1f9bc",
        "1f469-1f3ff-200d-1f9bc"
      ]
    },
    {
      n: ["person in manual wheelchair"],
      u: "1f9d1-200d-1f9bd",
      v: [
        "1f9d1-1f3fb-200d-1f9bd",
        "1f9d1-1f3fc-200d-1f9bd",
        "1f9d1-1f3fd-200d-1f9bd",
        "1f9d1-1f3fe-200d-1f9bd",
        "1f9d1-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["man in manual wheelchair"],
      u: "1f468-200d-1f9bd",
      v: [
        "1f468-1f3fb-200d-1f9bd",
        "1f468-1f3fc-200d-1f9bd",
        "1f468-1f3fd-200d-1f9bd",
        "1f468-1f3fe-200d-1f9bd",
        "1f468-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["woman in manual wheelchair"],
      u: "1f469-200d-1f9bd",
      v: [
        "1f469-1f3fb-200d-1f9bd",
        "1f469-1f3fc-200d-1f9bd",
        "1f469-1f3fd-200d-1f9bd",
        "1f469-1f3fe-200d-1f9bd",
        "1f469-1f3ff-200d-1f9bd"
      ]
    },
    {
      n: ["runner", "running"],
      u: "1f3c3",
      v: [
        "1f3c3-1f3fb",
        "1f3c3-1f3fc",
        "1f3c3-1f3fd",
        "1f3c3-1f3fe",
        "1f3c3-1f3ff"
      ]
    },
    {
      n: ["man running", "man-running"],
      u: "1f3c3-200d-2642-fe0f",
      v: [
        "1f3c3-1f3fb-200d-2642-fe0f",
        "1f3c3-1f3fc-200d-2642-fe0f",
        "1f3c3-1f3fd-200d-2642-fe0f",
        "1f3c3-1f3fe-200d-2642-fe0f",
        "1f3c3-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman running", "woman-running"],
      u: "1f3c3-200d-2640-fe0f",
      v: [
        "1f3c3-1f3fb-200d-2640-fe0f",
        "1f3c3-1f3fc-200d-2640-fe0f",
        "1f3c3-1f3fd-200d-2640-fe0f",
        "1f3c3-1f3fe-200d-2640-fe0f",
        "1f3c3-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["dancer"],
      u: "1f483",
      v: [
        "1f483-1f3fb",
        "1f483-1f3fc",
        "1f483-1f3fd",
        "1f483-1f3fe",
        "1f483-1f3ff"
      ]
    },
    {
      n: ["man dancing"],
      u: "1f57a",
      v: [
        "1f57a-1f3fb",
        "1f57a-1f3fc",
        "1f57a-1f3fd",
        "1f57a-1f3fe",
        "1f57a-1f3ff"
      ]
    },
    {
      n: ["person in suit levitating", "man in business suit levitating"],
      u: "1f574-fe0f",
      v: [
        "1f574-1f3fb",
        "1f574-1f3fc",
        "1f574-1f3fd",
        "1f574-1f3fe",
        "1f574-1f3ff"
      ]
    },
    { n: ["dancers", "woman with bunny ears"], u: "1f46f" },
    {
      n: [
        "men with bunny ears",
        "men-with-bunny-ears-partying",
        "man-with-bunny-ears-partying"
      ],
      u: "1f46f-200d-2642-fe0f"
    },
    {
      n: [
        "women with bunny ears",
        "women-with-bunny-ears-partying",
        "woman-with-bunny-ears-partying"
      ],
      u: "1f46f-200d-2640-fe0f"
    },
    {
      n: ["person in steamy room"],
      u: "1f9d6",
      v: [
        "1f9d6-1f3fb",
        "1f9d6-1f3fc",
        "1f9d6-1f3fd",
        "1f9d6-1f3fe",
        "1f9d6-1f3ff"
      ]
    },
    {
      n: ["man in steamy room"],
      u: "1f9d6-200d-2642-fe0f",
      v: [
        "1f9d6-1f3fb-200d-2642-fe0f",
        "1f9d6-1f3fc-200d-2642-fe0f",
        "1f9d6-1f3fd-200d-2642-fe0f",
        "1f9d6-1f3fe-200d-2642-fe0f",
        "1f9d6-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in steamy room"],
      u: "1f9d6-200d-2640-fe0f",
      v: [
        "1f9d6-1f3fb-200d-2640-fe0f",
        "1f9d6-1f3fc-200d-2640-fe0f",
        "1f9d6-1f3fd-200d-2640-fe0f",
        "1f9d6-1f3fe-200d-2640-fe0f",
        "1f9d6-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person climbing"],
      u: "1f9d7",
      v: [
        "1f9d7-1f3fb",
        "1f9d7-1f3fc",
        "1f9d7-1f3fd",
        "1f9d7-1f3fe",
        "1f9d7-1f3ff"
      ]
    },
    {
      n: ["man climbing"],
      u: "1f9d7-200d-2642-fe0f",
      v: [
        "1f9d7-1f3fb-200d-2642-fe0f",
        "1f9d7-1f3fc-200d-2642-fe0f",
        "1f9d7-1f3fd-200d-2642-fe0f",
        "1f9d7-1f3fe-200d-2642-fe0f",
        "1f9d7-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman climbing"],
      u: "1f9d7-200d-2640-fe0f",
      v: [
        "1f9d7-1f3fb-200d-2640-fe0f",
        "1f9d7-1f3fc-200d-2640-fe0f",
        "1f9d7-1f3fd-200d-2640-fe0f",
        "1f9d7-1f3fe-200d-2640-fe0f",
        "1f9d7-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["fencer"], u: "1f93a" },
    {
      n: ["horse racing"],
      u: "1f3c7",
      v: [
        "1f3c7-1f3fb",
        "1f3c7-1f3fc",
        "1f3c7-1f3fd",
        "1f3c7-1f3fe",
        "1f3c7-1f3ff"
      ]
    },
    { n: ["skier"], u: "26f7-fe0f" },
    {
      n: ["snowboarder"],
      u: "1f3c2",
      v: [
        "1f3c2-1f3fb",
        "1f3c2-1f3fc",
        "1f3c2-1f3fd",
        "1f3c2-1f3fe",
        "1f3c2-1f3ff"
      ]
    },
    {
      n: ["golfer", "person golfing"],
      u: "1f3cc-fe0f",
      v: [
        "1f3cc-1f3fb",
        "1f3cc-1f3fc",
        "1f3cc-1f3fd",
        "1f3cc-1f3fe",
        "1f3cc-1f3ff"
      ]
    },
    {
      n: ["man golfing", "man-golfing"],
      u: "1f3cc-fe0f-200d-2642-fe0f",
      v: [
        "1f3cc-1f3fb-200d-2642-fe0f",
        "1f3cc-1f3fc-200d-2642-fe0f",
        "1f3cc-1f3fd-200d-2642-fe0f",
        "1f3cc-1f3fe-200d-2642-fe0f",
        "1f3cc-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman golfing", "woman-golfing"],
      u: "1f3cc-fe0f-200d-2640-fe0f",
      v: [
        "1f3cc-1f3fb-200d-2640-fe0f",
        "1f3cc-1f3fc-200d-2640-fe0f",
        "1f3cc-1f3fd-200d-2640-fe0f",
        "1f3cc-1f3fe-200d-2640-fe0f",
        "1f3cc-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["surfer"],
      u: "1f3c4",
      v: [
        "1f3c4-1f3fb",
        "1f3c4-1f3fc",
        "1f3c4-1f3fd",
        "1f3c4-1f3fe",
        "1f3c4-1f3ff"
      ]
    },
    {
      n: ["man surfing", "man-surfing"],
      u: "1f3c4-200d-2642-fe0f",
      v: [
        "1f3c4-1f3fb-200d-2642-fe0f",
        "1f3c4-1f3fc-200d-2642-fe0f",
        "1f3c4-1f3fd-200d-2642-fe0f",
        "1f3c4-1f3fe-200d-2642-fe0f",
        "1f3c4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman surfing", "woman-surfing"],
      u: "1f3c4-200d-2640-fe0f",
      v: [
        "1f3c4-1f3fb-200d-2640-fe0f",
        "1f3c4-1f3fc-200d-2640-fe0f",
        "1f3c4-1f3fd-200d-2640-fe0f",
        "1f3c4-1f3fe-200d-2640-fe0f",
        "1f3c4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["rowboat"],
      u: "1f6a3",
      v: [
        "1f6a3-1f3fb",
        "1f6a3-1f3fc",
        "1f6a3-1f3fd",
        "1f6a3-1f3fe",
        "1f6a3-1f3ff"
      ]
    },
    {
      n: ["man rowing boat", "man-rowing-boat"],
      u: "1f6a3-200d-2642-fe0f",
      v: [
        "1f6a3-1f3fb-200d-2642-fe0f",
        "1f6a3-1f3fc-200d-2642-fe0f",
        "1f6a3-1f3fd-200d-2642-fe0f",
        "1f6a3-1f3fe-200d-2642-fe0f",
        "1f6a3-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman rowing boat", "woman-rowing-boat"],
      u: "1f6a3-200d-2640-fe0f",
      v: [
        "1f6a3-1f3fb-200d-2640-fe0f",
        "1f6a3-1f3fc-200d-2640-fe0f",
        "1f6a3-1f3fd-200d-2640-fe0f",
        "1f6a3-1f3fe-200d-2640-fe0f",
        "1f6a3-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["swimmer"],
      u: "1f3ca",
      v: [
        "1f3ca-1f3fb",
        "1f3ca-1f3fc",
        "1f3ca-1f3fd",
        "1f3ca-1f3fe",
        "1f3ca-1f3ff"
      ]
    },
    {
      n: ["man swimming", "man-swimming"],
      u: "1f3ca-200d-2642-fe0f",
      v: [
        "1f3ca-1f3fb-200d-2642-fe0f",
        "1f3ca-1f3fc-200d-2642-fe0f",
        "1f3ca-1f3fd-200d-2642-fe0f",
        "1f3ca-1f3fe-200d-2642-fe0f",
        "1f3ca-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman swimming", "woman-swimming"],
      u: "1f3ca-200d-2640-fe0f",
      v: [
        "1f3ca-1f3fb-200d-2640-fe0f",
        "1f3ca-1f3fc-200d-2640-fe0f",
        "1f3ca-1f3fd-200d-2640-fe0f",
        "1f3ca-1f3fe-200d-2640-fe0f",
        "1f3ca-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person with ball", "person bouncing ball"],
      u: "26f9-fe0f",
      v: ["26f9-1f3fb", "26f9-1f3fc", "26f9-1f3fd", "26f9-1f3fe", "26f9-1f3ff"]
    },
    {
      n: ["man bouncing ball", "man-bouncing-ball"],
      u: "26f9-fe0f-200d-2642-fe0f",
      v: [
        "26f9-1f3fb-200d-2642-fe0f",
        "26f9-1f3fc-200d-2642-fe0f",
        "26f9-1f3fd-200d-2642-fe0f",
        "26f9-1f3fe-200d-2642-fe0f",
        "26f9-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman bouncing ball", "woman-bouncing-ball"],
      u: "26f9-fe0f-200d-2640-fe0f",
      v: [
        "26f9-1f3fb-200d-2640-fe0f",
        "26f9-1f3fc-200d-2640-fe0f",
        "26f9-1f3fd-200d-2640-fe0f",
        "26f9-1f3fe-200d-2640-fe0f",
        "26f9-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["weight lifter", "person lifting weights"],
      u: "1f3cb-fe0f",
      v: [
        "1f3cb-1f3fb",
        "1f3cb-1f3fc",
        "1f3cb-1f3fd",
        "1f3cb-1f3fe",
        "1f3cb-1f3ff"
      ]
    },
    {
      n: ["man lifting weights", "man-lifting-weights"],
      u: "1f3cb-fe0f-200d-2642-fe0f",
      v: [
        "1f3cb-1f3fb-200d-2642-fe0f",
        "1f3cb-1f3fc-200d-2642-fe0f",
        "1f3cb-1f3fd-200d-2642-fe0f",
        "1f3cb-1f3fe-200d-2642-fe0f",
        "1f3cb-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman lifting weights", "woman-lifting-weights"],
      u: "1f3cb-fe0f-200d-2640-fe0f",
      v: [
        "1f3cb-1f3fb-200d-2640-fe0f",
        "1f3cb-1f3fc-200d-2640-fe0f",
        "1f3cb-1f3fd-200d-2640-fe0f",
        "1f3cb-1f3fe-200d-2640-fe0f",
        "1f3cb-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bicyclist"],
      u: "1f6b4",
      v: [
        "1f6b4-1f3fb",
        "1f6b4-1f3fc",
        "1f6b4-1f3fd",
        "1f6b4-1f3fe",
        "1f6b4-1f3ff"
      ]
    },
    {
      n: ["man biking", "man-biking"],
      u: "1f6b4-200d-2642-fe0f",
      v: [
        "1f6b4-1f3fb-200d-2642-fe0f",
        "1f6b4-1f3fc-200d-2642-fe0f",
        "1f6b4-1f3fd-200d-2642-fe0f",
        "1f6b4-1f3fe-200d-2642-fe0f",
        "1f6b4-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman biking", "woman-biking"],
      u: "1f6b4-200d-2640-fe0f",
      v: [
        "1f6b4-1f3fb-200d-2640-fe0f",
        "1f6b4-1f3fc-200d-2640-fe0f",
        "1f6b4-1f3fd-200d-2640-fe0f",
        "1f6b4-1f3fe-200d-2640-fe0f",
        "1f6b4-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["mountain bicyclist"],
      u: "1f6b5",
      v: [
        "1f6b5-1f3fb",
        "1f6b5-1f3fc",
        "1f6b5-1f3fd",
        "1f6b5-1f3fe",
        "1f6b5-1f3ff"
      ]
    },
    {
      n: ["man mountain biking", "man-mountain-biking"],
      u: "1f6b5-200d-2642-fe0f",
      v: [
        "1f6b5-1f3fb-200d-2642-fe0f",
        "1f6b5-1f3fc-200d-2642-fe0f",
        "1f6b5-1f3fd-200d-2642-fe0f",
        "1f6b5-1f3fe-200d-2642-fe0f",
        "1f6b5-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman mountain biking", "woman-mountain-biking"],
      u: "1f6b5-200d-2640-fe0f",
      v: [
        "1f6b5-1f3fb-200d-2640-fe0f",
        "1f6b5-1f3fc-200d-2640-fe0f",
        "1f6b5-1f3fd-200d-2640-fe0f",
        "1f6b5-1f3fe-200d-2640-fe0f",
        "1f6b5-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person doing cartwheel"],
      u: "1f938",
      v: [
        "1f938-1f3fb",
        "1f938-1f3fc",
        "1f938-1f3fd",
        "1f938-1f3fe",
        "1f938-1f3ff"
      ]
    },
    {
      n: ["man cartwheeling", "man-cartwheeling"],
      u: "1f938-200d-2642-fe0f",
      v: [
        "1f938-1f3fb-200d-2642-fe0f",
        "1f938-1f3fc-200d-2642-fe0f",
        "1f938-1f3fd-200d-2642-fe0f",
        "1f938-1f3fe-200d-2642-fe0f",
        "1f938-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman cartwheeling", "woman-cartwheeling"],
      u: "1f938-200d-2640-fe0f",
      v: [
        "1f938-1f3fb-200d-2640-fe0f",
        "1f938-1f3fc-200d-2640-fe0f",
        "1f938-1f3fd-200d-2640-fe0f",
        "1f938-1f3fe-200d-2640-fe0f",
        "1f938-1f3ff-200d-2640-fe0f"
      ]
    },
    { n: ["wrestlers"], u: "1f93c" },
    { n: ["men wrestling", "man-wrestling"], u: "1f93c-200d-2642-fe0f" },
    { n: ["women wrestling", "woman-wrestling"], u: "1f93c-200d-2640-fe0f" },
    {
      n: ["water polo"],
      u: "1f93d",
      v: [
        "1f93d-1f3fb",
        "1f93d-1f3fc",
        "1f93d-1f3fd",
        "1f93d-1f3fe",
        "1f93d-1f3ff"
      ]
    },
    {
      n: ["man playing water polo", "man-playing-water-polo"],
      u: "1f93d-200d-2642-fe0f",
      v: [
        "1f93d-1f3fb-200d-2642-fe0f",
        "1f93d-1f3fc-200d-2642-fe0f",
        "1f93d-1f3fd-200d-2642-fe0f",
        "1f93d-1f3fe-200d-2642-fe0f",
        "1f93d-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman playing water polo", "woman-playing-water-polo"],
      u: "1f93d-200d-2640-fe0f",
      v: [
        "1f93d-1f3fb-200d-2640-fe0f",
        "1f93d-1f3fc-200d-2640-fe0f",
        "1f93d-1f3fd-200d-2640-fe0f",
        "1f93d-1f3fe-200d-2640-fe0f",
        "1f93d-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["handball"],
      u: "1f93e",
      v: [
        "1f93e-1f3fb",
        "1f93e-1f3fc",
        "1f93e-1f3fd",
        "1f93e-1f3fe",
        "1f93e-1f3ff"
      ]
    },
    {
      n: ["man playing handball", "man-playing-handball"],
      u: "1f93e-200d-2642-fe0f",
      v: [
        "1f93e-1f3fb-200d-2642-fe0f",
        "1f93e-1f3fc-200d-2642-fe0f",
        "1f93e-1f3fd-200d-2642-fe0f",
        "1f93e-1f3fe-200d-2642-fe0f",
        "1f93e-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman playing handball", "woman-playing-handball"],
      u: "1f93e-200d-2640-fe0f",
      v: [
        "1f93e-1f3fb-200d-2640-fe0f",
        "1f93e-1f3fc-200d-2640-fe0f",
        "1f93e-1f3fd-200d-2640-fe0f",
        "1f93e-1f3fe-200d-2640-fe0f",
        "1f93e-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["juggling"],
      u: "1f939",
      v: [
        "1f939-1f3fb",
        "1f939-1f3fc",
        "1f939-1f3fd",
        "1f939-1f3fe",
        "1f939-1f3ff"
      ]
    },
    {
      n: ["man juggling", "man-juggling"],
      u: "1f939-200d-2642-fe0f",
      v: [
        "1f939-1f3fb-200d-2642-fe0f",
        "1f939-1f3fc-200d-2642-fe0f",
        "1f939-1f3fd-200d-2642-fe0f",
        "1f939-1f3fe-200d-2642-fe0f",
        "1f939-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman juggling", "woman-juggling"],
      u: "1f939-200d-2640-fe0f",
      v: [
        "1f939-1f3fb-200d-2640-fe0f",
        "1f939-1f3fc-200d-2640-fe0f",
        "1f939-1f3fd-200d-2640-fe0f",
        "1f939-1f3fe-200d-2640-fe0f",
        "1f939-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["person in lotus position"],
      u: "1f9d8",
      v: [
        "1f9d8-1f3fb",
        "1f9d8-1f3fc",
        "1f9d8-1f3fd",
        "1f9d8-1f3fe",
        "1f9d8-1f3ff"
      ]
    },
    {
      n: ["man in lotus position"],
      u: "1f9d8-200d-2642-fe0f",
      v: [
        "1f9d8-1f3fb-200d-2642-fe0f",
        "1f9d8-1f3fc-200d-2642-fe0f",
        "1f9d8-1f3fd-200d-2642-fe0f",
        "1f9d8-1f3fe-200d-2642-fe0f",
        "1f9d8-1f3ff-200d-2642-fe0f"
      ]
    },
    {
      n: ["woman in lotus position"],
      u: "1f9d8-200d-2640-fe0f",
      v: [
        "1f9d8-1f3fb-200d-2640-fe0f",
        "1f9d8-1f3fc-200d-2640-fe0f",
        "1f9d8-1f3fd-200d-2640-fe0f",
        "1f9d8-1f3fe-200d-2640-fe0f",
        "1f9d8-1f3ff-200d-2640-fe0f"
      ]
    },
    {
      n: ["bath"],
      u: "1f6c0",
      v: [
        "1f6c0-1f3fb",
        "1f6c0-1f3fc",
        "1f6c0-1f3fd",
        "1f6c0-1f3fe",
        "1f6c0-1f3ff"
      ]
    },
    {
      n: ["sleeping accommodation"],
      u: "1f6cc",
      v: [
        "1f6cc-1f3fb",
        "1f6cc-1f3fc",
        "1f6cc-1f3fd",
        "1f6cc-1f3fe",
        "1f6cc-1f3ff"
      ]
    },
    {
      n: ["people holding hands"],
      u: "1f9d1-200d-1f91d-200d-1f9d1",
      v: [
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe",
        "1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff"
      ]
    },
    {
      n: ["women holding hands", "two women holding hands"],
      u: "1f46d",
      v: [
        "1f46d-1f3fb",
        "1f46d-1f3fc",
        "1f46d-1f3fd",
        "1f46d-1f3fe",
        "1f46d-1f3ff",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe"
      ]
    },
    {
      n: [
        "couple",
        "man and woman holding hands",
        "woman and man holding hands"
      ],
      u: "1f46b",
      v: [
        "1f46b-1f3fb",
        "1f46b-1f3fc",
        "1f46b-1f3fd",
        "1f46b-1f3fe",
        "1f46b-1f3ff",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe"
      ]
    },
    {
      n: ["men holding hands", "two men holding hands"],
      u: "1f46c",
      v: [
        "1f46c-1f3fb",
        "1f46c-1f3fc",
        "1f46c-1f3fd",
        "1f46c-1f3fe",
        "1f46c-1f3ff",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe"
      ]
    },
    {
      n: ["kiss", "couplekiss"],
      u: "1f48f",
      v: [
        "1f48f-1f3fb",
        "1f48f-1f3fc",
        "1f48f-1f3fd",
        "1f48f-1f3fe",
        "1f48f-1f3ff",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe"
      ]
    },
    {
      n: ["woman-kiss-man", "kiss: woman, man"],
      u: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f468",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["man-kiss-man", "kiss: man, man"],
      u: "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
      v: [
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["woman-kiss-woman", "kiss: woman, woman"],
      u: "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff"
      ]
    },
    {
      n: ["couple with heart"],
      u: "1f491",
      v: [
        "1f491-1f3fb",
        "1f491-1f3fc",
        "1f491-1f3fd",
        "1f491-1f3fe",
        "1f491-1f3ff",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fe",
        "1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3ff",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fb",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fc",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fd",
        "1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fe"
      ]
    },
    {
      n: ["woman-heart-man", "couple with heart: woman, man"],
      u: "1f469-200d-2764-fe0f-200d-1f468",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["man-heart-man", "couple with heart: man, man"],
      u: "1f468-200d-2764-fe0f-200d-1f468",
      v: [
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe",
        "1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff"
      ]
    },
    {
      n: ["woman-heart-woman", "couple with heart: woman, woman"],
      u: "1f469-200d-2764-fe0f-200d-1f469",
      v: [
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3ff",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fb",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fc",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fd",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fe",
        "1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff"
      ]
    },
    { n: ["family"], u: "1f46a" },
    {
      n: ["man-woman-boy", "family: man, woman, boy"],
      u: "1f468-200d-1f469-200d-1f466"
    },
    {
      n: ["man-woman-girl", "family: man, woman, girl"],
      u: "1f468-200d-1f469-200d-1f467"
    },
    {
      n: ["man-woman-girl-boy", "family: man, woman, girl, boy"],
      u: "1f468-200d-1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["man-woman-boy-boy", "family: man, woman, boy, boy"],
      u: "1f468-200d-1f469-200d-1f466-200d-1f466"
    },
    {
      n: ["man-woman-girl-girl", "family: man, woman, girl, girl"],
      u: "1f468-200d-1f469-200d-1f467-200d-1f467"
    },
    {
      n: ["man-man-boy", "family: man, man, boy"],
      u: "1f468-200d-1f468-200d-1f466"
    },
    {
      n: ["man-man-girl", "family: man, man, girl"],
      u: "1f468-200d-1f468-200d-1f467"
    },
    {
      n: ["man-man-girl-boy", "family: man, man, girl, boy"],
      u: "1f468-200d-1f468-200d-1f467-200d-1f466"
    },
    {
      n: ["man-man-boy-boy", "family: man, man, boy, boy"],
      u: "1f468-200d-1f468-200d-1f466-200d-1f466"
    },
    {
      n: ["man-man-girl-girl", "family: man, man, girl, girl"],
      u: "1f468-200d-1f468-200d-1f467-200d-1f467"
    },
    {
      n: ["woman-woman-boy", "family: woman, woman, boy"],
      u: "1f469-200d-1f469-200d-1f466"
    },
    {
      n: ["woman-woman-girl", "family: woman, woman, girl"],
      u: "1f469-200d-1f469-200d-1f467"
    },
    {
      n: ["woman-woman-girl-boy", "family: woman, woman, girl, boy"],
      u: "1f469-200d-1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["woman-woman-boy-boy", "family: woman, woman, boy, boy"],
      u: "1f469-200d-1f469-200d-1f466-200d-1f466"
    },
    {
      n: ["woman-woman-girl-girl", "family: woman, woman, girl, girl"],
      u: "1f469-200d-1f469-200d-1f467-200d-1f467"
    },
    { n: ["man-boy", "family: man, boy"], u: "1f468-200d-1f466" },
    {
      n: ["man-boy-boy", "family: man, boy, boy"],
      u: "1f468-200d-1f466-200d-1f466"
    },
    { n: ["man-girl", "family: man, girl"], u: "1f468-200d-1f467" },
    {
      n: ["man-girl-boy", "family: man, girl, boy"],
      u: "1f468-200d-1f467-200d-1f466"
    },
    {
      n: ["man-girl-girl", "family: man, girl, girl"],
      u: "1f468-200d-1f467-200d-1f467"
    },
    { n: ["woman-boy", "family: woman, boy"], u: "1f469-200d-1f466" },
    {
      n: ["woman-boy-boy", "family: woman, boy, boy"],
      u: "1f469-200d-1f466-200d-1f466"
    },
    { n: ["woman-girl", "family: woman, girl"], u: "1f469-200d-1f467" },
    {
      n: ["woman-girl-boy", "family: woman, girl, boy"],
      u: "1f469-200d-1f467-200d-1f466"
    },
    {
      n: ["woman-girl-girl", "family: woman, girl, girl"],
      u: "1f469-200d-1f467-200d-1f467"
    },
    { n: ["speaking head", "speaking head in silhouette"], u: "1f5e3-fe0f" },
    { n: ["bust in silhouette"], u: "1f464" },
    { n: ["busts in silhouette"], u: "1f465" },
    { n: ["people hugging"], u: "1fac2" },
    { n: ["footprints"], u: "1f463" }
  ],
  animals_nature: [
    { n: ["monkey face"], u: "1f435" },
    { n: ["monkey"], u: "1f412" },
    { n: ["gorilla"], u: "1f98d" },
    { n: ["orangutan"], u: "1f9a7" },
    { n: ["dog", "dog face"], u: "1f436" },
    { n: ["dog", "dog2"], u: "1f415" },
    { n: ["guide dog"], u: "1f9ae" },
    { n: ["service dog"], u: "1f415-200d-1f9ba" },
    { n: ["poodle"], u: "1f429" },
    { n: ["wolf", "wolf face"], u: "1f43a" },
    { n: ["fox face"], u: "1f98a" },
    { n: ["raccoon"], u: "1f99d" },
    { n: ["cat", "cat face"], u: "1f431" },
    { n: ["cat", "cat2"], u: "1f408" },
    { n: ["black cat"], u: "1f408-200d-2b1b" },
    { n: ["lion face"], u: "1f981" },
    { n: ["tiger", "tiger face"], u: "1f42f" },
    { n: ["tiger", "tiger2"], u: "1f405" },
    { n: ["leopard"], u: "1f406" },
    { n: ["horse", "horse face"], u: "1f434" },
    { n: ["horse", "racehorse"], u: "1f40e" },
    { n: ["unicorn face"], u: "1f984" },
    { n: ["zebra face"], u: "1f993" },
    { n: ["deer"], u: "1f98c" },
    { n: ["bison"], u: "1f9ac" },
    { n: ["cow", "cow face"], u: "1f42e" },
    { n: ["ox"], u: "1f402" },
    { n: ["water buffalo"], u: "1f403" },
    { n: ["cow", "cow2"], u: "1f404" },
    { n: ["pig", "pig face"], u: "1f437" },
    { n: ["pig", "pig2"], u: "1f416" },
    { n: ["boar"], u: "1f417" },
    { n: ["pig nose"], u: "1f43d" },
    { n: ["ram"], u: "1f40f" },
    { n: ["sheep"], u: "1f411" },
    { n: ["goat"], u: "1f410" },
    { n: ["dromedary camel"], u: "1f42a" },
    { n: ["camel", "bactrian camel"], u: "1f42b" },
    { n: ["llama"], u: "1f999" },
    { n: ["giraffe face"], u: "1f992" },
    { n: ["elephant"], u: "1f418" },
    { n: ["mammoth"], u: "1f9a3" },
    { n: ["rhinoceros"], u: "1f98f" },
    { n: ["hippopotamus"], u: "1f99b" },
    { n: ["mouse", "mouse face"], u: "1f42d" },
    { n: ["mouse", "mouse2"], u: "1f401" },
    { n: ["rat"], u: "1f400" },
    { n: ["hamster", "hamster face"], u: "1f439" },
    { n: ["rabbit", "rabbit face"], u: "1f430" },
    { n: ["rabbit", "rabbit2"], u: "1f407" },
    { n: ["chipmunk"], u: "1f43f-fe0f" },
    { n: ["beaver"], u: "1f9ab" },
    { n: ["hedgehog"], u: "1f994" },
    { n: ["bat"], u: "1f987" },
    { n: ["bear", "bear face"], u: "1f43b" },
    { n: ["polar bear"], u: "1f43b-200d-2744-fe0f" },
    { n: ["koala"], u: "1f428" },
    { n: ["panda face"], u: "1f43c" },
    { n: ["sloth"], u: "1f9a5" },
    { n: ["otter"], u: "1f9a6" },
    { n: ["skunk"], u: "1f9a8" },
    { n: ["kangaroo"], u: "1f998" },
    { n: ["badger"], u: "1f9a1" },
    { n: ["feet", "paw prints"], u: "1f43e" },
    { n: ["turkey"], u: "1f983" },
    { n: ["chicken"], u: "1f414" },
    { n: ["rooster"], u: "1f413" },
    { n: ["hatching chick"], u: "1f423" },
    { n: ["baby chick"], u: "1f424" },
    { n: ["hatched chick", "front-facing baby chick"], u: "1f425" },
    { n: ["bird"], u: "1f426" },
    { n: ["penguin"], u: "1f427" },
    { n: ["dove", "dove of peace"], u: "1f54a-fe0f" },
    { n: ["eagle"], u: "1f985" },
    { n: ["duck"], u: "1f986" },
    { n: ["swan"], u: "1f9a2" },
    { n: ["owl"], u: "1f989" },
    { n: ["dodo"], u: "1f9a4" },
    { n: ["feather"], u: "1fab6" },
    { n: ["flamingo"], u: "1f9a9" },
    { n: ["peacock"], u: "1f99a" },
    { n: ["parrot"], u: "1f99c" },
    { n: ["frog", "frog face"], u: "1f438" },
    { n: ["crocodile"], u: "1f40a" },
    { n: ["turtle"], u: "1f422" },
    { n: ["lizard"], u: "1f98e" },
    { n: ["snake"], u: "1f40d" },
    { n: ["dragon face"], u: "1f432" },
    { n: ["dragon"], u: "1f409" },
    { n: ["sauropod"], u: "1f995" },
    { n: ["t-rex"], u: "1f996" },
    { n: ["whale", "spouting whale"], u: "1f433" },
    { n: ["whale", "whale2"], u: "1f40b" },
    { n: ["dolphin", "flipper"], u: "1f42c" },
    { n: ["seal"], u: "1f9ad" },
    { n: ["fish"], u: "1f41f" },
    { n: ["tropical fish"], u: "1f420" },
    { n: ["blowfish"], u: "1f421" },
    { n: ["shark"], u: "1f988" },
    { n: ["octopus"], u: "1f419" },
    { n: ["shell", "spiral shell"], u: "1f41a" },
    { n: ["coral"], u: "1fab8" },
    { n: ["snail"], u: "1f40c" },
    { n: ["butterfly"], u: "1f98b" },
    { n: ["bug"], u: "1f41b" },
    { n: ["ant"], u: "1f41c" },
    { n: ["bee", "honeybee"], u: "1f41d" },
    { n: ["beetle"], u: "1fab2" },
    { n: ["ladybug", "lady beetle"], u: "1f41e" },
    { n: ["cricket"], u: "1f997" },
    { n: ["cockroach"], u: "1fab3" },
    { n: ["spider"], u: "1f577-fe0f" },
    { n: ["spider web"], u: "1f578-fe0f" },
    { n: ["scorpion"], u: "1f982" },
    { n: ["mosquito"], u: "1f99f" },
    { n: ["fly"], u: "1fab0" },
    { n: ["worm"], u: "1fab1" },
    { n: ["microbe"], u: "1f9a0" },
    { n: ["bouquet"], u: "1f490" },
    { n: ["cherry blossom"], u: "1f338" },
    { n: ["white flower"], u: "1f4ae" },
    { n: ["lotus"], u: "1fab7" },
    { n: ["rosette"], u: "1f3f5-fe0f" },
    { n: ["rose"], u: "1f339" },
    { n: ["wilted flower"], u: "1f940" },
    { n: ["hibiscus"], u: "1f33a" },
    { n: ["sunflower"], u: "1f33b" },
    { n: ["blossom"], u: "1f33c" },
    { n: ["tulip"], u: "1f337" },
    { n: ["seedling"], u: "1f331" },
    { n: ["potted plant"], u: "1fab4" },
    { n: ["evergreen tree"], u: "1f332" },
    { n: ["deciduous tree"], u: "1f333" },
    { n: ["palm tree"], u: "1f334" },
    { n: ["cactus"], u: "1f335" },
    { n: ["ear of rice"], u: "1f33e" },
    { n: ["herb"], u: "1f33f" },
    { n: ["shamrock"], u: "2618-fe0f" },
    { n: ["four leaf clover"], u: "1f340" },
    { n: ["maple leaf"], u: "1f341" },
    { n: ["fallen leaf"], u: "1f342" },
    { n: ["leaves", "leaf fluttering in wind"], u: "1f343" },
    { n: ["empty nest"], u: "1fab9" },
    { n: ["nest with eggs"], u: "1faba" }
  ],
  food_drink: [
    { n: ["grapes"], u: "1f347" },
    { n: ["melon"], u: "1f348" },
    { n: ["watermelon"], u: "1f349" },
    { n: ["tangerine"], u: "1f34a" },
    { n: ["lemon"], u: "1f34b" },
    { n: ["banana"], u: "1f34c" },
    { n: ["pineapple"], u: "1f34d" },
    { n: ["mango"], u: "1f96d" },
    { n: ["apple", "red apple"], u: "1f34e" },
    { n: ["green apple"], u: "1f34f" },
    { n: ["pear"], u: "1f350" },
    { n: ["peach"], u: "1f351" },
    { n: ["cherries"], u: "1f352" },
    { n: ["strawberry"], u: "1f353" },
    { n: ["blueberries"], u: "1fad0" },
    { n: ["kiwifruit"], u: "1f95d" },
    { n: ["tomato"], u: "1f345" },
    { n: ["olive"], u: "1fad2" },
    { n: ["coconut"], u: "1f965" },
    { n: ["avocado"], u: "1f951" },
    { n: ["eggplant", "aubergine"], u: "1f346" },
    { n: ["potato"], u: "1f954" },
    { n: ["carrot"], u: "1f955" },
    { n: ["corn", "ear of maize"], u: "1f33d" },
    { n: ["hot pepper"], u: "1f336-fe0f" },
    { n: ["bell pepper"], u: "1fad1" },
    { n: ["cucumber"], u: "1f952" },
    { n: ["leafy green"], u: "1f96c" },
    { n: ["broccoli"], u: "1f966" },
    { n: ["garlic"], u: "1f9c4" },
    { n: ["onion"], u: "1f9c5" },
    { n: ["mushroom"], u: "1f344" },
    { n: ["peanuts"], u: "1f95c" },
    { n: ["beans"], u: "1fad8" },
    { n: ["chestnut"], u: "1f330" },
    { n: ["bread"], u: "1f35e" },
    { n: ["croissant"], u: "1f950" },
    { n: ["baguette bread"], u: "1f956" },
    { n: ["flatbread"], u: "1fad3" },
    { n: ["pretzel"], u: "1f968" },
    { n: ["bagel"], u: "1f96f" },
    { n: ["pancakes"], u: "1f95e" },
    { n: ["waffle"], u: "1f9c7" },
    { n: ["cheese wedge"], u: "1f9c0" },
    { n: ["meat on bone"], u: "1f356" },
    { n: ["poultry leg"], u: "1f357" },
    { n: ["cut of meat"], u: "1f969" },
    { n: ["bacon"], u: "1f953" },
    { n: ["hamburger"], u: "1f354" },
    { n: ["fries", "french fries"], u: "1f35f" },
    { n: ["pizza", "slice of pizza"], u: "1f355" },
    { n: ["hotdog", "hot dog"], u: "1f32d" },
    { n: ["sandwich"], u: "1f96a" },
    { n: ["taco"], u: "1f32e" },
    { n: ["burrito"], u: "1f32f" },
    { n: ["tamale"], u: "1fad4" },
    { n: ["stuffed flatbread"], u: "1f959" },
    { n: ["falafel"], u: "1f9c6" },
    { n: ["egg"], u: "1f95a" },
    { n: ["cooking", "fried egg"], u: "1f373" },
    { n: ["shallow pan of food"], u: "1f958" },
    { n: ["stew", "pot of food"], u: "1f372" },
    { n: ["fondue"], u: "1fad5" },
    { n: ["bowl with spoon"], u: "1f963" },
    { n: ["green salad"], u: "1f957" },
    { n: ["popcorn"], u: "1f37f" },
    { n: ["butter"], u: "1f9c8" },
    { n: ["salt", "salt shaker"], u: "1f9c2" },
    { n: ["canned food"], u: "1f96b" },
    { n: ["bento", "bento box"], u: "1f371" },
    { n: ["rice cracker"], u: "1f358" },
    { n: ["rice ball"], u: "1f359" },
    { n: ["rice", "cooked rice"], u: "1f35a" },
    { n: ["curry", "curry and rice"], u: "1f35b" },
    { n: ["ramen", "steaming bowl"], u: "1f35c" },
    { n: ["spaghetti"], u: "1f35d" },
    { n: ["sweet potato", "roasted sweet potato"], u: "1f360" },
    { n: ["oden"], u: "1f362" },
    { n: ["sushi"], u: "1f363" },
    { n: ["fried shrimp"], u: "1f364" },
    { n: ["fish cake", "fish cake with swirl design"], u: "1f365" },
    { n: ["moon cake"], u: "1f96e" },
    { n: ["dango"], u: "1f361" },
    { n: ["dumpling"], u: "1f95f" },
    { n: ["fortune cookie"], u: "1f960" },
    { n: ["takeout box"], u: "1f961" },
    { n: ["crab"], u: "1f980" },
    { n: ["lobster"], u: "1f99e" },
    { n: ["shrimp"], u: "1f990" },
    { n: ["squid"], u: "1f991" },
    { n: ["oyster"], u: "1f9aa" },
    { n: ["icecream", "soft ice cream"], u: "1f366" },
    { n: ["shaved ice"], u: "1f367" },
    { n: ["ice cream"], u: "1f368" },
    { n: ["doughnut"], u: "1f369" },
    { n: ["cookie"], u: "1f36a" },
    { n: ["birthday", "birthday cake"], u: "1f382" },
    { n: ["cake", "shortcake"], u: "1f370" },
    { n: ["cupcake"], u: "1f9c1" },
    { n: ["pie"], u: "1f967" },
    { n: ["chocolate bar"], u: "1f36b" },
    { n: ["candy"], u: "1f36c" },
    { n: ["lollipop"], u: "1f36d" },
    { n: ["custard"], u: "1f36e" },
    { n: ["honey pot"], u: "1f36f" },
    { n: ["baby bottle"], u: "1f37c" },
    { n: ["glass of milk"], u: "1f95b" },
    { n: ["coffee", "hot beverage"], u: "2615" },
    { n: ["teapot"], u: "1fad6" },
    { n: ["tea", "teacup without handle"], u: "1f375" },
    { n: ["sake", "sake bottle and cup"], u: "1f376" },
    { n: ["champagne", "bottle with popping cork"], u: "1f37e" },
    { n: ["wine glass"], u: "1f377" },
    { n: ["cocktail", "cocktail glass"], u: "1f378" },
    { n: ["tropical drink"], u: "1f379" },
    { n: ["beer", "beer mug"], u: "1f37a" },
    { n: ["beers", "clinking beer mugs"], u: "1f37b" },
    { n: ["clinking glasses"], u: "1f942" },
    { n: ["tumbler glass"], u: "1f943" },
    { n: ["pouring liquid"], u: "1fad7" },
    { n: ["cup with straw"], u: "1f964" },
    { n: ["bubble tea"], u: "1f9cb" },
    { n: ["beverage box"], u: "1f9c3" },
    { n: ["mate drink"], u: "1f9c9" },
    { n: ["ice cube"], u: "1f9ca" },
    { n: ["chopsticks"], u: "1f962" },
    { n: ["knife fork plate", "fork and knife with plate"], u: "1f37d-fe0f" },
    { n: ["fork and knife"], u: "1f374" },
    { n: ["spoon"], u: "1f944" },
    { n: ["hocho", "knife"], u: "1f52a" },
    { n: ["jar"], u: "1fad9" },
    { n: ["amphora"], u: "1f3fa" }
  ],
  travel_places: [
    { n: ["earth africa", "earth globe europe-africa"], u: "1f30d" },
    { n: ["earth americas", "earth globe americas"], u: "1f30e" },
    { n: ["earth asia", "earth globe asia-australia"], u: "1f30f" },
    { n: ["globe with meridians"], u: "1f310" },
    { n: ["world map"], u: "1f5fa-fe0f" },
    { n: ["japan", "silhouette of japan"], u: "1f5fe" },
    { n: ["compass"], u: "1f9ed" },
    { n: ["snow-capped mountain", "snow capped mountain"], u: "1f3d4-fe0f" },
    { n: ["mountain"], u: "26f0-fe0f" },
    { n: ["volcano"], u: "1f30b" },
    { n: ["mount fuji"], u: "1f5fb" },
    { n: ["camping"], u: "1f3d5-fe0f" },
    { n: ["beach with umbrella"], u: "1f3d6-fe0f" },
    { n: ["desert"], u: "1f3dc-fe0f" },
    { n: ["desert island"], u: "1f3dd-fe0f" },
    { n: ["national park"], u: "1f3de-fe0f" },
    { n: ["stadium"], u: "1f3df-fe0f" },
    { n: ["classical building"], u: "1f3db-fe0f" },
    { n: ["building construction"], u: "1f3d7-fe0f" },
    { n: ["brick", "bricks"], u: "1f9f1" },
    { n: ["rock"], u: "1faa8" },
    { n: ["wood"], u: "1fab5" },
    { n: ["hut"], u: "1f6d6" },
    { n: ["houses", "house buildings"], u: "1f3d8-fe0f" },
    { n: ["derelict house", "derelict house building"], u: "1f3da-fe0f" },
    { n: ["house", "house building"], u: "1f3e0" },
    { n: ["house with garden"], u: "1f3e1" },
    { n: ["office", "office building"], u: "1f3e2" },
    { n: ["post office", "japanese post office"], u: "1f3e3" },
    { n: ["european post office"], u: "1f3e4" },
    { n: ["hospital"], u: "1f3e5" },
    { n: ["bank"], u: "1f3e6" },
    { n: ["hotel"], u: "1f3e8" },
    { n: ["love hotel"], u: "1f3e9" },
    { n: ["convenience store"], u: "1f3ea" },
    { n: ["school"], u: "1f3eb" },
    { n: ["department store"], u: "1f3ec" },
    { n: ["factory"], u: "1f3ed" },
    { n: ["japanese castle"], u: "1f3ef" },
    { n: ["european castle"], u: "1f3f0" },
    { n: ["wedding"], u: "1f492" },
    { n: ["tokyo tower"], u: "1f5fc" },
    { n: ["statue of liberty"], u: "1f5fd" },
    { n: ["church"], u: "26ea" },
    { n: ["mosque"], u: "1f54c" },
    { n: ["hindu temple"], u: "1f6d5" },
    { n: ["synagogue"], u: "1f54d" },
    { n: ["shinto shrine"], u: "26e9-fe0f" },
    { n: ["kaaba"], u: "1f54b" },
    { n: ["fountain"], u: "26f2" },
    { n: ["tent"], u: "26fa" },
    { n: ["foggy"], u: "1f301" },
    { n: ["night with stars"], u: "1f303" },
    { n: ["cityscape"], u: "1f3d9-fe0f" },
    { n: ["sunrise over mountains"], u: "1f304" },
    { n: ["sunrise"], u: "1f305" },
    { n: ["city sunset", "cityscape at dusk"], u: "1f306" },
    { n: ["city sunrise", "sunset over buildings"], u: "1f307" },
    { n: ["bridge at night"], u: "1f309" },
    { n: ["hotsprings", "hot springs"], u: "2668-fe0f" },
    { n: ["carousel horse"], u: "1f3a0" },
    { n: ["playground slide"], u: "1f6dd" },
    { n: ["ferris wheel"], u: "1f3a1" },
    { n: ["roller coaster"], u: "1f3a2" },
    { n: ["barber", "barber pole"], u: "1f488" },
    { n: ["circus tent"], u: "1f3aa" },
    { n: ["steam locomotive"], u: "1f682" },
    { n: ["railway car"], u: "1f683" },
    { n: ["high-speed train", "bullettrain side"], u: "1f684" },
    {
      n: ["bullettrain front", "high-speed train with bullet nose"],
      u: "1f685"
    },
    { n: ["train", "train2"], u: "1f686" },
    { n: ["metro"], u: "1f687" },
    { n: ["light rail"], u: "1f688" },
    { n: ["station"], u: "1f689" },
    { n: ["tram"], u: "1f68a" },
    { n: ["monorail"], u: "1f69d" },
    { n: ["mountain railway"], u: "1f69e" },
    { n: ["train", "tram car"], u: "1f68b" },
    { n: ["bus"], u: "1f68c" },
    { n: ["oncoming bus"], u: "1f68d" },
    { n: ["trolleybus"], u: "1f68e" },
    { n: ["minibus"], u: "1f690" },
    { n: ["ambulance"], u: "1f691" },
    { n: ["fire engine"], u: "1f692" },
    { n: ["police car"], u: "1f693" },
    { n: ["oncoming police car"], u: "1f694" },
    { n: ["taxi"], u: "1f695" },
    { n: ["oncoming taxi"], u: "1f696" },
    { n: ["car", "red car", "automobile"], u: "1f697" },
    { n: ["oncoming automobile"], u: "1f698" },
    { n: ["blue car", "recreational vehicle"], u: "1f699" },
    { n: ["pickup truck"], u: "1f6fb" },
    { n: ["truck", "delivery truck"], u: "1f69a" },
    { n: ["articulated lorry"], u: "1f69b" },
    { n: ["tractor"], u: "1f69c" },
    { n: ["racing car"], u: "1f3ce-fe0f" },
    { n: ["motorcycle", "racing motorcycle"], u: "1f3cd-fe0f" },
    { n: ["motor scooter"], u: "1f6f5" },
    { n: ["manual wheelchair"], u: "1f9bd" },
    { n: ["motorized wheelchair"], u: "1f9bc" },
    { n: ["auto rickshaw"], u: "1f6fa" },
    { n: ["bike", "bicycle"], u: "1f6b2" },
    { n: ["scooter"], u: "1f6f4" },
    { n: ["skateboard"], u: "1f6f9" },
    { n: ["roller skate"], u: "1f6fc" },
    { n: ["busstop", "bus stop"], u: "1f68f" },
    { n: ["motorway"], u: "1f6e3-fe0f" },
    { n: ["railway track"], u: "1f6e4-fe0f" },
    { n: ["oil drum"], u: "1f6e2-fe0f" },
    { n: ["fuelpump", "fuel pump"], u: "26fd" },
    { n: ["wheel"], u: "1f6de" },
    { n: ["rotating light", "police cars revolving light"], u: "1f6a8" },
    { n: ["traffic light", "horizontal traffic light"], u: "1f6a5" },
    { n: ["vertical traffic light"], u: "1f6a6" },
    { n: ["octagonal sign"], u: "1f6d1" },
    { n: ["construction", "construction sign"], u: "1f6a7" },
    { n: ["anchor"], u: "2693" },
    { n: ["ring buoy"], u: "1f6df" },
    { n: ["boat", "sailboat"], u: "26f5" },
    { n: ["canoe"], u: "1f6f6" },
    { n: ["speedboat"], u: "1f6a4" },
    { n: ["passenger ship"], u: "1f6f3-fe0f" },
    { n: ["ferry"], u: "26f4-fe0f" },
    { n: ["motor boat"], u: "1f6e5-fe0f" },
    { n: ["ship"], u: "1f6a2" },
    { n: ["airplane"], u: "2708-fe0f" },
    { n: ["small airplane"], u: "1f6e9-fe0f" },
    { n: ["airplane departure"], u: "1f6eb" },
    { n: ["airplane arriving"], u: "1f6ec" },
    { n: ["parachute"], u: "1fa82" },
    { n: ["seat"], u: "1f4ba" },
    { n: ["helicopter"], u: "1f681" },
    { n: ["suspension railway"], u: "1f69f" },
    { n: ["mountain cableway"], u: "1f6a0" },
    { n: ["aerial tramway"], u: "1f6a1" },
    { n: ["satellite"], u: "1f6f0-fe0f" },
    { n: ["rocket"], u: "1f680" },
    { n: ["flying saucer"], u: "1f6f8" },
    { n: ["bellhop bell"], u: "1f6ce-fe0f" },
    { n: ["luggage"], u: "1f9f3" },
    { n: ["hourglass"], u: "231b" },
    { n: ["hourglass flowing sand", "hourglass with flowing sand"], u: "23f3" },
    { n: ["watch"], u: "231a" },
    { n: ["alarm clock"], u: "23f0" },
    { n: ["stopwatch"], u: "23f1-fe0f" },
    { n: ["timer clock"], u: "23f2-fe0f" },
    { n: ["mantelpiece clock"], u: "1f570-fe0f" },
    { n: ["clock12", "clock face twelve oclock"], u: "1f55b" },
    { n: ["clock1230", "clock face twelve-thirty"], u: "1f567" },
    { n: ["clock1", "clock face one oclock"], u: "1f550" },
    { n: ["clock130", "clock face one-thirty"], u: "1f55c" },
    { n: ["clock2", "clock face two oclock"], u: "1f551" },
    { n: ["clock230", "clock face two-thirty"], u: "1f55d" },
    { n: ["clock3", "clock face three oclock"], u: "1f552" },
    { n: ["clock330", "clock face three-thirty"], u: "1f55e" },
    { n: ["clock4", "clock face four oclock"], u: "1f553" },
    { n: ["clock430", "clock face four-thirty"], u: "1f55f" },
    { n: ["clock5", "clock face five oclock"], u: "1f554" },
    { n: ["clock530", "clock face five-thirty"], u: "1f560" },
    { n: ["clock6", "clock face six oclock"], u: "1f555" },
    { n: ["clock630", "clock face six-thirty"], u: "1f561" },
    { n: ["clock7", "clock face seven oclock"], u: "1f556" },
    { n: ["clock730", "clock face seven-thirty"], u: "1f562" },
    { n: ["clock8", "clock face eight oclock"], u: "1f557" },
    { n: ["clock830", "clock face eight-thirty"], u: "1f563" },
    { n: ["clock9", "clock face nine oclock"], u: "1f558" },
    { n: ["clock930", "clock face nine-thirty"], u: "1f564" },
    { n: ["clock10", "clock face ten oclock"], u: "1f559" },
    { n: ["clock1030", "clock face ten-thirty"], u: "1f565" },
    { n: ["clock11", "clock face eleven oclock"], u: "1f55a" },
    { n: ["clock1130", "clock face eleven-thirty"], u: "1f566" },
    { n: ["new moon", "new moon symbol"], u: "1f311" },
    { n: ["waxing crescent moon", "waxing crescent moon symbol"], u: "1f312" },
    { n: ["first quarter moon", "first quarter moon symbol"], u: "1f313" },
    {
      n: ["moon", "waxing gibbous moon", "waxing gibbous moon symbol"],
      u: "1f314"
    },
    { n: ["full moon", "full moon symbol"], u: "1f315" },
    { n: ["waning gibbous moon", "waning gibbous moon symbol"], u: "1f316" },
    { n: ["last quarter moon", "last quarter moon symbol"], u: "1f317" },
    { n: ["waning crescent moon", "waning crescent moon symbol"], u: "1f318" },
    { n: ["crescent moon"], u: "1f319" },
    { n: ["new moon with face"], u: "1f31a" },
    { n: ["first quarter moon with face"], u: "1f31b" },
    { n: ["last quarter moon with face"], u: "1f31c" },
    { n: ["thermometer"], u: "1f321-fe0f" },
    { n: ["sunny", "black sun with rays"], u: "2600-fe0f" },
    { n: ["full moon with face"], u: "1f31d" },
    { n: ["sun with face"], u: "1f31e" },
    { n: ["ringed planet"], u: "1fa90" },
    { n: ["star", "white medium star"], u: "2b50" },
    { n: ["star2", "glowing star"], u: "1f31f" },
    { n: ["stars", "shooting star"], u: "1f320" },
    { n: ["milky way"], u: "1f30c" },
    { n: ["cloud"], u: "2601-fe0f" },
    { n: ["partly sunny", "sun behind cloud"], u: "26c5" },
    {
      n: ["thunder cloud and rain", "cloud with lightning and rain"],
      u: "26c8-fe0f"
    },
    {
      n: ["mostly sunny", "sun small cloud", "sun behind small cloud"],
      u: "1f324-fe0f"
    },
    {
      n: ["barely sunny", "sun behind cloud", "sun behind large cloud"],
      u: "1f325-fe0f"
    },
    { n: ["partly sunny rain", "sun behind rain cloud"], u: "1f326-fe0f" },
    { n: ["rain cloud", "cloud with rain"], u: "1f327-fe0f" },
    { n: ["snow cloud", "cloud with snow"], u: "1f328-fe0f" },
    {
      n: ["lightning", "lightning cloud", "cloud with lightning"],
      u: "1f329-fe0f"
    },
    { n: ["tornado", "tornado cloud"], u: "1f32a-fe0f" },
    { n: ["fog"], u: "1f32b-fe0f" },
    { n: ["wind face", "wind blowing face"], u: "1f32c-fe0f" },
    { n: ["cyclone"], u: "1f300" },
    { n: ["rainbow"], u: "1f308" },
    { n: ["closed umbrella"], u: "1f302" },
    { n: ["umbrella"], u: "2602-fe0f" },
    { n: ["umbrella with rain drops"], u: "2614" },
    { n: ["umbrella on ground"], u: "26f1-fe0f" },
    { n: ["zap", "high voltage sign"], u: "26a1" },
    { n: ["snowflake"], u: "2744-fe0f" },
    { n: ["snowman"], u: "2603-fe0f" },
    { n: ["snowman without snow"], u: "26c4" },
    { n: ["comet"], u: "2604-fe0f" },
    { n: ["fire"], u: "1f525" },
    { n: ["droplet"], u: "1f4a7" },
    { n: ["ocean", "water wave"], u: "1f30a" }
  ],
  activities: [
    { n: ["jack-o-lantern", "jack o lantern"], u: "1f383" },
    { n: ["christmas tree"], u: "1f384" },
    { n: ["fireworks"], u: "1f386" },
    { n: ["sparkler", "firework sparkler"], u: "1f387" },
    { n: ["firecracker"], u: "1f9e8" },
    { n: ["sparkles"], u: "2728" },
    { n: ["balloon"], u: "1f388" },
    { n: ["tada", "party popper"], u: "1f389" },
    { n: ["confetti ball"], u: "1f38a" },
    { n: ["tanabata tree"], u: "1f38b" },
    { n: ["bamboo", "pine decoration"], u: "1f38d" },
    { n: ["dolls", "japanese dolls"], u: "1f38e" },
    { n: ["flags", "carp streamer"], u: "1f38f" },
    { n: ["wind chime"], u: "1f390" },
    { n: ["rice scene", "moon viewing ceremony"], u: "1f391" },
    { n: ["red envelope", "red gift envelope"], u: "1f9e7" },
    { n: ["ribbon"], u: "1f380" },
    { n: ["gift", "wrapped present"], u: "1f381" },
    { n: ["reminder ribbon"], u: "1f397-fe0f" },
    { n: ["admission tickets"], u: "1f39f-fe0f" },
    { n: ["ticket"], u: "1f3ab" },
    { n: ["medal", "military medal"], u: "1f396-fe0f" },
    { n: ["trophy"], u: "1f3c6" },
    { n: ["sports medal"], u: "1f3c5" },
    { n: ["first place medal"], u: "1f947" },
    { n: ["second place medal"], u: "1f948" },
    { n: ["third place medal"], u: "1f949" },
    { n: ["soccer", "soccer ball"], u: "26bd" },
    { n: ["baseball"], u: "26be" },
    { n: ["softball"], u: "1f94e" },
    { n: ["basketball", "basketball and hoop"], u: "1f3c0" },
    { n: ["volleyball"], u: "1f3d0" },
    { n: ["football", "american football"], u: "1f3c8" },
    { n: ["rugby football"], u: "1f3c9" },
    { n: ["tennis", "tennis racquet and ball"], u: "1f3be" },
    { n: ["flying disc"], u: "1f94f" },
    { n: ["bowling"], u: "1f3b3" },
    { n: ["cricket bat and ball"], u: "1f3cf" },
    { n: ["field hockey stick and ball"], u: "1f3d1" },
    { n: ["ice hockey stick and puck"], u: "1f3d2" },
    { n: ["lacrosse", "lacrosse stick and ball"], u: "1f94d" },
    { n: ["table tennis paddle and ball"], u: "1f3d3" },
    { n: ["badminton racquet and shuttlecock"], u: "1f3f8" },
    { n: ["boxing glove"], u: "1f94a" },
    { n: ["martial arts uniform"], u: "1f94b" },
    { n: ["goal net"], u: "1f945" },
    { n: ["golf", "flag in hole"], u: "26f3" },
    { n: ["ice skate"], u: "26f8-fe0f" },
    { n: ["fishing pole and fish"], u: "1f3a3" },
    { n: ["diving mask"], u: "1f93f" },
    { n: ["running shirt with sash"], u: "1f3bd" },
    { n: ["ski", "ski and ski boot"], u: "1f3bf" },
    { n: ["sled"], u: "1f6f7" },
    { n: ["curling stone"], u: "1f94c" },
    { n: ["dart", "direct hit"], u: "1f3af" },
    { n: ["yo-yo"], u: "1fa80" },
    { n: ["kite"], u: "1fa81" },
    { n: ["8ball", "billiards"], u: "1f3b1" },
    { n: ["crystal ball"], u: "1f52e" },
    { n: ["magic wand"], u: "1fa84" },
    { n: ["nazar amulet"], u: "1f9ff" },
    { n: ["hamsa"], u: "1faac" },
    { n: ["video game"], u: "1f3ae" },
    { n: ["joystick"], u: "1f579-fe0f" },
    { n: ["slot machine"], u: "1f3b0" },
    { n: ["game die"], u: "1f3b2" },
    { n: ["jigsaw", "jigsaw puzzle piece"], u: "1f9e9" },
    { n: ["teddy bear"], u: "1f9f8" },
    { n: ["pinata"], u: "1fa85" },
    { n: ["mirror ball"], u: "1faa9" },
    { n: ["nesting dolls"], u: "1fa86" },
    { n: ["spades", "black spade suit"], u: "2660-fe0f" },
    { n: ["hearts", "black heart suit"], u: "2665-fe0f" },
    { n: ["diamonds", "black diamond suit"], u: "2666-fe0f" },
    { n: ["clubs", "black club suit"], u: "2663-fe0f" },
    { n: ["chess pawn"], u: "265f-fe0f" },
    { n: ["black joker", "playing card black joker"], u: "1f0cf" },
    { n: ["mahjong", "mahjong tile red dragon"], u: "1f004" },
    { n: ["flower playing cards"], u: "1f3b4" },
    { n: ["performing arts"], u: "1f3ad" },
    { n: ["framed picture", "frame with picture"], u: "1f5bc-fe0f" },
    { n: ["art", "artist palette"], u: "1f3a8" },
    { n: ["thread", "spool of thread"], u: "1f9f5" },
    { n: ["sewing needle"], u: "1faa1" },
    { n: ["yarn", "ball of yarn"], u: "1f9f6" },
    { n: ["knot"], u: "1faa2" }
  ],
  objects: [
    { n: ["eyeglasses"], u: "1f453" },
    { n: ["sunglasses", "dark sunglasses"], u: "1f576-fe0f" },
    { n: ["goggles"], u: "1f97d" },
    { n: ["lab coat"], u: "1f97c" },
    { n: ["safety vest"], u: "1f9ba" },
    { n: ["necktie"], u: "1f454" },
    { n: ["shirt", "tshirt", "t-shirt"], u: "1f455" },
    { n: ["jeans"], u: "1f456" },
    { n: ["scarf"], u: "1f9e3" },
    { n: ["gloves"], u: "1f9e4" },
    { n: ["coat"], u: "1f9e5" },
    { n: ["socks"], u: "1f9e6" },
    { n: ["dress"], u: "1f457" },
    { n: ["kimono"], u: "1f458" },
    { n: ["sari"], u: "1f97b" },
    { n: ["one-piece swimsuit"], u: "1fa71" },
    { n: ["briefs"], u: "1fa72" },
    { n: ["shorts"], u: "1fa73" },
    { n: ["bikini"], u: "1f459" },
    { n: ["womans clothes"], u: "1f45a" },
    { n: ["purse"], u: "1f45b" },
    { n: ["handbag"], u: "1f45c" },
    { n: ["pouch"], u: "1f45d" },
    { n: ["shopping bags"], u: "1f6cd-fe0f" },
    { n: ["school satchel"], u: "1f392" },
    { n: ["thong sandal"], u: "1fa74" },
    { n: ["shoe", "mans shoe"], u: "1f45e" },
    { n: ["athletic shoe"], u: "1f45f" },
    { n: ["hiking boot"], u: "1f97e" },
    { n: ["flat shoe", "womans flat shoe"], u: "1f97f" },
    { n: ["high heel", "high-heeled shoe"], u: "1f460" },
    { n: ["sandal", "womans sandal"], u: "1f461" },
    { n: ["ballet shoes"], u: "1fa70" },
    { n: ["boot", "womans boots"], u: "1f462" },
    { n: ["crown"], u: "1f451" },
    { n: ["womans hat"], u: "1f452" },
    { n: ["tophat", "top hat"], u: "1f3a9" },
    { n: ["mortar board", "graduation cap"], u: "1f393" },
    { n: ["billed cap"], u: "1f9e2" },
    { n: ["military helmet"], u: "1fa96" },
    {
      n: ["rescue worker\u2019s helmet", "helmet with white cross"],
      u: "26d1-fe0f"
    },
    { n: ["prayer beads"], u: "1f4ff" },
    { n: ["lipstick"], u: "1f484" },
    { n: ["ring"], u: "1f48d" },
    { n: ["gem", "gem stone"], u: "1f48e" },
    { n: ["mute", "speaker with cancellation stroke"], u: "1f507" },
    { n: ["speaker"], u: "1f508" },
    { n: ["sound", "speaker with one sound wave"], u: "1f509" },
    { n: ["loud sound", "speaker with three sound waves"], u: "1f50a" },
    { n: ["loudspeaker", "public address loudspeaker"], u: "1f4e2" },
    { n: ["mega", "cheering megaphone"], u: "1f4e3" },
    { n: ["postal horn"], u: "1f4ef" },
    { n: ["bell"], u: "1f514" },
    { n: ["no bell", "bell with cancellation stroke"], u: "1f515" },
    { n: ["musical score"], u: "1f3bc" },
    { n: ["musical note"], u: "1f3b5" },
    { n: ["notes", "multiple musical notes"], u: "1f3b6" },
    { n: ["studio microphone"], u: "1f399-fe0f" },
    { n: ["level slider"], u: "1f39a-fe0f" },
    { n: ["control knobs"], u: "1f39b-fe0f" },
    { n: ["microphone"], u: "1f3a4" },
    { n: ["headphone", "headphones"], u: "1f3a7" },
    { n: ["radio"], u: "1f4fb" },
    { n: ["saxophone"], u: "1f3b7" },
    { n: ["accordion"], u: "1fa97" },
    { n: ["guitar"], u: "1f3b8" },
    { n: ["musical keyboard"], u: "1f3b9" },
    { n: ["trumpet"], u: "1f3ba" },
    { n: ["violin"], u: "1f3bb" },
    { n: ["banjo"], u: "1fa95" },
    { n: ["drum with drumsticks"], u: "1f941" },
    { n: ["long drum"], u: "1fa98" },
    { n: ["iphone", "mobile phone"], u: "1f4f1" },
    {
      n: ["calling", "mobile phone with rightwards arrow at left"],
      u: "1f4f2"
    },
    { n: ["phone", "telephone", "black telephone"], u: "260e-fe0f" },
    { n: ["telephone receiver"], u: "1f4de" },
    { n: ["pager"], u: "1f4df" },
    { n: ["fax", "fax machine"], u: "1f4e0" },
    { n: ["battery"], u: "1f50b" },
    { n: ["low battery"], u: "1faab" },
    { n: ["electric plug"], u: "1f50c" },
    { n: ["computer", "personal computer"], u: "1f4bb" },
    { n: ["desktop computer"], u: "1f5a5-fe0f" },
    { n: ["printer"], u: "1f5a8-fe0f" },
    { n: ["keyboard"], u: "2328-fe0f" },
    { n: ["computer mouse", "three button mouse"], u: "1f5b1-fe0f" },
    { n: ["trackball"], u: "1f5b2-fe0f" },
    { n: ["minidisc"], u: "1f4bd" },
    { n: ["floppy disk"], u: "1f4be" },
    { n: ["cd", "optical disc"], u: "1f4bf" },
    { n: ["dvd"], u: "1f4c0" },
    { n: ["abacus"], u: "1f9ee" },
    { n: ["movie camera"], u: "1f3a5" },
    { n: ["film frames"], u: "1f39e-fe0f" },
    { n: ["film projector"], u: "1f4fd-fe0f" },
    { n: ["clapper", "clapper board"], u: "1f3ac" },
    { n: ["tv", "television"], u: "1f4fa" },
    { n: ["camera"], u: "1f4f7" },
    { n: ["camera with flash"], u: "1f4f8" },
    { n: ["video camera"], u: "1f4f9" },
    { n: ["vhs", "videocassette"], u: "1f4fc" },
    { n: ["mag", "left-pointing magnifying glass"], u: "1f50d" },
    { n: ["mag right", "right-pointing magnifying glass"], u: "1f50e" },
    { n: ["candle"], u: "1f56f-fe0f" },
    { n: ["bulb", "electric light bulb"], u: "1f4a1" },
    { n: ["flashlight", "electric torch"], u: "1f526" },
    { n: ["lantern", "izakaya lantern"], u: "1f3ee" },
    { n: ["diya lamp"], u: "1fa94" },
    { n: ["notebook with decorative cover"], u: "1f4d4" },
    { n: ["closed book"], u: "1f4d5" },
    { n: ["book", "open book"], u: "1f4d6" },
    { n: ["green book"], u: "1f4d7" },
    { n: ["blue book"], u: "1f4d8" },
    { n: ["orange book"], u: "1f4d9" },
    { n: ["books"], u: "1f4da" },
    { n: ["notebook"], u: "1f4d3" },
    { n: ["ledger"], u: "1f4d2" },
    { n: ["page with curl"], u: "1f4c3" },
    { n: ["scroll"], u: "1f4dc" },
    { n: ["page facing up"], u: "1f4c4" },
    { n: ["newspaper"], u: "1f4f0" },
    { n: ["rolled-up newspaper", "rolled up newspaper"], u: "1f5de-fe0f" },
    { n: ["bookmark tabs"], u: "1f4d1" },
    { n: ["bookmark"], u: "1f516" },
    { n: ["label"], u: "1f3f7-fe0f" },
    { n: ["moneybag", "money bag"], u: "1f4b0" },
    { n: ["coin"], u: "1fa99" },
    { n: ["yen", "banknote with yen sign"], u: "1f4b4" },
    { n: ["dollar", "banknote with dollar sign"], u: "1f4b5" },
    { n: ["euro", "banknote with euro sign"], u: "1f4b6" },
    { n: ["pound", "banknote with pound sign"], u: "1f4b7" },
    { n: ["money with wings"], u: "1f4b8" },
    { n: ["credit card"], u: "1f4b3" },
    { n: ["receipt"], u: "1f9fe" },
    { n: ["chart", "chart with upwards trend and yen sign"], u: "1f4b9" },
    { n: ["email", "envelope"], u: "2709-fe0f" },
    { n: ["e-mail", "e-mail symbol"], u: "1f4e7" },
    { n: ["incoming envelope"], u: "1f4e8" },
    {
      n: ["envelope with arrow", "envelope with downwards arrow above"],
      u: "1f4e9"
    },
    { n: ["outbox tray"], u: "1f4e4" },
    { n: ["inbox tray"], u: "1f4e5" },
    { n: ["package"], u: "1f4e6" },
    { n: ["mailbox", "closed mailbox with raised flag"], u: "1f4eb" },
    { n: ["mailbox closed", "closed mailbox with lowered flag"], u: "1f4ea" },
    { n: ["mailbox with mail", "open mailbox with raised flag"], u: "1f4ec" },
    {
      n: ["mailbox with no mail", "open mailbox with lowered flag"],
      u: "1f4ed"
    },
    { n: ["postbox"], u: "1f4ee" },
    { n: ["ballot box with ballot"], u: "1f5f3-fe0f" },
    { n: ["pencil", "pencil2"], u: "270f-fe0f" },
    { n: ["black nib"], u: "2712-fe0f" },
    { n: ["fountain pen", "lower left fountain pen"], u: "1f58b-fe0f" },
    { n: ["pen", "lower left ballpoint pen"], u: "1f58a-fe0f" },
    { n: ["paintbrush", "lower left paintbrush"], u: "1f58c-fe0f" },
    { n: ["crayon", "lower left crayon"], u: "1f58d-fe0f" },
    { n: ["memo", "pencil"], u: "1f4dd" },
    { n: ["briefcase"], u: "1f4bc" },
    { n: ["file folder"], u: "1f4c1" },
    { n: ["open file folder"], u: "1f4c2" },
    { n: ["card index dividers"], u: "1f5c2-fe0f" },
    { n: ["date", "calendar"], u: "1f4c5" },
    { n: ["calendar", "tear-off calendar"], u: "1f4c6" },
    { n: ["spiral notepad", "spiral note pad"], u: "1f5d2-fe0f" },
    { n: ["spiral calendar", "spiral calendar pad"], u: "1f5d3-fe0f" },
    { n: ["card index"], u: "1f4c7" },
    { n: ["chart with upwards trend"], u: "1f4c8" },
    { n: ["chart with downwards trend"], u: "1f4c9" },
    { n: ["bar chart"], u: "1f4ca" },
    { n: ["clipboard"], u: "1f4cb" },
    { n: ["pushpin"], u: "1f4cc" },
    { n: ["round pushpin"], u: "1f4cd" },
    { n: ["paperclip"], u: "1f4ce" },
    { n: ["linked paperclips"], u: "1f587-fe0f" },
    { n: ["straight ruler"], u: "1f4cf" },
    { n: ["triangular ruler"], u: "1f4d0" },
    { n: ["scissors", "black scissors"], u: "2702-fe0f" },
    { n: ["card file box"], u: "1f5c3-fe0f" },
    { n: ["file cabinet"], u: "1f5c4-fe0f" },
    { n: ["wastebasket"], u: "1f5d1-fe0f" },
    { n: ["lock"], u: "1f512" },
    { n: ["unlock", "open lock"], u: "1f513" },
    { n: ["lock with ink pen"], u: "1f50f" },
    { n: ["closed lock with key"], u: "1f510" },
    { n: ["key"], u: "1f511" },
    { n: ["old key"], u: "1f5dd-fe0f" },
    { n: ["hammer"], u: "1f528" },
    { n: ["axe"], u: "1fa93" },
    { n: ["pick"], u: "26cf-fe0f" },
    { n: ["hammer and pick"], u: "2692-fe0f" },
    { n: ["hammer and wrench"], u: "1f6e0-fe0f" },
    { n: ["dagger", "dagger knife"], u: "1f5e1-fe0f" },
    { n: ["crossed swords"], u: "2694-fe0f" },
    { n: ["gun", "pistol"], u: "1f52b" },
    { n: ["boomerang"], u: "1fa83" },
    { n: ["bow and arrow"], u: "1f3f9" },
    { n: ["shield"], u: "1f6e1-fe0f" },
    { n: ["carpentry saw"], u: "1fa9a" },
    { n: ["wrench"], u: "1f527" },
    { n: ["screwdriver"], u: "1fa9b" },
    { n: ["nut and bolt"], u: "1f529" },
    { n: ["gear"], u: "2699-fe0f" },
    { n: ["clamp", "compression"], u: "1f5dc-fe0f" },
    { n: ["scales", "balance scale"], u: "2696-fe0f" },
    { n: ["probing cane"], u: "1f9af" },
    { n: ["link", "link symbol"], u: "1f517" },
    { n: ["chains"], u: "26d3-fe0f" },
    { n: ["hook"], u: "1fa9d" },
    { n: ["toolbox"], u: "1f9f0" },
    { n: ["magnet"], u: "1f9f2" },
    { n: ["ladder"], u: "1fa9c" },
    { n: ["alembic"], u: "2697-fe0f" },
    { n: ["test tube"], u: "1f9ea" },
    { n: ["petri dish"], u: "1f9eb" },
    { n: ["dna", "dna double helix"], u: "1f9ec" },
    { n: ["microscope"], u: "1f52c" },
    { n: ["telescope"], u: "1f52d" },
    { n: ["satellite antenna"], u: "1f4e1" },
    { n: ["syringe"], u: "1f489" },
    { n: ["drop of blood"], u: "1fa78" },
    { n: ["pill"], u: "1f48a" },
    { n: ["adhesive bandage"], u: "1fa79" },
    { n: ["crutch"], u: "1fa7c" },
    { n: ["stethoscope"], u: "1fa7a" },
    { n: ["x-ray"], u: "1fa7b" },
    { n: ["door"], u: "1f6aa" },
    { n: ["elevator"], u: "1f6d7" },
    { n: ["mirror"], u: "1fa9e" },
    { n: ["window"], u: "1fa9f" },
    { n: ["bed"], u: "1f6cf-fe0f" },
    { n: ["couch and lamp"], u: "1f6cb-fe0f" },
    { n: ["chair"], u: "1fa91" },
    { n: ["toilet"], u: "1f6bd" },
    { n: ["plunger"], u: "1faa0" },
    { n: ["shower"], u: "1f6bf" },
    { n: ["bathtub"], u: "1f6c1" },
    { n: ["mouse trap"], u: "1faa4" },
    { n: ["razor"], u: "1fa92" },
    { n: ["lotion bottle"], u: "1f9f4" },
    { n: ["safety pin"], u: "1f9f7" },
    { n: ["broom"], u: "1f9f9" },
    { n: ["basket"], u: "1f9fa" },
    { n: ["roll of paper"], u: "1f9fb" },
    { n: ["bucket"], u: "1faa3" },
    { n: ["soap", "bar of soap"], u: "1f9fc" },
    { n: ["bubbles"], u: "1fae7" },
    { n: ["toothbrush"], u: "1faa5" },
    { n: ["sponge"], u: "1f9fd" },
    { n: ["fire extinguisher"], u: "1f9ef" },
    { n: ["shopping trolley"], u: "1f6d2" },
    { n: ["smoking", "smoking symbol"], u: "1f6ac" },
    { n: ["coffin"], u: "26b0-fe0f" },
    { n: ["headstone"], u: "1faa6" },
    { n: ["funeral urn"], u: "26b1-fe0f" },
    { n: ["moyai"], u: "1f5ff" },
    { n: ["placard"], u: "1faa7" },
    { n: ["identification card"], u: "1faaa" }
  ],
  symbols: [
    { n: ["atm", "automated teller machine"], u: "1f3e7" },
    {
      n: ["put litter in its place", "put litter in its place symbol"],
      u: "1f6ae"
    },
    { n: ["potable water", "potable water symbol"], u: "1f6b0" },
    { n: ["wheelchair", "wheelchair symbol"], u: "267f" },
    { n: ["mens", "mens symbol"], u: "1f6b9" },
    { n: ["womens", "womens symbol"], u: "1f6ba" },
    { n: ["restroom"], u: "1f6bb" },
    { n: ["baby symbol"], u: "1f6bc" },
    { n: ["wc", "water closet"], u: "1f6be" },
    { n: ["passport control"], u: "1f6c2" },
    { n: ["customs"], u: "1f6c3" },
    { n: ["baggage claim"], u: "1f6c4" },
    { n: ["left luggage"], u: "1f6c5" },
    { n: ["warning", "warning sign"], u: "26a0-fe0f" },
    { n: ["children crossing"], u: "1f6b8" },
    { n: ["no entry"], u: "26d4" },
    { n: ["no entry sign"], u: "1f6ab" },
    { n: ["no bicycles"], u: "1f6b3" },
    { n: ["no smoking", "no smoking symbol"], u: "1f6ad" },
    { n: ["do not litter", "do not litter symbol"], u: "1f6af" },
    { n: ["non-potable water", "non-potable water symbol"], u: "1f6b1" },
    { n: ["no pedestrians"], u: "1f6b7" },
    { n: ["no mobile phones"], u: "1f4f5" },
    { n: ["underage", "no one under eighteen symbol"], u: "1f51e" },
    { n: ["radioactive", "radioactive sign"], u: "2622-fe0f" },
    { n: ["biohazard", "biohazard sign"], u: "2623-fe0f" },
    { n: ["arrow up", "upwards black arrow"], u: "2b06-fe0f" },
    { n: ["north east arrow", "arrow upper right"], u: "2197-fe0f" },
    { n: ["arrow right", "black rightwards arrow"], u: "27a1-fe0f" },
    { n: ["south east arrow", "arrow lower right"], u: "2198-fe0f" },
    { n: ["arrow down", "downwards black arrow"], u: "2b07-fe0f" },
    { n: ["south west arrow", "arrow lower left"], u: "2199-fe0f" },
    { n: ["arrow left", "leftwards black arrow"], u: "2b05-fe0f" },
    { n: ["north west arrow", "arrow upper left"], u: "2196-fe0f" },
    { n: ["up down arrow", "arrow up down"], u: "2195-fe0f" },
    { n: ["left right arrow"], u: "2194-fe0f" },
    { n: ["leftwards arrow with hook"], u: "21a9-fe0f" },
    { n: ["arrow right hook", "rightwards arrow with hook"], u: "21aa-fe0f" },
    {
      n: ["arrow heading up", "arrow pointing rightwards then curving upwards"],
      u: "2934-fe0f"
    },
    {
      n: [
        "arrow heading down",
        "arrow pointing rightwards then curving downwards"
      ],
      u: "2935-fe0f"
    },
    {
      n: [
        "arrows clockwise",
        "clockwise downwards and upwards open circle arrows"
      ],
      u: "1f503"
    },
    {
      n: [
        "arrows counterclockwise",
        "anticlockwise downwards and upwards open circle arrows"
      ],
      u: "1f504"
    },
    { n: ["back", "back with leftwards arrow above"], u: "1f519" },
    { n: ["end", "end with leftwards arrow above"], u: "1f51a" },
    {
      n: ["on", "on with exclamation mark with left right arrow above"],
      u: "1f51b"
    },
    { n: ["soon", "soon with rightwards arrow above"], u: "1f51c" },
    { n: ["top", "top with upwards arrow above"], u: "1f51d" },
    { n: ["place of worship"], u: "1f6d0" },
    { n: ["atom symbol"], u: "269b-fe0f" },
    { n: ["om", "om symbol"], u: "1f549-fe0f" },
    { n: ["star of david"], u: "2721-fe0f" },
    { n: ["wheel of dharma"], u: "2638-fe0f" },
    { n: ["yin yang"], u: "262f-fe0f" },
    { n: ["latin cross"], u: "271d-fe0f" },
    { n: ["orthodox cross"], u: "2626-fe0f" },
    { n: ["star and crescent"], u: "262a-fe0f" },
    { n: ["peace symbol"], u: "262e-fe0f" },
    { n: ["menorah with nine branches"], u: "1f54e" },
    { n: ["six pointed star", "six pointed star with middle dot"], u: "1f52f" },
    { n: ["aries"], u: "2648" },
    { n: ["taurus"], u: "2649" },
    { n: ["gemini"], u: "264a" },
    { n: ["cancer"], u: "264b" },
    { n: ["leo"], u: "264c" },
    { n: ["virgo"], u: "264d" },
    { n: ["libra"], u: "264e" },
    { n: ["scorpius"], u: "264f" },
    { n: ["sagittarius"], u: "2650" },
    { n: ["capricorn"], u: "2651" },
    { n: ["aquarius"], u: "2652" },
    { n: ["pisces"], u: "2653" },
    { n: ["ophiuchus"], u: "26ce" },
    { n: ["twisted rightwards arrows"], u: "1f500" },
    {
      n: ["repeat", "clockwise rightwards and leftwards open circle arrows"],
      u: "1f501"
    },
    {
      n: [
        "repeat one",
        "clockwise rightwards and leftwards open circle arrows with circled one overlay"
      ],
      u: "1f502"
    },
    { n: ["arrow forward", "black right-pointing triangle"], u: "25b6-fe0f" },
    { n: ["fast forward", "black right-pointing double triangle"], u: "23e9" },
    {
      n: [
        "next track button",
        "black right pointing double triangle with vertical bar"
      ],
      u: "23ed-fe0f"
    },
    {
      n: [
        "play or pause button",
        "black right pointing triangle with double vertical bar"
      ],
      u: "23ef-fe0f"
    },
    { n: ["arrow backward", "black left-pointing triangle"], u: "25c0-fe0f" },
    { n: ["rewind", "black left-pointing double triangle"], u: "23ea" },
    {
      n: [
        "last track button",
        "black left pointing double triangle with vertical bar"
      ],
      u: "23ee-fe0f"
    },
    { n: ["arrow up small", "up-pointing small red triangle"], u: "1f53c" },
    { n: ["arrow double up", "black up-pointing double triangle"], u: "23eb" },
    { n: ["arrow down small", "down-pointing small red triangle"], u: "1f53d" },
    {
      n: ["arrow double down", "black down-pointing double triangle"],
      u: "23ec"
    },
    { n: ["pause button", "double vertical bar"], u: "23f8-fe0f" },
    { n: ["stop button", "black square for stop"], u: "23f9-fe0f" },
    { n: ["record button", "black circle for record"], u: "23fa-fe0f" },
    { n: ["eject", "eject button"], u: "23cf-fe0f" },
    { n: ["cinema"], u: "1f3a6" },
    { n: ["low brightness", "low brightness symbol"], u: "1f505" },
    { n: ["high brightness", "high brightness symbol"], u: "1f506" },
    { n: ["signal strength", "antenna with bars"], u: "1f4f6" },
    { n: ["vibration mode"], u: "1f4f3" },
    { n: ["mobile phone off"], u: "1f4f4" },
    { n: ["female sign"], u: "2640-fe0f" },
    { n: ["male sign"], u: "2642-fe0f" },
    { n: ["transgender symbol"], u: "26a7-fe0f" },
    { n: ["heavy multiplication x"], u: "2716-fe0f" },
    { n: ["heavy plus sign"], u: "2795" },
    { n: ["heavy minus sign"], u: "2796" },
    { n: ["heavy division sign"], u: "2797" },
    { n: ["heavy equals sign"], u: "1f7f0" },
    { n: ["infinity"], u: "267e-fe0f" },
    { n: ["bangbang", "double exclamation mark"], u: "203c-fe0f" },
    { n: ["interrobang", "exclamation question mark"], u: "2049-fe0f" },
    { n: ["question", "black question mark ornament"], u: "2753" },
    { n: ["grey question", "white question mark ornament"], u: "2754" },
    { n: ["grey exclamation", "white exclamation mark ornament"], u: "2755" },
    {
      n: [
        "exclamation",
        "heavy exclamation mark",
        "heavy exclamation mark symbol"
      ],
      u: "2757"
    },
    { n: ["wavy dash"], u: "3030-fe0f" },
    { n: ["currency exchange"], u: "1f4b1" },
    { n: ["heavy dollar sign"], u: "1f4b2" },
    { n: ["medical symbol", "staff of aesculapius"], u: "2695-fe0f" },
    { n: ["recycle", "black universal recycling symbol"], u: "267b-fe0f" },
    { n: ["fleur-de-lis", "fleur de lis"], u: "269c-fe0f" },
    { n: ["trident", "trident emblem"], u: "1f531" },
    { n: ["name badge"], u: "1f4db" },
    { n: ["beginner", "japanese symbol for beginner"], u: "1f530" },
    { n: ["o", "heavy large circle"], u: "2b55" },
    { n: ["white check mark", "white heavy check mark"], u: "2705" },
    { n: ["ballot box with check"], u: "2611-fe0f" },
    { n: ["heavy check mark"], u: "2714-fe0f" },
    { n: ["x", "cross mark"], u: "274c" },
    { n: ["negative squared cross mark"], u: "274e" },
    { n: ["curly loop"], u: "27b0" },
    { n: ["loop", "double curly loop"], u: "27bf" },
    { n: ["part alternation mark"], u: "303d-fe0f" },
    { n: ["eight spoked asterisk"], u: "2733-fe0f" },
    { n: ["eight pointed black star"], u: "2734-fe0f" },
    { n: ["sparkle"], u: "2747-fe0f" },
    { n: ["copyright", "copyright sign"], u: "00a9-fe0f" },
    { n: ["registered", "registered sign"], u: "00ae-fe0f" },
    { n: ["tm", "trade mark sign"], u: "2122-fe0f" },
    { n: ["hash", "hash key"], u: "0023-fe0f-20e3" },
    { n: ["keycap: *", "keycap star"], u: "002a-fe0f-20e3" },
    { n: ["zero", "keycap 0"], u: "0030-fe0f-20e3" },
    { n: ["one", "keycap 1"], u: "0031-fe0f-20e3" },
    { n: ["two", "keycap 2"], u: "0032-fe0f-20e3" },
    { n: ["three", "keycap 3"], u: "0033-fe0f-20e3" },
    { n: ["four", "keycap 4"], u: "0034-fe0f-20e3" },
    { n: ["five", "keycap 5"], u: "0035-fe0f-20e3" },
    { n: ["six", "keycap 6"], u: "0036-fe0f-20e3" },
    { n: ["seven", "keycap 7"], u: "0037-fe0f-20e3" },
    { n: ["eight", "keycap 8"], u: "0038-fe0f-20e3" },
    { n: ["nine", "keycap 9"], u: "0039-fe0f-20e3" },
    { n: ["keycap ten"], u: "1f51f" },
    {
      n: ["capital abcd", "input symbol for latin capital letters"],
      u: "1f520"
    },
    { n: ["abcd", "input symbol for latin small letters"], u: "1f521" },
    { n: ["1234", "input symbol for numbers"], u: "1f522" },
    { n: ["symbols", "input symbol for symbols"], u: "1f523" },
    { n: ["abc", "input symbol for latin letters"], u: "1f524" },
    { n: ["a", "negative squared latin capital letter a"], u: "1f170-fe0f" },
    { n: ["ab", "negative squared ab"], u: "1f18e" },
    { n: ["b", "negative squared latin capital letter b"], u: "1f171-fe0f" },
    { n: ["cl", "squared cl"], u: "1f191" },
    { n: ["cool", "squared cool"], u: "1f192" },
    { n: ["free", "squared free"], u: "1f193" },
    { n: ["information source"], u: "2139-fe0f" },
    { n: ["id", "squared id"], u: "1f194" },
    { n: ["m", "circled latin capital letter m"], u: "24c2-fe0f" },
    { n: ["new", "squared new"], u: "1f195" },
    { n: ["ng", "squared ng"], u: "1f196" },
    { n: ["o2", "negative squared latin capital letter o"], u: "1f17e-fe0f" },
    { n: ["ok", "squared ok"], u: "1f197" },
    {
      n: ["parking", "negative squared latin capital letter p"],
      u: "1f17f-fe0f"
    },
    { n: ["sos", "squared sos"], u: "1f198" },
    { n: ["up", "squared up with exclamation mark"], u: "1f199" },
    { n: ["vs", "squared vs"], u: "1f19a" },
    { n: ["koko", "squared katakana koko"], u: "1f201" },
    { n: ["sa", "squared katakana sa"], u: "1f202-fe0f" },
    { n: ["u6708", "squared cjk unified ideograph-6708"], u: "1f237-fe0f" },
    { n: ["u6709", "squared cjk unified ideograph-6709"], u: "1f236" },
    { n: ["u6307", "squared cjk unified ideograph-6307"], u: "1f22f" },
    { n: ["ideograph advantage", "circled ideograph advantage"], u: "1f250" },
    { n: ["u5272", "squared cjk unified ideograph-5272"], u: "1f239" },
    { n: ["u7121", "squared cjk unified ideograph-7121"], u: "1f21a" },
    { n: ["u7981", "squared cjk unified ideograph-7981"], u: "1f232" },
    { n: ["accept", "circled ideograph accept"], u: "1f251" },
    { n: ["u7533", "squared cjk unified ideograph-7533"], u: "1f238" },
    { n: ["u5408", "squared cjk unified ideograph-5408"], u: "1f234" },
    { n: ["u7a7a", "squared cjk unified ideograph-7a7a"], u: "1f233" },
    {
      n: ["congratulations", "circled ideograph congratulation"],
      u: "3297-fe0f"
    },
    { n: ["secret", "circled ideograph secret"], u: "3299-fe0f" },
    { n: ["u55b6", "squared cjk unified ideograph-55b6"], u: "1f23a" },
    { n: ["u6e80", "squared cjk unified ideograph-6e80"], u: "1f235" },
    { n: ["red circle", "large red circle"], u: "1f534" },
    { n: ["large orange circle"], u: "1f7e0" },
    { n: ["large yellow circle"], u: "1f7e1" },
    { n: ["large green circle"], u: "1f7e2" },
    { n: ["large blue circle"], u: "1f535" },
    { n: ["large purple circle"], u: "1f7e3" },
    { n: ["large brown circle"], u: "1f7e4" },
    { n: ["black circle", "medium black circle"], u: "26ab" },
    { n: ["white circle", "medium white circle"], u: "26aa" },
    { n: ["large red square"], u: "1f7e5" },
    { n: ["large orange square"], u: "1f7e7" },
    { n: ["large yellow square"], u: "1f7e8" },
    { n: ["large green square"], u: "1f7e9" },
    { n: ["large blue square"], u: "1f7e6" },
    { n: ["large purple square"], u: "1f7ea" },
    { n: ["large brown square"], u: "1f7eb" },
    { n: ["black large square"], u: "2b1b" },
    { n: ["white large square"], u: "2b1c" },
    { n: ["black medium square"], u: "25fc-fe0f" },
    { n: ["white medium square"], u: "25fb-fe0f" },
    { n: ["black medium small square"], u: "25fe" },
    { n: ["white medium small square"], u: "25fd" },
    { n: ["black small square"], u: "25aa-fe0f" },
    { n: ["white small square"], u: "25ab-fe0f" },
    { n: ["large orange diamond"], u: "1f536" },
    { n: ["large blue diamond"], u: "1f537" },
    { n: ["small orange diamond"], u: "1f538" },
    { n: ["small blue diamond"], u: "1f539" },
    { n: ["small red triangle", "up-pointing red triangle"], u: "1f53a" },
    {
      n: ["small red triangle down", "down-pointing red triangle"],
      u: "1f53b"
    },
    { n: ["diamond shape with a dot inside"], u: "1f4a0" },
    { n: ["radio button"], u: "1f518" },
    { n: ["white square button"], u: "1f533" },
    { n: ["black square button"], u: "1f532" }
  ],
  flags: [
    { n: ["chequered flag", "checkered flag"], u: "1f3c1" },
    { n: ["triangular flag on post"], u: "1f6a9" },
    { n: ["crossed flags"], u: "1f38c" },
    { n: ["waving black flag"], u: "1f3f4" },
    { n: ["white flag", "waving white flag"], u: "1f3f3-fe0f" },
    { n: ["rainbow flag", "rainbow-flag"], u: "1f3f3-fe0f-200d-1f308" },
    { n: ["transgender flag"], u: "1f3f3-fe0f-200d-26a7-fe0f" },
    { n: ["pirate flag"], u: "1f3f4-200d-2620-fe0f" },
    { n: ["flag-ac", "ascension island flag"], u: "1f1e6-1f1e8" },
    { n: ["flag-ad", "andorra flag"], u: "1f1e6-1f1e9" },
    { n: ["flag-ae", "united arab emirates flag"], u: "1f1e6-1f1ea" },
    { n: ["flag-af", "afghanistan flag"], u: "1f1e6-1f1eb" },
    { n: ["flag-ag", "antigua & barbuda flag"], u: "1f1e6-1f1ec" },
    { n: ["flag-ai", "anguilla flag"], u: "1f1e6-1f1ee" },
    { n: ["flag-al", "albania flag"], u: "1f1e6-1f1f1" },
    { n: ["flag-am", "armenia flag"], u: "1f1e6-1f1f2" },
    { n: ["flag-ao", "angola flag"], u: "1f1e6-1f1f4" },
    { n: ["flag-aq", "antarctica flag"], u: "1f1e6-1f1f6" },
    { n: ["flag-ar", "argentina flag"], u: "1f1e6-1f1f7" },
    { n: ["flag-as", "american samoa flag"], u: "1f1e6-1f1f8" },
    { n: ["flag-at", "austria flag"], u: "1f1e6-1f1f9" },
    { n: ["flag-au", "australia flag"], u: "1f1e6-1f1fa" },
    { n: ["flag-aw", "aruba flag"], u: "1f1e6-1f1fc" },
    { n: ["flag-ax", "\xE5land islands flag"], u: "1f1e6-1f1fd" },
    { n: ["flag-az", "azerbaijan flag"], u: "1f1e6-1f1ff" },
    { n: ["flag-ba", "bosnia & herzegovina flag"], u: "1f1e7-1f1e6" },
    { n: ["flag-bb", "barbados flag"], u: "1f1e7-1f1e7" },
    { n: ["flag-bd", "bangladesh flag"], u: "1f1e7-1f1e9" },
    { n: ["flag-be", "belgium flag"], u: "1f1e7-1f1ea" },
    { n: ["flag-bf", "burkina faso flag"], u: "1f1e7-1f1eb" },
    { n: ["flag-bg", "bulgaria flag"], u: "1f1e7-1f1ec" },
    { n: ["flag-bh", "bahrain flag"], u: "1f1e7-1f1ed" },
    { n: ["flag-bi", "burundi flag"], u: "1f1e7-1f1ee" },
    { n: ["flag-bj", "benin flag"], u: "1f1e7-1f1ef" },
    { n: ["flag-bl", "st. barth\xE9lemy flag"], u: "1f1e7-1f1f1" },
    { n: ["flag-bm", "bermuda flag"], u: "1f1e7-1f1f2" },
    { n: ["flag-bn", "brunei flag"], u: "1f1e7-1f1f3" },
    { n: ["flag-bo", "bolivia flag"], u: "1f1e7-1f1f4" },
    { n: ["flag-bq", "caribbean netherlands flag"], u: "1f1e7-1f1f6" },
    { n: ["flag-br", "brazil flag"], u: "1f1e7-1f1f7" },
    { n: ["flag-bs", "bahamas flag"], u: "1f1e7-1f1f8" },
    { n: ["flag-bt", "bhutan flag"], u: "1f1e7-1f1f9" },
    { n: ["flag-bv", "bouvet island flag"], u: "1f1e7-1f1fb" },
    { n: ["flag-bw", "botswana flag"], u: "1f1e7-1f1fc" },
    { n: ["flag-by", "belarus flag"], u: "1f1e7-1f1fe" },
    { n: ["flag-bz", "belize flag"], u: "1f1e7-1f1ff" },
    { n: ["flag-ca", "canada flag"], u: "1f1e8-1f1e6" },
    { n: ["flag-cc", "cocos (keeling) islands flag"], u: "1f1e8-1f1e8" },
    { n: ["flag-cd", "congo - kinshasa flag"], u: "1f1e8-1f1e9" },
    { n: ["flag-cf", "central african republic flag"], u: "1f1e8-1f1eb" },
    { n: ["flag-cg", "congo - brazzaville flag"], u: "1f1e8-1f1ec" },
    { n: ["flag-ch", "switzerland flag"], u: "1f1e8-1f1ed" },
    { n: ["flag-ci", "c\xF4te d\u2019ivoire flag"], u: "1f1e8-1f1ee" },
    { n: ["flag-ck", "cook islands flag"], u: "1f1e8-1f1f0" },
    { n: ["flag-cl", "chile flag"], u: "1f1e8-1f1f1" },
    { n: ["flag-cm", "cameroon flag"], u: "1f1e8-1f1f2" },
    { n: ["cn", "flag-cn", "china flag"], u: "1f1e8-1f1f3" },
    { n: ["flag-co", "colombia flag"], u: "1f1e8-1f1f4" },
    { n: ["flag-cp", "clipperton island flag"], u: "1f1e8-1f1f5" },
    { n: ["flag-cr", "costa rica flag"], u: "1f1e8-1f1f7" },
    { n: ["flag-cu", "cuba flag"], u: "1f1e8-1f1fa" },
    { n: ["flag-cv", "cape verde flag"], u: "1f1e8-1f1fb" },
    { n: ["flag-cw", "cura\xE7ao flag"], u: "1f1e8-1f1fc" },
    { n: ["flag-cx", "christmas island flag"], u: "1f1e8-1f1fd" },
    { n: ["flag-cy", "cyprus flag"], u: "1f1e8-1f1fe" },
    { n: ["flag-cz", "czechia flag"], u: "1f1e8-1f1ff" },
    { n: ["de", "flag-de", "germany flag"], u: "1f1e9-1f1ea" },
    { n: ["flag-dg", "diego garcia flag"], u: "1f1e9-1f1ec" },
    { n: ["flag-dj", "djibouti flag"], u: "1f1e9-1f1ef" },
    { n: ["flag-dk", "denmark flag"], u: "1f1e9-1f1f0" },
    { n: ["flag-dm", "dominica flag"], u: "1f1e9-1f1f2" },
    { n: ["flag-do", "dominican republic flag"], u: "1f1e9-1f1f4" },
    { n: ["flag-dz", "algeria flag"], u: "1f1e9-1f1ff" },
    { n: ["flag-ea", "ceuta & melilla flag"], u: "1f1ea-1f1e6" },
    { n: ["flag-ec", "ecuador flag"], u: "1f1ea-1f1e8" },
    { n: ["flag-ee", "estonia flag"], u: "1f1ea-1f1ea" },
    { n: ["flag-eg", "egypt flag"], u: "1f1ea-1f1ec" },
    { n: ["flag-eh", "western sahara flag"], u: "1f1ea-1f1ed" },
    { n: ["flag-er", "eritrea flag"], u: "1f1ea-1f1f7" },
    { n: ["es", "flag-es", "spain flag"], u: "1f1ea-1f1f8" },
    { n: ["flag-et", "ethiopia flag"], u: "1f1ea-1f1f9" },
    { n: ["flag-eu", "european union flag"], u: "1f1ea-1f1fa" },
    { n: ["flag-fi", "finland flag"], u: "1f1eb-1f1ee" },
    { n: ["flag-fj", "fiji flag"], u: "1f1eb-1f1ef" },
    { n: ["flag-fk", "falkland islands flag"], u: "1f1eb-1f1f0" },
    { n: ["flag-fm", "micronesia flag"], u: "1f1eb-1f1f2" },
    { n: ["flag-fo", "faroe islands flag"], u: "1f1eb-1f1f4" },
    { n: ["fr", "flag-fr", "france flag"], u: "1f1eb-1f1f7" },
    { n: ["flag-ga", "gabon flag"], u: "1f1ec-1f1e6" },
    { n: ["gb", "uk", "flag-gb", "united kingdom flag"], u: "1f1ec-1f1e7" },
    { n: ["flag-gd", "grenada flag"], u: "1f1ec-1f1e9" },
    { n: ["flag-ge", "georgia flag"], u: "1f1ec-1f1ea" },
    { n: ["flag-gf", "french guiana flag"], u: "1f1ec-1f1eb" },
    { n: ["flag-gg", "guernsey flag"], u: "1f1ec-1f1ec" },
    { n: ["flag-gh", "ghana flag"], u: "1f1ec-1f1ed" },
    { n: ["flag-gi", "gibraltar flag"], u: "1f1ec-1f1ee" },
    { n: ["flag-gl", "greenland flag"], u: "1f1ec-1f1f1" },
    { n: ["flag-gm", "gambia flag"], u: "1f1ec-1f1f2" },
    { n: ["flag-gn", "guinea flag"], u: "1f1ec-1f1f3" },
    { n: ["flag-gp", "guadeloupe flag"], u: "1f1ec-1f1f5" },
    { n: ["flag-gq", "equatorial guinea flag"], u: "1f1ec-1f1f6" },
    { n: ["flag-gr", "greece flag"], u: "1f1ec-1f1f7" },
    {
      n: ["flag-gs", "south georgia & south sandwich islands flag"],
      u: "1f1ec-1f1f8"
    },
    { n: ["flag-gt", "guatemala flag"], u: "1f1ec-1f1f9" },
    { n: ["flag-gu", "guam flag"], u: "1f1ec-1f1fa" },
    { n: ["flag-gw", "guinea-bissau flag"], u: "1f1ec-1f1fc" },
    { n: ["flag-gy", "guyana flag"], u: "1f1ec-1f1fe" },
    { n: ["flag-hk", "hong kong sar china flag"], u: "1f1ed-1f1f0" },
    { n: ["flag-hm", "heard & mcdonald islands flag"], u: "1f1ed-1f1f2" },
    { n: ["flag-hn", "honduras flag"], u: "1f1ed-1f1f3" },
    { n: ["flag-hr", "croatia flag"], u: "1f1ed-1f1f7" },
    { n: ["flag-ht", "haiti flag"], u: "1f1ed-1f1f9" },
    { n: ["flag-hu", "hungary flag"], u: "1f1ed-1f1fa" },
    { n: ["flag-ic", "canary islands flag"], u: "1f1ee-1f1e8" },
    { n: ["flag-id", "indonesia flag"], u: "1f1ee-1f1e9" },
    { n: ["flag-ie", "ireland flag"], u: "1f1ee-1f1ea" },
    { n: ["flag-il", "israel flag"], u: "1f1ee-1f1f1" },
    { n: ["flag-im", "isle of man flag"], u: "1f1ee-1f1f2" },
    { n: ["flag-in", "india flag"], u: "1f1ee-1f1f3" },
    { n: ["flag-io", "british indian ocean territory flag"], u: "1f1ee-1f1f4" },
    { n: ["flag-iq", "iraq flag"], u: "1f1ee-1f1f6" },
    { n: ["flag-ir", "iran flag"], u: "1f1ee-1f1f7" },
    { n: ["flag-is", "iceland flag"], u: "1f1ee-1f1f8" },
    { n: ["it", "flag-it", "italy flag"], u: "1f1ee-1f1f9" },
    { n: ["flag-je", "jersey flag"], u: "1f1ef-1f1ea" },
    { n: ["flag-jm", "jamaica flag"], u: "1f1ef-1f1f2" },
    { n: ["flag-jo", "jordan flag"], u: "1f1ef-1f1f4" },
    { n: ["jp", "flag-jp", "japan flag"], u: "1f1ef-1f1f5" },
    { n: ["flag-ke", "kenya flag"], u: "1f1f0-1f1ea" },
    { n: ["flag-kg", "kyrgyzstan flag"], u: "1f1f0-1f1ec" },
    { n: ["flag-kh", "cambodia flag"], u: "1f1f0-1f1ed" },
    { n: ["flag-ki", "kiribati flag"], u: "1f1f0-1f1ee" },
    { n: ["flag-km", "comoros flag"], u: "1f1f0-1f1f2" },
    { n: ["flag-kn", "st. kitts & nevis flag"], u: "1f1f0-1f1f3" },
    { n: ["flag-kp", "north korea flag"], u: "1f1f0-1f1f5" },
    { n: ["kr", "flag-kr", "south korea flag"], u: "1f1f0-1f1f7" },
    { n: ["flag-kw", "kuwait flag"], u: "1f1f0-1f1fc" },
    { n: ["flag-ky", "cayman islands flag"], u: "1f1f0-1f1fe" },
    { n: ["flag-kz", "kazakhstan flag"], u: "1f1f0-1f1ff" },
    { n: ["flag-la", "laos flag"], u: "1f1f1-1f1e6" },
    { n: ["flag-lb", "lebanon flag"], u: "1f1f1-1f1e7" },
    { n: ["flag-lc", "st. lucia flag"], u: "1f1f1-1f1e8" },
    { n: ["flag-li", "liechtenstein flag"], u: "1f1f1-1f1ee" },
    { n: ["flag-lk", "sri lanka flag"], u: "1f1f1-1f1f0" },
    { n: ["flag-lr", "liberia flag"], u: "1f1f1-1f1f7" },
    { n: ["flag-ls", "lesotho flag"], u: "1f1f1-1f1f8" },
    { n: ["flag-lt", "lithuania flag"], u: "1f1f1-1f1f9" },
    { n: ["flag-lu", "luxembourg flag"], u: "1f1f1-1f1fa" },
    { n: ["flag-lv", "latvia flag"], u: "1f1f1-1f1fb" },
    { n: ["flag-ly", "libya flag"], u: "1f1f1-1f1fe" },
    { n: ["flag-ma", "morocco flag"], u: "1f1f2-1f1e6" },
    { n: ["flag-mc", "monaco flag"], u: "1f1f2-1f1e8" },
    { n: ["flag-md", "moldova flag"], u: "1f1f2-1f1e9" },
    { n: ["flag-me", "montenegro flag"], u: "1f1f2-1f1ea" },
    { n: ["flag-mf", "st. martin flag"], u: "1f1f2-1f1eb" },
    { n: ["flag-mg", "madagascar flag"], u: "1f1f2-1f1ec" },
    { n: ["flag-mh", "marshall islands flag"], u: "1f1f2-1f1ed" },
    { n: ["flag-mk", "north macedonia flag"], u: "1f1f2-1f1f0" },
    { n: ["flag-ml", "mali flag"], u: "1f1f2-1f1f1" },
    { n: ["flag-mm", "myanmar (burma) flag"], u: "1f1f2-1f1f2" },
    { n: ["flag-mn", "mongolia flag"], u: "1f1f2-1f1f3" },
    { n: ["flag-mo", "macao sar china flag"], u: "1f1f2-1f1f4" },
    { n: ["flag-mp", "northern mariana islands flag"], u: "1f1f2-1f1f5" },
    { n: ["flag-mq", "martinique flag"], u: "1f1f2-1f1f6" },
    { n: ["flag-mr", "mauritania flag"], u: "1f1f2-1f1f7" },
    { n: ["flag-ms", "montserrat flag"], u: "1f1f2-1f1f8" },
    { n: ["flag-mt", "malta flag"], u: "1f1f2-1f1f9" },
    { n: ["flag-mu", "mauritius flag"], u: "1f1f2-1f1fa" },
    { n: ["flag-mv", "maldives flag"], u: "1f1f2-1f1fb" },
    { n: ["flag-mw", "malawi flag"], u: "1f1f2-1f1fc" },
    { n: ["flag-mx", "mexico flag"], u: "1f1f2-1f1fd" },
    { n: ["flag-my", "malaysia flag"], u: "1f1f2-1f1fe" },
    { n: ["flag-mz", "mozambique flag"], u: "1f1f2-1f1ff" },
    { n: ["flag-na", "namibia flag"], u: "1f1f3-1f1e6" },
    { n: ["flag-nc", "new caledonia flag"], u: "1f1f3-1f1e8" },
    { n: ["flag-ne", "niger flag"], u: "1f1f3-1f1ea" },
    { n: ["flag-nf", "norfolk island flag"], u: "1f1f3-1f1eb" },
    { n: ["flag-ng", "nigeria flag"], u: "1f1f3-1f1ec" },
    { n: ["flag-ni", "nicaragua flag"], u: "1f1f3-1f1ee" },
    { n: ["flag-nl", "netherlands flag"], u: "1f1f3-1f1f1" },
    { n: ["flag-no", "norway flag"], u: "1f1f3-1f1f4" },
    { n: ["flag-np", "nepal flag"], u: "1f1f3-1f1f5" },
    { n: ["flag-nr", "nauru flag"], u: "1f1f3-1f1f7" },
    { n: ["flag-nu", "niue flag"], u: "1f1f3-1f1fa" },
    { n: ["flag-nz", "new zealand flag"], u: "1f1f3-1f1ff" },
    { n: ["flag-om", "oman flag"], u: "1f1f4-1f1f2" },
    { n: ["flag-pa", "panama flag"], u: "1f1f5-1f1e6" },
    { n: ["flag-pe", "peru flag"], u: "1f1f5-1f1ea" },
    { n: ["flag-pf", "french polynesia flag"], u: "1f1f5-1f1eb" },
    { n: ["flag-pg", "papua new guinea flag"], u: "1f1f5-1f1ec" },
    { n: ["flag-ph", "philippines flag"], u: "1f1f5-1f1ed" },
    { n: ["flag-pk", "pakistan flag"], u: "1f1f5-1f1f0" },
    { n: ["flag-pl", "poland flag"], u: "1f1f5-1f1f1" },
    { n: ["flag-pm", "st. pierre & miquelon flag"], u: "1f1f5-1f1f2" },
    { n: ["flag-pn", "pitcairn islands flag"], u: "1f1f5-1f1f3" },
    { n: ["flag-pr", "puerto rico flag"], u: "1f1f5-1f1f7" },
    { n: ["flag-ps", "palestinian territories flag"], u: "1f1f5-1f1f8" },
    { n: ["flag-pt", "portugal flag"], u: "1f1f5-1f1f9" },
    { n: ["flag-pw", "palau flag"], u: "1f1f5-1f1fc" },
    { n: ["flag-py", "paraguay flag"], u: "1f1f5-1f1fe" },
    { n: ["flag-qa", "qatar flag"], u: "1f1f6-1f1e6" },
    { n: ["flag-re", "r\xE9union flag"], u: "1f1f7-1f1ea" },
    { n: ["flag-ro", "romania flag"], u: "1f1f7-1f1f4" },
    { n: ["flag-rs", "serbia flag"], u: "1f1f7-1f1f8" },
    { n: ["ru", "flag-ru", "russia flag"], u: "1f1f7-1f1fa" },
    { n: ["flag-rw", "rwanda flag"], u: "1f1f7-1f1fc" },
    { n: ["flag-sa", "saudi arabia flag"], u: "1f1f8-1f1e6" },
    { n: ["flag-sb", "solomon islands flag"], u: "1f1f8-1f1e7" },
    { n: ["flag-sc", "seychelles flag"], u: "1f1f8-1f1e8" },
    { n: ["flag-sd", "sudan flag"], u: "1f1f8-1f1e9" },
    { n: ["flag-se", "sweden flag"], u: "1f1f8-1f1ea" },
    { n: ["flag-sg", "singapore flag"], u: "1f1f8-1f1ec" },
    { n: ["flag-sh", "st. helena flag"], u: "1f1f8-1f1ed" },
    { n: ["flag-si", "slovenia flag"], u: "1f1f8-1f1ee" },
    { n: ["flag-sj", "svalbard & jan mayen flag"], u: "1f1f8-1f1ef" },
    { n: ["flag-sk", "slovakia flag"], u: "1f1f8-1f1f0" },
    { n: ["flag-sl", "sierra leone flag"], u: "1f1f8-1f1f1" },
    { n: ["flag-sm", "san marino flag"], u: "1f1f8-1f1f2" },
    { n: ["flag-sn", "senegal flag"], u: "1f1f8-1f1f3" },
    { n: ["flag-so", "somalia flag"], u: "1f1f8-1f1f4" },
    { n: ["flag-sr", "suriname flag"], u: "1f1f8-1f1f7" },
    { n: ["flag-ss", "south sudan flag"], u: "1f1f8-1f1f8" },
    { n: ["flag-st", "s\xE3o tom\xE9 & pr\xEDncipe flag"], u: "1f1f8-1f1f9" },
    { n: ["flag-sv", "el salvador flag"], u: "1f1f8-1f1fb" },
    { n: ["flag-sx", "sint maarten flag"], u: "1f1f8-1f1fd" },
    { n: ["flag-sy", "syria flag"], u: "1f1f8-1f1fe" },
    { n: ["flag-sz", "eswatini flag"], u: "1f1f8-1f1ff" },
    { n: ["flag-ta", "tristan da cunha flag"], u: "1f1f9-1f1e6" },
    { n: ["flag-tc", "turks & caicos islands flag"], u: "1f1f9-1f1e8" },
    { n: ["flag-td", "chad flag"], u: "1f1f9-1f1e9" },
    { n: ["flag-tf", "french southern territories flag"], u: "1f1f9-1f1eb" },
    { n: ["flag-tg", "togo flag"], u: "1f1f9-1f1ec" },
    { n: ["flag-th", "thailand flag"], u: "1f1f9-1f1ed" },
    { n: ["flag-tj", "tajikistan flag"], u: "1f1f9-1f1ef" },
    { n: ["flag-tk", "tokelau flag"], u: "1f1f9-1f1f0" },
    { n: ["flag-tl", "timor-leste flag"], u: "1f1f9-1f1f1" },
    { n: ["flag-tm", "turkmenistan flag"], u: "1f1f9-1f1f2" },
    { n: ["flag-tn", "tunisia flag"], u: "1f1f9-1f1f3" },
    { n: ["flag-to", "tonga flag"], u: "1f1f9-1f1f4" },
    { n: ["flag-tr", "turkey flag"], u: "1f1f9-1f1f7" },
    { n: ["flag-tt", "trinidad & tobago flag"], u: "1f1f9-1f1f9" },
    { n: ["flag-tv", "tuvalu flag"], u: "1f1f9-1f1fb" },
    { n: ["flag-tw", "taiwan flag"], u: "1f1f9-1f1fc" },
    { n: ["flag-tz", "tanzania flag"], u: "1f1f9-1f1ff" },
    { n: ["flag-ua", "ukraine flag"], u: "1f1fa-1f1e6" },
    { n: ["flag-ug", "uganda flag"], u: "1f1fa-1f1ec" },
    { n: ["flag-um", "u.s. outlying islands flag"], u: "1f1fa-1f1f2" },
    { n: ["flag-un", "united nations flag"], u: "1f1fa-1f1f3" },
    { n: ["us", "flag-us", "united states flag"], u: "1f1fa-1f1f8" },
    { n: ["flag-uy", "uruguay flag"], u: "1f1fa-1f1fe" },
    { n: ["flag-uz", "uzbekistan flag"], u: "1f1fa-1f1ff" },
    { n: ["flag-va", "vatican city flag"], u: "1f1fb-1f1e6" },
    { n: ["flag-vc", "st. vincent & grenadines flag"], u: "1f1fb-1f1e8" },
    { n: ["flag-ve", "venezuela flag"], u: "1f1fb-1f1ea" },
    { n: ["flag-vg", "british virgin islands flag"], u: "1f1fb-1f1ec" },
    { n: ["flag-vi", "u.s. virgin islands flag"], u: "1f1fb-1f1ee" },
    { n: ["flag-vn", "vietnam flag"], u: "1f1fb-1f1f3" },
    { n: ["flag-vu", "vanuatu flag"], u: "1f1fb-1f1fa" },
    { n: ["flag-wf", "wallis & futuna flag"], u: "1f1fc-1f1eb" },
    { n: ["flag-ws", "samoa flag"], u: "1f1fc-1f1f8" },
    { n: ["flag-xk", "kosovo flag"], u: "1f1fd-1f1f0" },
    { n: ["flag-ye", "yemen flag"], u: "1f1fe-1f1ea" },
    { n: ["flag-yt", "mayotte flag"], u: "1f1fe-1f1f9" },
    { n: ["flag-za", "south africa flag"], u: "1f1ff-1f1e6" },
    { n: ["flag-zm", "zambia flag"], u: "1f1ff-1f1f2" },
    { n: ["flag-zw", "zimbabwe flag"], u: "1f1ff-1f1fc" },
    {
      n: ["england flag", "flag-england"],
      u: "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f"
    },
    {
      n: ["scotland flag", "flag-scotland"],
      u: "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f"
    },
    {
      n: ["wales flag", "flag-wales"],
      u: "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f"
    }
  ]
};

// src/components/ui/modals/stickerModal.tsx
var import_obsidian7 = require("obsidian");

// src/utils/icons.ts
var import_obsidian6 = require("obsidian");
var iconForSpace = (spaceInfo, force) => {
  var _a2;
  if (!spaceInfo)
    return;
  return spaceInfo.uri.type == "folder" ? uiIconSet["mk-ui-folder"] : spaceInfo.uri.type == "tag" ? force ? uiIconSet["mk-ui-tags"] : "" : spaceInfo.uri.type == "vault" ? (_a2 = (0, import_obsidian6.getIcon)("vault")) == null ? void 0 : _a2.outerHTML : uiIconSet["mk-ui-spaces"];
};
var defaultIconForExtension = (type, solid) => {
  if (!type)
    return solid ? uiIconSet["mk-ui-folder-solid"] : uiIconSet["mk-ui-folder"];
  switch (type) {
    case "png":
    case "jpg":
    case "jpeg":
    case "svg":
      return uiIconSet["mk-make-image"];
      break;
    case "mov":
    case "webm":
      return uiIconSet["mk-ui-video"];
      break;
    case "canvas":
      return uiIconSet["mk-ui-canvas"];
    default:
      return solid ? uiIconSet["mk-ui-file-solid"] : uiIconSet["mk-ui-file"];
  }
};
var lucideIcon = (value) => {
  var _a2;
  return (_a2 = (0, import_obsidian6.getIcon)(value)) == null ? void 0 : _a2.outerHTML;
};
var uiIconSet = {
  "mk-ui-close": `<svg xmlns="http://www.w3.org/2000/svg" width='24px' height='24px' fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
    </svg>`,
  "mk-ui-flow-hover": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.7941 11.6917C11.4281 11.809 12.0857 11.7486 12.6856 11.5163C13.2858 11.2838 13.8068 10.8873 14.1773 10.3692C14.5483 9.85038 14.75 9.23465 14.75 8.6C14.75 7.96535 14.5483 7.34962 14.1773 6.83081C13.8068 6.31273 13.2858 5.91619 12.6856 5.68372C12.0857 5.45136 11.4281 5.39096 10.7941 5.50834C10.1599 5.62575 9.57072 5.91716 9.10335 6.35289C9.09233 6.36317 9.08162 6.37378 9.07124 6.3847L5.85862 9.76393C5.60897 9.99123 5.28818 10.1509 4.93287 10.2167C4.5702 10.2839 4.19486 10.2487 3.85619 10.1175C3.51778 9.98646 3.23669 9.76777 3.04283 9.49668C2.84949 9.22631 2.75 8.91434 2.75 8.6C2.75 8.28566 2.84949 7.97369 3.04283 7.70332C3.23669 7.43223 3.51778 7.21354 3.85619 7.08246C4.19486 6.95128 4.5702 6.91614 4.93287 6.98328C5.29024 7.04944 5.61268 7.21063 5.86295 7.44003L6.559 8.14747L7.62823 7.09545L6.91982 6.37545C6.91226 6.36777 6.90453 6.36025 6.89665 6.35289C6.42928 5.91716 5.8401 5.62575 5.20593 5.50834C4.57189 5.39096 3.91432 5.45136 3.31441 5.68372C2.71423 5.91619 2.19318 6.31273 1.8227 6.83081C1.4517 7.34962 1.25 7.96535 1.25 8.6C1.25 9.23465 1.4517 9.85038 1.8227 10.3692C2.19318 10.8873 2.71423 11.2838 3.31441 11.5163C3.91432 11.7486 4.57189 11.809 5.20593 11.6917C5.8401 11.5742 6.42928 11.2828 6.89665 10.8471C6.90767 10.8368 6.91838 10.8262 6.92876 10.8153L10.1414 7.43607C10.391 7.20877 10.7118 7.04906 11.0671 6.98328C11.4298 6.91614 11.8051 6.95128 12.1438 7.08246C12.4822 7.21354 12.7633 7.43223 12.9572 7.70332C13.1505 7.97369 13.25 8.28566 13.25 8.6C13.25 8.91434 13.1505 9.22631 12.9572 9.49668C12.7633 9.76777 12.4822 9.98646 12.1438 10.1175C11.8051 10.2487 11.4298 10.2839 11.0671 10.2167C10.7098 10.1506 10.3873 9.98938 10.1371 9.75998L9.441 9.05253L8.37177 10.1045L9.08018 10.8245C9.08774 10.8322 9.09547 10.8398 9.10335 10.8471C9.57072 11.2828 10.1599 11.5742 10.7941 11.6917Z" fill="currentColor"/>
    </svg>`,
  "mk-ui-folder": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z" />
  </svg>`,
  "mk-ui-open-link": `<svg width="16" height="16"  xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244" />
  </svg>`,
  "mk-ui-file": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
</svg>`,
  "mk-ui-expand": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9" />
</svg>`,
  "mk-ui-new-folder": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" ><path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"></path><line x1="12" y1="10" x2="12" y2="16"></line><line x1="9" y1="13" x2="15" y2="13"></line></svg>`,
  "mk-ui-new-note": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" ><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path></svg>`,
  "mk-ui-collapse": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
</svg>`,
  "mk-ui-options": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
</svg>`,
  "mk-ui-plus": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
</svg>`,
  "mk-ui-collapse-sm": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
<path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z" />
</svg>`,
  "mk-ui-search": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
</svg>
`,
  "mk-ui-view-options": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75" />
</svg>
`,
  "mk-ui-clear": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
</svg>
`,
  "mk-ui-new-file": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m3.75 9v6m3-3H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
</svg>
`,
  "mk-ui-blink": `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24">
  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 1v2.75m7.778.472-1.944 1.944M23 12h-2.75m-.472 7.778-1.944-1.944M12 20.25V23m-5.834-5.166-1.944 1.944M3.75 12H1m5.166-5.834L4.222 4.222"/>
  <circle cx="12" cy="12" r="2.25" stroke="currentColor" stroke-width="1.5"/>
  <circle cx="12" cy="12" r="5.25" stroke="currentColor" stroke-width="1.5"/>
</svg>
`,
  "mk-ui-spaces": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z" />
</svg>`,
  "mk-ui-home": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
</svg>`,
  "mk-ui-tags": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5" />
</svg>`,
  "mk-ui-handle": `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
<circle cx="9" cy="7" r="1"/>
<circle cx="9" cy="12" r="1"/>
<circle cx="9" cy="17" r="1"/>
<circle cx="14" cy="7" r="1"/>
<circle cx="14" cy="12" r="1"/>
<circle cx="14" cy="17" r="1"/>
</svg>
`,
  "mk-ui-new-space": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 16.875h3.375m0 0h3.375m-3.375 0V13.5m0 3.375v3.375M6 10.5h2.25a2.25 2.25 0 002.25-2.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v2.25A2.25 2.25 0 006 10.5zm0 9.75h2.25A2.25 2.25 0 0010.5 18v-2.25a2.25 2.25 0 00-2.25-2.25H6a2.25 2.25 0 00-2.25 2.25V18A2.25 2.25 0 006 20.25zm9.75-9.75H18a2.25 2.25 0 002.25-2.25V6A2.25 2.25 0 0018 3.75h-2.25A2.25 2.25 0 0013.5 6v2.25a2.25 2.25 0 002.25 2.25z" />
</svg>
`,
  "mk-ui-file-solid": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
<path d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625z" />
<path d="M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z" />
</svg>
`,
  "mk-ui-folder-solid": `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
<path d="M19.5 21a3 3 0 003-3v-4.5a3 3 0 00-3-3h-15a3 3 0 00-3 3V18a3 3 0 003 3h15zM1.5 10.146V6a3 3 0 013-3h5.379a2.25 2.25 0 011.59.659l2.122 2.121c.14.141.331.22.53.22H19.5a3 3 0 013 3v1.146A4.483 4.483 0 0019.5 9h-15a4.483 4.483 0 00-3 1.146z" />
</svg>
`,
  "mk-ui-sync": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
</svg>
`,
  "mk-ui-stack": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3" />
</svg>
`,
  "mk-ui-cut": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M7.848 8.25l1.536.887M7.848 8.25a3 3 0 11-5.196-3 3 3 0 015.196 3zm1.536.887a2.165 2.165 0 011.083 1.839c.005.351.054.695.14 1.024M9.384 9.137l2.077 1.199M7.848 15.75l1.536-.887m-1.536.887a3 3 0 11-5.196 3 3 3 0 015.196-3zm1.536-.887a2.165 2.165 0 001.083-1.838c.005-.352.054-.695.14-1.025m-1.223 2.863l2.077-1.199m0-3.328a4.323 4.323 0 012.068-1.379l5.325-1.628a4.5 4.5 0 012.48-.044l.803.215-7.794 4.5m-2.882-1.664A4.331 4.331 0 0010.607 12m3.736 0l7.794 4.5-.802.215a4.5 4.5 0 01-2.48-.043l-5.326-1.629a4.324 4.324 0 01-2.068-1.379M14.343 12l-2.882 1.664" />
</svg>
`,
  "mk-ui-backlink": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.784 9.716a4.333 4.333 0 0 0-6.128 0L3.323 14.05a4.332 4.332 0 1 0 6.127 6.127l1.194-1.193m-.821-5.307a4.333 4.333 0 0 0 6.127 0l4.334-4.333a4.333 4.333 0 0 0-6.128-6.128l-1.191 1.192"/>
<path fill="currentColor" d="M15.646 19.646a.5.5 0 0 0 0 .708l3.182 3.181a.5.5 0 1 0 .707-.707L16.707 20l2.828-2.828a.5.5 0 1 0-.707-.707l-3.182 3.181ZM23 20.5a.5.5 0 0 0 0-1v1Zm-7 0h7v-1h-7v1Z"/>
</svg>`,
  "mk-ui-canvas": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="2.5" y="2.5" width="4" height="6" rx="0.5" stroke="currentColor"/>
<rect x="2.5" y="10.5" width="4" height="3" rx="0.5" stroke="currentColor"/>
<rect x="9.5" y="7.5" width="4" height="6" rx="0.5" stroke="currentColor"/>
<rect x="9.5" y="2.5" width="4" height="3" rx="0.5" stroke="currentColor"/>
</svg>
`,
  "mk-ui-video": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0118 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0118 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 016 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5" />
</svg>
`,
  "mk-ui-edit": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125" />
</svg>
`,
  "mk-ui-list": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
</svg>

`,
  "mk-ui-build": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M11.42 15.17L17.25 21A2.652 2.652 0 0021 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 11-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 004.486-6.336l-3.276 3.277a3.004 3.004 0 01-2.25-2.25l3.276-3.276a4.5 4.5 0 00-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437l1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008z" />
</svg>
`,
  "mk-ui-check": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
</svg>
`,
  "mk-ui-layout": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 01-1.125-1.125v-3.75zM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-8.25zM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-2.25z" />
</svg>
`,
  "mk-ui-colors": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M4.098 19.902a3.75 3.75 0 005.304 0l6.401-6.402M6.75 21A3.75 3.75 0 013 17.25V4.125C3 3.504 3.504 3 4.125 3h5.25c.621 0 1.125.504 1.125 1.125v4.072M6.75 21a3.75 3.75 0 003.75-3.75V8.197M6.75 21h13.125c.621 0 1.125-.504 1.125-1.125v-5.25c0-.621-.504-1.125-1.125-1.125h-4.072M10.5 8.197l2.88-2.88c.438-.439 1.15-.439 1.59 0l3.712 3.713c.44.44.44 1.152 0 1.59l-2.879 2.88M6.75 17.25h.008v.008H6.75v-.008z" />
</svg>
`,
  "mk-make-todo": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="1.5" y="1.5" width="13" height="13" rx="1.5" stroke="currentColor"/>
<path d="M4.5 8L7 10.5L11.5 6" stroke="currentColor"/>
</svg>        
`,
  "mk-make-list": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="5.5" y1="4.5" x2="14.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="8.5" x2="14.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="12.5" x2="14.5" y2="12.5" stroke="currentColor" stroke-linecap="round"/>
<circle cx="1.75" cy="4.5" r="0.75" fill="currentColor"/>
<circle cx="1.75" cy="8.5" r="0.75" fill="currentColor"/>
<circle cx="1.75" cy="12.5" r="0.75" fill="currentColor"/>
</svg>        
`,
  "mk-make-ordered": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1.50142 3.09091V6H0.886364V3.67472H0.869318L0.203125 4.09233V3.54688L0.923295 3.09091H1.50142Z" fill="currentColor"/>
<path d="M0.235807 10V9.55682L1.27132 8.59801C1.35939 8.51278 1.43325 8.43608 1.49291 8.3679C1.55351 8.29972 1.59944 8.23295 1.63069 8.16761C1.66194 8.10133 1.67757 8.02983 1.67757 7.95312C1.67757 7.8679 1.65816 7.79451 1.61933 7.73295C1.5805 7.67045 1.52747 7.62263 1.46024 7.58949C1.393 7.5554 1.31677 7.53835 1.23155 7.53835C1.14253 7.53835 1.06488 7.55634 0.998591 7.59233C0.932303 7.62831 0.881166 7.67992 0.845182 7.74716C0.809197 7.81439 0.791204 7.89441 0.791204 7.98722H0.207397C0.207397 7.79687 0.250485 7.63163 0.336659 7.49148C0.422833 7.35133 0.543572 7.2429 0.698875 7.16619C0.854178 7.08949 1.03316 7.05114 1.23581 7.05114C1.44414 7.05114 1.62548 7.08807 1.77984 7.16193C1.93514 7.23485 2.05588 7.33617 2.14206 7.46591C2.22823 7.59564 2.27132 7.74432 2.27132 7.91193C2.27132 8.02178 2.24954 8.13021 2.20598 8.23722C2.16336 8.34422 2.08713 8.46307 1.97728 8.59375C1.86744 8.72348 1.71261 8.87926 1.5128 9.06108L1.08808 9.47727V9.49716H2.30967V10H0.235807Z" fill="currentColor"/>
<path d="M1.31109 14.0398C1.09897 14.0398 0.910049 14.0033 0.744329 13.9304C0.579557 13.8565 0.449348 13.7552 0.353704 13.6264C0.259007 13.4967 0.210238 13.3471 0.207397 13.1776H0.826716C0.830504 13.2486 0.853704 13.3111 0.896318 13.3651C0.939879 13.4181 0.997644 13.4593 1.06961 13.4886C1.14158 13.518 1.22255 13.5327 1.31251 13.5327C1.40626 13.5327 1.48912 13.5161 1.56109 13.483C1.63306 13.4498 1.68941 13.4039 1.73012 13.3452C1.77084 13.2865 1.7912 13.2187 1.7912 13.142C1.7912 13.0644 1.76942 12.9957 1.72586 12.9361C1.68325 12.8755 1.6217 12.8281 1.5412 12.794C1.46166 12.7599 1.36696 12.7429 1.25711 12.7429H0.985807V12.2912H1.25711C1.34992 12.2912 1.43183 12.2751 1.50285 12.2429C1.57482 12.2107 1.63069 12.1662 1.67047 12.1094C1.71024 12.0516 1.73012 11.9844 1.73012 11.9077C1.73012 11.8348 1.71261 11.7708 1.67757 11.7159C1.64348 11.66 1.59518 11.6165 1.53268 11.5852C1.47113 11.554 1.39916 11.5384 1.31677 11.5384C1.23344 11.5384 1.15721 11.5535 1.08808 11.5838C1.01895 11.6132 0.963553 11.6553 0.921886 11.7102C0.880219 11.7652 0.857966 11.8295 0.855125 11.9034H0.265636C0.268477 11.7358 0.316299 11.5881 0.409102 11.4602C0.501905 11.3324 0.626905 11.2325 0.784102 11.1605C0.942246 11.0876 1.12075 11.0511 1.31961 11.0511C1.52037 11.0511 1.69603 11.0876 1.8466 11.1605C1.99717 11.2334 2.11412 11.3319 2.19745 11.456C2.28173 11.5791 2.3234 11.7173 2.32245 11.8707C2.3234 12.0336 2.27274 12.1695 2.17047 12.2784C2.06914 12.3873 1.93704 12.4564 1.77416 12.4858V12.5085C1.98817 12.536 2.15105 12.6103 2.2628 12.7315C2.37548 12.8518 2.43136 13.0024 2.43041 13.1832C2.43136 13.349 2.38353 13.4962 2.28694 13.625C2.1913 13.7538 2.0592 13.8551 1.89064 13.929C1.72208 14.0028 1.52889 14.0398 1.31109 14.0398Z" fill="currentColor"/>
<line x1="5.5" y1="4.5" x2="14.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="8.5" x2="14.5" y2="8.5" stroke="currentColor" stroke-linecap="round"/>
<line x1="5.5" y1="12.5" x2="14.5" y2="12.5" stroke="currentColor" stroke-linecap="round"/>
</svg>        
`,
  "mk-make-h1": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.26278 12H0.285507L3.29829 3.27273H5.67613L8.68466 12H6.70738L4.5213 5.26705H4.45312L2.26278 12ZM2.1392 8.5696H6.80966V10.0099H2.1392V8.5696Z" fill="currentColor"/>
<path d="M11.5675 12.1236C11.1499 12.1236 10.7777 12.0511 10.451 11.9062C10.1243 11.7585 9.86576 11.5412 9.67542 11.2543C9.48792 10.9645 9.39417 10.6037 9.39417 10.1719C9.39417 9.80824 9.46093 9.50284 9.59446 9.25568C9.72798 9.00852 9.9098 8.80966 10.1399 8.65909C10.37 8.50852 10.6314 8.39489 10.924 8.31818C11.2195 8.24148 11.5291 8.1875 11.853 8.15625C12.2337 8.11648 12.5405 8.07955 12.7734 8.04545C13.0064 8.00852 13.1754 7.95455 13.2805 7.88352C13.3856 7.8125 13.4382 7.70739 13.4382 7.56818V7.54261C13.4382 7.27273 13.353 7.06392 13.1825 6.91619C13.0149 6.76847 12.7763 6.6946 12.4666 6.6946C12.1399 6.6946 11.88 6.76705 11.6868 6.91193C11.4936 7.05398 11.3658 7.23295 11.3033 7.44886L9.62429 7.3125C9.70951 6.91477 9.87713 6.57102 10.1271 6.28125C10.3771 5.98864 10.6996 5.7642 11.0945 5.60795C11.4922 5.44886 11.9524 5.36932 12.4751 5.36932C12.8388 5.36932 13.1868 5.41193 13.5192 5.49716C13.8544 5.58239 14.1513 5.71449 14.4098 5.89347C14.6712 6.07244 14.8771 6.30256 15.0277 6.58381C15.1783 6.86222 15.2535 7.19602 15.2535 7.58523V12H13.532V11.0923H13.4808C13.3757 11.2969 13.2351 11.4773 13.0589 11.6335C12.8828 11.7869 12.6712 11.9077 12.424 11.9957C12.1768 12.081 11.8913 12.1236 11.5675 12.1236ZM12.0874 10.8707C12.3544 10.8707 12.5902 10.8182 12.7947 10.7131C12.9993 10.6051 13.1598 10.4602 13.2763 10.2784C13.3928 10.0966 13.451 9.89062 13.451 9.66051V8.96591C13.3942 9.00284 13.316 9.03693 13.2166 9.06818C13.12 9.09659 13.0106 9.12358 12.8885 9.14915C12.7663 9.17188 12.6442 9.19318 12.522 9.21307C12.3999 9.23011 12.2891 9.24574 12.1896 9.25994C11.9766 9.29119 11.7905 9.34091 11.6314 9.40909C11.4723 9.47727 11.3487 9.5696 11.2606 9.68608C11.1726 9.79972 11.1285 9.94176 11.1285 10.1122C11.1285 10.3594 11.218 10.5483 11.397 10.679C11.5788 10.8068 11.8089 10.8707 12.0874 10.8707Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-h2": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.88566 12H1.23793L3.74858 4.72727H5.73012L8.23722 12H6.58949L4.76776 6.3892H4.71094L2.88566 12ZM2.78267 9.14133H6.67472V10.3416H2.78267V9.14133Z" fill="currentColor"/>
<path d="M10.6396 12.103C10.2916 12.103 9.98142 12.0426 9.70917 11.9219C9.43691 11.7988 9.22148 11.6177 9.06286 11.3786C8.90661 11.1371 8.82848 10.8364 8.82848 10.4766C8.82848 10.1735 8.88412 9.91903 8.99539 9.71307C9.10666 9.5071 9.25817 9.34138 9.44993 9.21591C9.64169 9.09043 9.8595 8.99574 10.1033 8.93182C10.3496 8.8679 10.6076 8.82292 10.8775 8.79687C11.1947 8.76373 11.4504 8.73295 11.6445 8.70455C11.8387 8.67377 11.9795 8.62879 12.0671 8.5696C12.1547 8.51042 12.1985 8.42282 12.1985 8.30682V8.28551C12.1985 8.06061 12.1275 7.8866 11.9854 7.76349C11.8458 7.64039 11.6469 7.57883 11.3889 7.57883C11.1166 7.57883 10.9 7.6392 10.739 7.75994C10.578 7.87831 10.4715 8.02746 10.4194 8.20739L9.02025 8.09375C9.09127 7.76231 9.23095 7.47585 9.43928 7.23437C9.64761 6.99053 9.91632 6.8035 10.2454 6.67329C10.5768 6.54072 10.9603 6.47443 11.396 6.47443C11.699 6.47443 11.989 6.50994 12.266 6.58097C12.5453 6.65199 12.7927 6.76207 13.0082 6.91122C13.226 7.06037 13.3976 7.25213 13.5231 7.48651C13.6486 7.71851 13.7113 7.99668 13.7113 8.32102V12H12.2766V11.2436H12.234C12.1464 11.4141 12.0292 11.5644 11.8825 11.6946C11.7357 11.8224 11.5593 11.9231 11.3533 11.9964C11.1474 12.0675 10.9095 12.103 10.6396 12.103ZM11.0728 11.0589C11.2953 11.0589 11.4918 11.0152 11.6623 10.9276C11.8327 10.8376 11.9665 10.7169 12.0636 10.5653C12.1606 10.4138 12.2092 10.2422 12.2092 10.0504V9.47159C12.1618 9.50237 12.0967 9.53078 12.0139 9.55682C11.9334 9.58049 11.8422 9.60298 11.7404 9.62429C11.6386 9.64323 11.5368 9.66098 11.435 9.67756C11.3332 9.69176 11.2409 9.70478 11.158 9.71662C10.9805 9.74266 10.8254 9.78409 10.6928 9.84091C10.5603 9.89773 10.4573 9.97467 10.3839 10.0717C10.3105 10.1664 10.2738 10.2848 10.2738 10.4268C10.2738 10.6328 10.3484 10.7902 10.4975 10.8991C10.649 11.0057 10.8408 11.0589 11.0728 11.0589Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-h3": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.17897 12H2.25568L4.92613 4.72727H5.83522L8.50568 12H7.58238L5.40909 5.87784H5.35227L3.17897 12ZM3.51988 9.15909H7.24147V9.94034H3.51988V9.15909Z" fill="currentColor"/>
<path d="M11.13 12.1278C10.7843 12.1278 10.4706 12.0627 10.1889 11.9325C9.90719 11.8 9.68347 11.6094 9.51775 11.3608C9.35203 11.1098 9.26917 10.8068 9.26917 10.4517C9.26917 10.1392 9.33072 9.88589 9.45383 9.69176C9.57694 9.49526 9.74147 9.34138 9.94744 9.23011C10.1534 9.11884 10.3807 9.03598 10.6293 8.98153C10.8802 8.92472 11.1323 8.87973 11.3856 8.84659C11.7171 8.80398 11.9858 8.77202 12.1918 8.75071C12.4001 8.72704 12.5516 8.68797 12.6463 8.63352C12.7434 8.57907 12.7919 8.48437 12.7919 8.34943V8.32102C12.7919 7.97064 12.696 7.69839 12.5043 7.50426C12.3149 7.31013 12.0272 7.21307 11.6413 7.21307C11.2412 7.21307 10.9276 7.30066 10.7003 7.47585C10.473 7.65104 10.3132 7.83807 10.2209 8.03693L9.42542 7.75284C9.56747 7.4214 9.75686 7.16335 9.9936 6.97869C10.2327 6.79167 10.4931 6.66146 10.7749 6.58807C11.0589 6.51231 11.3383 6.47443 11.6129 6.47443C11.7881 6.47443 11.9893 6.49574 12.2166 6.53835C12.4463 6.5786 12.6676 6.66264 12.8807 6.79048C13.0961 6.91832 13.2749 7.11127 13.4169 7.36932C13.5589 7.62737 13.63 7.97301 13.63 8.40625V12H12.7919V11.2614H12.7493C12.6925 11.3797 12.5978 11.5064 12.4652 11.6413C12.3326 11.7763 12.1562 11.8911 11.9361 11.9858C11.7159 12.0805 11.4472 12.1278 11.13 12.1278ZM11.2578 11.375C11.5892 11.375 11.8686 11.3099 12.0959 11.1797C12.3255 11.0495 12.4983 10.8814 12.6143 10.6754C12.7327 10.4695 12.7919 10.2528 12.7919 10.0256V9.25852C12.7564 9.30114 12.6783 9.3402 12.5575 9.37571C12.4392 9.40885 12.3018 9.43845 12.1456 9.46449C11.9917 9.48816 11.8414 9.50947 11.6946 9.52841C11.5502 9.54498 11.433 9.55918 11.343 9.57102C11.1252 9.59943 10.9216 9.6456 10.7322 9.70952C10.5452 9.77107 10.3937 9.86458 10.2777 9.99006C10.1641 10.1132 10.1072 10.2812 10.1072 10.4943C10.1072 10.7855 10.215 11.0057 10.4304 11.1548C10.6482 11.3016 10.924 11.375 11.2578 11.375Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-quote": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="1.75" y1="2.75" x2="1.75" y2="12.25" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="4.5" x2="13.5" y2="4.5" stroke="currentColor" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="7.5" x2="11.5" y2="7.5" stroke="currentColor" stroke-linecap="round"/>
<line opacity="0.3" x1="5.5" y1="10.5" x2="9.5" y2="10.5" stroke="currentColor" stroke-linecap="round"/>
</svg>        
`,
  "mk-make-hr": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="0.75" y1="8.25" x2="15.25" y2="8.25" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
</svg>
`,
  "mk-make-link": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.25144 6.74857C8.75136 6.24864 8.07321 5.9678 7.3661 5.9678C6.659 5.9678 5.98084 6.24864 5.48077 6.74857L2.8141 9.41523C2.55941 9.66122 2.35626 9.95548 2.2165 10.2808C2.07674 10.6062 2.00318 10.9561 2.0001 11.3102C1.99702 11.6642 2.06449 12.0154 2.19858 12.3431C2.33266 12.6708 2.53067 12.9686 2.78105 13.219C3.03143 13.4693 3.32917 13.6673 3.65689 13.8014C3.98461 13.9355 4.33576 14.003 4.68984 13.9999C5.04392 13.9968 5.39384 13.9233 5.71918 13.7835C6.04452 13.6437 6.33878 13.4406 6.58477 13.1859L7.31944 12.4519M6.8141 9.1859C7.31418 9.68582 7.99233 9.96666 8.69944 9.96666C9.40654 9.96666 10.0847 9.68582 10.5848 9.1859L13.2514 6.51923C13.7372 6.01629 14.006 5.34269 13.9999 4.6435C13.9938 3.9443 13.7134 3.27547 13.219 2.78105C12.7245 2.28663 12.0557 2.00618 11.3565 2.0001C10.6573 1.99403 9.98371 2.26281 9.48077 2.74856L8.74743 3.4819" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>        
`,
  "mk-make-image": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="1.5" y="2.5" width="13" height="10" rx="1.5" stroke="currentColor"/>
<path d="M4.2 9.06667C4.6 8.53333 5.4 8.53333 5.8 9.06667L8 12H2L4.2 9.06667Z" fill="currentColor"/>
<path d="M9.16795 7.24808C9.56377 6.65434 10.4362 6.65434 10.8321 7.24808L14 12H6L9.16795 7.24808Z" fill="currentColor"/>
<circle cx="4.5" cy="5.5" r="1.5" fill="currentColor"/>
</svg>        
`,
  "mk-make-codeblock": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1 9.01852V7.98148L5 5V6.41204L2.04819 8.48148L2.0753 8.39815V8.59722L2.04819 8.51852L5 10.5833V12L1 9.01852Z" fill="currentColor"/>
<path d="M15 9.01852V7.98148L11 5V6.41204L13.9518 8.48148L13.9247 8.39815V8.59722L13.9518 8.51852L11 10.5833V12L15 9.01852Z" fill="currentColor"/>
<path d="M10 3L7.1521 14H6L8.8479 3H10Z" fill="currentColor"/>
</svg>        
`,
  "mk-make-callout": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="6.5" width="9" height="3" stroke="currentColor"/>
<line x1="4.5" y1="3.5" x2="11.5" y2="3.5" stroke="#B2B2B2" stroke-linecap="round"/>
<line x1="4.5" y1="12.5" x2="11.5" y2="12.5" stroke="#B2B2B2" stroke-linecap="round"/>
</svg>`,
  "mk-make-note": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.5 11C6.11929 11 5 9.88071 5 8.5C5 7.11929 6.11929 6 7.5 6" stroke="currentColor" stroke-width="1.5"/>
<path d="M9 6C10.3807 6 11.5 7.11929 11.5 8.5C11.5 9.88071 10.3807 11 9 11" stroke="currentColor" stroke-width="1.5"/>
<line x1="1" y1="8.25" x2="5" y2="8.25" stroke="currentColor" stroke-width="1.5"/>
<line x1="11" y1="8.25" x2="15" y2="8.25" stroke="currentColor" stroke-width="1.5"/>
</svg>        
`,
  "mk-make-flow": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.7941 11.6917C11.4281 11.809 12.0857 11.7486 12.6856 11.5163C13.2858 11.2838 13.8068 10.8873 14.1773 10.3692C14.5483 9.85038 14.75 9.23465 14.75 8.6C14.75 7.96535 14.5483 7.34962 14.1773 6.83081C13.8068 6.31273 13.2858 5.91619 12.6856 5.68372C12.0857 5.45136 11.4281 5.39096 10.7941 5.50834C10.1599 5.62575 9.57072 5.91716 9.10335 6.35289C9.09233 6.36317 9.08162 6.37378 9.07124 6.3847L5.85862 9.76393C5.60897 9.99123 5.28818 10.1509 4.93287 10.2167C4.5702 10.2839 4.19486 10.2487 3.85619 10.1175C3.51778 9.98646 3.23669 9.76777 3.04283 9.49668C2.84949 9.22631 2.75 8.91434 2.75 8.6C2.75 8.28566 2.84949 7.97369 3.04283 7.70332C3.23669 7.43223 3.51778 7.21354 3.85619 7.08246C4.19486 6.95128 4.5702 6.91614 4.93287 6.98328C5.29024 7.04944 5.61268 7.21063 5.86295 7.44003L6.559 8.14747L7.62823 7.09545L6.91982 6.37545C6.91226 6.36777 6.90453 6.36025 6.89665 6.35289C6.42928 5.91716 5.8401 5.62575 5.20593 5.50834C4.57189 5.39096 3.91432 5.45136 3.31441 5.68372C2.71423 5.91619 2.19318 6.31273 1.8227 6.83081C1.4517 7.34962 1.25 7.96535 1.25 8.6C1.25 9.23465 1.4517 9.85038 1.8227 10.3692C2.19318 10.8873 2.71423 11.2838 3.31441 11.5163C3.91432 11.7486 4.57189 11.809 5.20593 11.6917C5.8401 11.5742 6.42928 11.2828 6.89665 10.8471C6.90767 10.8368 6.91838 10.8262 6.92876 10.8153L10.1414 7.43607C10.391 7.20877 10.7118 7.04906 11.0671 6.98328C11.4298 6.91614 11.8051 6.95128 12.1438 7.08246C12.4822 7.21354 12.7633 7.43223 12.9572 7.70332C13.1505 7.97369 13.25 8.28566 13.25 8.6C13.25 8.91434 13.1505 9.22631 12.9572 9.49668C12.7633 9.76777 12.4822 9.98646 12.1438 10.1175C11.8051 10.2487 11.4298 10.2839 11.0671 10.2167C10.7098 10.1506 10.3873 9.98938 10.1371 9.75998L9.441 9.05253L8.37177 10.1045L9.08018 10.8245C9.08774 10.8322 9.09547 10.8398 9.10335 10.8471C9.57072 11.2828 10.1599 11.5742 10.7941 11.6917Z" fill="currentColor"/>
</svg>
`,
  "mk-make-tag": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.81747 13L9.48792 2.81818H10.6811L9.01065 13H7.81747ZM3.2088 10.2756L3.40269 9.08239H11.1186L10.9247 10.2756H3.2088ZM4.23792 13L5.90838 2.81818H7.10156L5.4311 13H4.23792ZM3.80042 6.7358L3.99431 5.54261H11.7102L11.5163 6.7358H3.80042Z" fill="currentColor"/>
</svg>
`,
  "mk-make-table": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M12 3H4C3.44772 3 3 3.44772 3 4V12C3 12.5523 3.44772 13 4 13H12C12.5523 13 13 12.5523 13 12V4C13 3.44772 12.5523 3 12 3ZM4 2C2.89543 2 2 2.89543 2 4V12C2 13.1046 2.89543 14 4 14H12C13.1046 14 14 13.1046 14 12V4C14 2.89543 13.1046 2 12 2H4Z" fill="currentColor"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M14 6H2V5H14V6Z" fill="currentColor"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M7 2L7 13L6 13L6 2L7 2Z" fill="currentColor"/>
</svg>
`,
  "mk-make-date": `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5" />
</svg>
`,
  "mk-mark-strong": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7 17.6364V6H11.8523C12.7235 6 13.4527 6.12311 14.0398 6.36932C14.6307 6.61553 15.0739 6.96023 15.3693 7.40341C15.6686 7.84659 15.8182 8.35985 15.8182 8.94318C15.8182 9.38636 15.7254 9.7822 15.5398 10.1307C15.3542 10.4754 15.0985 10.7614 14.7727 10.9886C14.447 11.2159 14.0701 11.375 13.642 11.4659V11.5795C14.1117 11.6023 14.5455 11.7292 14.9432 11.9602C15.3447 12.1913 15.6667 12.5133 15.9091 12.9261C16.1515 13.3352 16.2727 13.8201 16.2727 14.3807C16.2727 15.0057 16.1136 15.5644 15.7955 16.0568C15.4773 16.5455 15.017 16.9318 14.4148 17.2159C13.8125 17.4962 13.0814 17.6364 12.2216 17.6364H7ZM9.8125 15.3693H11.5511C12.161 15.3693 12.6098 15.2538 12.8977 15.0227C13.1894 14.7917 13.3352 14.4697 13.3352 14.0568C13.3352 13.7576 13.2652 13.5 13.125 13.2841C12.9848 13.0644 12.786 12.8958 12.5284 12.7784C12.2708 12.6572 11.9621 12.5966 11.6023 12.5966H9.8125V15.3693ZM9.8125 10.7841H11.3693C11.6761 10.7841 11.9489 10.733 12.1875 10.6307C12.4261 10.5284 12.6117 10.3807 12.7443 10.1875C12.8807 9.99432 12.9489 9.76136 12.9489 9.48864C12.9489 9.09848 12.8106 8.79167 12.5341 8.56818C12.2576 8.3447 11.8845 8.23295 11.4148 8.23295H9.8125V10.7841Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-em": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.76 15.888L11.424 7.52C11.4773 7.28533 11.392 7.13067 11.168 7.056C10.9547 6.98133 10.6667 6.944 10.304 6.944H10.08L10.288 6H15.184L14.976 6.944H14.752C14.4107 6.944 14.112 6.976 13.856 7.04C13.6107 7.104 13.4667 7.248 13.424 7.472L11.76 15.84C11.7173 16.0747 11.8027 16.2293 12.016 16.304C12.2293 16.3787 12.5173 16.416 12.88 16.416H13.104L12.896 17.36H8L8.208 16.416H8.432C8.77333 16.416 9.06667 16.384 9.312 16.32C9.568 16.2453 9.71733 16.1013 9.76 15.888Z" fill="currentColor"/>
</svg>`,
  "mk-mark-strikethrough": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.625 9.21591C14.5644 8.67803 14.3144 8.26136 13.875 7.96591C13.4356 7.66667 12.8826 7.51705 12.2159 7.51705C11.7386 7.51705 11.3258 7.5928 10.9773 7.74432C10.6288 7.89205 10.358 8.09659 10.1648 8.35795C9.97538 8.61553 9.88068 8.90909 9.88068 9.23864C9.88068 9.51515 9.94508 9.75379 10.0739 9.95455C10.2064 10.1553 10.3788 10.3239 10.5909 10.4602C10.8068 10.5928 11.0379 10.7045 11.2841 10.7955C11.5303 10.8826 11.767 10.9545 11.9943 11.0114L13.1307 11.3068C13.5019 11.3977 13.8826 11.5208 14.2727 11.6761C14.6629 11.8314 15.0246 12.036 15.358 12.2898C15.6913 12.5436 15.9602 12.858 16.1648 13.233C16.3731 13.608 16.4773 14.0568 16.4773 14.5795C16.4773 15.2386 16.3068 15.8239 15.9659 16.3352C15.6288 16.8466 15.1383 17.25 14.4943 17.5455C13.8542 17.8409 13.0795 17.9886 12.1705 17.9886C11.2992 17.9886 10.5455 17.8504 9.90909 17.5739C9.27273 17.2973 8.77462 16.9053 8.41477 16.3977C8.05492 15.8864 7.85606 15.2803 7.81818 14.5795H9.57955C9.61364 15 9.75 15.3504 9.98864 15.6307C10.2311 15.9072 10.5398 16.1136 10.9148 16.25C11.2936 16.3826 11.7083 16.4489 12.1591 16.4489C12.6553 16.4489 13.0966 16.3712 13.483 16.2159C13.8731 16.0568 14.1799 15.8371 14.4034 15.5568C14.6269 15.2727 14.7386 14.9413 14.7386 14.5625C14.7386 14.2178 14.6402 13.9356 14.4432 13.7159C14.25 13.4962 13.9867 13.3144 13.6534 13.1705C13.3239 13.0265 12.9508 12.8996 12.5341 12.7898L11.1591 12.4148C10.2273 12.161 9.48864 11.7879 8.94318 11.2955C8.40152 10.803 8.13068 10.1515 8.13068 9.34091C8.13068 8.67045 8.3125 8.08523 8.67614 7.58523C9.03977 7.08523 9.5322 6.69697 10.1534 6.42045C10.7746 6.14015 11.4754 6 12.2557 6C13.0436 6 13.7386 6.13826 14.3409 6.41477C14.947 6.69129 15.4242 7.07197 15.7727 7.55682C16.1212 8.03788 16.303 8.59091 16.3182 9.21591H14.625Z" fill="currentColor"/>
<path d="M7 12.5568H17.2955V13.6477H7V12.5568Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-code": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3 13.1667V11.8333L8 8V9.81548L4.31024 12.4762L4.34413 12.369V12.625L4.31024 12.5238L8 15.1786V17L3 13.1667Z" fill="currentColor"/>
<path d="M21 13.1667V11.8333L16 8V9.81548L19.6898 12.4762L19.6559 12.369V12.625L19.6898 12.5238L16 15.1786V17L21 13.1667Z" fill="currentColor"/>
<path d="M14.5739 5.81818L10.8239 19.75H9.30682L13.0568 5.81818H14.5739Z" fill="currentColor"/>
</svg>
`,
  "mk-mark-link": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.2514 10.7486C12.7514 10.2486 12.0732 9.9678 11.3661 9.9678C10.659 9.9678 9.98084 10.2486 9.48077 10.7486L6.8141 13.4152C6.55941 13.6612 6.35626 13.9555 6.2165 14.2808C6.07674 14.6062 6.00318 14.9561 6.0001 15.3102C5.99702 15.6642 6.06449 16.0154 6.19858 16.3431C6.33266 16.6708 6.53067 16.9686 6.78105 17.219C7.03143 17.4693 7.32917 17.6673 7.65689 17.8014C7.98461 17.9355 8.33576 18.003 8.68984 17.9999C9.04392 17.9968 9.39384 17.9233 9.71918 17.7835C10.0445 17.6437 10.3388 17.4406 10.5848 17.1859L11.3194 16.4519M10.8141 13.1859C11.3142 13.6858 11.9923 13.9667 12.6994 13.9667C13.4065 13.9667 14.0847 13.6858 14.5848 13.1859L17.2514 10.5192C17.7372 10.0163 18.006 9.34269 17.9999 8.6435C17.9938 7.9443 17.7134 7.27547 17.219 6.78105C16.7245 6.28663 16.0557 6.00618 15.3565 6.0001C14.6573 5.99403 13.9837 6.26281 13.4808 6.74856L12.7474 7.4819" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>`,
  "mk-mark-blocklink": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.5 15C10.1193 15 9 13.8807 9 12.5C9 11.1193 10.1193 10 11.5 10" stroke="currentColor" stroke-width="1.5"/>
<path d="M13 10C14.3807 10 15.5 11.1193 15.5 12.5C15.5 13.8807 14.3807 15 13 15" stroke="currentColor" stroke-width="1.5"/>
<line x1="4" y1="12.25" x2="9" y2="12.25" stroke="currentColor" stroke-width="1.5"/>
<line x1="15" y1="12.25" x2="20" y2="12.25" stroke="currentColor" stroke-width="1.5"/>
</svg>`,
  "mk-mark-highlight": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g opacity="0.2">
<path fill-rule="evenodd" clip-rule="evenodd" d="M18 21H6V19H18V20Z" fill="currentColor"/>
</g>
<path fill-rule="evenodd" clip-rule="evenodd" d="M9.43302 10.7498L9.2698 13.9711L11.3368 15.3582L14.256 13.9863L9.43302 10.7498ZM13.7828 5.58248L9.43305 10.7498L14.256 13.9863L17.3893 8.00268C17.626 7.5506 17.4844 6.99279 17.0606 6.70843L15.1051 5.39611C14.6813 5.11175 14.1114 5.19208 13.7828 5.58248Z" fill="currentColor"/>
<path d="M7.65151 16.3826L9.0386 14.3156L11.1056 15.7027L10.412 16.7362L7.65151 16.3826Z" fill="currentColor"/>
</svg>`,
  "mk-make-attach": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path fill-rule="evenodd" d="M17 8H7a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1ZM7 7a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H7Z" clip-rule="evenodd"/>
<path d="M8.2 14.067a1 1 0 0 1 1.6 0L12 17H6l2.2-2.933Z"/>
<path d="M13.168 12.248a1 1 0 0 1 1.664 0L18 17h-8l3.168-4.752Z"/>
<circle cx="8.5" cy="10.5" r="1.5"/>
</svg>`,
  "mk-make-keyboard": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path fill-rule="evenodd" d="M8.5 10a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H9a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H11a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H13a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H15a.5.5 0 0 1-.5-.5Zm-5 2a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H10a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5Zm2 0a.5.5 0 0 1 .5-.5h.001a.5.5 0 0 1 0 1H14a.5.5 0 0 1-.5-.5Zm.035 1.5H9.5a.5.5 0 0 0 0 1h3.626c.091-.355.23-.69.41-1Z" clip-rule="evenodd"/>
<path d="M17 13.5v3m-1.5-1L17 17l1.5-1.5"/>
<path fill-rule="evenodd" d="M7.5 9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2.53a4.045 4.045 0 0 1 1 0V9A1.5 1.5 0 0 0 16 7.5H8A1.5 1.5 0 0 0 6.5 9v6A1.5 1.5 0 0 0 8 16.5h5.126a4.01 4.01 0 0 1-.126-1H8a.5.5 0 0 1-.5-.5V9Z" clip-rule="evenodd"/>
</svg>`,
  "mk-make-slash": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path d="M9.574 4.818 5.824 18.75H4.307l3.75-13.932h1.517Z" opacity=".3"/>
<path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5Z" clip-rule="evenodd"/>
<path fill-rule="evenodd" d="M14.5 8a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0v-8a.5.5 0 0 1 .5-.5Z" clip-rule="evenodd"/>
</svg>`,
  "mk-make-style": `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
<path d="M7.648 15.273H6L8.51 8h1.982L13 15.273h-1.647L9.53 9.662h-.057l-1.825 5.61Zm-.103-2.859h3.892v1.2H7.545v-1.2Zm8.315 2.989c-.345 0-.659-.065-.94-.195a1.615 1.615 0 0 1-.671-.572c-.166-.25-.249-.554-.249-.909 0-.312.062-.566.185-.76a1.3 1.3 0 0 1 .493-.461c.206-.112.433-.194.682-.249.251-.057.503-.102.756-.135.332-.043.6-.074.807-.096.208-.023.36-.063.454-.117.097-.054.146-.15.146-.284v-.028c0-.35-.096-.623-.288-.817-.19-.194-.477-.291-.863-.291-.4 0-.714.087-.94.262a1.553 1.553 0 0 0-.48.562l-.796-.285a1.91 1.91 0 0 1 .568-.774c.24-.187.5-.317.782-.39a3.23 3.23 0 0 1 .838-.114c.175 0 .376.021.603.064.23.04.451.124.665.252.215.128.394.32.536.579.142.258.213.604.213 1.037v3.594h-.838v-.74h-.043a1.473 1.473 0 0 1-.284.38 1.64 1.64 0 0 1-.53.345c-.22.095-.488.142-.805.142Zm.129-.752c.331 0 .61-.066.838-.196a1.33 1.33 0 0 0 .696-1.154v-.767c-.036.043-.114.082-.235.117a3.98 3.98 0 0 1-.412.09 19.433 19.433 0 0 1-.802.106 3.203 3.203 0 0 0-.61.138 1.053 1.053 0 0 0-.456.28c-.113.124-.17.292-.17.505 0 .291.108.511.323.66.218.147.494.22.828.22Z"/>
</svg>`,
  "mk-mark-color": `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.47727 17H7L11.2727 5H12.7273L17 17H15.5227L12.0455 6.89844H11.9545L8.47727 17ZM9.02273 12.3125H14.9773V13.6016H9.02273V12.3125Z" fill="currentColor"/>
<path opacity="0.2" fill-rule="evenodd" clip-rule="evenodd" d="M18 21H6V19H18V20Z" fill="currentColor"/>
</svg>`,
  "mk-ui-any": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3" y="3" width="7" height="7" fill="currentColor"/>
<rect x="6" y="6" width="7" height="7" fill="currentColor"/>
</svg>`,
  "mk-ui-all": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="3.5" width="6" height="6" stroke="currentColor"/>
<rect x="6.5" y="6.5" width="6" height="6" stroke="currentColor"/>
<rect x="6" y="6" width="4" height="4" fill="currentColor"/>
</svg>`,
  "mk-ui-context": `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="3.5" y="3.5" width="3" height="3" stroke="currentColor"/>
<rect x="3.5" y="9.5" width="3" height="3" stroke="currentColor"/>
<rect x="9.5" y="3.5" width="3" height="3" stroke="currentColor"/>
<rect x="9.5" y="9.5" width="3" height="3" stroke="currentColor"/>
<path d="M6.5 9.5L9.5 6.5M6.5 6.5L9.5 9.5" stroke="currentColor"/>
</svg>`
};
var mkLogo = `<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" viewBox="0 0 100 100">
<path d="m51.39 53.148 36.687-38.355v73.284H11.923V14.793L48.61 53.148 50 54.6l1.39-1.453Z"/>
</svg>
`;
var lucideIcons = [
  "accessibility",
  "activity",
  "air-vent",
  "airplay",
  "alarm-check",
  "alarm-clock-off",
  "alarm-clock",
  "alarm-minus",
  "alarm-plus",
  "album",
  "alert-circle",
  "alert-octagon",
  "alert-triangle",
  "align-center-horizontal",
  "align-center-vertical",
  "align-center",
  "align-end-horizontal",
  "align-end-vertical",
  "align-horizontal-distribute-center",
  "align-horizontal-distribute-end",
  "align-horizontal-distribute-start",
  "align-horizontal-justify-center",
  "align-horizontal-justify-end",
  "align-horizontal-justify-start",
  "align-horizontal-space-around",
  "align-horizontal-space-between",
  "align-justify",
  "align-left",
  "align-right",
  "align-start-horizontal",
  "align-start-vertical",
  "align-vertical-distribute-center",
  "align-vertical-distribute-end",
  "align-vertical-distribute-start",
  "align-vertical-justify-center",
  "align-vertical-justify-end",
  "align-vertical-justify-start",
  "align-vertical-space-around",
  "align-vertical-space-between",
  "anchor",
  "angry",
  "annoyed",
  "aperture",
  "apple",
  "archive-restore",
  "archive",
  "armchair",
  "arrow-big-down",
  "arrow-big-left",
  "arrow-big-right",
  "arrow-big-up",
  "arrow-down-circle",
  "arrow-down-left-from-circle",
  "arrow-down-left",
  "arrow-down-right-from-circle",
  "arrow-down-right",
  "arrow-down",
  "arrow-left-circle",
  "arrow-left-right",
  "arrow-left",
  "arrow-right-circle",
  "arrow-right",
  "arrow-up-circle",
  "arrow-up-down",
  "arrow-up-left-from-circle",
  "arrow-up-left",
  "arrow-up-right-from-circle",
  "arrow-up-right",
  "arrow-up",
  "asterisk",
  "at-sign",
  "atom",
  "award",
  "axe",
  "axis-3d",
  "baby",
  "backpack",
  "baggage-claim",
  "ban",
  "banana",
  "banknote",
  "bar-chart-2",
  "bar-chart-3",
  "bar-chart-4",
  "bar-chart-horizontal",
  "bar-chart",
  "baseline",
  "bath",
  "battery-charging",
  "battery-full",
  "battery-low",
  "battery-medium",
  "battery-warning",
  "battery",
  "beaker",
  "bean-off",
  "bean",
  "bed-double",
  "bed-single",
  "bed",
  "beef",
  "beer",
  "bell-minus",
  "bell-off",
  "bell-plus",
  "bell-ring",
  "bell",
  "bike",
  "binary",
  "bird",
  "bitcoin",
  "blinds",
  "bluetooth-connected",
  "bluetooth-off",
  "bluetooth-searching",
  "bluetooth",
  "bold",
  "bomb",
  "bone",
  "book-copy",
  "book-down",
  "book-key",
  "book-lock",
  "book-marked",
  "book-minus",
  "book-open-check",
  "book-open",
  "book-plus",
  "book-template",
  "book-up",
  "book-x",
  "book",
  "bookmark-minus",
  "bookmark-plus",
  "bookmark",
  "bot",
  "box-select",
  "box",
  "boxes",
  "brain-circuit",
  "brain-cog",
  "brain",
  "briefcase",
  "brush",
  "bug",
  "building-2",
  "building",
  "bus",
  "cake",
  "calculator",
  "calendar-check-2",
  "calendar-check",
  "calendar-clock",
  "calendar-days",
  "calendar-heart",
  "calendar-minus",
  "calendar-off",
  "calendar-plus",
  "calendar-range",
  "calendar-search",
  "calendar-x2",
  "calendar-x",
  "calendar",
  "camera-off",
  "camera",
  "candy-off",
  "candy",
  "car",
  "carrot",
  "case-lower",
  "case-sensitive",
  "case-upper",
  "cast",
  "castle",
  "cat",
  "check-check",
  "check-circle-2",
  "check-circle",
  "check-square",
  "check",
  "chef-hat",
  "cherry",
  "chevron-down-square",
  "chevron-down",
  "chevron-first",
  "chevron-last",
  "chevron-left-square",
  "chevron-left",
  "chevron-right-square",
  "chevron-right",
  "chevron-up-square",
  "chevron-up",
  "chevrons-down-up",
  "chevrons-down",
  "chevrons-left-right",
  "chevrons-left",
  "chevrons-right-left",
  "chevrons-right",
  "chevrons-up-down",
  "chevrons-up",
  "chrome",
  "church",
  "cigarette-off",
  "cigarette",
  "circle-dot",
  "circle-ellipsis",
  "circle-equal",
  "circle-off",
  "circle-slash-2",
  "circle-slash",
  "circle",
  "circuit-board",
  "citrus",
  "clapperboard",
  "clipboard-check",
  "clipboard-copy",
  "clipboard-edit",
  "clipboard-list",
  "clipboard-paste",
  "clipboard-signature",
  "clipboard-type",
  "clipboard-x",
  "clipboard",
  "clock-1",
  "clock-10",
  "clock-11",
  "clock-12",
  "clock-2",
  "clock-3",
  "clock-4",
  "clock-5",
  "clock-6",
  "clock-7",
  "clock-8",
  "clock-9",
  "clock",
  "cloud-cog",
  "cloud-drizzle",
  "cloud-fog",
  "cloud-hail",
  "cloud-lightning",
  "cloud-moon-rain",
  "cloud-moon",
  "cloud-off",
  "cloud-rain-wind",
  "cloud-rain",
  "cloud-snow",
  "cloud-sun-rain",
  "cloud-sun",
  "cloud",
  "cloudy",
  "clover",
  "code-2",
  "code",
  "codepen",
  "codesandbox",
  "coffee",
  "cog",
  "coins",
  "columns",
  "command",
  "compass",
  "component",
  "concierge-bell",
  "construction",
  "contact",
  "contrast",
  "cookie",
  "copy-check",
  "copy-minus",
  "copy-plus",
  "copy-slash",
  "copy-x",
  "copy",
  "copyleft",
  "copyright",
  "corner-down-left",
  "corner-down-right",
  "corner-left-down",
  "corner-left-up",
  "corner-right-down",
  "corner-right-up",
  "corner-up-left",
  "corner-up-right",
  "cpu",
  "creative-commons",
  "credit-card",
  "croissant",
  "crop",
  "cross",
  "crosshair",
  "crown",
  "cup-soda",
  "curly-braces",
  "currency",
  "database-backup",
  "database",
  "delete",
  "diamond",
  "dice-1",
  "dice-2",
  "dice-3",
  "dice-4",
  "dice-5",
  "dice-6",
  "dices",
  "diff",
  "disc-2",
  "disc",
  "divide-circle",
  "divide-square",
  "divide",
  "dna-off",
  "dna",
  "dog",
  "dollar-sign",
  "door-closed",
  "door-open",
  "download-cloud",
  "download",
  "dribbble",
  "droplet",
  "droplets",
  "drumstick",
  "dumbbell",
  "ear-off",
  "ear",
  "edit-2",
  "edit-3",
  "edit",
  "egg-fried",
  "egg-off",
  "egg",
  "equal-not",
  "equal",
  "eraser",
  "euro",
  "expand",
  "external-link",
  "eye-off",
  "eye",
  "facebook",
  "factory",
  "fan",
  "fast-forward",
  "feather",
  "figma",
  "file-archive",
  "file-audio-2",
  "file-audio",
  "file-axis-3d",
  "file-badge-2",
  "file-badge",
  "file-bar-chart-2",
  "file-bar-chart",
  "file-box",
  "file-check-2",
  "file-check",
  "file-clock",
  "file-code",
  "file-cog-2",
  "file-cog",
  "file-diff",
  "file-digit",
  "file-down",
  "file-edit",
  "file-heart",
  "file-image",
  "file-input",
  "file-json-2",
  "file-json",
  "file-key-2",
  "file-key",
  "file-line-chart",
  "file-lock-2",
  "file-lock",
  "file-minus-2",
  "file-minus",
  "file-output",
  "file-pie-chart",
  "file-plus-2",
  "file-plus",
  "file-question",
  "file-scan",
  "file-search-2",
  "file-search",
  "file-signature",
  "file-spreadsheet",
  "file-symlink",
  "file-terminal",
  "file-text",
  "file-type-2",
  "file-type",
  "file-up",
  "file-video-2",
  "file-video",
  "file-volume-2",
  "file-volume",
  "file-warning",
  "file-x2",
  "file-x",
  "file",
  "files",
  "film",
  "filter-x",
  "filter",
  "fingerprint",
  "fish-off",
  "fish",
  "flag-off",
  "flag-triangle-left",
  "flag-triangle-right",
  "flag",
  "flame",
  "flashlight-off",
  "flashlight",
  "flask-conical-off",
  "flask-conical",
  "flask-round",
  "flip-horizontal-2",
  "flip-horizontal",
  "flip-vertical-2",
  "flip-vertical",
  "flower-2",
  "flower",
  "focus",
  "folder-archive",
  "folder-check",
  "folder-clock",
  "folder-closed",
  "folder-cog-2",
  "folder-cog",
  "folder-down",
  "folder-edit",
  "folder-git-2",
  "folder-git",
  "folder-heart",
  "folder-input",
  "folder-key",
  "folder-lock",
  "folder-minus",
  "folder-open",
  "folder-output",
  "folder-plus",
  "folder-search-2",
  "folder-search",
  "folder-symlink",
  "folder-tree",
  "folder-up",
  "folder-x",
  "folder",
  "folders",
  "footprints",
  "forklift",
  "form-input",
  "forward",
  "frame",
  "framer",
  "frown",
  "fuel",
  "function-square",
  "gamepad-2",
  "gamepad",
  "gauge",
  "gavel",
  "gem",
  "ghost",
  "gift",
  "git-branch-plus",
  "git-branch",
  "git-commit",
  "git-compare",
  "git-fork",
  "git-merge",
  "git-pull-request-closed",
  "git-pull-request-draft",
  "git-pull-request",
  "github",
  "gitlab",
  "glass-water",
  "glasses",
  "globe-2",
  "globe",
  "grab",
  "graduation-cap",
  "grape",
  "grid",
  "grip-horizontal",
  "grip-vertical",
  "grip",
  "hammer",
  "hand-metal",
  "hand",
  "hard-drive",
  "hard-hat",
  "hash",
  "haze",
  "heading-1",
  "heading-2",
  "heading-3",
  "heading-4",
  "heading-5",
  "heading-6",
  "heading",
  "headphones",
  "heart-crack",
  "heart-handshake",
  "heart-off",
  "heart-pulse",
  "heart",
  "help-circle",
  "helping-hand",
  "hexagon",
  "highlighter",
  "history",
  "home",
  "hop-off",
  "hop",
  "hotel",
  "hourglass",
  "ice-cream-2",
  "ice-cream",
  "image-minus",
  "image-off",
  "image-plus",
  "image",
  "import",
  "inbox",
  "indent",
  "indian-rupee",
  "infinity",
  "info",
  "inspect",
  "instagram",
  "italic",
  "japanese-yen",
  "joystick",
  "key",
  "keyboard",
  "lamp-ceiling",
  "lamp-desk",
  "lamp-floor",
  "lamp-wall-down",
  "lamp-wall-up",
  "lamp",
  "landmark",
  "languages",
  "laptop-2",
  "laptop",
  "lasso-select",
  "lasso",
  "laugh",
  "layers",
  "layout-dashboard",
  "layout-grid",
  "layout-list",
  "layout-template",
  "layout",
  "leaf",
  "library",
  "life-buoy",
  "lightbulb-off",
  "lightbulb",
  "line-chart",
  "link-2off",
  "link-2",
  "link",
  "linkedin",
  "list-checks",
  "list-end",
  "list-minus",
  "list-music",
  "list-ordered",
  "list-plus",
  "list-start",
  "list-tree",
  "list-video",
  "list-x",
  "list",
  "loader-2",
  "loader",
  "locate-fixed",
  "locate-off",
  "locate",
  "lock",
  "log-in",
  "log-out",
  "luggage",
  "magnet",
  "mail-check",
  "mail-minus",
  "mail-open",
  "mail-plus",
  "mail-question",
  "mail-search",
  "mail-warning",
  "mail-x",
  "mail",
  "mailbox",
  "mails",
  "map-pin-off",
  "map-pin",
  "map",
  "martini",
  "maximize-2",
  "maximize",
  "medal",
  "megaphone-off",
  "megaphone",
  "meh",
  "menu",
  "message-circle",
  "message-square-dashed",
  "message-square-plus",
  "message-square",
  "messages-square",
  "mic-2",
  "mic-off",
  "mic",
  "microscope",
  "microwave",
  "milestone",
  "milk-off",
  "milk",
  "minimize-2",
  "minimize",
  "minus-circle",
  "minus-square",
  "minus",
  "monitor-off",
  "monitor-smartphone",
  "monitor-speaker",
  "monitor",
  "moon",
  "more-horizontal",
  "more-vertical",
  "mountain-snow",
  "mountain",
  "mouse-pointer-2",
  "mouse-pointer-click",
  "mouse-pointer",
  "mouse",
  "move-3d",
  "move-diagonal-2",
  "move-diagonal",
  "move-horizontal",
  "move-vertical",
  "move",
  "music-2",
  "music-3",
  "music-4",
  "music",
  "navigation-2off",
  "navigation-2",
  "navigation-off",
  "navigation",
  "network",
  "newspaper",
  "nfc",
  "nut-off",
  "nut",
  "octagon",
  "option",
  "orbit",
  "outdent",
  "package-2",
  "package-check",
  "package-minus",
  "package-open",
  "package-plus",
  "package-search",
  "package-x",
  "package",
  "paint-bucket",
  "paintbrush-2",
  "paintbrush",
  "palette",
  "palmtree",
  "paperclip",
  "parking-circle-off",
  "parking-circle",
  "parking-square-off",
  "parking-square",
  "party-popper",
  "pause-circle",
  "pause-octagon",
  "pause",
  "pen-tool",
  "pencil",
  "percent",
  "person-standing",
  "phone-call",
  "phone-forwarded",
  "phone-incoming",
  "phone-missed",
  "phone-off",
  "phone-outgoing",
  "phone",
  "picture-in-picture-2",
  "picture-in-picture",
  "pie-chart",
  "piggy-bank",
  "pilcrow",
  "pill",
  "pin-off",
  "pin",
  "pipette",
  "pizza",
  "plane-landing",
  "plane-takeoff",
  "plane",
  "play-circle",
  "play",
  "plug-2",
  "plug-zap",
  "plug",
  "plus-circle",
  "plus-square",
  "plus",
  "pocket",
  "podcast",
  "pointer",
  "pound-sterling",
  "power-off",
  "power",
  "printer",
  "puzzle",
  "qr-code",
  "quote",
  "radio-receiver",
  "radio-tower",
  "radio",
  "rat",
  "receipt",
  "rectangle-horizontal",
  "rectangle-vertical",
  "recycle",
  "redo-2",
  "redo",
  "refresh-ccw",
  "refresh-cw",
  "refrigerator",
  "regex",
  "remove-formatting",
  "repeat-1",
  "repeat",
  "replace-all",
  "replace",
  "reply-all",
  "reply",
  "rewind",
  "rocket",
  "rocking-chair",
  "rotate-3d",
  "rotate-ccw",
  "rotate-cw",
  "router",
  "rss",
  "ruler",
  "russian-ruble",
  "sailboat",
  "salad",
  "sandwich",
  "save",
  "scale-3d",
  "scale",
  "scaling",
  "scan-face",
  "scan-line",
  "scan",
  "school-2",
  "school",
  "scissors",
  "screen-share-off",
  "screen-share",
  "scroll",
  "search",
  "send",
  "separator-horizontal",
  "separator-vertical",
  "server-cog",
  "server-crash",
  "server-off",
  "server",
  "settings-2",
  "settings",
  "share-2",
  "share",
  "sheet",
  "shield-alert",
  "shield-check",
  "shield-close",
  "shield-off",
  "shield-question",
  "shield",
  "ship",
  "shirt",
  "shopping-bag",
  "shopping-cart",
  "shovel",
  "shower-head",
  "shrink",
  "shrub",
  "shuffle",
  "sidebar-close",
  "sidebar-open",
  "sidebar",
  "sigma",
  "signal-high",
  "signal-low",
  "signal-medium",
  "signal-zero",
  "signal",
  "siren",
  "skip-back",
  "skip-forward",
  "skull",
  "slack",
  "slice",
  "sliders-horizontal",
  "sliders",
  "smartphone-charging",
  "smartphone-nfc",
  "smartphone",
  "smile-plus",
  "smile",
  "snowflake",
  "sofa",
  "sort-asc",
  "sort-desc",
  "soup",
  "space",
  "speaker",
  "spline",
  "split-square-horizontal",
  "split-square-vertical",
  "sprout",
  "square",
  "stamp",
  "star-half",
  "star-off",
  "star",
  "step-back",
  "step-forward",
  "stethoscope",
  "sticker",
  "sticky-note",
  "stop-circle",
  "store",
  "stretch-horizontal",
  "stretch-vertical",
  "strikethrough",
  "subscript",
  "subtitles",
  "sun-dim",
  "sun-medium",
  "sun-moon",
  "sun-snow",
  "sun",
  "sunrise",
  "sunset",
  "superscript",
  "swiss-franc",
  "switch-camera",
  "sword",
  "swords",
  "syringe",
  "table-2",
  "table",
  "tablet",
  "tablets",
  "tag",
  "tags",
  "target",
  "tent",
  "terminal-square",
  "terminal",
  "test-tube-2",
  "test-tube",
  "test-tubes",
  "text-cursor-input",
  "text-cursor",
  "text-selection",
  "text",
  "thermometer-snowflake",
  "thermometer-sun",
  "thermometer",
  "thumbs-down",
  "thumbs-up",
  "ticket",
  "timer-off",
  "timer-reset",
  "timer",
  "toggle-left",
  "toggle-right",
  "tornado",
  "tower-control",
  "toy-brick",
  "train",
  "trash-2",
  "trash",
  "tree-deciduous",
  "tree-pine",
  "trees",
  "trello",
  "trending-down",
  "trending-up",
  "triangle",
  "trophy",
  "truck",
  "tv-2",
  "tv",
  "twitch",
  "twitter",
  "type",
  "umbrella",
  "underline",
  "undo-2",
  "undo",
  "unlink-2",
  "unlink",
  "unlock",
  "upload-cloud",
  "upload",
  "usb",
  "user-check",
  "user-cog",
  "user-minus",
  "user-plus",
  "user-x",
  "user",
  "users",
  "utensils-crossed",
  "utensils",
  "utility-pole",
  "vault",
  "vegan",
  "venetian-mask",
  "verified",
  "vibrate-off",
  "vibrate",
  "video-off",
  "video",
  "view",
  "voicemail",
  "volume-1",
  "volume-2",
  "volume-x",
  "volume",
  "vote",
  "wallet",
  "wand-2",
  "wand",
  "warehouse",
  "watch",
  "waves",
  "webcam",
  "webhook",
  "wheat-off",
  "wheat",
  "whole-word",
  "wifi-off",
  "wifi",
  "wind",
  "wine-off",
  "wine",
  "wrap-text",
  "wrench",
  "x-circle",
  "x-octagon",
  "x-square",
  "x",
  "youtube",
  "zap-off",
  "zap",
  "zoom-in",
  "zoom-out"
];

// src/components/ui/modals/stickerModal.tsx
var htmlFromSticker = (sticker) => {
  if (sticker.type == "emoji") {
    return emojiFromString(sticker.html);
  }
  return sticker.html;
};
var stickerModal = class extends import_obsidian7.FuzzySuggestModal {
  constructor(app2, plugin, setIcon) {
    super(app2);
    this.plugin = plugin;
    this.setIcon = setIcon;
    this.resultContainerEl.toggleClass("mk-sticker-modal", true);
    this.inputEl.focus();
    this.emptyStateText = i18n_default.labels.findStickers;
    this.limit = 0;
  }
  renderSuggestion(item, el) {
    el.innerHTML = htmlFromSticker(item.item);
    el.setAttr("aria-label", item.item.name);
  }
  getItemText(item) {
    return item.name;
  }
  getItems() {
    const allLucide = lucideIcons.map((f4) => ({
      name: f4,
      type: "lucide",
      keywords: f4,
      value: f4,
      html: (0, import_obsidian7.getIcon)(f4).outerHTML
    }));
    const allCustom = [...this.plugin.index.iconsCache.keys()].map(
      (f4) => ({
        name: f4,
        type: "vault",
        keywords: f4,
        value: f4,
        html: this.plugin.index.iconsCache.get(f4)
      })
    );
    const allUI = [...Object.keys(uiIconSet)].map((f4) => ({
      name: f4,
      type: "vault",
      keywords: f4,
      value: f4,
      html: uiIconSet[f4]
    }));
    const allEmojis = Object.keys(emojis).reduce(
      (p3, c4) => [
        ...p3,
        ...emojis[c4].map((e4) => ({
          type: "emoji",
          name: e4.n[0],
          value: e4.u,
          html: e4.u
        }))
      ],
      []
    );
    return [...allCustom, ...allEmojis, ...allLucide, ...allUI];
  }
  onChooseItem(item, evt) {
    this.setIcon(item.type + "//" + item.value);
  }
};

// src/hooks/useLongPress.tsx
function isMouseEvent(e4) {
  return e4 && "screenX" in e4;
}

// src/components/Sidebar/FileSticker/FileSticker.tsx
var import_obsidian15 = require("obsidian");
init_compat_module();

// src/components/ui/modals/vaultChangeModals.ts
var import_obsidian8 = require("obsidian");

// src/types/space.ts
var FMMetadataKeys = (plugin) => [plugin.settings.fmKeyBanner, plugin.settings.fmKeySticker, plugin.settings.fmKeyColor];
var homeSpace = {
  name: "Home",
  alias: "Home",
  path: "spaces://$home",
  sortable: true,
  metadata: {
    sticker: "ui//mk-ui-home",
    contexts: []
  },
  space: null,
  contexts: [],
  type: "default",
  cacheType: "space"
};
var tagsSpace = {
  name: "Tags",
  alias: "Tags",
  path: "spaces://$tags",
  metadata: {
    sticker: "ui//mk-ui-tags",
    contexts: []
  },
  space: null,
  contexts: [],
  type: "default",
  cacheType: "space"
};
var allSpace = {
  name: "All Spaces",
  alias: "All Spaces",
  path: "spaces://$all",
  metadata: {
    sticker: "ui//mk-ui-spaces",
    contexts: []
  },
  space: null,
  contexts: [],
  type: "default",
  cacheType: "space"
};

// src/components/ui/modals/vaultChangeModals.ts
var VaultChangeModal = class extends import_obsidian8.Modal {
  constructor(plugin, file, action, space) {
    super(plugin.app);
    this.file = file;
    this.action = action;
    this.plugin = plugin;
    this.space = space;
  }
  onOpen() {
    const { contentEl } = this;
    let headerText;
    if (this.action === "rename") {
      headerText = i18n_default.labels.rename;
    } else if (this.action === "create folder") {
      headerText = i18n_default.labels.createFolder;
    } else if (this.action === "create note") {
      headerText = i18n_default.labels.createNote;
    }
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    const inputEl = contentEl.createEl("input");
    inputEl.style.cssText = "width: 100%; height: 2.5em; margin-bottom: 15px;";
    if (this.action === "rename") {
      if (this.file instanceof import_obsidian8.TFolder) {
        inputEl.value = this.file.name;
      } else {
        inputEl.value = this.file.name.substring(
          0,
          indexOfCharElseEOS(".", this.file.name)
        );
      }
    }
    inputEl.focus();
    let changeButtonText;
    if (this.action === "rename") {
      changeButtonText = i18n_default.buttons.rename;
    } else if (this.action === "create folder") {
      changeButtonText = i18n_default.buttons.createFolder;
    } else if (this.action === "create note") {
      changeButtonText = i18n_default.buttons.createNote;
    }
    const changeButton = contentEl.createEl("button", {
      text: changeButtonText
    });
    const cancelButton = contentEl.createEl("button", {
      text: i18n_default.buttons.cancel
    });
    cancelButton.style.cssText = "float: right;";
    cancelButton.addEventListener("click", () => {
      this.close();
    });
    const onClickAction = async () => {
      const newName = inputEl.value;
      if (this.action === "rename") {
        renameFile(this.plugin, this.file, newName);
      } else if (this.action === "create folder") {
        const path = !this.file || this.file.path == "/" ? newName : this.file.path + "/" + newName;
        if (getAbstractFileAtPath(app, path)) {
          new import_obsidian8.Notice(i18n_default.notice.folderExists);
          return;
        }
        this.app.vault.createFolder(path);
      }
      this.close();
    };
    changeButton.addEventListener("click", onClickAction);
    inputEl.addEventListener("keydown", (e4) => {
      if (e4.key === "Enter")
        onClickAction();
    });
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var MoveSuggestionModal = class extends import_obsidian8.FuzzySuggestModal {
  constructor(app2, files) {
    super(app2);
    this.files = files;
  }
  getItemText(item) {
    return item.path;
  }
  getItems() {
    return getAllFoldersInVault(this.app);
  }
  onChooseItem(item, evt) {
    this.files.forEach((f4) => {
      const file = getAbstractFileAtPath(app, f4);
      if (file) {
        this.app.vault.rename(file, item.path + "/" + file.name);
      }
    });
  }
};
var AddToSpaceModal = class extends import_obsidian8.FuzzySuggestModal {
  constructor(plugin, files) {
    super(app);
    this.plugin = plugin;
    this.files = files;
  }
  getItemText(space) {
    return space.name;
  }
  getItems() {
    return [homeSpace, ...this.plugin.index.allSpaces().filter((f4) => f4.type == "links")];
  }
  onChooseItem(space, evt) {
    this.files.forEach((f4) => {
      const path = uriByString(f4);
      if (path.type == "file" || path.type == "folder" || path.type == "vault") {
        insertSpaceItemAtIndex(this.plugin, space, f4, 0);
      } else if (path.type == "space" || path.type == "tag") {
        const _space = this.plugin.index.spacesIndex.get(f4);
        if (_space)
          insertSpaceItemAtIndex(this.plugin, space, f4, 0);
      }
    });
  }
};
var RemoveFromSpaceModal = class extends import_obsidian8.FuzzySuggestModal {
  constructor(plugin, file) {
    super(app);
    this.plugin = plugin;
    this.file = this.plugin.index.filesIndex.get(file);
  }
  getItemText(space) {
    return space.name;
  }
  getItems() {
    return this.file ? this.plugin.index.allSpaces().filter((f4) => f4.type == "links" && this.file.spaces.includes(f4.name)) : [];
  }
  onChooseItem(space, evt) {
    removePathsFromSpace(this.plugin, space, [this.file.path]);
  }
};

// src/superstate/spacesStore/spaces.ts
var import_lodash3 = __toESM(require_lodash());
var import_obsidian13 = require("obsidian");

// src/schemas/spaces.ts
var vaultSchema = {
  uniques: ["path"],
  cols: ["path", "parent", "created", "sticker", "color", "folder", "rank"],
  rows: []
};

// src/superstate/cacheParsers.ts
var import_lodash = __toESM(require_lodash());

// src/utils/metadata/frontmatter/detectYAMLType.ts
var detectYAMLType = (value, key2) => {
  if (typeof value === "string") {
    if (/\/\/(\S+?(?:jpe?g|png|gif|svg))/gi.test(value) || value.includes("unsplash")) {
      return "image";
    }
    if (/^\d{4}-\d{2}-\d{2}$/.test(value)) {
      return "date";
    }
    if (key2 == "tag" || key2 == "tags") {
      return "tag";
    }
    if (/\[\[.*?\]\]/.test(value)) {
      return "link";
    }
  } else if (typeof value === "number") {
    return "number";
  } else if (typeof value === "boolean") {
    return "boolean";
  } else if (!value) {
    return "unknown";
  } else if (Array.isArray(value) || typeof value === "string" && value.indexOf(",") > -1) {
    let arrayValue = Array.isArray(value) ? value : [];
    if (typeof value === "string" && value.indexOf(",") > -1) {
      arrayValue = parseMultiString(value);
    }
    if (key2 == "tag" || key2 == "tags") {
      return "tag-multi";
    }
    if (arrayValue.length == 1 && Array.isArray(arrayValue[0]) && arrayValue[0].length == 1 && typeof arrayValue[0][0] === "string") {
      return "link";
    }
    const types2 = uniq(arrayValue.map((f4) => detectYAMLType(f4, key2)));
    if (types2.length == 1 && types2[0] == "link") {
      return "link-multi";
    }
    return "option-multi";
  } else if (value.isLuxonDateTime) {
    return "date";
  } else if (value.isLuxonDuration) {
    return "duration";
  } else if (value.type == "file") {
    return "link";
  } else if (typeof value === "object" && !Array.isArray(value) && value !== null) {
    return "object";
  }
  return "text";
};

// src/utils/metadata/frontmatter/frontMatterKeys.ts
var frontMatterKeys = (fm) => {
  return Object.keys(fm != null ? fm : {}).filter((f4) => f4 != "position").filter((f4) => f4 != "tag" && f4 != "tags");
};

// src/utils/metadata/frontmatter/parseFrontMatter.ts
var parseFrontMatter = (field, value) => {
  const YAMLtype = detectYAMLType(value, field);
  switch (YAMLtype) {
    case "object":
      return JSON.stringify(value);
      break;
    case "number":
      return value.toString();
      break;
    case "boolean":
      return value ? "true" : "false";
      break;
    case "date":
      return value;
      break;
    case "duration":
      return serializeMultiDisplayString(Object.keys(value.values).reduce(
        (p3, c4) => [
          ...p3,
          ...value.values[c4] > 0 ? [value.values[c4] + " " + c4] : []
        ],
        []
      ));
      break;
    case "option-multi":
    case "link-multi":
      if (typeof value === "string") {
        return value;
      }
      return serializeMultiString(
        value.map((v3) => {
          if (!v3) {
            return "";
          }
          if (typeof v3 === "string") {
            return v3;
          }
          if (v3.path) {
            return v3.path;
          }
          if (Array.isArray(value) && v3.length == 1 && Array.isArray(v3[0]) && v3[0].length == 1 && typeof v3[0][0] === "string") {
            return v3[0][0];
          }
          return JSON.stringify(v3);
        })
      );
      break;
    case "link":
      {
        if (Array.isArray(value) && value.length == 1 && Array.isArray(value[0]) && value[0].length == 1 && typeof value[0][0] === "string") {
          return value[0][0];
        } else if (typeof value === "string") {
          return value;
        }
        return value.path;
      }
      break;
    case "text":
    case "tag":
    case "image":
      return value;
      break;
  }
  return "";
};

// src/utils/metadata/frontmatter/yamlTypeToMDBType.ts
var yamlTypeToMDBType = (YAMLtype) => {
  switch (YAMLtype) {
    case "duration":
      return "text";
      break;
    case "unknown":
      return "text";
      break;
  }
  return YAMLtype;
};

// src/utils/contexts/predicate/filter.ts
var stringEqual = (value, filterValue) => {
  return value == filterValue;
};
var empty2 = (value, filterValue) => {
  return (value != null ? value : "").length == 0;
};
var stringCompare = (value, filterValue) => {
  return (value != null ? value : "").toLowerCase().includes((filterValue != null ? filterValue : "").toLowerCase());
};
var greaterThan = (value, filterValue) => {
  return parseFloat(value) > parseFloat(filterValue);
};
var lessThan = (value, filterValue) => {
  return parseInt(value) > parseInt(filterValue);
};
var listIncludes = (value, filterValue) => {
  const valueList = value ? parseMultiString(value) : [];
  const strings = filterValue ? parseMultiString(filterValue) : [];
  return strings.some((f4) => valueList.some((g4) => g4 == f4));
};
var isSameDayAsToday = (value) => {
  const inputDate = new Date(`${value}T00:00`);
  const currentDate = new Date();
  return inputDate.getMonth() === currentDate.getMonth() && inputDate.getDate() === currentDate.getDate();
};
var filterReturnForCol = (col, filter, row) => {
  if (!col)
    return true;
  const filterType = filterFnTypes[filter == null ? void 0 : filter.fn];
  let result = true;
  if (filterType && filterType.fn) {
    result = filterType.fn(row[filter.field], filter.value);
  }
  return result;
};

// src/utils/contexts/predicate/filterFns/filterFnTypes.ts
var filterFnTypes = {
  isNotEmpty: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => !empty2(v3, ""),
    valueType: "none"
  },
  isEmpty: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => empty2(v3, ""),
    valueType: "none"
  },
  include: {
    fn: (v3, f4) => stringCompare(v3, f4),
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    valueType: "text"
  },
  notInclude: {
    type: ["text", "file", "link", "link-multi", "fileprop", "image"],
    fn: (v3, f4) => !stringCompare(v3, f4),
    valueType: "text"
  },
  is: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => stringEqual(v3, f4),
    valueType: "text"
  },
  isNot: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => !stringEqual(v3, f4),
    valueType: "text"
  },
  equal: {
    type: ["number"],
    fn: (v3, f4) => stringEqual(v3, f4),
    valueType: "number"
  },
  isGreatThan: {
    type: ["number"],
    fn: (v3, f4) => greaterThan(v3, f4),
    valueType: "number"
  },
  isLessThan: {
    type: ["number"],
    fn: (v3, f4) => lessThan(v3, f4),
    valueType: "number"
  },
  isLessThanOrEqual: {
    type: ["number"],
    fn: (v3, f4) => !greaterThan(v3, f4),
    valueType: "number"
  },
  isGreatThanOrEqual: {
    type: ["number"],
    fn: (v3, f4) => !lessThan(v3, f4),
    valueType: "number"
  },
  dateBefore: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => lessThan(v3, f4),
    valueType: "date"
  },
  dateAfter: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => greaterThan(v3, f4),
    valueType: "date"
  },
  isSameDateAsToday: {
    type: ["date"],
    fn: (v3, f4) => isSameDayAsToday(v3, f4),
    valueType: "none"
  },
  isAnyInList: {
    type: ["option", "context", "option-multi", "context-multi", "tags-multi", "tags"],
    fn: (v3, f4) => listIncludes(v3, f4),
    valueType: "list"
  },
  isNoneInList: {
    type: ["option", "context", "option-multi", "context-multi", "tags-multi", "tags"],
    fn: (v3, f4) => !listIncludes(v3, f4),
    valueType: "list"
  },
  isTrue: {
    type: ["boolean"],
    fn: (v3, f4) => v3 == "true",
    valueType: "none"
  },
  isFalse: {
    type: ["boolean"],
    fn: (v3, f4) => v3 != "true",
    valueType: "none"
  }
};

// src/utils/spaces/query.ts
var filterFilesForAny = (files, filters) => {
  const newArray = filters.reduce((p3, c4) => {
    const [result, remaining] = p3;
    const filteredFiles = c4.type == "fileprop" ? filterFileprop(remaining, c4) : c4.type == "filemeta" ? filterFilemeta(remaining, c4) : c4.type == "frontmatter" ? filterFM(remaining, c4) : [];
    const diffArray = remaining.filter((x5) => !filteredFiles.includes(x5));
    return [[...result, ...filteredFiles], diffArray];
  }, [[], files]);
  return newArray[0];
};
var filterFilesForAll = (files, filters) => {
  return filters.reduce((p3, c4) => {
    return c4.type == "fileprop" ? filterFileprop(p3, c4) : c4.type == "filemeta" ? filterFilemeta(p3, c4) : c4.type == "frontmatter" ? filterFM(p3, c4) : [];
  }, files);
};
var filterFM = (files, def) => {
  return files.filter((f4) => {
    const fm = f4.frontmatter;
    if (!fm || !fm[def.field]) {
      return false;
    }
    const filterFn = filterFnTypes[def.fn];
    let result = true;
    if (filterFn) {
      result = filterFn.fn(parseFrontMatter(def.field, fm[def.field]), def.value);
    }
    return result;
  });
};
var filterFilemeta = (files, def) => {
  return files.filter((f4) => {
    let value = "";
    if (def.field == "outlinks") {
      value = serializeMultiString(f4.outlinks);
    } else if (def.field == "inlinks") {
      value = serializeMultiString(f4.inlinks);
    } else if (def.field == "tags") {
      value = serializeMultiString(f4.tags);
    }
    const filterFn = filterFnTypes[def.fn];
    let result = true;
    if (filterFn) {
      result = filterFn.fn(value, def.value);
    }
    return result;
  });
};
var filterFileprop = (files, def) => {
  return files.filter((f4) => {
    const vaultItemFields = ["name", "path", "sticker", "color", "isFolder", "extension", "ctime", "mtime", "size", "parent"];
    if (vaultItemFields.includes(def.field)) {
      const filterFn = filterFnTypes[def.fn];
      let result = true;
      if (filterFn) {
        result = filterFn.fn(f4[def.field], def.value);
      }
      return result;
    }
    return true;
  });
};
var fileByDef = (filters, file) => {
  const fileInFilter = filters.reduce((p3, c4) => {
    if (!p3 || c4.filters.length == 0)
      return p3;
    const result = c4.type == "any" ? filterFilesForAny([file], c4.filters).length > 0 : filterFilesForAll([file], c4.filters).length > 0;
    return result;
  }, true);
  return fileInFilter;
};

// src/superstate/cacheParsers.ts
var fileMetadataToVaultItem = (cache) => {
  var _a2, _b2;
  return {
    path: cache.path,
    parent: cache.parent,
    color: cache.color,
    created: (_b2 = (_a2 = cache.ctime) == null ? void 0 : _a2.toString()) != null ? _b2 : "",
    sticker: cache.sticker,
    folder: cache.isFolder ? "true" : "false",
    rank: cache.rank
  };
};

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}

// node_modules/date-fns/esm/toDate/index.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof6(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof6(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

// node_modules/date-fns/esm/addDays/index.js
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

// node_modules/date-fns/esm/addMonths/index.js
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  var dayOfMonth = date.getDate();
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

// node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions3 = {};
function getDefaultOptions() {
  return defaultOptions3;
}

// node_modules/date-fns/esm/startOfWeek/index.js
function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfISOWeek/index.js
function startOfISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  return startOfWeek(dirtyDate, {
    weekStartsOn: 1
  });
}

// node_modules/date-fns/esm/getISOWeekYear/index.js
function getISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/startOfISOWeekYear/index.js
function startOfISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  var date = startOfISOWeek(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

// node_modules/date-fns/esm/addWeeks/index.js
function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}

// node_modules/date-fns/esm/addYears/index.js
function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

// node_modules/date-fns/esm/max/index.js
function _typeof2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function _typeof6(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function _typeof6(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function max(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof2(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/min/index.js
function _typeof3(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof3 = function _typeof6(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof3 = function _typeof6(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof3(obj);
}
function min(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof3(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/compareAsc/index.js
function compareAsc(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();
  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
  } else {
    return diff;
  }
}

// node_modules/date-fns/esm/isSameDay/index.js
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/date-fns/esm/isDate/index.js
function _typeof4(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof4 = function _typeof6(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof4 = function _typeof6(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof4(obj);
}
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof4(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}

// node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}

// node_modules/date-fns/esm/differenceInCalendarMonths/index.js
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

// node_modules/date-fns/esm/differenceInCalendarWeeks/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, options) {
  requiredArgs(2, arguments);
  var startOfWeekLeft = startOfWeek(dirtyDateLeft, options);
  var startOfWeekRight = startOfWeek(dirtyDateRight, options);
  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);
  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
}

// node_modules/date-fns/esm/differenceInMilliseconds/index.js
function differenceInMilliseconds(dateLeft, dateRight) {
  requiredArgs(2, arguments);
  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();
}

// node_modules/date-fns/esm/_lib/roundingMethods/index.js
var roundingMap = {
  ceil: Math.ceil,
  round: Math.round,
  floor: Math.floor,
  trunc: function trunc(value) {
    return value < 0 ? Math.ceil(value) : Math.floor(value);
  }
};
var defaultRoundingMethod = "trunc";
function getRoundingMethod(method) {
  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
}

// node_modules/date-fns/esm/endOfDay/index.js
function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/endOfMonth/index.js
function endOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/isLastDayOfMonth/index.js
function isLastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  return endOfDay(date).getTime() === endOfMonth(date).getTime();
}

// node_modules/date-fns/esm/differenceInMonths/index.js
function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));
  var result;
  if (difference < 1) {
    result = 0;
  } else {
    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
      dateLeft.setDate(30);
    }
    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;
    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {
      isLastMonthNotFull = false;
    }
    result = sign * (difference - Number(isLastMonthNotFull));
  }
  return result === 0 ? 0 : result;
}

// node_modules/date-fns/esm/differenceInSeconds/index.js
function differenceInSeconds(dateLeft, dateRight, options) {
  requiredArgs(2, arguments);
  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1e3;
  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
}

// node_modules/date-fns/esm/startOfMonth/index.js
function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfYear/index.js
function startOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var cleanDate = toDate(dirtyDate);
  var date = new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/endOfWeek/index.js
function endOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  date.setDate(date.getDate() + diff);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/endOfISOWeek/index.js
function endOfISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  return endOfWeek(dirtyDate, {
    weekStartsOn: 1
  });
}

// node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

// node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
var MILLISECONDS_IN_DAY2 = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK3 = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK3) + 1;
}

// node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}

// node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters = {
  y: function y3(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  M: function M3(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  d: function d3(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  a: function a3(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  h: function h3(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  H: function H3(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  m: function m3(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  s: function s3(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  S: function S2(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var lightFormatters_default = formatters;

// node_modules/date-fns/esm/_lib/format/formatters/index.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters2 = {
  G: function G2(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  y: function y4(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, {
        unit: "year"
      });
    }
    return lightFormatters_default.y(date, token);
  },
  Y: function Y2(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  R: function R2(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  u: function u3(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  Q: function Q2(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  q: function q4(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  M: function M4(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters_default.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  L: function L3(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  w: function w4(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  I: function I3(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  d: function d4(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getUTCDate(), {
        unit: "date"
      });
    }
    return lightFormatters_default.d(date, token);
  },
  D: function D3(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  E: function E3(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  e: function e3(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  c: function c3(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  i: function i3(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  a: function a4(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  b: function b3(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  B: function B4(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  h: function h4(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0)
        hours = 12;
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return lightFormatters_default.h(date, token);
  },
  H: function H4(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getUTCHours(), {
        unit: "hour"
      });
    }
    return lightFormatters_default.H(date, token);
  },
  K: function K2(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  k: function k4(date, token, localize2) {
    var hours = date.getUTCHours();
    if (hours === 0)
      hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  m: function m4(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return lightFormatters_default.m(date, token);
  },
  s: function s4(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getUTCSeconds(), {
        unit: "second"
      });
    }
    return lightFormatters_default.s(date, token);
  },
  S: function S3(date, token) {
    return lightFormatters_default.S(date, token);
  },
  X: function X2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  x: function x4(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  O: function O3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  z: function z4(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  t: function t3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  T: function T5(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset2, dirtyDelimiter) {
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset2, dirtyDelimiter) {
  if (offset2 % 60 === 0) {
    var sign = offset2 > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset2) / 60, 2);
  }
  return formatTimezone(offset2, dirtyDelimiter);
}
function formatTimezone(offset2, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var formatters_default = formatters2;

// node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
var longFormatters_default = longFormatters;

// node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count2, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count2 === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count2.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
var formatDistance_default = formatDistance;

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatLong_default = formatLong;

// node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
var formatRelative_default = formatRelative;

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
var localize_default = localize;

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key2 = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key2) : key2;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key2 in object) {
    if (object.hasOwnProperty(key2) && predicate(object[key2])) {
      return key2;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key2 = 0; key2 < array.length; key2++) {
    if (predicate(array[key2])) {
      return key2;
    }
  }
  return void 0;
}

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var match_default = match;

// node_modules/date-fns/esm/locale/en-US/index.js
var locale = {
  code: "en-US",
  formatDistance: formatDistance_default,
  formatLong: formatLong_default,
  formatRelative: formatRelative_default,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var en_US_default = locale;

// node_modules/date-fns/esm/_lib/defaultLocale/index.js
var defaultLocale_default = en_US_default;

// node_modules/date-fns/esm/format/index.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions4 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions4.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions4.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions4.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions4.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale2.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale2.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters_default[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale2.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

// node_modules/date-fns/esm/_lib/assign/index.js
function assign(target, object) {
  if (target == null) {
    throw new TypeError("assign requires that input parameter not be null or undefined");
  }
  for (var property2 in object) {
    if (Object.prototype.hasOwnProperty.call(object, property2)) {
      ;
      target[property2] = object[property2];
    }
  }
  return target;
}

// node_modules/date-fns/esm/_lib/cloneObject/index.js
function cloneObject(object) {
  return assign({}, object);
}

// node_modules/date-fns/esm/formatDistance/index.js
var MINUTES_IN_DAY = 1440;
var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
var MINUTES_IN_MONTH = 43200;
var MINUTES_IN_TWO_MONTHS = 86400;
function formatDistance3(dirtyDate, dirtyBaseDate, options) {
  var _ref, _options$locale;
  requiredArgs(2, arguments);
  var defaultOptions4 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions4.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  if (!locale2.formatDistance) {
    throw new RangeError("locale must contain formatDistance property");
  }
  var comparison = compareAsc(dirtyDate, dirtyBaseDate);
  if (isNaN(comparison)) {
    throw new RangeError("Invalid time value");
  }
  var localizeOptions = assign(cloneObject(options), {
    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),
    comparison
  });
  var dateLeft;
  var dateRight;
  if (comparison > 0) {
    dateLeft = toDate(dirtyBaseDate);
    dateRight = toDate(dirtyDate);
  } else {
    dateLeft = toDate(dirtyDate);
    dateRight = toDate(dirtyBaseDate);
  }
  var seconds = differenceInSeconds(dateRight, dateLeft);
  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1e3;
  var minutes = Math.round((seconds - offsetInSeconds) / 60);
  var months;
  if (minutes < 2) {
    if (options !== null && options !== void 0 && options.includeSeconds) {
      if (seconds < 5) {
        return locale2.formatDistance("lessThanXSeconds", 5, localizeOptions);
      } else if (seconds < 10) {
        return locale2.formatDistance("lessThanXSeconds", 10, localizeOptions);
      } else if (seconds < 20) {
        return locale2.formatDistance("lessThanXSeconds", 20, localizeOptions);
      } else if (seconds < 40) {
        return locale2.formatDistance("halfAMinute", 0, localizeOptions);
      } else if (seconds < 60) {
        return locale2.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale2.formatDistance("xMinutes", 1, localizeOptions);
      }
    } else {
      if (minutes === 0) {
        return locale2.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale2.formatDistance("xMinutes", minutes, localizeOptions);
      }
    }
  } else if (minutes < 45) {
    return locale2.formatDistance("xMinutes", minutes, localizeOptions);
  } else if (minutes < 90) {
    return locale2.formatDistance("aboutXHours", 1, localizeOptions);
  } else if (minutes < MINUTES_IN_DAY) {
    var hours = Math.round(minutes / 60);
    return locale2.formatDistance("aboutXHours", hours, localizeOptions);
  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
    return locale2.formatDistance("xDays", 1, localizeOptions);
  } else if (minutes < MINUTES_IN_MONTH) {
    var days = Math.round(minutes / MINUTES_IN_DAY);
    return locale2.formatDistance("xDays", days, localizeOptions);
  } else if (minutes < MINUTES_IN_TWO_MONTHS) {
    months = Math.round(minutes / MINUTES_IN_MONTH);
    return locale2.formatDistance("aboutXMonths", months, localizeOptions);
  }
  months = differenceInMonths(dateRight, dateLeft);
  if (months < 12) {
    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
    return locale2.formatDistance("xMonths", nearestMonth, localizeOptions);
  } else {
    var monthsSinceStartOfYear = months % 12;
    var years = Math.floor(months / 12);
    if (monthsSinceStartOfYear < 3) {
      return locale2.formatDistance("aboutXYears", years, localizeOptions);
    } else if (monthsSinceStartOfYear < 9) {
      return locale2.formatDistance("overXYears", years, localizeOptions);
    } else {
      return locale2.formatDistance("almostXYears", years + 1, localizeOptions);
    }
  }
}

// node_modules/date-fns/esm/getDaysInMonth/index.js
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth2 = new Date(0);
  lastDayOfMonth2.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}

// node_modules/date-fns/esm/getISOWeek/index.js
var MILLISECONDS_IN_WEEK4 = 6048e5;
function getISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK4) + 1;
}

// node_modules/date-fns/esm/getTime/index.js
function getTime(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

// node_modules/date-fns/esm/getUnixTime/index.js
function getUnixTime(dirtyDate) {
  requiredArgs(1, arguments);
  return Math.floor(getTime(dirtyDate) / 1e3);
}

// node_modules/date-fns/esm/getWeekYear/index.js
function getWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/startOfWeekYear/index.js
function startOfWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions4 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions4.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions4.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  var date = startOfWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/getWeek/index.js
var MILLISECONDS_IN_WEEK5 = 6048e5;
function getWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK5) + 1;
}

// node_modules/date-fns/esm/lastDayOfMonth/index.js
function lastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/getWeeksInMonth/index.js
function getWeeksInMonth(date, options) {
  requiredArgs(1, arguments);
  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;
}

// node_modules/date-fns/esm/isAfter/index.js
function isAfter2(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

// node_modules/date-fns/esm/isBefore/index.js
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

// node_modules/date-fns/esm/isSameMonth/index.js
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

// node_modules/date-fns/esm/isSameYear/index.js
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

// node_modules/date-fns/esm/subDays/index.js
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}

// node_modules/date-fns/esm/setMonth/index.js
function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

// node_modules/date-fns/esm/setYear/index.js
function setYear(dirtyDate, dirtyYear) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var year = toInteger(dirtyYear);
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  }
  date.setFullYear(year);
  return date;
}

// src/utils/metadata/frontmatter/fm.ts
var import_lodash2 = __toESM(require_lodash());
var import_obsidian10 = require("obsidian");

// src/utils/metadata/dv.ts
var import_obsidian9 = require("obsidian");
var LocationWrapper = {
  fullLine: { start: "", end: "" },
  brackets: { start: "[", end: "]" },
  parenthesis: { start: "(", end: ")" }
};
var fieldComponents = [
  "inQuote",
  "inList",
  "startStyle",
  "attribute",
  "endStyle",
  "beforeSeparatorSpacer",
  "afterSeparatorSpacer",
  "values"
];
var genericFieldRegex = "(?<inQuote>>(\\s+)?)?(?<inList>- )?(?<startStyle>[_\\*~`]*)(?<attribute>[0-9\\w\\p{Letter}\\p{Emoji_Presentation}][-0-9\\w\\p{Letter}\\p{Emoji_Presentation}\\s]*)(?<endStyle>[_\\*~`]*)(?<beforeSeparatorSpacer>\\s*)";
var inlineFieldRegex = (attribute) => `(?<inQuote>>(\\s+)?)?(?<inList>- )?(?<startStyle>[_\\*~\`]*)(?<attribute>${attribute})(?<endStyle>[_\\*~\`]*)(?<beforeSeparatorSpacer>\\s*)::(?<afterSeparatorSpacer>\\s*)`;
var fullLineRegex = new RegExp(
  `^${genericFieldRegex}::\\s*(?<values>.*)?`,
  "u"
);
var inSentenceRegexBrackets = new RegExp(
  `\\[${genericFieldRegex}::\\s*(?<values>[^\\]]+)?\\]`,
  "gu"
);
var inSentenceRegexPar = new RegExp(
  `\\(${genericFieldRegex}::\\s*(?<values>[^\\)]+)?\\)`,
  "gu"
);
var encodeLink = (value) => {
  return value ? value.replace(/\[\[/g, "\u{1F54C}\u{1F527}").replace(/\]\]/g, "\u{1F413}\u{1F400}") : value;
};
var decodeLink = (value) => {
  return value ? value.replace(/🕌🔧/gu, "[[").replace(/🐓🐀/gu, "]]") : value;
};
var matchInlineFields = (regex, line, attribute, input, location = "fullLine") => {
  const sR = line.matchAll(regex);
  let next = sR.next();
  const newFields = [];
  while (!next.done) {
    const match2 = next.value;
    if (match2.groups && Object.keys(match2.groups).every((j4) => fieldComponents.includes(j4))) {
      const {
        inList,
        inQuote,
        startStyle,
        endStyle,
        beforeSeparatorSpacer,
        afterSeparatorSpacer,
        values
      } = match2.groups;
      const inputArray = input ? input.replace(/(\,\s+)/g, ",").split(",") : [""];
      const newValue = inputArray.length == 1 ? inputArray[0] : `${serializeMultiDisplayString(inputArray)}`;
      const start = LocationWrapper[location].start;
      const end = LocationWrapper[location].end;
      newFields.push({
        oldField: match2[0],
        newField: `${inQuote || ""}${start}${inList || ""}${startStyle}${attribute}${endStyle}${beforeSeparatorSpacer}::${afterSeparatorSpacer}${newValue}${end}`
      });
    }
    next = sR.next();
  }
  return newFields;
};
async function replaceValues(plugin, fileOrFilePath, attribute, input, previousItemsCount = 0) {
  var _a2, _b2;
  let file;
  if (fileOrFilePath instanceof import_obsidian9.TFile) {
    file = fileOrFilePath;
  } else {
    const _file = plugin.app.vault.getAbstractFileByPath(fileOrFilePath);
    if (_file instanceof import_obsidian9.TFile && _file.extension == "md") {
      file = _file;
    } else {
      throw Error("path doesn't correspond to a proper file");
    }
  }
  const content = (await plugin.app.vault.read(file)).split("\n");
  const frontmatter = (_a2 = plugin.app.metadataCache.getFileCache(file)) == null ? void 0 : _a2.frontmatter;
  const skippedLines = [];
  const {
    position: { start, end }
  } = frontmatter ? frontmatter : { position: { start: void 0, end: void 0 } };
  const newContent = content.map((line, i4) => {
    const encodedInput = encodeLink(input);
    let encodedLine = encodeLink(line);
    const fullLineRegex2 = new RegExp(
      `^${inlineFieldRegex(attribute)}(?<values>[^\\]]*)`,
      "u"
    );
    const fR = encodedLine.match(fullLineRegex2);
    if ((fR == null ? void 0 : fR.groups) && Object.keys(fR.groups).every((j4) => fieldComponents.includes(j4))) {
      const {
        inList,
        inQuote,
        startStyle,
        endStyle,
        beforeSeparatorSpacer,
        afterSeparatorSpacer,
        values
      } = fR.groups;
      const inputArray = input ? input.replace(/(\,\s+)/g, ",").split(",").sort() : [];
      const hiddenValue = "";
      const newValue = inputArray.length == 1 ? inputArray[0] : `${serializeMultiDisplayString(inputArray)}`;
      return `${inQuote || ""}${inList || ""}${startStyle}${attribute}${endStyle}${beforeSeparatorSpacer}::${afterSeparatorSpacer}${hiddenValue + newValue}`;
    } else {
      const newFields = [];
      const inSentenceRegexBrackets2 = new RegExp(
        `\\[${inlineFieldRegex(attribute)}(?<values>[^\\]]+)?\\]`,
        "gu"
      );
      const inSentenceRegexPar2 = new RegExp(
        `\\(${inlineFieldRegex(attribute)}(?<values>[^\\)]+)?\\)`,
        "gu"
      );
      newFields.push(
        ...matchInlineFields(
          inSentenceRegexBrackets2,
          encodedLine,
          attribute,
          encodedInput,
          "brackets" /* brackets */
        )
      );
      newFields.push(
        ...matchInlineFields(
          inSentenceRegexPar2,
          encodedLine,
          attribute,
          encodedInput,
          "parenthesis" /* parenthesis */
        )
      );
      newFields.forEach((field) => {
        const fieldRegex = new RegExp(
          field.oldField.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"),
          "u"
        );
        encodedLine = encodedLine.replace(fieldRegex, field.newField);
      });
      return decodeLink(encodedLine);
    }
  });
  await plugin.app.vault.modify(
    file,
    newContent.filter((line, i4) => !skippedLines.includes(i4)).join("\n")
  );
  const editor = (_b2 = plugin.app.workspace.getActiveViewOfType(import_obsidian9.MarkdownView)) == null ? void 0 : _b2.editor;
  if (editor) {
    const lineNumber = editor.getCursor().line;
    editor.setCursor({
      line: editor.getCursor().line,
      ch: editor.getLine(lineNumber).length
    });
  }
}

// src/utils/metadata/frontmatter/fm.ts
var saveContextToFile = (file, cols, context, plugin) => {
  if (app.fileManager.processFrontMatter) {
    app.fileManager.processFrontMatter(file, (frontmatter) => {
      Object.keys(context).filter(
        (f4) => cols.find((c4) => c4.name == f4) && cols.find((c4) => c4.name == f4).hidden != "true" && !cols.find((c4) => c4.name == f4).type.contains("file") && context[f4]
      ).forEach((f4) => {
        const col = cols.find((c4) => c4.name == f4);
        frontmatter[f4] = valueForFrontmatter(col.type, context[f4]);
        frontmatter[f4] = valueForFrontmatter(col.type, context[f4]);
      });
    });
  }
};
var frontMatterForFile = (file) => {
  let currentCache;
  if (file instanceof import_obsidian10.TFile && app.metadataCache.getFileCache(file) !== null) {
    currentCache = app.metadataCache.getFileCache(file);
  }
  return currentCache == null ? void 0 : currentCache.frontmatter;
};
var guestimateTypes = (_files, plugin, dv) => {
  const typesArray = _files.map((f4) => getAbstractFileAtPath(app, f4)).filter((f4) => f4).map((k5) => {
    const fm = dv && plugin.dataViewAPI() ? plugin.dataViewAPI().page(k5.path) : frontMatterForFile(k5);
    const fmKeys = dv ? Object.keys(fm != null ? fm : {}).filter(
      (f4, i4, self2) => !self2.find(
        (g4, j4) => g4.toLowerCase().replace(/\s/g, "-") == f4.toLowerCase().replace(/\s/g, "-") && i4 > j4
      ) ? true : false
    ).filter((f4) => f4 != "file") : frontMatterKeys(fm);
    return fmKeys.reduce(
      (pk, ck) => ({ ...pk, [ck]: detectYAMLType(fm[ck], ck) }),
      {}
    );
  });
  const types2 = typesArray.reduce(
    (p3, c4) => {
      const newSet = Object.keys(c4).reduce(
        (pk, ck) => {
          var _a2;
          return { ...pk, [ck]: [...(_a2 = p3 == null ? void 0 : p3[ck]) != null ? _a2 : [], c4[ck]] };
        },
        { ...p3 }
      );
      return newSet;
    },
    {}
  );
  const guessType = (ts) => {
    return import_lodash2.default.head((0, import_lodash2.default)(ts).countBy().entries().maxBy(import_lodash2.default.last));
  };
  const guessedTypes = Object.keys(types2).reduce((p3, c4) => {
    return { ...p3, [c4]: guessType(types2[c4]) };
  }, {});
  return guessedTypes;
};
var valueForFrontmatter = (type, value) => {
  if (type == "number") {
    return parseFloat(value);
  } else if (type == "boolean") {
    return value == "true";
  } else if (type.contains("multi")) {
    return parseMultiString(value).map(
      (f4) => valueForFrontmatter(type.replace("-multi", ""), f4)
    );
  } else if (type.contains("link") || type.contains("context")) {
    return `[[${value}]]`;
  }
  return value;
};
var valueForDataview = (type, value) => {
  if (type.contains("link") || type.contains("context")) {
    return `[[${value}]]`;
  }
  return value;
};
var renameFrontmatterKey = (plugin, path, key2, name) => {
  const afile = getAbstractFileAtPath(app, path);
  if (afile && afile instanceof import_obsidian10.TFile) {
    if (app.fileManager.processFrontMatter) {
      app.fileManager.processFrontMatter(afile, (frontmatter) => {
        if (key2 in frontmatter) {
          frontmatter[name] = frontmatter[key2];
          delete frontmatter[key2];
        }
      });
    }
  }
};
var defaultValueForType = (value, type) => {
  if (type == "date") {
    return format(Date.now(), "yyyy-MM-dd");
  }
  if (type == "number") {
    return 0;
  }
  if (type == "boolean") {
    return true;
  }
  if (type == "link") {
    return "[[Select Note]]";
  }
  if (type == "option") {
    return "one, two";
  }
  if (type == "text") {
    return " ";
  }
  if (type == "image") {
    return "https://images.unsplash.com/photo-1675789652575-0a5d2425b6c2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80";
  }
};
var changeFrontmatterType = (plugin, path, key2, type) => {
  const afile = getAbstractFileAtPath(app, path);
  if (afile && afile instanceof import_obsidian10.TFile) {
    if (app.fileManager.processFrontMatter) {
      app.fileManager.processFrontMatter(afile, (frontmatter) => {
        if (key2 in frontmatter) {
          frontmatter[key2] = defaultValueForType(frontmatter[key2], type);
        }
      });
    }
  }
};
var deleteFrontmatterValue = (plugin, path, key2) => {
  const afile = getAbstractFileAtPath(app, path);
  if (afile && afile instanceof import_obsidian10.TFile) {
    if (app.fileManager.processFrontMatter) {
      app.fileManager.processFrontMatter(afile, (frontmatter) => {
        if (plugin.dataViewAPI()) {
          if (plugin.dataViewAPI().page(path)[key2] && !frontmatter[key2]) {
            replaceValues(plugin, path, key2, "");
          } else {
            if (key2 in frontmatter) {
              delete frontmatter[key2];
            }
          }
        } else {
          if (key2 in frontmatter) {
            delete frontmatter[key2];
          }
        }
      });
    }
  }
};
var saveFrontmatterValue = (plugin, path, key2, value, type, forceSave) => {
  let afile = getAbstractFileAtPath(app, path);
  const fileCache = plugin.index.filesIndex.get(path);
  if (afile && fileCache) {
    if (fileCache.isFolder && fileCache.folderNote) {
      afile = getAbstractFileAtPath(app, fileCache.folderNote.folderNotePath);
    }
    if (afile instanceof import_obsidian10.TFile) {
      if (app.fileManager.processFrontMatter) {
        app.fileManager.processFrontMatter(afile, (frontmatter) => {
          var _a2;
          if (plugin.dataViewAPI()) {
            if (((_a2 = plugin.dataViewAPI().page(afile.path)) == null ? void 0 : _a2[key2]) && !frontmatter[key2]) {
              replaceValues(plugin, afile.path, key2, valueForDataview(type, value));
            } else {
              if (key2 in frontmatter || forceSave) {
                frontmatter[key2] = valueForFrontmatter(type, value);
              }
            }
          } else {
            if (key2 in frontmatter || forceSave) {
              frontmatter[key2] = valueForFrontmatter(type, value);
            }
          }
        });
      }
    }
  }
};

// src/utils/metadata/tags.ts
var import_obsidian11 = require("obsidian");
var tagKeys = ["tag", "tags", "Tag", "Tags"];
var tagToTagPath = (tag) => {
  if (!tag)
    return null;
  let string = tag;
  if (string.charAt(0) != "#")
    string = "#" + string;
  return string.replace(/\//g, "+");
};
var tagPathToTag = (string) => {
  return filePathToString(string).replace(/\+/g, "/");
};
var loadTags = (plugin) => {
  var _a2;
  const folder = plugin.settings.spacesFolder == "" ? app.vault.getRoot() : getAbstractFileAtPath(
    app,
    getFolderPathFromString(plugin.settings.spacesFolder)
  );
  return uniq([
    ...Object.keys(app.metadataCache.getTags()),
    ...(_a2 = folder == null ? void 0 : folder.children.filter(
      (f4) => f4 instanceof import_obsidian11.TFile && f4.extension == "mdb" && f4.name.charAt(0) == "#"
    ).map((f4) => tagPathToTag(f4.name))) != null ? _a2 : []
  ]);
};
var tagExists = (currentCache, findTag) => {
  let currentTags = [];
  if ((0, import_obsidian11.getAllTags)(currentCache)) {
    currentTags = (0, import_obsidian11.getAllTags)(currentCache);
  }
  return currentTags.find((tag) => tag.toLowerCase() == findTag.toLowerCase()) ? true : false;
};
var getAllFilesForTag = (tag) => {
  const tagsCache = [];
  (() => {
    app.vault.getMarkdownFiles().forEach((tfile) => {
      let currentCache;
      if (app.metadataCache.getFileCache(tfile) !== null) {
        currentCache = app.metadataCache.getFileCache(tfile);
      }
      const relativePath = tfile.path;
      const hasTag = tagExists(currentCache, tag);
      if (hasTag) {
        tagsCache.push(relativePath);
      }
    });
  })();
  return tagsCache;
};
var addTagToNote = (tag, tFile) => {
  const newTag = validateName(tag);
  editTagInFrontmatter("", newTag, tFile);
};
var positionsForTag = (tag, file) => {
  const currentCache = app.metadataCache.getFileCache(file);
  if (currentCache.tags) {
    const positions = currentCache.tags.filter((f4) => f4.tag == tag).map((f4) => f4.position).sort((a5, b4) => {
      if (a5.start.offset < b4.start.offset) {
        return -1;
      }
      if (a5.start.offset > b4.start.offset) {
        return 1;
      }
      return 0;
    });
    return positions;
  }
  return [];
};
var removeTagFromFile = (tag, file) => {
  const pos = positionsForTag(tag, file);
  removeTagInFrontmatter(tag, file);
  editTagInFileBody(tag, "", pos, file);
};
var validateName = (tag) => {
  return tag.trim();
};
var renameTag = async (plugin, tag, toTag) => {
  const tags = getAllSubtags(plugin, tag);
  const newTag = validateName(toTag);
  const files = getAllFilesForTag(tag);
  for (const file of files) {
    const tFile = getAbstractFileAtPath(app, file);
    if (tFile instanceof import_obsidian11.TFile) {
      const positions = positionsForTag(tag, tFile);
      if (positions.length > 0) {
        await editTagInFileBody(tag, newTag, positions, tFile);
      } else {
        await editTagInFrontmatter(tag, newTag, tFile);
      }
    }
  }
  await renameSpaceFolder(plugin, tag, toTag);
  plugin.index.renameTag(tag, toTag);
  for (const subtag of tags) {
    await renameTag(plugin, subtag, subtag.replace(tag, newTag));
  }
};
var getAllSubtags = (plugin, tag) => {
  const tags = loadTags(plugin);
  return tags.filter((f4) => f4.startsWith(tag) && f4 != tag);
};
var getAllParentTags = (str) => {
  if (str.startsWith("#")) {
    str = str.slice(1);
  }
  const parts = str.split("/");
  const result = [];
  for (let i4 = 0; i4 < parts.length - 1; i4++) {
    if (i4 === 0) {
      result.push(parts[i4]);
    } else {
      result.push(result[i4 - 1] + "/" + parts[i4]);
    }
  }
  return result;
};
var removeTagInFrontmatter = async (oldTag, file) => {
  var _a2;
  let fm;
  if (app.metadataCache.getFileCache(file) !== null) {
    fm = (_a2 = app.metadataCache.getFileCache(file)) == null ? void 0 : _a2.frontmatter;
  }
  if (fm && app.fileManager.processFrontMatter) {
    const processKey = (value) => {
      if (Array.isArray(value)) {
        return value.filter((f4) => stringFromTag(oldTag) != f4);
      } else if (typeof value === "string") {
        return serializeMultiDisplayString(
          value.replace(/\s/g, "").split(",").filter((f4) => stringFromTag(oldTag) != f4)
        );
      }
      return value;
    };
    const editKeys = tagKeys.filter((f4) => {
      let tags = [];
      if (Array.isArray(fm[f4])) {
        tags = fm[f4];
      } else if (typeof fm[f4] === "string") {
        tags = fm[f4].replace(/\s/g, "").split(",");
      }
      if (tags.find((g4) => g4 == stringFromTag(oldTag)))
        return true;
      return false;
    });
    editKeys.forEach((tag) => {
      app.fileManager.processFrontMatter(file, (frontmatter) => {
        frontmatter[tag] = processKey(fm[tag]);
      });
    });
  }
};
var editTagInFrontmatter = async (oldTag, newTag, file) => {
  var _a2;
  let fm;
  if (app.metadataCache.getFileCache(file) !== null) {
    fm = (_a2 = app.metadataCache.getFileCache(file)) == null ? void 0 : _a2.frontmatter;
  }
  const addTag = (value) => {
    if (Array.isArray(value)) {
      return uniq([...value, stringFromTag(newTag)]).filter((f4) => (f4 == null ? void 0 : f4.length) > 0);
    } else if (typeof value === "string") {
      return serializeMultiDisplayString(uniq([
        ...value.replace(/\s/g, "").split(","),
        stringFromTag(newTag)
      ]).filter((f4) => (f4 == null ? void 0 : f4.length) > 0));
    }
    return stringFromTag(newTag);
  };
  if (app.fileManager.processFrontMatter) {
    if (fm) {
      const processKey = (value) => {
        if (Array.isArray(value)) {
          return uniq(
            value.map(
              (f4) => stringFromTag(oldTag) == f4 ? stringFromTag(newTag) : f4
            )
          );
        } else if (typeof value === "string") {
          return serializeMultiDisplayString(uniq(
            value.replace(/\s/g, "").split(",").map(
              (f4) => stringFromTag(oldTag) == f4 ? stringFromTag(newTag) : f4
            )
          ));
        }
        return value;
      };
      const editKeys = tagKeys.filter((f4) => {
        let tags = [];
        if (Array.isArray(fm[f4])) {
          tags = fm[f4];
        } else if (typeof fm[f4] === "string") {
          tags = fm[f4].replace(/\s/g, "").split(",");
        }
        if (tags.find((g4) => g4 == stringFromTag(oldTag)))
          return true;
        return false;
      });
      if (editKeys.length > 0) {
        editKeys.forEach((key2) => {
          app.fileManager.processFrontMatter(file, (frontmatter) => {
            frontmatter[key2] = processKey(fm[key2]);
          });
        });
      } else {
        app.fileManager.processFrontMatter(file, (frontmatter) => {
          frontmatter["tags"] = addTag(fm["tags"]);
        });
      }
    } else {
      app.fileManager.processFrontMatter(file, (frontmatter) => {
        frontmatter["tags"] = stringFromTag(newTag);
      });
    }
  }
};
var editTagInFileBody = async (oldTag, newTag, positions, file) => {
  const offsetOffset = newTag.length - oldTag.length;
  if (positions.length == 0)
    return false;
  const original = await app.vault.read(file);
  let text2 = original;
  let offset2 = 0;
  for (const { start, end } of positions) {
    const startOff = start.offset + offset2;
    const endOff = end.offset + offset2;
    if (text2.slice(startOff, endOff) !== oldTag) {
      return false;
    }
    text2 = text2.slice(0, startOff) + newTag + text2.slice(startOff + oldTag.length);
    offset2 += offsetOffset;
  }
  if (text2 !== original) {
    await app.vault.modify(file, text2);
    return true;
  }
};
var allTagsForFile = (file) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l;
  const rt = [];
  if (file instanceof import_obsidian11.TFile) {
    const fCache = app.metadataCache.getCache(file.path);
    if (fCache && fCache.tags)
      rt.push(...(_b2 = (_a2 = fCache.tags) == null ? void 0 : _a2.map((f4) => f4.tag)) != null ? _b2 : []);
    if (fCache && ((_c2 = fCache.frontmatter) == null ? void 0 : _c2.tags))
      rt.push(
        ...(typeof ((_d2 = fCache.frontmatter) == null ? void 0 : _d2.tags) === "string" ? parseMultiString(fCache.frontmatter.tags.replace(/ /g, "")) : Array.isArray((_e2 = fCache.frontmatter) == null ? void 0 : _e2.tags) ? (_g = (_f = fCache.frontmatter) == null ? void 0 : _f.tags) != null ? _g : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
      );
    if (fCache && ((_h = fCache.frontmatter) == null ? void 0 : _h.tag))
      rt.push(
        ...(typeof ((_i = fCache.frontmatter) == null ? void 0 : _i.tag) === "string" ? parseMultiString(fCache.frontmatter.tag.replace(/ /g, "")) : Array.isArray((_j = fCache.frontmatter) == null ? void 0 : _j.tag) ? (_l = (_k = fCache.frontmatter) == null ? void 0 : _k.tag) != null ? _l : [] : []).filter((f4) => typeof f4 === "string").map((f4) => "#" + f4)
      );
  }
  return uniq(rt);
};

// src/utils/tree.ts
var import_obsidian12 = require("obsidian");
var nodeIsAncestorOfTarget = (path, target) => {
  if (target.type == "folder" && path.type == "folder")
    return target.path.startsWith(path.path);
  return false;
};
var excludeVaultItemPredicate = (settings) => (f4, index, folder) => !(f4.folder != "true" && settings.hiddenExtensions.find(
  (e4) => fileExtensionForFile(f4.path) == e4
)) && !settings.hiddenFiles.find((e4) => e4 == f4.path) && (!settings.enableFolderNote || !settings.folderNoteInsideFolder && !folder.some((g4) => g4.path + ".md" == f4.path) || settings.folderNoteInsideFolder && !(f4.parent + "/" + folderPathToString(f4.parent) + ".md" == f4.path));
var excludeFilePredicate = (plugin) => (f4, index, folder) => !(f4 instanceof import_obsidian12.TFile && plugin.settings.hiddenExtensions.some((e4) => f4.extension == e4)) && !plugin.settings.hiddenFiles.some((e4) => e4 == f4.path) && (!plugin.settings.enableFolderNote || !plugin.settings.folderNoteInsideFolder && !folder.some((g4) => g4.path + ".md" == f4.path) || plugin.settings.folderNoteInsideFolder && !(f4.parent.path + "/" + f4.parent.name + ".md" == f4.path));
var folderChildren = (plugin, f4, exclusionList) => {
  var _a2, _b2;
  return (_b2 = (_a2 = f4 == null ? void 0 : f4.children) == null ? void 0 : _a2.filter(excludeFilePredicate(plugin))) != null ? _b2 : [];
};
var compareByField = (field, dir) => (_a2, _b2) => {
  const a5 = dir ? _a2 : _b2;
  const b4 = dir ? _b2 : _a2;
  if (a5[field] < b4[field]) {
    return -1;
  }
  if (a5[field] > b4[field]) {
    return 1;
  }
  return 0;
};
var internalPluginLoaded = (pluginName, app2) => {
  var _a2;
  return (_a2 = app2.internalPlugins.plugins[pluginName]) == null ? void 0 : _a2._loaded;
};
function selectElementContents(el) {
  if (!el)
    return;
  const range = document.createRange();
  range.selectNodeContents(el);
  const sel = window.getSelection();
  sel.removeAllRanges();
  sel.addRange(range);
}

// src/superstate/spacesStore/spaces.ts
var spaceContextsKey = (plugin) => plugin.settings.fmKeyContexts;
var spaceDefKey = (plugin) => plugin.settings.fmKeyDef;
var spaceLinksKey = (plugin) => plugin.settings.fmKeyLinks;
var spaceSortKey = (plugin) => plugin.settings.fmKeySort;
var FMSpaceKeys = (plugin) => [spaceContextsKey(plugin), spaceDefKey(plugin), spaceDefKey(plugin)];
var defaultDefForSpace = (space, plugin) => {
  const defKey = spaceDefKey(plugin);
  const contextsKey = spaceContextsKey(plugin);
  if (space.uri.type == "space") {
    return {
      [contextsKey]: [],
      [defKey]: {
        type: "links"
      }
    };
  }
  return {};
};
var parseSpaceFilterGroupFilter = (value) => {
  return {
    type: ensureStringValueFromSet(value["type"], ["frontmatter", "fileprop", "filemeta"], "frontmatter"),
    fType: ensureString(value["fType"]),
    field: ensureString(value["field"]),
    fn: ensureString(value["fn"]),
    value: ensureString(value["value"])
  };
};
var parseSpaceFilterGroup = (value) => {
  return {
    type: ensureStringValueFromSet(value["type"], ["any", "all"], "any"),
    trueFalse: value["truefalse"] ? true : false,
    filters: ensureArray(value["filters"]).map((f4) => parseSpaceFilterGroupFilter(f4))
  };
};
var parseSpaceDef = (fm, spaceInfo, plugin) => {
  if (!fm) {
    return defaultDefForSpace(spaceInfo, plugin)[spaceDefKey(plugin)];
  }
  return {
    type: ensureStringValueFromSet(fm["type"], ["links", "smart", "folder", "tag", "vault"], "links"),
    value: ensureString(fm["value"]),
    filters: ensureArray(fm["filters"]).map((f4) => parseSpaceFilterGroup(f4))
  };
};
var parseSpaceMetadata = (metadata, spaceInfo, plugin) => {
  return { ...metadata, contexts: ensureArray(metadata[spaceContextsKey(plugin)]), links: ensureArray(metadata[spaceLinksKey(plugin)]), def: parseSpaceDef(metadata[spaceDefKey(plugin)], spaceInfo, plugin) };
};
var rebuildIndex = async (plugin, save) => {
  var _a2;
  console.time("Make.md Vault Index");
  const newTables = indexCurrentFileTree(plugin, (_a2 = plugin.index.vaultDBCache) != null ? _a2 : []);
  if (save && !import_lodash3.default.isEqual(newTables.vault.rows, plugin.index.vaultDBCache)) {
    await plugin.index.saveSpacesDatabaseToDisk(newTables, save);
  }
  plugin.index.initialize();
  console.timeEnd("Make.md Vault Index");
};
var droppableTypesForSpace = (type) => type == "links" ? ["file", "folder", "links", "smart", "tag", "space"] : type == "folder" || type == "vault" || type == "tag" ? ["file", "folder"] : [];
var spaceToTreeNode = (space, collapsed, sortable, depth, parentId, parentPath) => {
  var _a2;
  return {
    id: parentId ? parentId + "/" + space.path : space.path,
    parentId,
    depth,
    index: 0,
    space: parentPath,
    path: space.path,
    item: space,
    uri: (_a2 = space.space) == null ? void 0 : _a2.uri,
    collapsed,
    sortable,
    childrenCount: 0,
    type: space.type,
    dropableTypes: droppableTypesForSpace(space.type)
  };
};
var vaulItemToTreeNode = (item, space, path, depth, i4, collapsed, sortable, childrenCount, parentId) => ({
  item,
  file: getAbstractFileAtPath(app, item.path),
  space,
  id: parentId + "/" + item.filename,
  parentId,
  depth,
  path,
  index: i4,
  uri: uriByString(item.path),
  collapsed,
  sortable,
  childrenCount,
  type: "file",
  dropableTypes: []
});
var spaceRowHeight = (plugin) => {
  return platformIsMobile() ? 40 : plugin.settings.spaceRowHeight;
};
var spaceSortFn = (sortStrategy, direction) => (a5, b4) => {
  var _a2, _b2;
  if (sortStrategy == "rank") {
    return ((_a2 = a5.rank) != null ? _a2 : "").localeCompare((_b2 = b4.rank) != null ? _b2 : "", void 0, { numeric: true });
  }
  const sortFns = [
    compareByField("isFolder", false),
    compareByField(sortStrategy, direction)
  ];
  return sortFns.reduce((p3, c4) => {
    return p3 == 0 ? c4(a5, b4) : p3;
  }, 0);
};
var flattenedTreeFromVaultItems = (plugin, root2, space, openNodes, depth, sortStrategy, direction) => {
  const _caches = plugin.index.getSpaceItems(root2);
  if (!_caches) {
    return [];
  }
  const flattenTree = (path, openNodes2, depth2, index, folderSort, caches) => {
    const items = [];
    let i4 = index;
    const [sortStrat, dir] = folderSort.length > 0 ? parseSortStrat(folderSort) : [sortStrategy, direction];
    caches.sort(spaceSortFn(sortStrat, dir)).forEach(
      (item) => {
        if (item.cacheType == "file") {
          item = item;
          const id2 = path + "/" + item.filename;
          const collapsed = !openNodes2.includes(id2);
          i4 = i4 + 1;
          const newItems = [];
          const newCaches = plugin.index.getSpaceItems(item.path);
          if (newCaches && !collapsed) {
            newItems.push(
              ...flattenTree(item.path, openNodes2, depth2 + 1, i4, item.sortBy, newCaches)
            );
          }
          const node = vaulItemToTreeNode(
            item,
            space,
            path,
            depth2,
            i4,
            collapsed,
            sortStrategy == "rank",
            newItems.length,
            path
          );
          if (node.file)
            newItems.splice(0, 0, node);
          items.push(...newItems);
        } else {
          const collapsed = !openNodes2.includes(item.path);
          items.push(spaceToTreeNode(item, collapsed, sortStrategy == "rank", depth2, path, space));
        }
      }
    );
    return items;
  };
  return flattenTree(root2, openNodes, depth, 0, "", _caches);
};
var vaultItemForPath = (plugin, path) => {
  if (!path)
    return null;
  return plugin.index.vaultDBCache.find((f4) => f4.path == path);
};
var saveFileSticker = async (plugin, path, sticker) => {
  if (plugin.settings.spacesEnabled) {
    const newVaultDB = plugin.index.vaultDBCache.map((f4) => f4.path == path ? { ...f4, sticker } : f4);
    await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultDB } });
  }
  saveFrontmatterValue(
    plugin,
    path,
    plugin.settings.fmKeySticker,
    sticker,
    "text",
    true
  );
  plugin.index.reloadFile(getAbstractFileAtPath(app, path)).then((f4) => plugin.index.broadcast("space"));
};
var saveFolderSort = async (plugin, path, sort) => {
  if (plugin.settings.spacesEnabled) {
    const newVaultDB = plugin.index.vaultDBCache.map((f4) => f4.path == path ? { ...f4, folder: sort } : f4);
    await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultDB } });
    plugin.index.reloadFile(getAbstractFileAtPath(app, path)).then((f4) => plugin.index.broadcast("vault"));
  }
};
var saveFileColor = async (plugin, path, color) => {
  if (plugin.settings.spacesEnabled) {
    const newVaultDB = plugin.index.vaultDBCache.map((f4) => f4.path == path ? { ...f4, color } : f4);
    await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultDB } });
  }
  saveFrontmatterValue(
    plugin,
    path,
    plugin.settings.fmKeyColor,
    color,
    "text",
    true
  );
  plugin.index.reloadFile(getAbstractFileAtPath(app, path)).then((f4) => plugin.index.broadcast("space"));
};
var saveSpaceSticker = async (plugin, path, sticker) => {
  await saveSpaceDefValue(plugin, path, "sticker", sticker);
  plugin.index.broadcast("space");
};
var updateFileRank = async (plugin, item, rank) => {
  let fixedRank = rank;
  if (parseInt(item.rank) > rank)
    fixedRank = rank + 1;
  const newItems = insert(
    plugin.index.vaultDBCache.filter((f4) => f4.parent == item.parent).filter((f4) => f4.path != item.path).map((f4, i4) => f4.rank ? f4 : { ...f4, rank: i4.toString() }).sort(
      (a5, b4) => a5.rank.localeCompare(b4.rank, void 0, { numeric: true })
    ),
    fixedRank,
    item
  ).map((f4, index) => ({ path: f4.path, rank: index.toString() }));
  const newVaultDB = plugin.index.vaultDBCache.map((f4) => {
    const newItem = newItems.find((g4) => g4.path == f4.path);
    if (newItem) {
      return { ...f4, ...newItem };
    }
    return f4;
  });
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultDB } });
  const promises = newItems.map((f4) => plugin.index.reloadFile(getAbstractFileAtPath(app, f4.path)));
  await Promise.all(promises);
  plugin.index.broadcast("space");
};
var moveAFileToNewParentAtIndex = async (plugin, item, newParent, index) => {
  var _a2;
  const currFile = getAbstractFileAtPath(app, item.path);
  const newPath = newParent == "/" ? currFile.name : newParent + "/" + currFile.name;
  const newItem = {
    ...fileMetadataToVaultItem(item),
    path: newPath,
    parent: newParent,
    rank: index.toString()
  };
  if (getAbstractFileAtPath(app, newPath)) {
    new import_obsidian13.Notice(i18n_default.notice.fileExists);
    return;
  }
  const allRows = plugin.index.vaultDBCache.filter((f4) => f4.parent == newParent);
  const rows = insert(
    (_a2 = allRows.sort(
      (a5, b4) => {
        var _a3, _b2;
        return ((_a3 = a5.rank) != null ? _a3 : "").localeCompare((_b2 = b4.rank) != null ? _b2 : "", void 0, { numeric: true });
      }
    )) != null ? _a2 : [],
    index,
    newItem
  ).map((f4, i4) => ({ ...f4, rank: i4.toString() }));
  const newVaultTable = [...plugin.index.vaultDBCache, newItem].filter((f4) => f4.path != item.path).map((f4) => {
    const newItem2 = rows.find((g4) => g4.path == f4.path);
    if (newItem2) {
      return { ...f4, ...newItem2 };
    }
    return f4;
  });
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultTable } });
  const afile = getAbstractFileAtPath(app, item.path);
  await moveFile(getAbstractFileAtPath(app, newParent), afile);
  const promises = rows.map((f4) => plugin.index.reloadFile(getAbstractFileAtPath(app, f4.path)));
  await Promise.all(promises);
  plugin.index.broadcast("space");
};
var insertContextInSpace = (plugin, space, newTag) => {
  const spaceCache = plugin.index.spacesIndex.get(space.path);
  const contexts = [...spaceCache.metadata.contexts.filter((f4) => f4 != newTag), newTag];
  saveSpaceDefValue(plugin, space.path, "contexts", contexts);
};
var removeContextInSpace = (plugin, space, oldTag) => {
  const spaceCache = plugin.index.spacesIndex.get(space.path);
  const contexts = spaceCache.metadata.contexts.filter((f4) => f4 != oldTag);
  saveSpaceDefValue(plugin, space.path, "contexts", contexts);
};
var canMoveCacheToSpace = (cache, toSpaceCache) => {
  if (toSpaceCache.type == "folder" || toSpaceCache.type == "vault" || toSpaceCache.type == "tag") {
    if (cache.cacheType == "file" || cache.type == "folder")
      return true;
    return false;
  }
  if (toSpaceCache.type == "links" || toSpaceCache.path == homeSpace.path)
    return true;
  return false;
};
var movePathsToSpace = async (plugin, paths, newSpaceCache) => {
  if (newSpaceCache.type == "folder" || newSpaceCache.type == "vault") {
    paths.forEach((path) => moveAFileToNewParentAtIndex(plugin, plugin.index.filesIndex.get(path), newSpaceCache.path, -1));
  }
  if (newSpaceCache.type == "links") {
    paths.forEach((path) => insertSpaceItemAtIndex(plugin, newSpaceCache, path, -1));
  }
  if (newSpaceCache.type == "tag") {
    paths.forEach((path) => addTagToNote(newSpaceCache.name, getAbstractFileAtPath(app, path)));
  }
};
var movePathToSpace = async (plugin, path, oldSpaceCache, newSpaceCache, index) => {
  let cache = plugin.index.spacesIndex.get(path);
  if (!cache) {
    cache = plugin.index.filesIndex.get(path);
  }
  if (!cache || !newSpaceCache)
    return false;
  if (!canMoveCacheToSpace(cache, newSpaceCache))
    return false;
  if (newSpaceCache.type == "folder" || newSpaceCache.type == "vault") {
    if (cache.cacheType == "file" || cache.type == "folder") {
      if ((oldSpaceCache == null ? void 0 : oldSpaceCache.path) == newSpaceCache.path) {
        updateFileRank(plugin, plugin.index.filesIndex.get(path), index);
      } else {
        await moveAFileToNewParentAtIndex(plugin, plugin.index.filesIndex.get(path), newSpaceCache.path, index);
      }
    }
  }
  if (newSpaceCache.type == "links" || newSpaceCache.path == homeSpace.path) {
    await insertSpaceItemAtIndex(plugin, newSpaceCache, path, index);
  }
  if (newSpaceCache.type == "tag") {
    addTagToNote(newSpaceCache.name, getAbstractFileAtPath(app, path));
  }
  if (oldSpaceCache && (oldSpaceCache == null ? void 0 : oldSpaceCache.path) != newSpaceCache.path) {
    removePathsFromSpace(plugin, oldSpaceCache, [path]);
  }
};
var insertSpaceAtIndex = async (plugin, name, newSpace) => {
  const spaces = plugin.index.allSpaces();
  const spaceInfo = spaceFromCustomSpace(plugin, name);
  if (spaces.find((f4) => f4.path == spaceInfo.path)) {
    await saveSpaceCache(plugin, spaceInfo, newSpace);
  } else {
    await app.vault.createFolder(spaceInfo.folderPath);
    await createNewMarkdownFile(plugin, getAbstractFileAtPath(app, spaceInfo.folderPath), name, null, true);
    await saveSpaceCache(plugin, spaceInfo, newSpace);
    await plugin.index.reloadSpace(spaceInfo);
    await plugin.index.updateSpaceMetadata(spaceInfo.path, newSpace);
  }
  plugin.index.initalizeFiles();
  plugin.settings.rootSpaces = [...plugin.settings.rootSpaces, spaceInfo.path];
  plugin.saveSettings();
};
var saveSpaceDefValue = async (plugin, space, key2, value) => {
  const spaceCache = plugin.index.spacesIndex.get(space);
  let file = getAbstractFileAtPath(app, spaceCache.space.defPath);
  if (!file) {
    file = await createNewMarkdownFile(plugin, getAbstractFileAtPath(app, spaceCache.space.folderPath), filePathToString(spaceCache.space.defPath), "", true);
  }
  if (app.fileManager.processFrontMatter) {
    await app.fileManager.processFrontMatter(file, (frontmatter) => {
      frontmatter[key2] = value;
    });
  }
  plugin.index.updateSpaceMetadata(space, { ...spaceCache.metadata, [key2]: value });
};
var saveSpaceCache = async (plugin, spaceInfo, metadata) => {
  let file = getAbstractFileAtPath(app, spaceInfo.defPath);
  if (!file) {
    file = await createNewMarkdownFile(plugin, getAbstractFileAtPath(app, spaceInfo.folderPath), filePathToString(spaceInfo.defPath), "", true);
  }
  if (app.fileManager.processFrontMatter) {
    await app.fileManager.processFrontMatter(file, (frontmatter) => {
      frontmatter[plugin.settings.fmKeySticker] = metadata.sticker;
      frontmatter[spaceDefKey(plugin)] = metadata.def;
      frontmatter[plugin.settings.fmKeyBanner] = metadata.banner;
      frontmatter[spaceContextsKey(plugin)] = metadata.contexts;
      frontmatter[spaceLinksKey(plugin)] = metadata.links;
      frontmatter[spaceSortKey(plugin)] = metadata.sort;
    });
  }
  plugin.index.updateSpaceMetadata(spaceInfo.path, metadata);
};
var insertSpaceItemAtIndex = async (plugin, space, path, rank) => {
  var _a2;
  if (space.type == "links") {
    const spaceExists = (_a2 = ensureArray(space.metadata.links)) != null ? _a2 : [];
    const pathExists = spaceExists.find((f4) => f4 == path);
    let fixedRank = rank;
    if (!pathExists) {
      spaceExists.push(path);
      fixedRank = rank + 1;
    } else {
      if (spaceExists.findIndex((f4) => f4 == path) > rank)
        fixedRank = rank + 1;
    }
    const newSpaceItems = insert(
      spaceExists.filter((f4) => f4 != path),
      fixedRank,
      path
    );
    await saveSpaceCache(plugin, space.space, { ...space.metadata, links: newSpaceItems });
    const promises = [];
    promises.push(...newSpaceItems.map((f4) => plugin.index.reloadFile(getAbstractFileAtPath(app, f4))));
    promises.push(plugin.index.reloadSpace(space.space));
    await Promise.all(promises);
    plugin.index.broadcast("vault");
  } else if (space.path == homeSpace.path) {
    toggleSpacePin(plugin, path, "home", false, rank);
    plugin.index.broadcast("vault");
  }
};
var removeSpace = async (plugin, space) => {
  const spaceCache = plugin.index.spacesIndex.get(space);
  if (spaceCache.type == "tag") {
    plugin.index.deleteTag(spaceCache.name);
  } else if (spaceCache.type == "folder") {
    deleteFile(plugin, getAbstractFileAtPath(app, space));
  } else {
    deleteSpaceFolder(plugin, spaceCache.name);
    plugin.index.deleteSpace(space);
  }
};
var updateSpaceSort = (plugin, spaceName, sort) => {
  const space = plugin.index.spacesIndex.get(spaceName);
  if (space)
    saveSpaceCache(plugin, space.space, {
      ...space.metadata,
      sort: JSON.stringify(sort)
    });
};
var toggleSpacePin = (plugin, spacePath, type, remove, rank) => {
  if (type == "home") {
    if (remove) {
      plugin.settings.rootSpaces = plugin.settings.rootSpaces.filter((f4) => f4 != spacePath);
    } else if (plugin.settings.rootSpaces.some((f4) => f4 == spacePath)) {
      const currIndex = plugin.settings.rootSpaces.findIndex((f4) => f4 == spacePath);
      plugin.settings.rootSpaces = arrayMove(plugin.settings.rootSpaces, currIndex, rank);
    } else {
      plugin.settings.rootSpaces = insert(plugin.settings.rootSpaces, rank, spacePath);
    }
  } else if (type == "pinned") {
    if (remove) {
      plugin.settings.waypoints = plugin.settings.waypoints.filter((f4) => f4 != spacePath);
    } else if (plugin.settings.waypoints.some((f4) => f4 == spacePath)) {
      const currIndex = plugin.settings.waypoints.findIndex((f4) => f4 == spacePath);
      plugin.settings.waypoints = arrayMove(plugin.settings.waypoints, currIndex, rank);
    } else {
      plugin.settings.waypoints = insert(plugin.settings.waypoints, rank, spacePath);
    }
  }
  plugin.saveSettings();
};
var addPathsToSpace = async (plugin, spacePath, paths) => {
  var _a2;
  const space = plugin.index.spacesIndex.get(spacePath);
  saveSpaceDefValue(plugin, spacePath, "links", [...(_a2 = space.metadata.links) != null ? _a2 : [], ...paths]);
  await plugin.index.reloadSpace(space.space);
  const promises = paths.map((f4) => plugin.index.reloadFile(getAbstractFileAtPath(app, f4)));
  await Promise.all(promises);
  plugin.index.broadcast("vault");
};
var removePathsFromSpace = async (plugin, space, paths) => {
  if (space.type == "default" && space.path == "spaces://$home") {
    paths.forEach((path) => toggleSpacePin(plugin, path, "home", true));
    plugin.index.broadcast("vault");
  } else if (space.type == "links") {
    saveSpaceDefValue(plugin, space.path, "links", space.metadata.links.filter((f4) => !paths.some((g4) => g4 == f4)));
    await plugin.index.reloadSpace(space.space);
    const promises = paths.map((f4) => pathIsSpace(f4) ? plugin.index.reloadSpaceByPath(f4) : plugin.index.reloadFile(getAbstractFileAtPath(app, f4)));
    await Promise.all(promises);
    plugin.index.broadcast("vault");
  }
};
var retrieveAllRecursiveChildren = (vaultDB, settings, folder) => {
  return vaultDB.filter((f4) => f4["parent"].startsWith(folder)).filter(
    excludeVaultItemPredicate(settings)
  );
};
var retrieveAllFiles = (vaultDB, settings) => {
  return vaultDB.filter(
    excludeVaultItemPredicate(settings)
  );
};
var initiateDB = (db) => {
  replaceDB(db, {
    vault: vaultSchema
  });
};
var indexCurrentFileTree = (plugin, vaultDB) => {
  const treeItems = getAllAbstractFilesInVault(plugin, app).map((file) => {
    var _a2;
    return {
      path: file.path,
      parent: (_a2 = file.parent) == null ? void 0 : _a2.path,
      created: file instanceof import_obsidian13.TFile ? file.stat.ctime.toString() : void 0,
      folder: file instanceof import_obsidian13.TFolder ? "true" : "false"
    };
  });
  const currentPaths = vaultDB;
  const deleteRows = currentPaths.filter(
    (item) => !treeItems.some((i4) => i4.path == item.path)
  );
  const fixRows = currentPaths.filter(
    (item) => treeItems.some((i4) => i4.path == item.path && i4.parent != item.parent)
  ).map((item) => ({
    ...item,
    ...treeItems.find((i4) => i4.path == item.path)
  }));
  const newRows = treeItems.filter(
    (item) => !currentPaths.some((i4) => i4.path == item.path)
  );
  const newVaultRows = [...vaultDB.map((f4) => {
    const newItem = fixRows.find((g4) => g4.path == f4.path);
    if (newItem) {
      return { ...f4, ...newItem };
    }
    return f4;
  }).filter((f4) => !deleteRows.some((g4) => g4.path == f4.path)), ...newRows];
  return {
    vault: {
      ...vaultSchema,
      rows: newVaultRows
    }
  };
};
var newFolderInSpace = (plugin, space, activeFile) => {
  const vaultChangeModal = new VaultChangeModal(
    plugin,
    space.folderPath.length > 0 ? getFolderFromPath(app, space.folderPath) : defaultNoteFolder(plugin, activeFile),
    "create folder",
    space.name
  );
  vaultChangeModal.open();
};
var newFileInSpace = async (plugin, space, activeFile, canvas, dontOpen) => {
  let newFile;
  if (canvas) {
    newFile = await createNewCanvasFile(
      plugin,
      space.folderPath.length > 0 ? getFolderFromPath(app, space.folderPath) : defaultNoteFolder(plugin, activeFile),
      "",
      dontOpen
    );
  } else {
    newFile = await createNewMarkdownFile(
      plugin,
      space.folderPath.length > 0 ? getFolderFromPath(app, space.folderPath) : defaultNoteFolder(plugin, activeFile),
      "",
      null,
      dontOpen
    );
  }
  if (space.uri.type == "folder")
    addPathsToSpace(plugin, space.path, [newFile.path]);
  return newFile;
};

// src/utils/emoji.ts
var saveFileIcons = (plugin, files, icon) => {
  files.forEach((file) => {
    saveFileSticker(plugin, file, icon);
  });
};
var saveFileColors = (plugin, files, icon) => {
  files.forEach((file) => {
    saveFileColor(plugin, file, icon);
  });
};
var saveSpaceIcon = (plugin, space, icon) => {
  saveSpaceSticker(plugin, space, icon);
};
var removeSpaceIcon = (plugin, space) => {
  saveSpaceSticker(plugin, space, "");
};
var saveFileIcon = (plugin, data2, icon) => {
  saveFileSticker(plugin, data2.path, icon);
};
var removeFileIcons = (plugin, files) => {
  files.forEach((file) => {
    saveFileSticker(plugin, file, "");
  });
};
var removeFileIcon = (plugin, data2) => {
  saveFileSticker(plugin, data2.path, "");
};

// src/utils/sticker.ts
var import_obsidian14 = require("obsidian");
var stickerFromString = (sticker, plugin) => {
  var _a2;
  if (!sticker || typeof sticker != "string")
    return "";
  const [type, value] = parseStickerString(sticker);
  if (type == "" || type == "emoji") {
    return emojiFromString(value);
  } else if (type == "ui") {
    return uiIconSet[value];
  } else if (type == "lucide") {
    return (_a2 = (0, import_obsidian14.getIcon)(value)) == null ? void 0 : _a2.outerHTML;
  } else {
    return plugin.index.iconsCache.get(value);
  }
};

// src/components/Sidebar/FileSticker/FileSticker.tsx
var FileSticker = (props2) => {
  const { fileCache } = props2;
  const sticker = (fileCache == null ? void 0 : fileCache.cacheType) == "space" ? fileCache == null ? void 0 : fileCache.metadata.sticker : fileCache == null ? void 0 : fileCache.sticker;
  const color = (fileCache == null ? void 0 : fileCache.cacheType) == "space" ? fileCache == null ? void 0 : fileCache.metadata.color : fileCache == null ? void 0 : fileCache.color;
  const extension = (fileCache == null ? void 0 : fileCache.cacheType) == "file" && (fileCache == null ? void 0 : fileCache.extension);
  const triggerStickerContextMenu = (e4) => {
    if (!fileCache)
      return;
    e4.preventDefault();
    const fileMenu = new import_obsidian15.Menu();
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.changeIcon);
      menuItem.setIcon("lucide-sticker");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new stickerModal(
          props2.plugin.app,
          props2.plugin,
          (emoji) => (fileCache == null ? void 0 : fileCache.cacheType) == "space" ? saveSpaceSticker(props2.plugin, fileCache == null ? void 0 : fileCache.path, emoji) : saveFileSticker(props2.plugin, fileCache == null ? void 0 : fileCache.path, emoji)
        );
        vaultChangeModal.open();
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.removeIcon);
      menuItem.setIcon("lucide-file-minus");
      menuItem.onClick((ev) => {
        removeFileIcons(props2.plugin, [fileCache.path]);
      });
    });
    if (isMouseEvent(e4)) {
      fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
    } else {
      fileMenu.showAtPosition({
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      });
    }
    return false;
  };
  const triggerStickerMenu = (e4) => {
    e4.stopPropagation();
    if ((fileCache == null ? void 0 : fileCache.cacheType) == "space") {
      const vaultChangeModal2 = new stickerModal(
        props2.plugin.app,
        props2.plugin,
        (emoji) => saveSpaceIcon(
          props2.plugin,
          fileCache.space.path,
          emoji
        )
      );
      vaultChangeModal2.open();
      return;
    }
    const vaultChangeModal = new stickerModal(
      props2.plugin.app,
      props2.plugin,
      (emoji) => saveFileSticker(props2.plugin, fileCache.path, emoji)
    );
    vaultChangeModal.open();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-icon ${sticker ? "" : "mk-file-icon-placeholder"}`
  }, /* @__PURE__ */ Cn.createElement("button", {
    "aria-label": i18n_default.buttons.changeIcon,
    onContextMenu: triggerStickerContextMenu,
    style: (color == null ? void 0 : color.length) > 0 ? {
      "--label-color": `${color}`,
      "--icon-color": `#ffffff`
    } : {
      "--icon-color": `var(--text-muted)`
    },
    dangerouslySetInnerHTML: sticker ? { __html: stickerFromString(sticker, props2.plugin) } : fileCache.cacheType == "file" ? {
      __html: defaultIconForExtension(
        extension,
        color ? true : false
      )
    } : {
      __html: iconForSpace(fileCache.space, true)
    },
    onClick: (e4) => triggerStickerMenu(e4)
  }));
};
var FileStickerContainer = (props2) => {
  const [fileCache, setFileCache] = h2(null);
  const [space, setSpace] = h2(null);
  const reloadCache = () => {
    if (props2.path.type == "file" || props2.path.type == "folder") {
      const fileCache2 = props2.plugin.index.filesIndex.get(props2.path.path);
      setFileCache(fileCache2);
    } else if (props2.path.type == "space" || props2.path.type == "tag") {
      const space2 = props2.plugin.index.spacesIndex.get(props2.path.fullPath);
      setSpace(space2);
    }
  };
  const reloadIcon = (e4) => {
    if (e4.detail.type == "file" && e4.detail.name == props2.path.path || e4.detail.type == "space" && e4.detail.name == props2.path.fullPath) {
      reloadCache();
    }
  };
  p2(() => {
    reloadCache();
  }, []);
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, reloadIcon);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, reloadIcon);
    };
  }, [props2.path]);
  return fileCache && fileCache.cacheType == "file" ? /* @__PURE__ */ Cn.createElement(FileSticker, {
    plugin: props2.plugin,
    fileCache
  }) : space && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-icon ${(space == null ? void 0 : space.metadata.sticker) ? "" : "mk-file-icon-placeholder"}`
  }, /* @__PURE__ */ Cn.createElement("button", {
    dangerouslySetInnerHTML: {
      __html: (space == null ? void 0 : space.metadata.sticker) ? stickerFromString(space == null ? void 0 : space.metadata.sticker, props2.plugin) : uiIconSet["mk-ui-spaces"]
    },
    onClick: () => {
      if (!space)
        return;
      const vaultChangeModal = new stickerModal(
        props2.plugin.app,
        props2.plugin,
        (emoji) => saveSpaceIcon(props2.plugin, space.path, emoji)
      );
      vaultChangeModal.open();
    }
  }));
};

// src/components/ui/menus/selectMenu/concerns/matchers.js
function escapeForRegExp(string) {
  return string.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&");
}
function matchAny(string) {
  return new RegExp(escapeForRegExp(string), "gi");
}
function matchExact(string) {
  return new RegExp(`^${escapeForRegExp(string)}$`, "i");
}

// src/context/ContextEditorContext.tsx
var import_lodash5 = __toESM(require_lodash());
var import_obsidian17 = require("obsidian");
init_compat_module();

// src/utils/contexts/predicate/sort.ts
var simpleSort = (a5, b4) => {
  if (a5 < b4)
    return -1;
  if (a5 > b4)
    return 1;
  return 0;
};
var stringSort = (value, filterValue) => simpleSort(value, filterValue);
var numSort = (value, filterValue) => simpleSort(parseFloat(value), parseFloat(filterValue));
var boolSort = (value, filterValue) => simpleSort(value == "true" ? 1 : 0, filterValue == "true" ? 1 : 0);
var countSort = (value, filterValue) => simpleSort(parseMultiString(value).length, parseMultiString(filterValue).length);
var normalizedSortForType = (type, desc) => {
  return Object.keys(sortFnTypes).find(
    (f4) => sortFnTypes[f4].type.some((g4) => g4 == type) && sortFnTypes[f4].desc == desc
  );
};
var sortFnTypes = {
  alphabetical: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: stringSort,
    label: i18n_default.sortTypes.alphaAsc,
    desc: false
  },
  reverseAlphabetical: {
    type: ["text", "file", "link", "context", "fileprop"],
    fn: (v3, f4) => stringSort(v3, f4) * -1,
    label: i18n_default.sortTypes.alphaDesc,
    desc: true
  },
  earliest: {
    type: ["date", "fileprop"],
    fn: stringSort,
    label: i18n_default.sortTypes.earliest,
    desc: false
  },
  latest: {
    type: ["date", "fileprop"],
    fn: (v3, f4) => stringSort(v3, f4) * -1,
    label: i18n_default.sortTypes.latest,
    desc: true
  },
  boolean: {
    type: ["boolean"],
    fn: boolSort,
    label: i18n_default.sortTypes.checkAsc,
    desc: false
  },
  booleanReverse: {
    type: ["boolean"],
    fn: (v3, f4) => boolSort(v3, f4) * -1,
    label: i18n_default.sortTypes.checkDesc,
    desc: true
  },
  number: {
    type: ["number", "fileprop"],
    fn: numSort,
    label: "1 \u2192 9",
    desc: false
  },
  reverseNumber: {
    type: ["number", "fileprop"],
    fn: (v3, f4) => numSort(v3, f4) * -1,
    label: "9 \u2192 1",
    desc: true
  },
  count: {
    type: ["option-multi", "context-multi", "link-multi"],
    fn: countSort,
    label: i18n_default.sortTypes.itemsDesc,
    desc: true
  },
  reverseCount: {
    type: ["option-multi", "context-multi", "link-multi"],
    fn: (v3, f4) => countSort(v3, f4) * -1,
    label: i18n_default.sortTypes.itemsAsc,
    desc: false
  }
};
var sortReturnForCol = (col, sort, row, row2) => {
  if (!col)
    return 0;
  const sortType = sortFnTypes[sort.fn];
  if (sortType) {
    return sortType.fn(row[sort.field], row2[sort.field]);
  }
  return 0;
};

// src/utils/contexts/predicate/predicate.tsx
var defaultPredicateFnForType = (type, types2) => {
  const fnType = Object.keys(types2).find(
    (f4) => types2[f4].type.find((g4) => g4 == type)
  );
  return fnType;
};
var predicateFnsForType = (type, types2) => {
  const fnTypes = Object.keys(types2).filter(
    (f4) => types2[f4].type.find((g4) => g4 == type)
  );
  return fnTypes;
};
var cleanPredicateType = (type, definedTypes) => {
  return type.filter((f4) => Object.keys(definedTypes).find((g4) => g4 == f4.fn));
};
var validatePredicate = (prevPredicate) => {
  if (!prevPredicate) {
    return defaultPredicate;
  }
  return {
    ...defaultPredicate,
    view: prevPredicate.view,
    frame: prevPredicate.frame,
    frameProps: prevPredicate.frameProps,
    filters: Array.isArray(prevPredicate.filters) ? cleanPredicateType(prevPredicate.filters, filterFnTypes) : [],
    sort: Array.isArray(prevPredicate.sort) ? cleanPredicateType(prevPredicate.sort, sortFnTypes) : [],
    groupBy: Array.isArray(prevPredicate.groupBy) ? prevPredicate.groupBy : [],
    colsOrder: Array.isArray(prevPredicate.colsOrder) ? prevPredicate.colsOrder : [],
    colsHidden: Array.isArray(prevPredicate.colsHidden) ? prevPredicate.colsHidden : [],
    colsSize: prevPredicate.colsSize
  };
};
var defaultPredicate = {
  view: "list",
  filters: [],
  frame: "",
  frameProps: {},
  sort: [],
  groupBy: [],
  colsOrder: [],
  colsHidden: [],
  colsSize: {}
};

// src/context/ContextMDBContext.tsx
var import_lodash4 = __toESM(require_lodash());
var import_obsidian16 = require("obsidian");
init_compat_module();
var ContextMDBContext = F({
  dbSchemas: [],
  tableData: null,
  contextTable: {},
  setContextTable: () => null,
  saveDB: () => null,
  saveContextDB: () => null,
  dbSchema: null,
  setDBSchema: () => null,
  saveSchema: () => null,
  deleteSchema: () => null,
  dbFileExists: false
});
var ContextMDBProvider = (props2) => {
  var _a2;
  const [dbFileExists, setDBFileExists] = h2(false);
  const [schemaTable, setSchemaTable] = h2(null);
  const schemas = (_a2 = schemaTable == null ? void 0 : schemaTable.rows) != null ? _a2 : [];
  const [tableData, setTableData] = h2(null);
  const [dbSchema, setDBSchema] = h2(null);
  const [contextTable, setContextTable] = h2({});
  const [metadataCache, setMetadataCache] = h2(null);
  const defaultSchema = defaultFolderSchema;
  const { spaceInfo, readMode, contexts } = q2(SpaceContext);
  const deleteSchema = async (table) => {
    if (table.primary)
      return;
    const deleteResult = await deleteMDBTable(
      props2.plugin,
      spaceInfo,
      table.id,
      spaceInfo.dbPath
    );
    if (deleteResult) {
      const newSchemaTable = {
        ...schemaTable,
        rows: schemaTable.rows.filter(
          (f4) => f4.id != table.id && f4.def != table.id
        )
      };
      setSchemaTable(newSchemaTable);
      if (dbSchema.id == table.id) {
        setDBSchema(
          newSchemaTable.rows.find((g4) => g4.type == "db")
        );
      }
    }
  };
  const saveSchema = async (table) => {
    const newSchema = schemaTable.rows.find((f4) => f4.id == table.id) ? true : false;
    const newSchemaTable = newSchema ? {
      ...schemaTable,
      rows: schemaTable.rows.map((f4) => f4.id == table.id ? table : f4)
    } : {
      ...schemaTable,
      rows: [...schemaTable.rows, table]
    };
    if (!spaceInfo.readOnly) {
      await saveDBToPath(props2.plugin, spaceInfo.dbPath, {
        m_schema: newSchemaTable
      });
    }
    if (table.id == (dbSchema == null ? void 0 : dbSchema.id)) {
      setDBSchema(table);
      setTableData((f4) => ({
        ...f4,
        schema: table
      }));
    }
    setSchemaTable(newSchemaTable);
  };
  p2(() => {
    var _a3, _b2;
    if (schemaTable) {
      if (props2.schema) {
        if ((dbSchema == null ? void 0 : dbSchema.id) != props2.schema) {
          const preselectSchema = schemaTable.rows.find(
            (g4) => g4.id == props2.schema
          );
          if (preselectSchema) {
            if (preselectSchema.type == "db") {
              setDBSchema(preselectSchema);
              return;
            } else {
              const preselectDBSchema = schemaTable.rows.find(
                (g4) => g4.id == preselectSchema.def
              );
              if (preselectDBSchema) {
                setDBSchema(preselectDBSchema);
                return;
              }
            }
          } else {
            const newSchema = {
              id: uniqueNameFromString(
                sanitizeTableName(props2.schema),
                schemaTable.rows.map((g4) => g4.id)
              ),
              name: props2.schema,
              type: "db"
            };
            setDBSchema(newSchema);
            saveSchema(newSchema).then(() => {
              saveDB2({
                schema: newSchema,
                cols: defaultTableFields.map((g4) => ({
                  ...g4,
                  schemaId: newSchema.id
                })),
                rows: []
              });
            });
          }
        }
      } else {
        if (!dbSchema) {
          setDBSchema(
            (_a3 = schemaTable.rows) == null ? void 0 : _a3.find((g4) => g4.type == "db")
          );
        } else {
          setDBSchema(
            (_b2 = schemaTable.rows) == null ? void 0 : _b2.find((g4) => g4.id == dbSchema.id)
          );
        }
      }
    }
  }, [schemaTable]);
  const loadTables = async () => {
    if (!spaceInfo)
      return;
    const spaceExists = await app.vault.adapter.exists(spaceInfo.dbPath);
    if (spaceExists || spaceInfo.isRemote) {
      setDBFileExists(true);
      getMDBTableSchemas(props2.plugin, spaceInfo, "context").then((f4) => {
        if (f4)
          setSchemaTable(() => ({
            ...defaultSchema,
            rows: f4
          }));
      });
    } else {
      if (props2.schema) {
        const tableData2 = defaultTableDataForContext(props2.plugin, spaceInfo);
        if (tableData2) {
          setSchemaTable(defaultSchema);
        }
      } else {
        setSchemaTable(defaultSchema);
        setDBSchema(defaultFileDBSchema);
      }
    }
  };
  const refreshFile = T2(async (file) => {
    var _a3;
    if (file.path == props2.file && dbSchema) {
      const fCache = (_a3 = app.metadataCache.getCache(file.path)) == null ? void 0 : _a3.frontmatter;
      if ((0, import_lodash4.isEqual)(fCache, metadataCache))
        return;
      setMetadataCache(fCache);
      if (dbSchema.primary) {
        runDef();
      } else {
        getMDBData();
      }
    }
  }, []);
  const loadContextFields = T2(async (tag) => {
    getMDBTable(
      props2.plugin,
      spaceFromTag(props2.plugin, tag),
      "files",
      "context"
    ).then((f4) => {
      setContextTable((t4) => ({
        ...t4,
        [tag]: f4
      }));
    });
  }, []);
  const refreshTags = async (tags) => {
    if (contexts.some((f4) => tags.some((g4) => g4 == f4)))
      if (dbSchema.primary) {
        runDef();
      } else {
        getMDBData();
      }
  };
  const refreshMDB = T2(
    async (contextPath) => {
      if (!dbFileExists || (dbSchema == null ? void 0 : dbSchema.primary) != "true") {
        return;
      }
      if (contextPath == spaceInfo.path) {
        if (dbSchema) {
          loadTables();
        }
      } else {
        const tag = Object.keys(contextTable).find(
          (t4) => spaceFromTag(props2.plugin, t4).path == contextPath
        );
        if (tag)
          loadContextFields(tag);
      }
    },
    [
      contextTable,
      dbFileExists,
      dbSchema,
      loadContextFields,
      loadTables,
      props2.plugin,
      spaceInfo.path
    ]
  );
  const refreshSpace = T2(
    async (evt) => {
      if (evt.detail.type == "context") {
        refreshMDB(evt.detail.name);
        return;
      }
      if (evt.detail.type == "file") {
        refreshFile(getAbstractFileAtPath(app, evt.detail.name));
        return;
      }
      if ((evt.detail.type == "space" || evt.detail.type == "vault") && !dbFileExists) {
        const defaultTable = defaultTableDataForContext(
          props2.plugin,
          spaceInfo
        );
        if (defaultTable)
          setTableData(defaultTable);
      } else if (evt.detail.type == "vault") {
        refreshMDB(spaceInfo.path);
      }
    },
    [dbFileExists, props2.plugin, refreshFile, refreshMDB, spaceInfo]
  );
  const getMDBData = () => {
    getMDBTable(props2.plugin, spaceInfo, dbSchema.id, "context").then((f4) => {
      setTableData(f4);
    });
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpace);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpace);
    };
  }, [refreshSpace]);
  p2(() => {
    loadTables();
  }, [spaceInfo]);
  const saveDB2 = async (newTable) => {
    var _a3, _b2;
    if (spaceInfo.readOnly)
      return;
    if (!dbFileExists) {
      const defaultFields = defaultFieldsForContext(spaceInfo);
      const defaultTable = defaultTablesForContext(spaceInfo);
      const dbField = {
        ...defaultTable,
        m_fields: {
          uniques: defaultFields.uniques,
          cols: defaultFields.cols,
          rows: [...(_a3 = defaultFields.rows) != null ? _a3 : [], ...(_b2 = newTable == null ? void 0 : newTable.cols) != null ? _b2 : []]
        },
        [newTable.schema.id]: {
          uniques: newTable.cols.filter((c4) => c4.unique == "true").map((c4) => c4.name),
          cols: newTable.cols.map((c4) => c4.name),
          rows: newTable.rows
        }
      };
      await saveDBToPath(props2.plugin, spaceInfo.dbPath, dbField).then((f4) => {
        setDBFileExists(true);
        f4 ? setTableData(newTable) : new import_obsidian16.Notice("DB ERROR");
      });
    } else {
      await saveMDBToPath(props2.plugin, spaceInfo, newTable).then((f4) => {
        f4 ? setTableData(newTable) : new import_obsidian16.Notice("DB ERROR");
      });
    }
  };
  p2(() => {
    if (!schemaTable || !dbSchema)
      return;
    if (dbFileExists) {
      if (dbSchema.primary) {
        runDef();
      } else {
        getMDBData();
      }
    } else {
      const defaultTable = defaultTableDataForContext(props2.plugin, spaceInfo);
      if (defaultTable)
        setTableData(defaultTable);
    }
  }, [dbSchema]);
  p2(() => {
    if (dbFileExists && tableData)
      getContextTags(tableData);
  }, [tableData]);
  const getContextTags = async (_tableData) => {
    const contextFields = _tableData.cols.filter((f4) => f4.type.contains("context")).map((f4) => f4.value).filter((f4) => !contexts.some((g4) => g4 == f4));
    for (const c4 of contextFields) {
      loadContextFields(c4);
    }
  };
  const runDef = async () => {
    if (spaceInfo.uri.type == "folder") {
      getMDBTable(props2.plugin, spaceInfo, "files", "context").then((f4) => {
        if (f4) {
          for (const c4 of contexts) {
            loadTagContext(c4, f4.rows);
          }
          setTableData(f4);
        }
        return f4;
      });
    } else if (spaceInfo.uri.type == "tag") {
      getMDBTable(props2.plugin, spaceInfo, "files", "context").then((f4) => {
        if (f4) {
          for (const c4 of contexts) {
            loadTagContext(c4, f4.rows);
          }
          setTableData(f4);
        }
        return f4;
      });
    } else if (spaceInfo.uri.type == "space") {
      getMDBTable(props2.plugin, spaceInfo, "files", "context").then((f4) => {
        if (f4)
          setTableData(f4);
        return f4;
      });
    } else {
      getMDBTable(props2.plugin, spaceInfo, dbSchema.id, "context").then((f4) => {
        if (f4)
          setTableData(f4);
      });
    }
  };
  const loadTagContext = async (tag, files) => {
    getMDBTable(
      props2.plugin,
      spaceFromTag(props2.plugin, tag),
      "files",
      "context"
    ).then((f4) => {
      if (f4) {
        const contextFields = f4.cols.filter((g4) => g4.type.contains("context")).map((g4) => g4.value).filter((g4) => !contexts.some((h5) => h5 == g4));
        for (const c4 of contextFields) {
          loadContextFields(c4);
        }
        setContextTable((t4) => ({
          ...t4,
          [tag]: f4
        }));
      }
    });
  };
  const saveContextDB = async (newTable, tag) => {
    const context = spaceFromTag(props2.plugin, tag);
    await saveMDBToPath(props2.plugin, context, newTable).then(
      (f4) => f4 && setContextTable((t4) => ({
        ...t4,
        [tag]: newTable
      }))
    );
  };
  return /* @__PURE__ */ Cn.createElement(ContextMDBContext.Provider, {
    value: {
      tableData,
      contextTable,
      setContextTable,
      saveDB: saveDB2,
      saveContextDB,
      dbSchemas: schemas,
      saveSchema,
      deleteSchema,
      dbFileExists,
      dbSchema,
      setDBSchema
    }
  }, props2.children);
};

// src/context/ContextEditorContext.tsx
var ContextEditorContext = F({
  cols: [],
  data: [],
  schema: null,
  views: [],
  setSchema: () => null,
  sortedColumns: [],
  filteredData: [],
  contextTable: {},
  selectedRows: [],
  selectRows: () => null,
  setContextTable: () => null,
  predicate: defaultPredicate,
  savePredicate: () => null,
  saveContextDB: () => null,
  hideColumn: () => null,
  saveColumn: () => false,
  newColumn: () => false,
  sortColumn: () => null,
  delColumn: () => null,
  searchString: "",
  setSearchString: () => null,
  loadContextFields: () => null,
  updateValue: () => null,
  updateFieldValue: () => null
});
var ContextEditorProvider = (props2) => {
  const { spaceInfo, contexts } = q2(SpaceContext);
  const { dbFileExists, dbSchema, saveDB: saveDB2, tableData } = q2(ContextMDBContext);
  const { frameSchemas, saveSchema } = q2(FramesMDBContext);
  const [schema, setSchema] = h2(defaultFileListSchema);
  const [searchString, setSearchString] = h2(null);
  const [contextTable, setContextTable] = h2({});
  const [predicate, setPredicate] = h2(defaultPredicate);
  const [selectedRows, setSelectedRows] = h2([]);
  const views = F2(() => {
    const _views = frameSchemas.filter(
      (f4) => f4.type == "view" && f4.def.db == (dbSchema == null ? void 0 : dbSchema.id)
    );
    return _views.length > 0 ? _views : schema ? [schema] : [];
  }, [frameSchemas, schema]);
  const getSchema = (_schemaTable, _dbSchema, _currentSchema) => {
    var _a2, _b2;
    let _schema;
    if (props2.schema) {
      _schema = _schemaTable.find((f4) => f4.id == props2.schema);
    } else {
      _schema = ((_a2 = _currentSchema == null ? void 0 : _currentSchema.def) == null ? void 0 : _a2.db) == _dbSchema.id ? _schemaTable.find((f4) => f4.id == _currentSchema.id) : (_b2 = _schemaTable.find((f4) => {
        var _a3;
        return ((_a3 = f4.def) == null ? void 0 : _a3.db) == _dbSchema.id;
      })) != null ? _b2 : {
        ..._dbSchema,
        id: uniqueNameFromString(
          _dbSchema.id + "View",
          _schemaTable.map((f4) => f4.id)
        ),
        type: "view",
        def: { db: _dbSchema.id },
        predicate: JSON.stringify(defaultPredicate)
      };
    }
    return _schema;
  };
  p2(() => {
    if (!dbSchema)
      return;
    const _schema = getSchema(frameSchemas, dbSchema, schema);
    if (_schema) {
      setSchema(_schema);
    }
  }, [dbSchema, frameSchemas, props2.schema]);
  const cols = F2(
    () => {
      var _a2;
      return tableData ? [
        ...(_a2 = tableData.cols.map((f4) => ({ ...f4, table: "" }))) != null ? _a2 : [],
        ...(dbSchema == null ? void 0 : dbSchema.primary) == "true" ? contexts.reduce(
          (p3, c4) => {
            var _a3, _b2;
            return [
              ...p3,
              ...(_b2 = (_a3 = contextTable[c4]) == null ? void 0 : _a3.cols.filter(
                (f4) => f4.name != FilePropertyName && f4.type != "fileprop"
              ).map((f4) => ({ ...f4, table: c4 }))) != null ? _b2 : []
            ];
          },
          []
        ) : []
      ] : [];
    },
    [tableData, contextTable, contexts]
  );
  const data2 = F2(
    () => {
      var _a2;
      return (_a2 = tableData == null ? void 0 : tableData.rows.map(
        (r3, index) => linkContextRow(
          props2.plugin,
          {
            _index: index.toString(),
            ...r3,
            ...contexts.reduce((p3, c4) => {
              var _a3, _b2, _c2, _d2;
              const contextRowIndexByFile = (_b2 = (_a3 = contextTable[c4]) == null ? void 0 : _a3.rows.findIndex((f4) => f4.File == r3.File)) != null ? _b2 : -1;
              const contextRowsByFile = (_d2 = (_c2 = contextTable[c4]) == null ? void 0 : _c2.rows[contextRowIndexByFile]) != null ? _d2 : {};
              const contextRowsWithKeysAppended = Object.keys(
                contextRowsByFile
              ).reduce(
                (pa, ca) => ({ ...pa, [ca + c4]: contextRowsByFile[ca] }),
                {
                  ["_index" + c4]: contextRowIndexByFile.toString()
                }
              );
              return { ...p3, ...contextRowsWithKeysAppended };
            }, {})
          },
          cols
        )
      )) != null ? _a2 : [];
    },
    [tableData, schema, contextTable]
  );
  const sortedColumns = F2(() => {
    return cols.filter(
      (f4) => f4.hidden != "true" && !predicate.colsHidden.some((c4) => c4 == f4.name + f4.table)
    ).sort(
      (a5, b4) => predicate.colsOrder.findIndex((x5) => x5 == a5.name + a5.table) - predicate.colsOrder.findIndex((x5) => x5 == b4.name + b4.table)
    );
  }, [cols, predicate]);
  const filteredData = F2(
    () => data2.filter((f4) => {
      return predicate.filters.reduce((p3, c4) => {
        return p3 ? filterReturnForCol(
          cols.find((col) => col.name + col.table == c4.field),
          c4,
          f4
        ) : p3;
      }, true);
    }).filter(
      (f4) => (searchString == null ? void 0 : searchString.length) > 0 ? matchAny(searchString).test(
        Object.keys(f4).filter((g4) => g4.charAt(0) != "_").map((g4) => f4[g4]).join("|")
      ) : true
    ).sort((a5, b4) => {
      return predicate.sort.reduce((p3, c4) => {
        return p3 == 0 ? sortReturnForCol(
          cols.find((col) => col.name + col.table == c4.field),
          c4,
          a5,
          b4
        ) : p3;
      }, 0);
    }),
    [predicate, data2, cols, searchString]
  );
  const updateValue2 = (column, value, table, index, file) => {
    var _a2, _b2;
    const col = (_a2 = table == "" ? tableData : contextTable[table]) == null ? void 0 : _a2.cols.find(
      (f4) => f4.name == column
    );
    if (col)
      saveFrontmatterValue(
        props2.plugin,
        file != null ? file : (_b2 = tableData.rows[index]) == null ? void 0 : _b2.File,
        column,
        value,
        col.type,
        props2.plugin.settings.saveAllContextToFrontmatter
      );
    if (table == "") {
      saveDB2({
        ...tableData,
        rows: tableData.rows.map(
          (r3, i4) => i4 == index ? {
            ...r3,
            [column]: value
          } : r3
        )
      });
    } else if (contextTable[table]) {
      saveContextDB(
        {
          ...contextTable[table],
          rows: contextTable[table].rows.map(
            (r3, i4) => i4 == index ? {
              ...r3,
              [column]: value
            } : r3
          )
        },
        table
      );
    }
  };
  const sortColumn = (sort) => {
    savePredicate({
      ...predicate,
      sort: [sort]
    });
  };
  const hideColumn = (col, hidden) => {
    savePredicate({
      ...predicate,
      colsHidden: hidden ? [
        ...predicate.colsHidden.filter((s5) => s5 != col.name + col.table),
        col.name + col.table
      ] : predicate.colsHidden.filter((s5) => s5 != col.name + col.table)
    });
  };
  const updateFieldValue = (column, fieldValue, value, table, index, file) => {
    var _a2;
    const col = tableData.cols.find((f4) => f4.name == column);
    saveFrontmatterValue(
      props2.plugin,
      file != null ? file : (_a2 = tableData.rows[index]) == null ? void 0 : _a2.File,
      column,
      value,
      col.type,
      props2.plugin.settings.saveAllContextToFrontmatter
    );
    if (table == "") {
      const newTable = {
        ...tableData,
        cols: tableData.cols.map(
          (m5) => m5.name == column ? {
            ...m5,
            value: fieldValue
          } : m5
        ),
        rows: tableData.rows.map(
          (r3, i4) => i4 == index ? {
            ...r3,
            [column]: value
          } : r3
        )
      };
      saveDB2(newTable);
    } else if (contextTable[table]) {
      saveContextDB(
        {
          ...contextTable[table],
          cols: contextTable[table].cols.map(
            (m5) => m5.name == column ? {
              ...m5,
              value: fieldValue
            } : m5
          ),
          rows: contextTable[table].rows.map(
            (r3, i4) => i4 == index ? {
              ...r3,
              [column]: value
            } : r3
          )
        },
        table
      );
    }
  };
  const syncAllMetadata = (f4) => {
    const files = f4.rows.map((f5) => f5.File);
    const importYAML = (files2, fmKeys) => {
      return files2.map((f5) => getAbstractFileAtPath(app, f5)).filter((f5) => f5).reduce(
        (p3, c4) => {
          const fm = frontMatterForFile(c4);
          if (!fm)
            return p3;
          return {
            uniques: [],
            cols: uniq([...p3.cols, ...fmKeys]),
            rows: [
              ...p3.rows,
              {
                File: c4.path,
                ...fmKeys.reduce((p4, c5) => {
                  const value = parseFrontMatter(c5, fm[c5]);
                  if ((value == null ? void 0 : value.length) > 0)
                    return { ...p4, [c5]: value };
                  return p4;
                }, {})
              }
            ]
          };
        },
        { uniques: [], cols: [], rows: [] }
      );
    };
    const yamlTableData = importYAML(
      files,
      f4.cols.filter((f5) => !f5.type.contains("file")).map((f5) => f5.name)
    );
    const newRows = f4.rows.map((r3) => {
      const fmRow = yamlTableData.rows.find((f5) => f5.File == r3.File);
      if (fmRow) {
        return {
          ...r3,
          ...fmRow
        };
      }
      return r3;
    });
    const rowsChanged = !import_lodash5.default.isEqual(newRows, tableData == null ? void 0 : tableData.rows);
    const colsChanged = !import_lodash5.default.isEqual(tableData == null ? void 0 : tableData.cols, f4.cols);
    if (rowsChanged || colsChanged) {
      saveDB2({
        ...f4,
        rows: newRows
      });
    }
  };
  const refreshSpace = async (evt) => {
    if (evt.detail.type == "context") {
      refreshMDB(evt.detail.name);
      return;
    }
    if (evt.detail.type == "vault") {
      refreshMDB(spaceInfo.path);
    }
  };
  const refreshMDB = async (contextPath) => {
    if (!dbFileExists || (dbSchema == null ? void 0 : dbSchema.primary) != "true") {
      return;
    }
    const tag = Object.keys(contextTable).find(
      (t4) => spaceFromTag(props2.plugin, t4).path == contextPath
    );
    if (tag)
      loadContextFields(tag);
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpace);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpace);
    };
  }, [refreshSpace]);
  p2(() => {
    if (schema) {
      parsePredicate(schema.predicate);
    }
  }, [schema]);
  p2(() => {
    if (dbFileExists && tableData)
      getContextTags(tableData);
  }, [tableData]);
  const selectRows = (lastSelected, rows) => {
    setSelectedRows(rows);
    if (!((dbSchema == null ? void 0 : dbSchema.primary) == "true"))
      return;
    if (lastSelected) {
      const path = tableData.rows[parseInt(lastSelected)].File;
      const evt = new CustomEvent(
        eventTypes.activePathChange,
        {
          detail: {
            selection: path,
            path: {
              ...uriByString(spaceInfo.path),
              ref: schema == null ? void 0 : schema.id
            }
          }
        }
      );
      window.dispatchEvent(evt);
    } else {
      const evt = new CustomEvent(
        eventTypes.activePathChange,
        {
          detail: {
            path: {
              ...uriByString(spaceInfo.path),
              ref: schema == null ? void 0 : schema.id
            },
            selection: null
          }
        }
      );
      window.dispatchEvent(evt);
    }
  };
  const getContextTags = async (_tableData) => {
    const contextFields = _tableData.cols.filter((f4) => f4.type.contains("context")).map((f4) => f4.value).filter((f4) => !contexts.some((g4) => g4 == f4));
    for (const c4 of contextFields) {
      loadContextFields(c4);
    }
  };
  p2(() => {
    if (tableData) {
      for (const c4 of contexts) {
        loadTagContext(c4, tableData.rows);
      }
    }
  }, [tableData]);
  const loadTagContext = async (tag, files) => {
    getMDBTable(
      props2.plugin,
      spaceFromTag(props2.plugin, tag),
      "files",
      "context"
    ).then((f4) => {
      if (f4) {
        const contextFields = f4.cols.filter((g4) => g4.type.contains("context")).map((g4) => g4.value).filter((g4) => !contexts.some((h5) => h5 == g4));
        for (const c4 of contextFields) {
          loadContextFields(c4);
        }
        setContextTable((t4) => ({
          ...t4,
          [tag]: f4
        }));
      }
    });
  };
  const loadContextFields = async (tag) => {
    getMDBTable(
      props2.plugin,
      spaceFromTag(props2.plugin, tag),
      "files",
      "context"
    ).then((f4) => {
      setContextTable((t4) => ({
        ...t4,
        [tag]: f4
      }));
    });
  };
  const saveContextDB = async (newTable, tag) => {
    const context = spaceFromTag(props2.plugin, tag);
    await saveMDBToPath(props2.plugin, context, newTable).then(
      (f4) => f4 && setContextTable((t4) => ({
        ...t4,
        [tag]: newTable
      }))
    );
  };
  const savePredicate = (newPredicate) => {
    const cleanedPredicate = validatePredicate(newPredicate);
    saveSchema({
      ...schema,
      predicate: JSON.stringify(cleanedPredicate)
    });
    setPredicate(cleanedPredicate);
  };
  p2(() => {
    setPredicate((p3) => ({
      ...p3,
      colsOrder: uniq([
        ...p3.colsOrder,
        ...cols.filter((f4) => f4.hidden != "true").map((c4) => c4.name + c4.table)
      ])
    }));
  }, [cols]);
  const parsePredicate = (predicateStr) => {
    const newPredicate = safelyParseJSON(predicateStr);
    setPredicate(validatePredicate(newPredicate));
  };
  const delColumn = (column) => {
    let mdbtable;
    const table = column.table;
    if (table == "") {
      mdbtable = tableData;
    } else if (contextTable[table]) {
      mdbtable = contextTable[table];
    }
    const newFields = mdbtable.cols.filter(
      (f4, i4) => f4.name != column.name
    );
    const newTable = {
      ...mdbtable,
      cols: newFields,
      rows: mdbtable.rows.map((r3) => {
        const { [column.name]: val, ...rest } = r3;
        return rest;
      })
    };
    if (table == "") {
      saveDB2(newTable);
    } else if (contextTable[table]) {
      saveContextDB(newTable, table);
    }
  };
  const newColumn = (col) => {
    return saveColumn(col);
  };
  const saveColumn = (newColumn2, oldColumn) => {
    let mdbtable;
    const column = {
      ...newColumn2,
      name: sanitizeColumnName(newColumn2.name)
    };
    const table = column.table;
    if (table == "") {
      mdbtable = tableData;
    } else if (contextTable[table]) {
      mdbtable = contextTable[table];
    }
    if (column.name == "") {
      new import_obsidian17.Notice(i18n_default.notice.noPropertyName);
      return false;
    }
    if (!oldColumn && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    ) || oldColumn && oldColumn.name != column.name && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    )) {
      new import_obsidian17.Notice(i18n_default.notice.duplicatePropertyName);
      return false;
    }
    const oldFieldIndex = oldColumn ? mdbtable.cols.findIndex((f4) => f4.name == oldColumn.name) : -1;
    const newFields = oldFieldIndex == -1 ? [...mdbtable.cols, column] : mdbtable.cols.map((f4, i4) => i4 == oldFieldIndex ? column : f4);
    const newTable = {
      ...mdbtable,
      cols: newFields,
      rows: mdbtable.rows.map(
        (f4) => oldColumn ? {
          ...f4,
          [column.name]: f4[oldColumn.name],
          oldColumn: void 0
        } : f4
      )
    };
    if (oldColumn)
      savePredicate({
        view: predicate.view,
        frame: predicate.frame,
        frameProps: predicate.frameProps,
        filters: predicate.filters.map(
          (f4) => f4.field == oldColumn.name + oldColumn.table ? { ...f4, field: column.name + column.table } : f4
        ),
        sort: predicate.sort.map(
          (f4) => f4.field == oldColumn.name + oldColumn.table ? { ...f4, field: column.name + column.table } : f4
        ),
        groupBy: predicate.groupBy.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsHidden: predicate.colsHidden.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsOrder: predicate.colsOrder.map(
          (f4) => f4 == oldColumn.name + oldColumn.table ? column.name + column.table : f4
        ),
        colsSize: {
          ...predicate.colsSize,
          [column.name + column.table]: predicate.colsSize[oldColumn.name + oldColumn.table],
          [oldColumn.name + oldColumn.table]: void 0
        }
      });
    if (table == "") {
      syncAllMetadata(newTable);
    } else if (contextTable[table]) {
      saveContextDB(newTable, table);
    }
    return true;
  };
  return /* @__PURE__ */ Cn.createElement(ContextEditorContext.Provider, {
    value: {
      cols,
      data: data2,
      views,
      schema,
      setSchema,
      filteredData,
      loadContextFields,
      selectedRows,
      selectRows,
      sortedColumns,
      contextTable,
      setContextTable,
      predicate,
      savePredicate,
      saveContextDB,
      saveColumn,
      hideColumn,
      sortColumn,
      delColumn,
      newColumn,
      searchString,
      setSearchString,
      updateValue: updateValue2,
      updateFieldValue
    }
  }, props2.children);
};

// src/components/Space/Contexts/ContextBuilder/ContextSelector.tsx
init_compat_module();
var ContextSelector = (props2) => {
  const { spaceInfo, contexts } = q2(SpaceContext);
  const { dbSchema, saveSchema } = q2(ContextMDBContext);
  const { loadContextFields } = q2(ContextEditorContext);
  const removeContext = (value) => {
    if (!spaceInfo)
      return;
    removeContextInSpace(props2.plugin, spaceInfo, value);
  };
  return contexts.length > 0 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-selector"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-icon-xsmall mk-fold`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-context"]
    }
  }), contexts.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onContextMenu: (e4) => openSpace(tagSpacePathFromTag(f4), props2.plugin, false),
    onClick: (e4) => openSpace(tagSpacePathFromTag(f4), props2.plugin, false)
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "cm-hashtag cm-hashtag-begin cm-hashtag-end"
  }, f4)))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/components/ui/menus/menuItems.tsx
var import_obsidian18 = require("obsidian");
init_compat_module();

// src/components/ui/menus/selectMenu.tsx
init_compat_module();

// src/components/ui/menus/selectMenu/SelectMenuComponent.tsx
var import_fuzzysort = __toESM(require_fuzzysort());
var import_lodash6 = __toESM(require_lodash());
init_compat_module();

// src/components/ui/menus/selectMenu/SelectMenuInput.tsx
init_compat_module();
var SIZER_STYLES = {
  position: "absolute",
  width: 0,
  height: 0,
  visibility: "hidden",
  overflow: "scroll",
  whiteSpace: "pre"
};
var STYLE_PROPS = [
  "fontSize",
  "fontFamily",
  "fontWeight",
  "fontStyle",
  "letterSpacing",
  "textTransform"
];
var SelectMenuInput = k3(
  (props2, input) => {
    const { classNames: classNames9, inputAttributes, inputEventHandlers, index } = props2;
    const sizer = _2(null);
    const [inputWidth, setInputWidth] = h2(null);
    const [query, setQuery] = h2("");
    const [placeholderText, setPlaceholderText] = h2("");
    p2(() => {
      copyInputStyles();
      updateInputWidth();
      setTimeout(() => {
        input.current.focus();
      }, 50);
    }, []);
    p2(() => {
      if (query !== props2.query || placeholderText !== props2.placeholderText) {
        setQuery(props2.query);
        setPlaceholderText(props2.placeholderText);
        updateInputWidth();
      }
    }, [props2.query, props2.placeholderText]);
    const copyInputStyles = () => {
      const inputStyle = window.getComputedStyle(input.current);
      STYLE_PROPS.forEach((prop) => {
        sizer.current.style[prop] = inputStyle[prop];
      });
    };
    const updateInputWidth = () => {
      let _inputWidth;
      _inputWidth = Math.ceil(sizer.current.scrollWidth) + 2;
      if (_inputWidth !== inputWidth) {
        setInputWidth(_inputWidth);
      }
    };
    return /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.searchWrapper
    }, /* @__PURE__ */ Cn.createElement("input", {
      ...inputAttributes,
      ...inputEventHandlers,
      ref: input,
      value: query,
      placeholder: placeholderText,
      className: classNames9.searchInput,
      role: "combobox",
      style: { width: "100%" }
    }), /* @__PURE__ */ Cn.createElement("div", {
      ref: sizer,
      style: SIZER_STYLES
    }, query || placeholderText));
  }
);
var SelectMenuInput_default = SelectMenuInput;

// src/components/ui/menus/selectMenu/SelectMenuPill.tsx
init_compat_module();
var SelectMenuPillComponent = (props2) => {
  return /* @__PURE__ */ Cn.createElement("button", {
    type: "button",
    className: props2.classNames.selectedTag,
    onClick: props2.onDelete
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: props2.classNames.selectedTagName
  }, props2.tag.name));
};
var SelectMenuPill_default = SelectMenuPillComponent;

// src/components/ui/Sticker.tsx
init_compat_module();
var Sticker = (props2) => {
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-sticker",
    dangerouslySetInnerHTML: {
      __html: stickerFromString(props2.sticker, props2.plugin)
    }
  });
};

// src/components/ui/menus/selectMenu/SelectMenuSuggestions.tsx
init_compat_module();
function markIt(name, query) {
  const regexp = matchAny(query);
  return name.replace(regexp, "<mark>$&</mark>");
}
var SelectMenuSuggestionsComponent = (props2) => {
  const ref2 = _2(null);
  p2(() => {
    var _a2;
    if (props2.active) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.scrollIntoViewIfNeeded();
    }
  }, [props2.active]);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.item.icon && /* @__PURE__ */ Cn.createElement(Sticker, {
    plugin: props2.plugin,
    sticker: props2.item.icon
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-options-menu-inner"
  }, props2.item.onToggle && /* @__PURE__ */ Cn.createElement("div", null, "Toggle"), /* @__PURE__ */ Cn.createElement("span", {
    ref: ref2,
    dangerouslySetInnerHTML: {
      __html: markIt(props2.item.name, props2.query)
    }
  }), props2.item.description && /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-description",
    ref: ref2,
    dangerouslySetInnerHTML: {
      __html: markIt(props2.item.description, props2.query)
    }
  })), props2.item.removeable && /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      e4.stopPropagation();
      e4.preventDefault();
      props2.onDeleteOption(props2.item.value);
    },
    className: "mk-icon-small",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }));
};
var SelectMenuSuggestions = (props2) => {
  const timer = _2(null);
  const mouseOver = (e4, index) => {
    if (!props2.hoverSelect) {
      return;
    }
    timer.current && clearTimeout(timer.current);
    timer.current = setTimeout(() => props2.setIndex(index), 300);
  };
  const options = props2.options.map((item, index) => {
    const key2 = `${props2.id}-${index}`;
    const classNames9 = [];
    if (props2.index === index) {
      classNames9.push(props2.classNames.suggestionActive);
    }
    if (item.disabled) {
      classNames9.push(props2.classNames.suggestionDisabled);
    }
    return /* @__PURE__ */ Cn.createElement("li", {
      id: key2,
      key: key2,
      role: "option",
      className: classNames9.join(" "),
      "aria-disabled": Boolean(item.disabled),
      onMouseDown: (e4) => e4.preventDefault(),
      onClick: () => props2.addTag(item),
      onMouseOver: (e4) => mouseOver(e4, index),
      onMouseOut: (e4) => props2.hoverSelect && clearTimeout(timer.current)
    }, /* @__PURE__ */ Cn.createElement(SelectMenuSuggestionsComponent, {
      plugin: props2.plugin,
      item,
      query: props2.query,
      active: index == props2.index,
      onDeleteOption: props2.deleteOption
    }));
  });
  return /* @__PURE__ */ Cn.createElement("div", {
    className: props2.classNames.suggestions
  }, /* @__PURE__ */ Cn.createElement("ul", {
    role: "listbox",
    id: props2.id
  }, options, props2.query && props2.allowNew && /* @__PURE__ */ Cn.createElement("li", {
    onMouseDown: (e4) => e4.preventDefault(),
    onClick: () => props2.addTag({ name: props2.query, value: props2.query })
  }, "Add ", props2.query)));
};
var SelectMenuSuggestions_default = SelectMenuSuggestions;

// src/components/ui/menus/selectMenu/concerns/focusNextElement.js
function focusNextElement(scope, currentTarget) {
  const interactiveEls = scope.querySelectorAll("a,button,input");
  const currentEl = Array.prototype.findIndex.call(
    interactiveEls,
    (element) => element === currentTarget
  );
  const nextEl = interactiveEls[currentEl - 1] || interactiveEls[currentEl + 1];
  if (nextEl) {
    nextEl.focus();
  }
}

// src/components/ui/menus/selectMenu/SelectMenuComponent.tsx
var KEYS = {
  ENTER: "Enter",
  TAB: "Tab",
  BACKSPACE: "Backspace",
  UP_ARROW: "ArrowUp",
  UP_ARROW_COMPAT: "Up",
  DOWN_ARROW: "ArrowDown",
  DOWN_ARROW_COMPAT: "Down"
};
var CLASS_NAMES = {
  root: "mk-options-menu",
  rootFocused: "is-focused",
  selected: "mk-options-menu__selected",
  selectedTag: "mk-options-menu__selected-tag",
  selectedTagName: "mk-options-menu__selected-tag-name",
  search: "mk-options-menu__search",
  searchWrapper: "mk-options-menu__search-wrapper",
  searchInput: "mk-options-menu__search-input",
  suggestions: "mk-options-menu__suggestions",
  suggestionActive: "is-active",
  suggestionDisabled: "is-disabled"
};
var defaultProps = {
  plugin: null,
  id: "SelectMenu",
  tags: [],
  suggestionsOnly: false,
  placeholderText: i18n_default.labels.optionItemSelectPlaceholder,
  noSuggestionsText: null,
  newTagText: null,
  suggestions: [],
  suggestionsFilter: defaultSuggestionsFilter,
  suggestionsTransform: null,
  classNames: CLASS_NAMES,
  delimiters: [KEYS.ENTER],
  minQueryLength: 2,
  maxSuggestionsLength: 8,
  inputAttributes: {},
  hoverSelect: false
};
var findMatchIndex = (options, query) => {
  return options.findIndex((option) => matchExact(query).test(option.name));
};
var pressDelimiter = (props2, query, index, options, addTag) => {
  if (query.length >= props2.minQueryLength) {
    const match2 = findMatchIndex(options, query);
    const _index = index === -1 ? match2 : index;
    const tag = _index > -1 ? options[_index] : null;
    if (tag) {
      addTag(tag);
    } else {
      addTag({ name: query, value: query });
    }
  }
};
function defaultSuggestionsFilter(item, query) {
  const regexp = matchAny(query);
  return regexp.test(item.name);
}
function getOptions2(props2, query) {
  let options;
  options = query.length == 0 ? props2.suggestions : import_fuzzysort.default.go(query, props2.suggestions, {
    keys: ["name", "value"]
  }).map((result) => result.obj);
  options = options.slice(0, props2.maxSuggestionsLength);
  if (props2.newTagText && findMatchIndex(options, query) === -1) {
    options.push({ id: 0, name: query, value: query });
  } else if (props2.noSuggestionsText && options.length === 0) {
    options.push({
      id: 0,
      name: props2.noSuggestionsText,
      value: "",
      disabled: true
    });
  }
  return options;
}
var SelectMenuComponent = Cn.forwardRef(
  (_props, ref2) => {
    const props2 = { ...defaultProps, ..._props };
    const [options, setOptions] = h2([]);
    const inputRef = _2(null);
    const [query, setQuery] = h2("");
    const [focused, setFocused] = h2(false);
    const [index, setIndex] = h2(0);
    const onComposition = _2(false);
    p2(() => {
      if (ref2) {
        ref2.current = () => {
          var _a2;
          if (!focused) {
            (_a2 = inputRef == null ? void 0 : inputRef.current) == null ? void 0 : _a2.focus();
            setFocused(true);
            return false;
          }
          return true;
        };
      }
    }, [focused]);
    p2(() => {
      var _a2;
      if (index != -1 && props2.onHover && props2.hoverSelect) {
        debounceFn((_a2 = options[index]) == null ? void 0 : _a2.value);
      }
    }, [index, options]);
    const debounceFn = T2(
      (0, import_lodash6.debounce)(handleDebounceFn, 300, {
        leading: false
      }),
      []
    );
    function handleDebounceFn(inputValue) {
      props2.onHover(inputValue);
    }
    p2(() => {
      if (query.length == 0 && props2.defaultSuggestions) {
        setOptions(props2.defaultSuggestions);
        return;
      }
      setOptions(getOptions2(props2, query));
    }, [query, props2.suggestions]);
    const container = _2(null);
    const onInput = (e4) => {
      if (e4.type === "compositionstart") {
        onComposition.current = true;
        return;
      }
      if (e4.type === "compositionend") {
        onComposition.current = false;
      }
      if (onComposition.current) {
        return;
      }
      const _query = e4.target.value;
      if (props2.onInput) {
        props2.onInput(_query);
      }
      if (_query.length === query.length + 1 && props2.delimiters.indexOf(query.slice(-1)) > -1) {
        pressDelimiter(props2, query, index, options, addTag);
      } else if (_query !== query) {
        setQuery(_query);
      }
    };
    const onKeyDown = (e4) => {
      if (props2.delimiters.indexOf(e4.key) > -1) {
        if (query || index > -1) {
          e4.preventDefault();
        }
        pressDelimiter(props2, query, index, options, addTag);
      }
      if (e4.key === KEYS.BACKSPACE) {
        pressBackspaceKey();
      }
      if (e4.key === KEYS.UP_ARROW || e4.key === KEYS.UP_ARROW_COMPAT) {
        pressUpKey(e4);
      }
      if (e4.key === KEYS.DOWN_ARROW || e4.key === KEYS.DOWN_ARROW_COMPAT) {
        pressDownKey(e4);
      }
    };
    const onBlur = () => {
      setFocused(false);
      if (props2.onBlur) {
        props2.onBlur();
      }
    };
    const onFocus = () => {
      setFocused(true);
      if (props2.onFocus) {
        props2.onFocus();
      }
    };
    const onDeleteTag = (index2, event) => {
      if (container.current) {
        focusNextElement(container.current, event.currentTarget);
      }
      deleteTag(index2);
    };
    const addTag = (tag) => {
      if (tag.disabled) {
        return;
      }
      if (props2.onValidate && !props2.onValidate(tag)) {
        return;
      }
      props2.onAddition(tag);
      clearInput();
    };
    const deleteTag = (i4) => {
      props2.onDelete(i4);
    };
    const clearInput = () => {
      setQuery("");
      setIndex(-1);
    };
    const clearSelectedIndex = () => {
      setIndex(-1);
    };
    const pressUpKey = (e4) => {
      e4.preventDefault();
      const size = options.length - 1;
      setIndex(index <= 0 ? size : index - 1);
    };
    const pressDownKey = (e4) => {
      e4.preventDefault();
      const size = options.length - 1;
      setIndex((i4) => i4 >= size ? 0 : i4 + 1);
    };
    function pressBackspaceKey() {
      if (!query.length) {
        deleteTag(props2.tags.length - 1);
      }
    }
    const focusInput = () => {
      inputRef.current.focus();
    };
    const inputEventHandlers = {
      onChange: onInput,
      onBlur,
      onFocus,
      onInput: () => {
      },
      onKeyDown,
      onCompositionEnd: onInput,
      onCompositionStart: onInput
    };
    const expanded = focused && query.length >= props2.minQueryLength;
    const classNames9 = Object.assign({}, CLASS_NAMES, props2.classNames);
    const rootClassNames = [classNames9.root];
    focused && rootClassNames.push(classNames9.rootFocused);
    return /* @__PURE__ */ Cn.createElement("div", {
      ref: container,
      className: rootClassNames.join(" ")
    }, !props2.suggestionsOnly ? /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.selected,
      "aria-relevant": "additions removals",
      "aria-live": "polite"
    }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.tags.map((tag, i4) => /* @__PURE__ */ Cn.createElement(SelectMenuPill_default, {
      key: i4,
      tag,
      classNames: classNames9,
      onDelete: (e4) => onDeleteTag(i4, e4)
    }))), /* @__PURE__ */ Cn.createElement("div", {
      className: classNames9.search
    }, /* @__PURE__ */ Cn.createElement(SelectMenuInput_default, {
      ref: inputRef,
      query,
      index,
      id: props2.id,
      classNames: classNames9,
      inputAttributes: props2.inputAttributes,
      inputEventHandlers,
      expanded,
      placeholderText: props2.placeholderText
    }))) : null, options.length || props2.allowNew ? /* @__PURE__ */ Cn.createElement(SelectMenuSuggestions_default, {
      plugin: props2.plugin,
      options,
      hoverSelect: props2.hoverSelect,
      query,
      setIndex,
      index,
      id: props2.id,
      classNames: classNames9,
      expanded,
      addTag,
      allowNew: props2.allowNew,
      deleteOption: props2.onDeleteOption
    }) : null, props2.previewComponent);
  }
);
SelectMenuComponent.displayName = "SelectMenuComponent";
var SelectMenuComponent_default = SelectMenuComponent;

// src/components/ui/menus/selectMenu.tsx
var SelectMenu = Cn.forwardRef(
  (props2, ref2) => {
    var _a2;
    const initialOptions = props2.options.map((o3, i4) => {
      return {
        ...o3,
        id: i4 + 1
      };
    });
    p2(() => {
      setSuggestions(
        props2.options.map((o3, i4) => {
          return {
            ...o3,
            id: i4 + 1
          };
        })
      );
    }, [props2.options]);
    const [suggestions, setSuggestions] = h2(initialOptions);
    const [tags, setTags] = h2(
      props2.value.map(
        (v3) => {
          var _a3;
          return (_a3 = initialOptions.find((f4) => f4.value == v3)) != null ? _a3 : {
            id: 0,
            name: v3,
            value: v3
          };
        }
      )
    );
    const onDelete = T2(
      (tagIndex) => {
        const newTags = tags.filter((_12, i4) => i4 !== tagIndex);
        setTags(newTags);
        props2.saveOptions(
          suggestions.map((f4) => f4.value),
          newTags.map((f4) => f4.value)
        );
      },
      [suggestions, tags, props2]
    );
    const onDeleteOption = T2(
      (removeTag) => {
        const newSuggestions = suggestions.filter((f4) => f4.value != removeTag);
        const newTags = tags.filter((f4) => f4.value != removeTag);
        setSuggestions(newSuggestions);
        setTags(newTags);
        if (props2.removeOption)
          props2.removeOption(removeTag);
        props2.hide();
      },
      [tags, suggestions, props2]
    );
    const onAddition = T2(
      (newTag) => {
        let tag = newTag;
        let newSuggestions = suggestions;
        let newTags = tags;
        if (!suggestions.find((s5) => s5.value == newTag.value)) {
          tag = {
            id: suggestions.length + 1,
            name: newTag.name,
            value: newTag.name
          };
          newSuggestions = [...suggestions, tag];
          setSuggestions(newSuggestions);
        }
        if (props2.multi) {
          if (!tags.find((t4) => t4.value == tag.value)) {
            newTags = [...tags, tag];
            setTags(newTags);
          }
        } else {
          newTags = [tag];
          setTags(newTags);
        }
        props2.saveOptions(
          newSuggestions.map((f4) => f4.value),
          newTags.map((f4) => f4.value)
        );
        if (!props2.multi) {
          props2.hide();
        }
      },
      [tags, suggestions]
    );
    const onValidation = T2(
      (newTag) => {
        if (!props2.editable && !suggestions.find((s5) => s5.value == newTag.value)) {
          return false;
        }
        if (newTag.name.length == 0) {
          return false;
        }
        return true;
      },
      [suggestions]
    );
    return /* @__PURE__ */ Cn.createElement(SelectMenuComponent_default, {
      tags: props2.multi ? tags : [],
      suggestions,
      plugin: props2.plugin,
      ref: ref2,
      onDelete,
      onDeleteOption,
      onAddition,
      onValidate: onValidation,
      defaultSuggestions: props2.defaultOptions,
      placeholderText: (_a2 = props2.placeholder) != null ? _a2 : "",
      minQueryLength: 0,
      onHover: props2.onHover,
      hoverSelect: props2.onHover ? true : false,
      maxSuggestionsLength: props2.showAll ? Math.min(50, props2.options.length) : 8,
      suggestionsOnly: !props2.searchable && !props2.editable,
      allowNew: props2.editable,
      previewComponent: props2.previewComponent
    });
  }
);
SelectMenu.displayName = "SelectMenu";
var selectMenu_default = SelectMenu;

// src/components/ui/menus/menuItems.tsx
var inputMenuItem = (menuItem, value, setValue) => {
  const frag = document.createDocumentFragment();
  const spanEl = frag.createEl("span");
  const inputEl = frag.createEl("input");
  inputEl.type = "text";
  inputEl.value = value;
  inputEl.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  inputEl.addEventListener("mousedown", (e4) => {
    e4.stopImmediatePropagation();
  });
  inputEl.addEventListener("mouseup", (e4) => {
    e4.stopImmediatePropagation();
  });
  inputEl.addEventListener("blur", (e4) => {
    setValue(inputEl.value);
  });
  menuItem.dom.toggleClass("mk-menu-input", true);
  menuItem.setTitle(frag);
  return menuItem;
};
var showSelectMenu = (point, optionProps) => {
  const menu = new import_obsidian18.Menu();
  menu.dom.toggleClass("mk-menu", true);
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createDiv("mk-options-container");
  div.style.minHeight = Math.min(
    200,
    (optionProps.options.length + (optionProps.searchable ? 1 : 0)) * 28
  ).toString() + "px";
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mousedown", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mouseup", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  menu.onHide(() => optionProps.onHide && optionProps.onHide());
  const root2 = createRoot(div);
  root2.render(
    /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(selectMenu_default, {
      hide: () => {
        menu.hide();
        optionProps.onHide && optionProps.onHide();
      },
      ...optionProps
    }))
  );
  menu.addItem((item) => {
    item.setTitle(frag);
  });
  const keys2 = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys2.length; i4++) {
    if (keys2[i4].key != "Escape") {
      menu.scope.unregister(keys2[i4]);
    }
  }
  menu.showAtPosition(point);
  return menu;
};
var disclosureMenuItem = (plugin, menuItem, multi, editable, title, value, options, saveOptions) => {
  const frag = document.createDocumentFragment();
  const div = frag.createDiv("title");
  div.textContent = title;
  const div2 = frag.createDiv("disclosure");
  div2.textContent = value;
  menuItem.setTitle(frag);
  menuItem.onClick((ev) => {
    var _a2;
    ev.stopPropagation();
    const offset2 = menuItem.dom.getBoundingClientRect();
    showSelectMenu(
      { x: offset2.right + 10, y: offset2.top },
      {
        plugin,
        multi,
        editable,
        value: (_a2 = parseMultiString(value)) != null ? _a2 : [],
        options,
        saveOptions,
        searchable: true,
        showAll: true
      }
    );
  });
  return menuItem;
};

// src/components/Space/Contexts/TagsView/NoteSpacesBar.tsx
init_compat_module();
var NoteSpacesBar = (props2) => {
  const showContextMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const f4 = loadTags(props2.plugin);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: true,
        value: [],
        options: f4.map((m5) => ({ name: m5, value: m5 })),
        saveOptions: (_12, value) => props2.addTag(value[0]),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  const spacesFromPath = (path) => {
    return [...props2.plugin.index.spacesMap.get(path)].map((f4) => props2.plugin.index.spacesIndex.get(f4)).filter((f4) => f4 && f4.path != "/");
  };
  const [spaces, setSpaces] = h2(
    spacesFromPath(props2.path)
  );
  const refreshSpaces = (evt) => {
    if (evt.detail.type == "file" && evt.detail.name == props2.path || evt.detail.type == "space" && evt.detail.name == props2.path) {
      setSpaces(spacesFromPath(props2.path));
    }
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpaces);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpaces);
    };
  }, [props2.path]);
  return spaces.length > 0 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-tag-selector"
  }, spaces.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onContextMenu: (e4) => openSpace(f4.path, props2.plugin, false),
    onClick: (e4) => openSpace(
      f4.path,
      props2.plugin,
      e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
    )
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "cm-hashtag cm-hashtag-begin mk-space-icon"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-icon-xsmall`,
    dangerouslySetInnerHTML: {
      __html: iconForSpace(f4.space)
    }
  })), /* @__PURE__ */ Cn.createElement("span", {
    className: "cm-hashtag cm-hashtag-end"
  }, f4.name))), props2.addTag && /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.addTag,
    onClick: (e4) => showContextMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/components/ui/menus/newPropertyMenu.tsx
var import_obsidian21 = require("obsidian");
init_compat_module();

// src/dispatch/mdb.ts
var import_lodash7 = __toESM(require_lodash());
var import_obsidian19 = require("obsidian");

// src/utils/contexts/file.ts
var renameRowForFile = (folder, filePath, toFilePath) => {
  return {
    ...folder,
    rows: folder.rows.map(
      (f4) => f4.File == filePath ? { ...f4, File: toFilePath } : f4
    )
  };
};
var removeRowForFile = (folder, filePath) => {
  return {
    ...folder,
    rows: folder.rows.filter(
      (f4) => f4.File != filePath
    )
  };
};
var removeRowsForFile = (folder, filePaths) => {
  return {
    ...folder,
    rows: folder.rows.filter(
      (f4) => !filePaths.includes(f4.File)
    )
  };
};

// src/utils/contexts/links.ts
var valueContainsLink = (link, value) => {
  return parseMultiString(value).some((f4) => link == parseLinkString(f4));
};
var replaceLinkInValue = (link, newLink, value) => {
  return serializeMultiString(parseMultiString(value).map((f4) => parseLinkString(f4) == link ? newLink : link));
};
var removeLinkInValue = (link, value) => {
  return serializeMultiString(parseMultiString(value).filter((f4) => f4 != link));
};
var linkColumns = (cols) => {
  return cols.filter((f4) => f4.type.startsWith("link") || f4.type.startsWith("context"));
};
var removeLinksInRow = (plugin, row, link, cols) => {
  if (cols.length == 0) {
    return row;
  }
  const deltaRow = cols.reduce((p3, c4) => {
    if (valueContainsLink(link, row[c4.name])) {
      const newValue = removeLinkInValue(link, row[c4.name]);
      saveFrontmatterValue(
        plugin,
        row.File,
        c4.name,
        newValue,
        c4.type,
        plugin.settings.saveAllContextToFrontmatter
      );
      return { ...p3, [c4.name]: newValue };
    }
    return p3;
  }, {});
  return { ...row, ...deltaRow };
};
var renameLinksInRow = (plugin, row, link, newLink, cols) => {
  if (cols.length == 0) {
    return row;
  }
  const deltaRow = cols.reduce((p3, c4) => {
    if (valueContainsLink(link, row[c4.name])) {
      const newValue = replaceLinkInValue(link, newLink, row[c4.name]);
      saveFrontmatterValue(
        plugin,
        row.File,
        c4.name,
        newValue,
        c4.type,
        plugin.settings.saveAllContextToFrontmatter
      );
      return { ...p3, [c4.name]: newValue };
    }
    return p3;
  }, {});
  return { ...row, ...deltaRow };
};

// src/utils/metadata/dataview/parseDataview.ts
var parseDataview = (field, value) => {
  const YAMLtype = detectYAMLType(value, field);
  switch (YAMLtype) {
    case "object":
      return JSON.stringify(value);
      break;
    case "number":
      return value.toString();
      break;
    case "boolean":
      return value ? "true" : "false";
      break;
    case "date":
      return format(new Date(value.ts), "yyyy-MM-dd");
      break;
    case "duration":
      return serializeMultiDisplayString(Object.keys(value.values).reduce(
        (p3, c4) => [
          ...p3,
          ...value.values[c4] > 0 ? [value.values[c4] + " " + c4] : []
        ],
        []
      ));
      break;
    case "option-multi":
    case "link-multi":
      if (typeof value === "string") {
        return value;
      }
      return serializeMultiString(
        value.map((v3) => {
          if (!v3) {
            return "";
          }
          if (typeof v3 === "string") {
            return v3;
          }
          if (v3.path) {
            return v3.path;
          }
          if (Array.isArray(value) && v3.length == 1 && Array.isArray(v3[0]) && v3[0].length == 1 && typeof v3[0][0] === "string") {
            return v3[0][0];
          }
          return JSON.stringify(v3);
        })
      );
      break;
    case "link":
      {
        if (Array.isArray(value) && value.length == 1 && Array.isArray(value[0]) && value[0].length == 1 && typeof value[0][0] === "string") {
          return value[0][0];
        } else if (typeof value === "string") {
          return value;
        }
        return value.path;
      }
      break;
    case "text":
    case "tag":
    case "image":
      return value;
      break;
  }
  return "";
};

// src/dispatch/mdb.ts
var processContextFile = async (plugin, space, processor, fallback) => {
  const dbFileExists = await app.vault.adapter.exists(space.dbPath);
  if (dbFileExists) {
    const contextDB = await getMDBTable(plugin, space, "files", "context");
    if (contextDB) {
      await processor(contextDB, space);
      return;
    } else if (fallback) {
      await fallback();
    }
  } else if (fallback) {
    await fallback();
  }
};
var saveDB = async (plugin, context, newTable) => {
  return saveMDBToPath(plugin, context, newTable);
};
var insertColumns = (table, column) => {
  if (table.cols.find((f4) => f4.name == column.name)) {
    new import_obsidian19.Notice(i18n_default.notice.duplicatePropertyName);
    return;
  }
  return {
    ...table,
    cols: [...table.cols, column]
  };
};
var updateValue = (folder, lookupField, lookupValue, field, value) => {
  return {
    ...folder,
    rows: folder.rows.map(
      (f4) => f4[lookupField] == lookupValue ? {
        ...f4,
        [field]: value
      } : f4
    )
  };
};
var insertRowsIfUnique = (folder, rows) => {
  return { ...folder, rows: [...folder.rows, ...rows.filter((f4) => !folder.rows.some((g4) => g4.File == f4.File))] };
};
var saveContextToFrontmatter = (file, cols, context, plugin) => {
  const afile = getAbstractFileAtPath(app, file);
  if (afile && afile instanceof import_obsidian19.TFile)
    saveContextToFile(afile, cols, context, plugin);
};
var initiateContextIfNotExists = async (plugin, tag) => {
  const context = spaceFromTag(plugin, tag);
  const tagFileExists = await app.vault.adapter.exists(context.dbPath);
  if (tagFileExists)
    return false;
  return createContextMDB(plugin, context);
};
var updateContextValue = async (plugin, space, file, field, value) => {
  let tagFileExists = await app.vault.adapter.exists(space.dbPath);
  if (!tagFileExists) {
    tagFileExists = await createContextMDB(plugin, space);
  }
  if (tagFileExists)
    await getMDBTable(plugin, space, "files", "context").then(
      (tagDB) => {
        const newMDB = updateValue(tagDB, FilePropertyName, file, field, value);
        return saveDB(plugin, space, newMDB).then((f4) => newMDB);
      }
    );
};
var insertContextColumn = async (plugin, space, field) => {
  let tagFileExists = await app.vault.adapter.exists(space.dbPath);
  if (!tagFileExists) {
    tagFileExists = await createContextMDB(plugin, space);
  }
  if (tagFileExists)
    await getMDBTable(plugin, space, "files", "context").then((tagDB) => {
      const newDB = insertColumns(tagDB, field);
      saveDB(plugin, space, newDB).then((f4) => newDB);
      return newDB;
    }).then((f4) => plugin.index.reloadContext(space));
};
var insertContextItems = async (plugin, newPaths, t4) => {
  const saveNewContextRows = async (tag, space2) => {
    const newRow = newPaths.map((newPath) => ({ File: newPath }));
    await saveDB(plugin, space2, insertRowsIfUnique(tag, newRow));
  };
  const space = spaceFromTag(plugin, t4);
  let tagFileExists = await app.vault.adapter.exists(space.dbPath);
  if (!tagFileExists) {
    tagFileExists = await createContextMDB(plugin, space);
  }
  if (tagFileExists)
    await getMDBTable(plugin, space, "files", "context").then(
      (tagDB) => saveNewContextRows(tagDB, space)
    );
};
var fileToFM = (afile, cols, plugin) => {
  let file = afile;
  if (afile instanceof import_obsidian19.TFolder) {
    file = getAbstractFileAtPath(app, folderNotePathFromAFile(plugin.settings, tFileToAFile(afile)));
  }
  if (!file)
    return [];
  const fm = frontMatterForFile(file);
  const fmKeys = frontMatterKeys(fm).filter((f4) => cols.some((g4) => f4 == g4));
  const rows = fmKeys.reduce(
    (p3, c4) => ({ ...p3, [c4]: parseFrontMatter(c4, fm[c4]) }),
    {}
  );
  if (plugin.dataViewAPI()) {
    return { ...rows, ...fileToDV(file, cols, plugin) };
  }
  return rows;
};
var fileToDV = (file, cols, plugin) => {
  const dvValues = plugin.dataViewAPI().page(file.path);
  const fmKeys = uniqCaseInsensitive(
    Object.keys(dvValues != null ? dvValues : {}).filter(
      (f4, i4, self2) => !self2.find(
        (g4, j4) => g4.toLowerCase().replace(/\s/g, "-") == f4.toLowerCase().replace(/\s/g, "-") && i4 > j4
      ) ? true : false
    ).filter((f4) => f4 != "file")
  ).filter((f4) => cols.some((g4) => f4 == g4));
  return fmKeys.reduce(
    (p3, c4) => ({
      ...p3,
      [c4]: parseDataview(c4, dvValues[c4])
    }),
    {}
  );
};
var onMetadataChange = async (plugin, file, spaces) => {
  const updateFile = (mdb) => {
    const objectExists = mdb.rows.some((item) => item.File === file.path);
    if (objectExists) {
      return mdb.rows.map(
        (f4) => f4.File == file.path ? {
          ...f4,
          ...fileToFM(
            file,
            mdb.cols.map((f5) => f5.name),
            plugin
          )
        } : f4
      );
    } else {
      return [
        ...mdb.rows,
        {
          File: file.path,
          ...fileToFM(
            file,
            mdb.cols.map((f4) => f4.name),
            plugin
          )
        }
      ];
    }
  };
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const newDB = {
        ...mdb,
        rows: updateFile(mdb)
      };
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var updateValueInContext = async (plugin, row, field, value, space) => {
  const changeTagInContextMDB = (mdb) => {
    return { ...mdb, rows: mdb.rows.map((f4) => f4.File == row ? { ...f4, [field]: value } : f4) };
  };
  return processContextFile(plugin, space, async (mdb, space2) => {
    const newDB = changeTagInContextMDB(mdb);
    if (!import_lodash7.default.isEqual(mdb, newDB)) {
      await saveDB(plugin, space2, newDB);
    }
    return newDB;
  });
};
var renameTagInContexts = async (plugin, oldTag, newTag, spaces) => {
  const changeTagInContextMDB = (mdb) => {
    const cols = mdb.cols.map((f4) => f4.type.startsWith("context") && f4.value == oldTag ? { ...f4, value: newTag } : f4);
    return { ...mdb, cols };
  };
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const newDB = changeTagInContextMDB(mdb);
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeTagInContexts = async (plugin, tag, spaces) => {
  const deleteTagInContextMDB = (mdb) => {
    const cols = mdb.cols.map((f4) => f4.type.startsWith("context") && f4.value == tag ? { ...f4, type: "link-multi" } : f4);
    return { ...mdb, cols };
  };
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const newDB = deleteTagInContextMDB(mdb);
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var addFileInContexts = async (plugin, path, contexts) => {
  const promises = contexts.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const newDB = insertRowsIfUnique(mdb, [{ File: path }]);
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var renameLinkInContexts = async (plugin, oldPath, newPath, spaces) => {
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const linkCols = linkColumns(mdb.cols);
      const newDB = {
        ...mdb,
        rows: mdb.rows.map((r3) => renameLinksInRow(plugin, r3, oldPath, newPath, linkCols))
      };
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeLinkInContexts = async (plugin, path, spaces) => {
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const linkCols = linkColumns(mdb.cols);
      const newDB = {
        ...mdb,
        rows: mdb.rows.map((r3) => removeLinksInRow(plugin, r3, path, linkCols))
      };
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var renameFileInContexts = async (plugin, oldPath, newPath, spaces) => {
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const newDB = renameRowForFile(mdb, oldPath, newPath);
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeFileInContexts = async (plugin, path, spaces) => {
  const promises = spaces.map((space) => {
    return processContextFile(plugin, space, async (mdb, space2) => {
      const removeRow = mdb.rows.find((f4) => f4.File == path);
      if (removeRow) {
        saveContextToFrontmatter(path, mdb.cols, removeRow, plugin);
      }
      const newDB = removeRowForFile(mdb, path);
      if (!import_lodash7.default.isEqual(mdb, newDB)) {
        await saveDB(plugin, space2, newDB);
      }
      return newDB;
    });
  });
  return Promise.all(promises);
};
var removeFilesInContext = async (plugin, paths, space) => {
  return processContextFile(plugin, space, async (mdb, context) => {
    mdb.rows.forEach((row) => {
      if (paths.includes(row.File))
        saveContextToFrontmatter(row.File, mdb.cols, row, plugin);
    });
    const newDB = removeRowsForFile(mdb, paths);
    if (!import_lodash7.default.isEqual(mdb, newDB)) {
      await saveDB(plugin, context, newDB);
    }
    return newDB;
  });
};

// src/hooks/useCombinedRef.tsx
init_compat_module();
function useCombinedRefs2(...refs) {
  return F2(
    () => (node) => {
      refs.forEach((ref2) => ref2(node));
    },
    refs
  );
}

// src/components/Space/Contexts/TableView/ColumnHeader.tsx
init_compat_module();
var filePropTypes = [
  {
    name: i18n_default.properties.fileProperty.createdTime,
    value: "ctime"
  },
  {
    name: i18n_default.properties.fileProperty.modifiedTime,
    value: "mtime"
  },
  {
    name: i18n_default.properties.fileProperty.extension,
    value: "extension"
  },
  {
    name: i18n_default.properties.fileProperty.size,
    value: "size"
  },
  {
    name: i18n_default.properties.fileProperty.parentFolder,
    value: "folder"
  },
  {
    name: "Links",
    value: "links"
  },
  {
    name: "Tags",
    value: "tags"
  },
  {
    name: "Spaces",
    value: "spaces"
  }
];
var ColumnHeader = (props2) => {
  var _a2;
  const [field, setField] = h2(props2.column);
  const menuRef = _2(null);
  const { spaceInfo, contexts } = q2(SpaceContext);
  const { tableData, contextTable } = q2(ContextMDBContext);
  const {
    predicate,
    loadContextFields,
    cols,
    newColumn,
    saveColumn,
    hideColumn,
    sortColumn,
    delColumn
  } = q2(ContextEditorContext);
  p2(() => {
    setField(props2.column);
  }, [props2.column]);
  const {
    attributes,
    listeners,
    setNodeRef: setDraggableNodeRef,
    transform
  } = useDraggable({
    id: field.name + field.table,
    data: { name: field.name }
  });
  const { setNodeRef: setDroppableNodeRef } = useDroppable({
    id: field.name + field.table,
    data: { name: field.name }
  });
  const saveField = (field2) => {
    if (field2.name.length > 0) {
      if (field2.name != props2.column.name || field2.type != props2.column.type || field2.value != props2.column.value || field2.attrs != props2.column.attrs) {
        const saveResult = saveColumn(field2, props2.column);
        if (saveResult) {
          if (props2.isNew) {
            setField(props2.column);
          }
        }
      }
    }
  };
  const saveContext = (field2, value) => {
    const newContext = value[0];
    initiateContextIfNotExists(props2.plugin, newContext).then((f4) => {
      if (f4) {
        return insertContextItems(
          props2.plugin,
          optionValuesForColumn(
            field2.name,
            field2.table == "" ? tableData : contextTable[field2.table]
          ),
          newContext
        );
      }
    }).then((f4) => loadContextFields(newContext));
    const newField = {
      ...field2,
      value: newContext != null ? newContext : ""
    };
    setField(newField);
    saveColumn(newField, props2.column);
  };
  const showNewMenu = (e4) => {
    const offset2 = ref2.current.getBoundingClientRect();
    showNewPropertyMenu(
      props2.plugin,
      { x: offset2.left, y: offset2.top + 30 },
      contexts,
      cols,
      (source, field2) => newColumn({ ...field2, table: source }),
      tableData.schema.id,
      spaceInfo.path,
      false
    );
  };
  const toggleMenu = (e4) => {
    if (props2.isNew) {
      showNewMenu(e4);
    } else {
      const offset2 = e4.target.getBoundingClientRect();
      const options = optionValuesForColumn(
        field.name,
        field.table == "" ? tableData : contextTable[field.table]
      );
      showPropertyMenu({
        plugin: props2.plugin,
        position: { x: offset2.left, y: offset2.top + 30 },
        editable: props2.editable,
        options,
        field,
        fields: cols,
        contextPath: spaceInfo.path,
        saveField,
        saveContext,
        hide: hideColumn,
        deleteColumn: delColumn,
        sortColumn,
        hidden: predicate.colsHidden.includes(field.name + field.table)
      });
    }
  };
  const ref2 = _2(null);
  const setNodeRef = useCombinedRefs2(setDroppableNodeRef, setDraggableNodeRef);
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: setNodeRef,
    ...listeners,
    ...attributes,
    className: "mk-col-header",
    onClick: (e4) => {
      toggleMenu(e4);
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, ((_a2 = props2.column.attrs) == null ? void 0 : _a2.length) > 0 && /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString(props2.column.attrs, props2.plugin)
    }
  }), props2.column.name.length > 0 ? field.name : "+", /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-col-header-context",
    "aria-label": props2.column.table.length > 0 ? props2.column.table : ""
  }, props2.column.table.length > 0 ? "#" : "")));
};

// src/components/ui/menus/propertyMenu.tsx
var import_obsidian20 = require("obsidian");
init_compat_module();
var selectPropertyTypeMenu = (e4, plugin, selectedType) => {
  showSelectMenu(e4.target.getBoundingClientRect(), {
    plugin,
    multi: false,
    editable: false,
    searchable: false,
    saveOptions: selectedType,
    value: [],
    showAll: true,
    options: fieldTypes.filter((f4) => !f4.restricted).map((f4, i4) => ({
      id: i4 + 1,
      name: f4.label,
      value: f4.type,
      icon: ""
    }))
  });
};
var PropertyValueComponent = (props2) => {
  const selectContext = (e4) => {
    var _a2;
    showSelectMenu(e4.target.getBoundingClientRect(), {
      plugin: props2.plugin,
      multi: false,
      editable: true,
      searchable: true,
      saveOptions: (_12, v3) => props2.saveContext(v3[0]),
      placeholder: i18n_default.labels.propertyContext,
      value: [(_a2 = props2.value) != null ? _a2 : ""],
      options: loadTags(props2.plugin).map((m5) => ({ name: m5, value: m5 }))
    });
  };
  const selectFileProp = (e4) => {
    var _a2;
    const properties2 = (_a2 = props2.plugin.index.contextsIndex.get(props2.contextPath)) == null ? void 0 : _a2.tables["files"].cols.filter(
      (f4) => f4.type == "file" || f4.type == "link" || f4.type == "context"
    ).reduce((p3, c4) => {
      var _a3, _b2;
      return [
        ...p3,
        ...c4.type == "file" || c4.type == "link" ? filePropTypes.map((f4) => ({
          name: c4.name + "." + f4.name,
          value: c4.name + "." + f4.value
        })) : (_b2 = (_a3 = props2.plugin.index.contextsIndex.get(c4.value)) == null ? void 0 : _a3.tables["files"].cols.filter((f4) => f4.hidden != "true").map((f4) => ({
          name: c4.name + "." + f4.name,
          value: c4.name + "." + f4.name
        }))) != null ? _b2 : []
      ];
    }, []);
    showSelectMenu(e4.target.getBoundingClientRect(), {
      plugin: props2.plugin,
      multi: false,
      editable: false,
      searchable: false,
      saveOptions: (_12, v3) => props2.saveValue(v3[0]),
      value: [],
      options: properties2,
      showAll: true
    });
  };
  const selectDateFormat = (e4) => {
    const formats = [
      {
        name: "2020-04-21",
        value: "yyyy-MM-dd"
      },
      {
        name: "Apr 21, 2020",
        value: "MMM d, yyyy"
      },
      {
        name: "Tue Apr 21, 2020",
        value: "EEE MMM d, yyyy"
      }
    ];
    showSelectMenu(e4.target.getBoundingClientRect(), {
      plugin: props2.plugin,
      multi: false,
      editable: true,
      searchable: false,
      saveOptions: (_12, v3) => props2.saveValue(v3[0]),
      value: [],
      options: formats,
      showAll: true,
      placeholder: i18n_default.labels.selectDateFormat
    });
  };
  return props2.fieldType.startsWith("date") ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectDateFormat(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.dateFormat), /* @__PURE__ */ Cn.createElement("span", null, props2.value)) : props2.fieldType.startsWith("context") ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectContext(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyContext), /* @__PURE__ */ Cn.createElement("span", null, props2.value)) : props2.fieldType == "fileprop" ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectFileProp(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyFileProp), /* @__PURE__ */ Cn.createElement("span", null, props2.value)) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};
var PropertyMenuComponent = (props2) => {
  var _a2;
  const [field, setField] = h2(props2.field);
  const selectedType = (_12, value) => {
    const newField = {
      ...field,
      type: value[0],
      value: getNewValueForType(field, value)
    };
    setField(newField);
    props2.saveField(newField);
  };
  const selectedValue = (value) => {
    const newField = { ...field, value };
    setField(newField);
    props2.saveField(newField);
  };
  const selectedContext = (context) => {
    const newField = { ...field, value: context };
    setField(newField);
    props2.saveContext(newField, [context]);
  };
  const toggleMulti = () => {
    const newField = {
      ...field,
      type: field.type == fieldType.multiType ? fieldType.type : fieldType.multiType
    };
    setField(newField);
    props2.saveField(newField);
  };
  const fieldType = (_a2 = fieldTypeForType(field.type)) != null ? _a2 : fieldTypes[0];
  const getNewValueForType = (f4, value) => {
    if (value[0].startsWith("option")) {
      return serializeMultiString(props2.options);
    }
    return value[0] == fieldType.type || value[0] == fieldType.multiType ? f4.value : null;
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectPropertyTypeMenu(e4, props2.plugin, selectedType)
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.propertyType), /* @__PURE__ */ Cn.createElement("span", null, fieldType.label)), fieldType.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.multiple), /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: field.type == fieldType.multiType,
    onChange: () => toggleMulti()
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), /* @__PURE__ */ Cn.createElement(PropertyValueComponent, {
    plugin: props2.plugin,
    table: field.table,
    fields: props2.fields,
    fieldType: fieldType.type,
    value: field.value,
    contextPath: props2.contextPath,
    saveValue: selectedValue,
    saveContext: selectedContext
  }));
};
var showPropertyMenu = (props2) => {
  const {
    plugin,
    position,
    editable,
    options,
    field,
    fields,
    contextPath,
    saveField,
    saveContext,
    hide,
    deleteColumn,
    sortColumn,
    editCode,
    hidden
  } = props2;
  const menu = new import_obsidian20.Menu();
  menu.setUseNativeMenu(false);
  if (editable) {
    menu.addItem((menuItem) => {
      var _a2;
      inputMenuItem(
        menuItem,
        (_a2 = field == null ? void 0 : field.name) != null ? _a2 : "",
        (value) => saveField({ ...field, name: value })
      );
      menuItem.setIcon("type");
    });
    menu.addSeparator();
    const frag = document.createDocumentFragment();
    const div = frag.createDiv();
    div.addEventListener("click", (e4) => {
      e4.stopImmediatePropagation();
    });
    div.addEventListener("keydown", (e4) => {
    });
    const root2 = createRoot(div);
    root2.render(
      /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(PropertyMenuComponent, {
        plugin,
        field,
        fields,
        contextPath,
        options,
        saveField,
        saveContext
      }))
    );
    menu.addItem((menuItem) => {
      menuItem.setTitle(frag);
      menuItem.dom.toggleClass("mk-properties", true);
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle("Set Icon");
      menuItem.onClick(() => {
        const vaultChangeModal = new stickerModal(
          props2.plugin.app,
          props2.plugin,
          (emoji) => saveField({ ...field, attrs: emoji })
        );
        vaultChangeModal.open();
      });
    });
    menu.addSeparator();
    if (hide) {
      if (!hidden) {
        menu.addItem((menuItem) => {
          menuItem.setTitle(i18n_default.menu.hideProperty);
          menuItem.onClick(() => {
            hide(field, true);
          });
          menuItem.setIcon("eye-off");
        });
      } else {
        menu.addItem((menuItem) => {
          menuItem.setTitle(i18n_default.menu.unhideProperty);
          menuItem.onClick(() => {
            hide(field, false);
          });
          menuItem.setIcon("eye");
        });
      }
    }
    if (editCode) {
      menu.addItem((menuItem) => {
        menuItem.setTitle(i18n_default.menu.editCode);
        menuItem.onClick(() => {
          editCode();
        });
        menuItem.setIcon("code");
      });
    }
    if (deleteColumn) {
      menu.addItem((menuItem) => {
        menuItem.setTitle(i18n_default.menu.deleteProperty);
        menuItem.onClick(() => {
          deleteColumn(field);
        });
        menuItem.setIcon("trash-2");
      });
    }
    menu.addSeparator();
  }
  const sortableString = normalizedSortForType(field.type, false);
  if (sortableString && sortColumn) {
    menu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.sortAscending);
      menuItem.setIcon("sort-asc");
      menuItem.onClick(() => {
        sortColumn({
          field: field.name + field.table,
          fn: normalizedSortForType(field.type, false)
        });
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.sortDescending);
      menuItem.setIcon("sort-desc");
      menuItem.onClick(() => {
        sortColumn({
          field: field.name + field.table,
          fn: normalizedSortForType(field.type, true)
        });
      });
    });
  }
  menu.showAtPosition(position);
  return menu;
};

// src/components/ui/menus/newPropertyMenu.tsx
var NewPropertyMenuComponent = (props2) => {
  const [fieldName, setFieldName] = h2("");
  const [fieldSource, setFieldSource] = h2(
    props2.fileMetadata ? "fm" : ""
  );
  const [fieldValue, setFieldValue] = h2("");
  const [fieldType, setFieldType] = h2("text");
  const options = F2(() => {
    var _a2;
    const options2 = [];
    if (props2.fileMetadata) {
      options2.push({
        name: i18n_default.menu.fileMetadata,
        value: "fm",
        description: i18n_default.menu.fileMetadataDescription
      });
    }
    if (props2.contextPath) {
      options2.push({
        name: folderPathToString(props2.contextPath),
        value: "",
        description: `All notes in ${folderPathToString(props2.contextPath)}`
      });
    }
    options2.push(
      ...((_a2 = props2.tags) != null ? _a2 : []).map((f4) => ({
        name: f4,
        value: f4,
        description: `All notes tagged ${f4}`
      }))
    );
    return options2;
  }, []);
  const selectedType = (_12, value) => {
    setFieldType(value[0]);
  };
  const selectedValue = (value) => {
    setFieldValue(value);
  };
  const selectedSource = (_12, value) => {
    setFieldSource(value[0]);
  };
  const toggleMulti = () => {
    const field = fieldTypes.find(
      (f4) => f4.type == fieldType || f4.multiType == fieldType
    );
    setFieldType(field.type == fieldType ? field.multiType : field.type);
  };
  const selectType = (e4) => {
    showSelectMenu(e4.target.getBoundingClientRect(), {
      plugin: props2.plugin,
      multi: false,
      editable: false,
      searchable: false,
      saveOptions: selectedType,
      value: [],
      showAll: true,
      options: fieldTypes.filter((f4) => fieldSource == "fm" ? f4.metadata : !f4.restricted).map((f4, i4) => ({
        id: i4 + 1,
        name: f4.label,
        value: f4.type,
        icon: ""
      }))
    });
  };
  const selectedContext = (value) => {
    setFieldValue(value);
  };
  const type = F2(
    () => {
      var _a2;
      return (_a2 = fieldTypeForType(fieldType)) != null ? _a2 : fieldTypes[0];
    },
    [fieldType]
  );
  const selectSource = (e4) => {
    showSelectMenu(e4.target.getBoundingClientRect(), {
      plugin: props2.plugin,
      multi: false,
      editable: false,
      searchable: false,
      saveOptions: selectedSource,
      value: [],
      showAll: true,
      options
    });
  };
  const saveField = () => {
    if (fieldName.length == 0) {
      new import_obsidian21.Notice(i18n_default.notice.noPropertyName);
      return;
    }
    props2.saveField(fieldSource, {
      name: fieldName,
      type: fieldType,
      value: fieldValue,
      schemaId: props2.schemaId
    });
    props2.hide();
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Enter") {
      saveField();
    }
  };
  p2(() => {
    setTimeout(() => {
      input.current.focus();
    }, 50);
  }, []);
  const input = _2(null);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, "Name"), /* @__PURE__ */ Cn.createElement("input", {
    type: "text",
    ref: input,
    onKeyDown,
    onChange: (e4) => setFieldName(e4.target.value),
    onMouseDown: (e4) => e4.stopPropagation(),
    value: fieldName
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), options.length > 1 && /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectSource(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, "Context"), /* @__PURE__ */ Cn.createElement("span", null, fieldSource == "fm" ? "File Metadata" : fieldSource == "" ? props2.contextPath : fieldSource)), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => selectType(e4)
  }, /* @__PURE__ */ Cn.createElement("span", null, "Type"), /* @__PURE__ */ Cn.createElement("span", null, type.label)), type.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item"
  }, /* @__PURE__ */ Cn.createElement("span", null, i18n_default.labels.multiple), /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: fieldType == type.multiType,
    onChange: () => toggleMulti()
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), fieldSource != "fm" ? /* @__PURE__ */ Cn.createElement(PropertyValueComponent, {
    plugin: props2.plugin,
    table: fieldSource,
    fields: props2.fields,
    fieldType,
    value: fieldValue,
    contextPath: props2.contextPath,
    saveValue: selectedValue,
    saveContext: selectedContext
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-separator"
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => saveField()
  }, /* @__PURE__ */ Cn.createElement("span", null, "Save Property")), /* @__PURE__ */ Cn.createElement("div", {
    className: "menu-item",
    onClick: (e4) => props2.hide()
  }, /* @__PURE__ */ Cn.createElement("span", null, "Cancel")));
};
var showNewPropertyMenu = (plugin, position, tags, fields, saveField, schemaId, contextPath, fileMetadata) => {
  const menu = new import_obsidian21.Menu();
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createDiv();
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  const root2 = createRoot(div);
  root2.render(
    /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(NewPropertyMenuComponent, {
      plugin,
      tags,
      schemaId,
      contextPath,
      fields,
      hide: () => menu.hide(),
      saveField,
      fileMetadata
    }))
  );
  menu.addItem((menuItem) => {
    menuItem.setTitle(frag);
    menuItem.dom.toggleClass("mk-properties", true);
  });
  const keys2 = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys2.length; i4++) {
    if (keys2[i4].key != "Escape") {
      menu.scope.unregister(keys2[i4]);
    }
  }
  menu.showAtPosition(position);
  return menu;
};

// src/components/ui/modals/imageModal.tsx
var import_obsidian22 = require("obsidian");
var imageModal = class extends import_obsidian22.FuzzySuggestModal {
  constructor(plugin, app2, selectImage) {
    super(app2);
    this.plugin = plugin;
    this.selectImage = selectImage;
    this.resultContainerEl.toggleClass("mk-image-modal", true);
    this.inputEl.focus();
    this.inputEl.placeholder = "Select an image or paste a URL";
    this.emptyStateText = "No Images Found";
    this.limit = 30;
  }
  renderSuggestion(item, el) {
    const oImg = el.createEl("img");
    const file = getAbstractFileAtPath(app, item.item);
    oImg.setAttribute(
      "src",
      file ? app.vault.getResourcePath(file) : item.item
    );
    oImg.setAttribute("height", "100px");
    oImg.setAttribute("width", "100px");
    el.appendChild(oImg);
  }
  getItemText(item) {
    return item;
  }
  getSuggestions(query) {
    const allImages = [];
    if (query.match(urlRegex))
      allImages.push(query);
    allImages.push(
      ...getAllAbstractFilesInVault(this.plugin, app).filter(
        (f4) => f4 instanceof import_obsidian22.TFile && ["png", "jpg", "jpeg"].contains(f4.extension)
      ).map((f4) => f4.path)
    );
    return allImages.filter((f4) => f4.contains(query)).map((f4, i4) => ({
      item: f4,
      match: {
        score: i4,
        matches: []
      }
    }));
  }
  getItems() {
    const allImages = [];
    allImages.push(
      ...getAllAbstractFilesInVault(this.plugin, app).filter(
        (f4) => f4 instanceof import_obsidian22.TFile && ["png", "jpg", "jpeg"].contains(f4.extension)
      ).map((f4) => f4.path)
    );
    return allImages;
  }
  onChooseItem(item, evt) {
    this.selectImage(item);
  }
};

// src/components/FileContexts/InlineFileContext/InlineFileContextView.tsx
var import_he = __toESM(require_he());
var import_obsidian45 = require("obsidian");
init_compat_module();

// src/components/Space/Contexts/DataTypeView/DataTypeView.tsx
init_compat_module();

// src/components/Space/Contexts/DataTypeView/BooleanCell.tsx
init_compat_module();

// node_modules/@tanstack/react-table/build/lib/index.mjs
init_compat_module();

// node_modules/@tanstack/table-core/build/lib/index.mjs
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function makeStateUpdater(key2, instance) {
  return (updater) => {
    instance.setState((old) => {
      return {
        ...old,
        [key2]: functionalUpdate(updater, old[key2])
      };
    });
  };
}
function isFunction(d5) {
  return d5 instanceof Function;
}
function flattenBy(arr, getChildren) {
  const flat = [];
  const recurse = (subArr) => {
    subArr.forEach((item) => {
      flat.push(item);
      const children = getChildren(item);
      if (children != null && children.length) {
        recurse(children);
      }
    });
  };
  recurse(arr);
  return flat;
}
function memo(getDeps, fn2, opts) {
  let deps = [];
  let result;
  return () => {
    let depTime;
    if (opts.key && opts.debug)
      depTime = Date.now();
    const newDeps = getDeps();
    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);
    if (!depsChanged) {
      return result;
    }
    deps = newDeps;
    let resultTime;
    if (opts.key && opts.debug)
      resultTime = Date.now();
    result = fn2(...newDeps);
    opts == null ? void 0 : opts.onChange == null ? void 0 : opts.onChange(result);
    if (opts.key && opts.debug) {
      if (opts != null && opts.debug()) {
        const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
        const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;
        const resultFpsPercentage = resultEndTime / 16;
        const pad = (str, num) => {
          str = String(str);
          while (str.length < num) {
            str = " " + str;
          }
          return str;
        };
        console.info(`%c\u23F1 ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120))}deg 100% 31%);`, opts == null ? void 0 : opts.key);
      }
    }
    return result;
  };
}
function createColumn(table, columnDef, depth, parent) {
  var _ref, _resolvedColumnDef$id;
  const defaultColumn = table._getDefaultColumnDef();
  const resolvedColumnDef = {
    ...defaultColumn,
    ...columnDef
  };
  const accessorKey = resolvedColumnDef.accessorKey;
  let id2 = (_ref = (_resolvedColumnDef$id = resolvedColumnDef.id) != null ? _resolvedColumnDef$id : accessorKey ? accessorKey.replace(".", "_") : void 0) != null ? _ref : typeof resolvedColumnDef.header === "string" ? resolvedColumnDef.header : void 0;
  let accessorFn;
  if (resolvedColumnDef.accessorFn) {
    accessorFn = resolvedColumnDef.accessorFn;
  } else if (accessorKey) {
    if (accessorKey.includes(".")) {
      accessorFn = (originalRow) => {
        let result = originalRow;
        for (const key2 of accessorKey.split(".")) {
          var _result;
          result = (_result = result) == null ? void 0 : _result[key2];
          if (result === void 0) {
            console.warn(`"${key2}" in deeply nested key "${accessorKey}" returned undefined.`);
          }
        }
        return result;
      };
    } else {
      accessorFn = (originalRow) => originalRow[resolvedColumnDef.accessorKey];
    }
  }
  if (!id2) {
    if (true) {
      throw new Error(resolvedColumnDef.accessorFn ? `Columns require an id when using an accessorFn` : `Columns require an id when using a non-string header`);
    }
    throw new Error();
  }
  let column = {
    id: `${String(id2)}`,
    accessorFn,
    parent,
    depth,
    columnDef: resolvedColumnDef,
    columns: [],
    getFlatColumns: memo(() => [true], () => {
      var _column$columns;
      return [column, ...(_column$columns = column.columns) == null ? void 0 : _column$columns.flatMap((d5) => d5.getFlatColumns())];
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugColumns;
      }
    }),
    getLeafColumns: memo(() => [table._getOrderColumnsFn()], (orderColumns2) => {
      var _column$columns2;
      if ((_column$columns2 = column.columns) != null && _column$columns2.length) {
        let leafColumns = column.columns.flatMap((column2) => column2.getLeafColumns());
        return orderColumns2(leafColumns);
      }
      return [column];
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugColumns;
      }
    })
  };
  column = table._features.reduce((obj, feature) => {
    return Object.assign(obj, feature.createColumn == null ? void 0 : feature.createColumn(column, table));
  }, column);
  return column;
}
function createHeader(table, column, options) {
  var _options$id;
  const id2 = (_options$id = options.id) != null ? _options$id : column.id;
  let header = {
    id: id2,
    column,
    index: options.index,
    isPlaceholder: !!options.isPlaceholder,
    placeholderId: options.placeholderId,
    depth: options.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const leafHeaders = [];
      const recurseHeader = (h5) => {
        if (h5.subHeaders && h5.subHeaders.length) {
          h5.subHeaders.map(recurseHeader);
        }
        leafHeaders.push(h5);
      };
      recurseHeader(header);
      return leafHeaders;
    },
    getContext: () => ({
      table,
      header,
      column
    })
  };
  table._features.forEach((feature) => {
    Object.assign(header, feature.createHeader == null ? void 0 : feature.createHeader(header, table));
  });
  return header;
}
var Headers = {
  createTable: (table) => {
    return {
      getHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
        var _left$map$filter, _right$map$filter;
        const leftColumns = (_left$map$filter = left == null ? void 0 : left.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _left$map$filter : [];
        const rightColumns = (_right$map$filter = right == null ? void 0 : right.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _right$map$filter : [];
        const centerColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
        const headerGroups = buildHeaderGroups(allColumns, [...leftColumns, ...centerColumns, ...rightColumns], table);
        return headerGroups;
      }, {
        key: "getHeaderGroups",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugHeaders;
        }
      }),
      getCenterHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, leafColumns, left, right) => {
        leafColumns = leafColumns.filter((column) => !(left != null && left.includes(column.id)) && !(right != null && right.includes(column.id)));
        return buildHeaderGroups(allColumns, leafColumns, table, "center");
      }, {
        key: "getCenterHeaderGroups",
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugHeaders;
        }
      }),
      getLeftHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.left], (allColumns, leafColumns, left) => {
        var _left$map$filter2;
        const orderedLeafColumns = (_left$map$filter2 = left == null ? void 0 : left.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _left$map$filter2 : [];
        return buildHeaderGroups(allColumns, orderedLeafColumns, table, "left");
      }, {
        key: "getLeftHeaderGroups",
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugHeaders;
        }
      }),
      getRightHeaderGroups: memo(() => [table.getAllColumns(), table.getVisibleLeafColumns(), table.getState().columnPinning.right], (allColumns, leafColumns, right) => {
        var _right$map$filter2;
        const orderedLeafColumns = (_right$map$filter2 = right == null ? void 0 : right.map((columnId) => leafColumns.find((d5) => d5.id === columnId)).filter(Boolean)) != null ? _right$map$filter2 : [];
        return buildHeaderGroups(allColumns, orderedLeafColumns, table, "right");
      }, {
        key: "getRightHeaderGroups",
        debug: () => {
          var _table$options$debugA4;
          return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugHeaders;
        }
      }),
      getFooterGroups: memo(() => [table.getHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getFooterGroups",
        debug: () => {
          var _table$options$debugA5;
          return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugHeaders;
        }
      }),
      getLeftFooterGroups: memo(() => [table.getLeftHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getLeftFooterGroups",
        debug: () => {
          var _table$options$debugA6;
          return (_table$options$debugA6 = table.options.debugAll) != null ? _table$options$debugA6 : table.options.debugHeaders;
        }
      }),
      getCenterFooterGroups: memo(() => [table.getCenterHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getCenterFooterGroups",
        debug: () => {
          var _table$options$debugA7;
          return (_table$options$debugA7 = table.options.debugAll) != null ? _table$options$debugA7 : table.options.debugHeaders;
        }
      }),
      getRightFooterGroups: memo(() => [table.getRightHeaderGroups()], (headerGroups) => {
        return [...headerGroups].reverse();
      }, {
        key: "getRightFooterGroups",
        debug: () => {
          var _table$options$debugA8;
          return (_table$options$debugA8 = table.options.debugAll) != null ? _table$options$debugA8 : table.options.debugHeaders;
        }
      }),
      getFlatHeaders: memo(() => [table.getHeaderGroups()], (headerGroups) => {
        return headerGroups.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getFlatHeaders",
        debug: () => {
          var _table$options$debugA9;
          return (_table$options$debugA9 = table.options.debugAll) != null ? _table$options$debugA9 : table.options.debugHeaders;
        }
      }),
      getLeftFlatHeaders: memo(() => [table.getLeftHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getLeftFlatHeaders",
        debug: () => {
          var _table$options$debugA10;
          return (_table$options$debugA10 = table.options.debugAll) != null ? _table$options$debugA10 : table.options.debugHeaders;
        }
      }),
      getCenterFlatHeaders: memo(() => [table.getCenterHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getCenterFlatHeaders",
        debug: () => {
          var _table$options$debugA11;
          return (_table$options$debugA11 = table.options.debugAll) != null ? _table$options$debugA11 : table.options.debugHeaders;
        }
      }),
      getRightFlatHeaders: memo(() => [table.getRightHeaderGroups()], (left) => {
        return left.map((headerGroup) => {
          return headerGroup.headers;
        }).flat();
      }, {
        key: "getRightFlatHeaders",
        debug: () => {
          var _table$options$debugA12;
          return (_table$options$debugA12 = table.options.debugAll) != null ? _table$options$debugA12 : table.options.debugHeaders;
        }
      }),
      getCenterLeafHeaders: memo(() => [table.getCenterFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders;
          return !((_header$subHeaders = header.subHeaders) != null && _header$subHeaders.length);
        });
      }, {
        key: "getCenterLeafHeaders",
        debug: () => {
          var _table$options$debugA13;
          return (_table$options$debugA13 = table.options.debugAll) != null ? _table$options$debugA13 : table.options.debugHeaders;
        }
      }),
      getLeftLeafHeaders: memo(() => [table.getLeftFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders2;
          return !((_header$subHeaders2 = header.subHeaders) != null && _header$subHeaders2.length);
        });
      }, {
        key: "getLeftLeafHeaders",
        debug: () => {
          var _table$options$debugA14;
          return (_table$options$debugA14 = table.options.debugAll) != null ? _table$options$debugA14 : table.options.debugHeaders;
        }
      }),
      getRightLeafHeaders: memo(() => [table.getRightFlatHeaders()], (flatHeaders) => {
        return flatHeaders.filter((header) => {
          var _header$subHeaders3;
          return !((_header$subHeaders3 = header.subHeaders) != null && _header$subHeaders3.length);
        });
      }, {
        key: "getRightLeafHeaders",
        debug: () => {
          var _table$options$debugA15;
          return (_table$options$debugA15 = table.options.debugAll) != null ? _table$options$debugA15 : table.options.debugHeaders;
        }
      }),
      getLeafHeaders: memo(() => [table.getLeftHeaderGroups(), table.getCenterHeaderGroups(), table.getRightHeaderGroups()], (left, center, right) => {
        var _left$0$headers, _left$, _center$0$headers, _center$, _right$0$headers, _right$;
        return [...(_left$0$headers = (_left$ = left[0]) == null ? void 0 : _left$.headers) != null ? _left$0$headers : [], ...(_center$0$headers = (_center$ = center[0]) == null ? void 0 : _center$.headers) != null ? _center$0$headers : [], ...(_right$0$headers = (_right$ = right[0]) == null ? void 0 : _right$.headers) != null ? _right$0$headers : []].map((header) => {
          return header.getLeafHeaders();
        }).flat();
      }, {
        key: "getLeafHeaders",
        debug: () => {
          var _table$options$debugA16;
          return (_table$options$debugA16 = table.options.debugAll) != null ? _table$options$debugA16 : table.options.debugHeaders;
        }
      })
    };
  }
};
function buildHeaderGroups(allColumns, columnsToGroup, table, headerFamily) {
  var _headerGroups$0$heade, _headerGroups$;
  let maxDepth = 0;
  const findMaxDepth = function(columns, depth) {
    if (depth === void 0) {
      depth = 1;
    }
    maxDepth = Math.max(maxDepth, depth);
    columns.filter((column) => column.getIsVisible()).forEach((column) => {
      var _column$columns;
      if ((_column$columns = column.columns) != null && _column$columns.length) {
        findMaxDepth(column.columns, depth + 1);
      }
    }, 0);
  };
  findMaxDepth(allColumns);
  let headerGroups = [];
  const createHeaderGroup = (headersToGroup, depth) => {
    const headerGroup = {
      depth,
      id: [headerFamily, `${depth}`].filter(Boolean).join("_"),
      headers: []
    };
    const pendingParentHeaders = [];
    headersToGroup.forEach((headerToGroup) => {
      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0];
      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth;
      let column;
      let isPlaceholder = false;
      if (isLeafHeader && headerToGroup.column.parent) {
        column = headerToGroup.column.parent;
      } else {
        column = headerToGroup.column;
        isPlaceholder = true;
      }
      if (latestPendingParentHeader && (latestPendingParentHeader == null ? void 0 : latestPendingParentHeader.column) === column) {
        latestPendingParentHeader.subHeaders.push(headerToGroup);
      } else {
        const header = createHeader(table, column, {
          id: [headerFamily, depth, column.id, headerToGroup == null ? void 0 : headerToGroup.id].filter(Boolean).join("_"),
          isPlaceholder,
          placeholderId: isPlaceholder ? `${pendingParentHeaders.filter((d5) => d5.column === column).length}` : void 0,
          depth,
          index: pendingParentHeaders.length
        });
        header.subHeaders.push(headerToGroup);
        pendingParentHeaders.push(header);
      }
      headerGroup.headers.push(headerToGroup);
      headerToGroup.headerGroup = headerGroup;
    });
    headerGroups.push(headerGroup);
    if (depth > 0) {
      createHeaderGroup(pendingParentHeaders, depth - 1);
    }
  };
  const bottomHeaders = columnsToGroup.map((column, index) => createHeader(table, column, {
    depth: maxDepth,
    index
  }));
  createHeaderGroup(bottomHeaders, maxDepth - 1);
  headerGroups.reverse();
  const recurseHeadersForSpans = (headers) => {
    const filteredHeaders = headers.filter((header) => header.column.getIsVisible());
    return filteredHeaders.map((header) => {
      let colSpan = 0;
      let rowSpan = 0;
      let childRowSpans = [0];
      if (header.subHeaders && header.subHeaders.length) {
        childRowSpans = [];
        recurseHeadersForSpans(header.subHeaders).forEach((_ref) => {
          let {
            colSpan: childColSpan,
            rowSpan: childRowSpan
          } = _ref;
          colSpan += childColSpan;
          childRowSpans.push(childRowSpan);
        });
      } else {
        colSpan = 1;
      }
      const minChildRowSpan = Math.min(...childRowSpans);
      rowSpan = rowSpan + minChildRowSpan;
      header.colSpan = colSpan;
      header.rowSpan = rowSpan;
      return {
        colSpan,
        rowSpan
      };
    });
  };
  recurseHeadersForSpans((_headerGroups$0$heade = (_headerGroups$ = headerGroups[0]) == null ? void 0 : _headerGroups$.headers) != null ? _headerGroups$0$heade : []);
  return headerGroups;
}
var defaultColumnSizing = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
};
var getDefaultColumnSizingInfoState = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: false,
  columnSizingStart: []
});
var ColumnSizing = {
  getDefaultColumnDef: () => {
    return defaultColumnSizing;
  },
  getInitialState: (state) => {
    return {
      columnSizing: {},
      columnSizingInfo: getDefaultColumnSizingInfoState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      columnResizeMode: "onEnd",
      onColumnSizingChange: makeStateUpdater("columnSizing", table),
      onColumnSizingInfoChange: makeStateUpdater("columnSizingInfo", table)
    };
  },
  createColumn: (column, table) => {
    return {
      getSize: () => {
        var _column$columnDef$min, _ref, _column$columnDef$max;
        const columnSize = table.getState().columnSizing[column.id];
        return Math.min(Math.max((_column$columnDef$min = column.columnDef.minSize) != null ? _column$columnDef$min : defaultColumnSizing.minSize, (_ref = columnSize != null ? columnSize : column.columnDef.size) != null ? _ref : defaultColumnSizing.size), (_column$columnDef$max = column.columnDef.maxSize) != null ? _column$columnDef$max : defaultColumnSizing.maxSize);
      },
      getStart: (position) => {
        const columns = !position ? table.getVisibleLeafColumns() : position === "left" ? table.getLeftVisibleLeafColumns() : table.getRightVisibleLeafColumns();
        const index = columns.findIndex((d5) => d5.id === column.id);
        if (index > 0) {
          const prevSiblingColumn = columns[index - 1];
          return prevSiblingColumn.getStart(position) + prevSiblingColumn.getSize();
        }
        return 0;
      },
      resetSize: () => {
        table.setColumnSizing((_ref2) => {
          let {
            [column.id]: _12,
            ...rest
          } = _ref2;
          return rest;
        });
      },
      getCanResize: () => {
        var _column$columnDef$ena, _table$options$enable;
        return ((_column$columnDef$ena = column.columnDef.enableResizing) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnResizing) != null ? _table$options$enable : true);
      },
      getIsResizing: () => {
        return table.getState().columnSizingInfo.isResizingColumn === column.id;
      }
    };
  },
  createHeader: (header, table) => {
    return {
      getSize: () => {
        let sum2 = 0;
        const recurse = (header2) => {
          if (header2.subHeaders.length) {
            header2.subHeaders.forEach(recurse);
          } else {
            var _header$column$getSiz;
            sum2 += (_header$column$getSiz = header2.column.getSize()) != null ? _header$column$getSiz : 0;
          }
        };
        recurse(header);
        return sum2;
      },
      getStart: () => {
        if (header.index > 0) {
          const prevSiblingHeader = header.headerGroup.headers[header.index - 1];
          return prevSiblingHeader.getStart() + prevSiblingHeader.getSize();
        }
        return 0;
      },
      getResizeHandler: () => {
        const column = table.getColumn(header.column.id);
        const canResize = column == null ? void 0 : column.getCanResize();
        return (e4) => {
          if (!column || !canResize) {
            return;
          }
          e4.persist == null ? void 0 : e4.persist();
          if (isTouchStartEvent(e4)) {
            if (e4.touches && e4.touches.length > 1) {
              return;
            }
          }
          const startSize = header.getSize();
          const columnSizingStart = header ? header.getLeafHeaders().map((d5) => [d5.column.id, d5.column.getSize()]) : [[column.id, column.getSize()]];
          const clientX = isTouchStartEvent(e4) ? Math.round(e4.touches[0].clientX) : e4.clientX;
          const newColumnSizing = {};
          const updateOffset = (eventType, clientXPos) => {
            if (typeof clientXPos !== "number") {
              return;
            }
            table.setColumnSizingInfo((old) => {
              var _old$startOffset, _old$startSize;
              const deltaOffset = clientXPos - ((_old$startOffset = old == null ? void 0 : old.startOffset) != null ? _old$startOffset : 0);
              const deltaPercentage = Math.max(deltaOffset / ((_old$startSize = old == null ? void 0 : old.startSize) != null ? _old$startSize : 0), -0.999999);
              old.columnSizingStart.forEach((_ref3) => {
                let [columnId, headerSize] = _ref3;
                newColumnSizing[columnId] = Math.round(Math.max(headerSize + headerSize * deltaPercentage, 0) * 100) / 100;
              });
              return {
                ...old,
                deltaOffset,
                deltaPercentage
              };
            });
            if (table.options.columnResizeMode === "onChange" || eventType === "end") {
              table.setColumnSizing((old) => ({
                ...old,
                ...newColumnSizing
              }));
            }
          };
          const onMove = (clientXPos) => updateOffset("move", clientXPos);
          const onEnd = (clientXPos) => {
            updateOffset("end", clientXPos);
            table.setColumnSizingInfo((old) => ({
              ...old,
              isResizingColumn: false,
              startOffset: null,
              startSize: null,
              deltaOffset: null,
              deltaPercentage: null,
              columnSizingStart: []
            }));
          };
          const mouseEvents = {
            moveHandler: (e5) => onMove(e5.clientX),
            upHandler: (e5) => {
              document.removeEventListener("mousemove", mouseEvents.moveHandler);
              document.removeEventListener("mouseup", mouseEvents.upHandler);
              onEnd(e5.clientX);
            }
          };
          const touchEvents = {
            moveHandler: (e5) => {
              if (e5.cancelable) {
                e5.preventDefault();
                e5.stopPropagation();
              }
              onMove(e5.touches[0].clientX);
              return false;
            },
            upHandler: (e5) => {
              var _e$touches$;
              document.removeEventListener("touchmove", touchEvents.moveHandler);
              document.removeEventListener("touchend", touchEvents.upHandler);
              if (e5.cancelable) {
                e5.preventDefault();
                e5.stopPropagation();
              }
              onEnd((_e$touches$ = e5.touches[0]) == null ? void 0 : _e$touches$.clientX);
            }
          };
          const passiveIfSupported = passiveEventSupported() ? {
            passive: false
          } : false;
          if (isTouchStartEvent(e4)) {
            document.addEventListener("touchmove", touchEvents.moveHandler, passiveIfSupported);
            document.addEventListener("touchend", touchEvents.upHandler, passiveIfSupported);
          } else {
            document.addEventListener("mousemove", mouseEvents.moveHandler, passiveIfSupported);
            document.addEventListener("mouseup", mouseEvents.upHandler, passiveIfSupported);
          }
          table.setColumnSizingInfo((old) => ({
            ...old,
            startOffset: clientX,
            startSize,
            deltaOffset: 0,
            deltaPercentage: 0,
            columnSizingStart,
            isResizingColumn: column.id
          }));
        };
      }
    };
  },
  createTable: (table) => {
    return {
      setColumnSizing: (updater) => table.options.onColumnSizingChange == null ? void 0 : table.options.onColumnSizingChange(updater),
      setColumnSizingInfo: (updater) => table.options.onColumnSizingInfoChange == null ? void 0 : table.options.onColumnSizingInfoChange(updater),
      resetColumnSizing: (defaultState) => {
        var _table$initialState$c;
        table.setColumnSizing(defaultState ? {} : (_table$initialState$c = table.initialState.columnSizing) != null ? _table$initialState$c : {});
      },
      resetHeaderSizeInfo: (defaultState) => {
        var _table$initialState$c2;
        table.setColumnSizingInfo(defaultState ? getDefaultColumnSizingInfoState() : (_table$initialState$c2 = table.initialState.columnSizingInfo) != null ? _table$initialState$c2 : getDefaultColumnSizingInfoState());
      },
      getTotalSize: () => {
        var _table$getHeaderGroup, _table$getHeaderGroup2;
        return (_table$getHeaderGroup = (_table$getHeaderGroup2 = table.getHeaderGroups()[0]) == null ? void 0 : _table$getHeaderGroup2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getHeaderGroup : 0;
      },
      getLeftTotalSize: () => {
        var _table$getLeftHeaderG, _table$getLeftHeaderG2;
        return (_table$getLeftHeaderG = (_table$getLeftHeaderG2 = table.getLeftHeaderGroups()[0]) == null ? void 0 : _table$getLeftHeaderG2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getLeftHeaderG : 0;
      },
      getCenterTotalSize: () => {
        var _table$getCenterHeade, _table$getCenterHeade2;
        return (_table$getCenterHeade = (_table$getCenterHeade2 = table.getCenterHeaderGroups()[0]) == null ? void 0 : _table$getCenterHeade2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getCenterHeade : 0;
      },
      getRightTotalSize: () => {
        var _table$getRightHeader, _table$getRightHeader2;
        return (_table$getRightHeader = (_table$getRightHeader2 = table.getRightHeaderGroups()[0]) == null ? void 0 : _table$getRightHeader2.headers.reduce((sum2, header) => {
          return sum2 + header.getSize();
        }, 0)) != null ? _table$getRightHeader : 0;
      }
    };
  }
};
var passiveSupported = null;
function passiveEventSupported() {
  if (typeof passiveSupported === "boolean")
    return passiveSupported;
  let supported = false;
  try {
    const options = {
      get passive() {
        supported = true;
        return false;
      }
    };
    const noop3 = () => {
    };
    window.addEventListener("test", noop3, options);
    window.removeEventListener("test", noop3);
  } catch (err) {
    supported = false;
  }
  passiveSupported = supported;
  return passiveSupported;
}
function isTouchStartEvent(e4) {
  return e4.type === "touchstart";
}
var Expanding = {
  getInitialState: (state) => {
    return {
      expanded: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onExpandedChange: makeStateUpdater("expanded", table),
      paginateExpandedRows: true
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    return {
      _autoResetExpanded: () => {
        var _ref, _table$options$autoRe;
        if (!registered) {
          table._queue(() => {
            registered = true;
          });
          return;
        }
        if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetExpanded) != null ? _ref : !table.options.manualExpanding) {
          if (queued)
            return;
          queued = true;
          table._queue(() => {
            table.resetExpanded();
            queued = false;
          });
        }
      },
      setExpanded: (updater) => table.options.onExpandedChange == null ? void 0 : table.options.onExpandedChange(updater),
      toggleAllRowsExpanded: (expanded) => {
        if (expanded != null ? expanded : !table.getIsAllRowsExpanded()) {
          table.setExpanded(true);
        } else {
          table.setExpanded({});
        }
      },
      resetExpanded: (defaultState) => {
        var _table$initialState$e, _table$initialState;
        table.setExpanded(defaultState ? {} : (_table$initialState$e = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.expanded) != null ? _table$initialState$e : {});
      },
      getCanSomeRowsExpand: () => {
        return table.getRowModel().flatRows.some((row) => row.getCanExpand());
      },
      getToggleAllRowsExpandedHandler: () => {
        return (e4) => {
          e4.persist == null ? void 0 : e4.persist();
          table.toggleAllRowsExpanded();
        };
      },
      getIsSomeRowsExpanded: () => {
        const expanded = table.getState().expanded;
        return expanded === true || Object.values(expanded).some(Boolean);
      },
      getIsAllRowsExpanded: () => {
        const expanded = table.getState().expanded;
        if (typeof expanded === "boolean") {
          return expanded === true;
        }
        if (!Object.keys(expanded).length) {
          return false;
        }
        if (table.getRowModel().flatRows.some((row) => !row.getIsExpanded())) {
          return false;
        }
        return true;
      },
      getExpandedDepth: () => {
        let maxDepth = 0;
        const rowIds = table.getState().expanded === true ? Object.keys(table.getRowModel().rowsById) : Object.keys(table.getState().expanded);
        rowIds.forEach((id2) => {
          const splitId = id2.split(".");
          maxDepth = Math.max(maxDepth, splitId.length);
        });
        return maxDepth;
      },
      getPreExpandedRowModel: () => table.getSortedRowModel(),
      getExpandedRowModel: () => {
        if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {
          table._getExpandedRowModel = table.options.getExpandedRowModel(table);
        }
        if (table.options.manualExpanding || !table._getExpandedRowModel) {
          return table.getPreExpandedRowModel();
        }
        return table._getExpandedRowModel();
      }
    };
  },
  createRow: (row, table) => {
    return {
      toggleExpanded: (expanded) => {
        table.setExpanded((old) => {
          var _expanded;
          const exists = old === true ? true : !!(old != null && old[row.id]);
          let oldExpanded = {};
          if (old === true) {
            Object.keys(table.getRowModel().rowsById).forEach((rowId) => {
              oldExpanded[rowId] = true;
            });
          } else {
            oldExpanded = old;
          }
          expanded = (_expanded = expanded) != null ? _expanded : !exists;
          if (!exists && expanded) {
            return {
              ...oldExpanded,
              [row.id]: true
            };
          }
          if (exists && !expanded) {
            const {
              [row.id]: _12,
              ...rest
            } = oldExpanded;
            return rest;
          }
          return old;
        });
      },
      getIsExpanded: () => {
        var _table$options$getIsR;
        const expanded = table.getState().expanded;
        return !!((_table$options$getIsR = table.options.getIsRowExpanded == null ? void 0 : table.options.getIsRowExpanded(row)) != null ? _table$options$getIsR : expanded === true || (expanded == null ? void 0 : expanded[row.id]));
      },
      getCanExpand: () => {
        var _table$options$getRow, _table$options$enable, _row$subRows;
        return (_table$options$getRow = table.options.getRowCanExpand == null ? void 0 : table.options.getRowCanExpand(row)) != null ? _table$options$getRow : ((_table$options$enable = table.options.enableExpanding) != null ? _table$options$enable : true) && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
      },
      getToggleExpandedHandler: () => {
        const canExpand = row.getCanExpand();
        return () => {
          if (!canExpand)
            return;
          row.toggleExpanded();
        };
      }
    };
  }
};
var includesString = (row, columnId, filterValue) => {
  var _row$getValue;
  const search = filterValue.toLowerCase();
  return Boolean((_row$getValue = row.getValue(columnId)) == null ? void 0 : _row$getValue.toLowerCase().includes(search));
};
includesString.autoRemove = (val) => testFalsey(val);
var includesStringSensitive = (row, columnId, filterValue) => {
  var _row$getValue2;
  return Boolean((_row$getValue2 = row.getValue(columnId)) == null ? void 0 : _row$getValue2.includes(filterValue));
};
includesStringSensitive.autoRemove = (val) => testFalsey(val);
var equalsString = (row, columnId, filterValue) => {
  var _row$getValue3;
  return ((_row$getValue3 = row.getValue(columnId)) == null ? void 0 : _row$getValue3.toLowerCase()) === filterValue.toLowerCase();
};
equalsString.autoRemove = (val) => testFalsey(val);
var arrIncludes = (row, columnId, filterValue) => {
  var _row$getValue4;
  return (_row$getValue4 = row.getValue(columnId)) == null ? void 0 : _row$getValue4.includes(filterValue);
};
arrIncludes.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var arrIncludesAll = (row, columnId, filterValue) => {
  return !filterValue.some((val) => {
    var _row$getValue5;
    return !((_row$getValue5 = row.getValue(columnId)) != null && _row$getValue5.includes(val));
  });
};
arrIncludesAll.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var arrIncludesSome = (row, columnId, filterValue) => {
  return filterValue.some((val) => {
    var _row$getValue6;
    return (_row$getValue6 = row.getValue(columnId)) == null ? void 0 : _row$getValue6.includes(val);
  });
};
arrIncludesSome.autoRemove = (val) => testFalsey(val) || !(val != null && val.length);
var equals = (row, columnId, filterValue) => {
  return row.getValue(columnId) === filterValue;
};
equals.autoRemove = (val) => testFalsey(val);
var weakEquals = (row, columnId, filterValue) => {
  return row.getValue(columnId) == filterValue;
};
weakEquals.autoRemove = (val) => testFalsey(val);
var inNumberRange = (row, columnId, filterValue) => {
  let [min3, max3] = filterValue;
  const rowValue = row.getValue(columnId);
  return rowValue >= min3 && rowValue <= max3;
};
inNumberRange.resolveFilterValue = (val) => {
  let [unsafeMin, unsafeMax] = val;
  let parsedMin = typeof unsafeMin !== "number" ? parseFloat(unsafeMin) : unsafeMin;
  let parsedMax = typeof unsafeMax !== "number" ? parseFloat(unsafeMax) : unsafeMax;
  let min3 = unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin;
  let max3 = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax;
  if (min3 > max3) {
    const temp = min3;
    min3 = max3;
    max3 = temp;
  }
  return [min3, max3];
};
inNumberRange.autoRemove = (val) => testFalsey(val) || testFalsey(val[0]) && testFalsey(val[1]);
var filterFns = {
  includesString,
  includesStringSensitive,
  equalsString,
  arrIncludes,
  arrIncludesAll,
  arrIncludesSome,
  equals,
  weakEquals,
  inNumberRange
};
function testFalsey(val) {
  return val === void 0 || val === null || val === "";
}
var Filters = {
  getDefaultColumnDef: () => {
    return {
      filterFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      columnFilters: [],
      globalFilter: void 0,
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnFiltersChange: makeStateUpdater("columnFilters", table),
      onGlobalFilterChange: makeStateUpdater("globalFilter", table),
      filterFromLeafRows: false,
      maxLeafRowFilterDepth: 100,
      globalFilterFn: "auto",
      getColumnCanGlobalFilter: (column) => {
        var _table$getCoreRowMode, _table$getCoreRowMode2;
        const value = (_table$getCoreRowMode = table.getCoreRowModel().flatRows[0]) == null ? void 0 : (_table$getCoreRowMode2 = _table$getCoreRowMode._getAllCellsByColumnId()[column.id]) == null ? void 0 : _table$getCoreRowMode2.getValue();
        return typeof value === "string" || typeof value === "number";
      }
    };
  },
  createColumn: (column, table) => {
    return {
      getAutoFilterFn: () => {
        const firstRow = table.getCoreRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "string") {
          return filterFns.includesString;
        }
        if (typeof value === "number") {
          return filterFns.inNumberRange;
        }
        if (typeof value === "boolean") {
          return filterFns.equals;
        }
        if (value !== null && typeof value === "object") {
          return filterFns.equals;
        }
        if (Array.isArray(value)) {
          return filterFns.arrIncludes;
        }
        return filterFns.weakEquals;
      },
      getFilterFn: () => {
        var _table$options$filter, _table$options$filter2;
        return isFunction(column.columnDef.filterFn) ? column.columnDef.filterFn : column.columnDef.filterFn === "auto" ? column.getAutoFilterFn() : (_table$options$filter = (_table$options$filter2 = table.options.filterFns) == null ? void 0 : _table$options$filter2[column.columnDef.filterFn]) != null ? _table$options$filter : filterFns[column.columnDef.filterFn];
      },
      getCanFilter: () => {
        var _column$columnDef$ena, _table$options$enable, _table$options$enable2;
        return ((_column$columnDef$ena = column.columnDef.enableColumnFilter) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableColumnFilters) != null ? _table$options$enable : true) && ((_table$options$enable2 = table.options.enableFilters) != null ? _table$options$enable2 : true) && !!column.accessorFn;
      },
      getCanGlobalFilter: () => {
        var _column$columnDef$ena2, _table$options$enable3, _table$options$enable4, _table$options$getCol;
        return ((_column$columnDef$ena2 = column.columnDef.enableGlobalFilter) != null ? _column$columnDef$ena2 : true) && ((_table$options$enable3 = table.options.enableGlobalFilter) != null ? _table$options$enable3 : true) && ((_table$options$enable4 = table.options.enableFilters) != null ? _table$options$enable4 : true) && ((_table$options$getCol = table.options.getColumnCanGlobalFilter == null ? void 0 : table.options.getColumnCanGlobalFilter(column)) != null ? _table$options$getCol : true) && !!column.accessorFn;
      },
      getIsFiltered: () => column.getFilterIndex() > -1,
      getFilterValue: () => {
        var _table$getState$colum, _table$getState$colum2;
        return (_table$getState$colum = table.getState().columnFilters) == null ? void 0 : (_table$getState$colum2 = _table$getState$colum.find((d5) => d5.id === column.id)) == null ? void 0 : _table$getState$colum2.value;
      },
      getFilterIndex: () => {
        var _table$getState$colum3, _table$getState$colum4;
        return (_table$getState$colum3 = (_table$getState$colum4 = table.getState().columnFilters) == null ? void 0 : _table$getState$colum4.findIndex((d5) => d5.id === column.id)) != null ? _table$getState$colum3 : -1;
      },
      setFilterValue: (value) => {
        table.setColumnFilters((old) => {
          const filterFn = column.getFilterFn();
          const previousfilter = old == null ? void 0 : old.find((d5) => d5.id === column.id);
          const newFilter = functionalUpdate(value, previousfilter ? previousfilter.value : void 0);
          if (shouldAutoRemoveFilter(filterFn, newFilter, column)) {
            var _old$filter;
            return (_old$filter = old == null ? void 0 : old.filter((d5) => d5.id !== column.id)) != null ? _old$filter : [];
          }
          const newFilterObj = {
            id: column.id,
            value: newFilter
          };
          if (previousfilter) {
            var _old$map;
            return (_old$map = old == null ? void 0 : old.map((d5) => {
              if (d5.id === column.id) {
                return newFilterObj;
              }
              return d5;
            })) != null ? _old$map : [];
          }
          if (old != null && old.length) {
            return [...old, newFilterObj];
          }
          return [newFilterObj];
        });
      },
      _getFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, column.id),
      getFacetedRowModel: () => {
        if (!column._getFacetedRowModel) {
          return table.getPreFilteredRowModel();
        }
        return column._getFacetedRowModel();
      },
      _getFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, column.id),
      getFacetedUniqueValues: () => {
        if (!column._getFacetedUniqueValues) {
          return /* @__PURE__ */ new Map();
        }
        return column._getFacetedUniqueValues();
      },
      _getFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, column.id),
      getFacetedMinMaxValues: () => {
        if (!column._getFacetedMinMaxValues) {
          return void 0;
        }
        return column._getFacetedMinMaxValues();
      }
    };
  },
  createRow: (row, table) => {
    return {
      columnFilters: {},
      columnFiltersMeta: {}
    };
  },
  createTable: (table) => {
    return {
      getGlobalAutoFilterFn: () => {
        return filterFns.includesString;
      },
      getGlobalFilterFn: () => {
        var _table$options$filter3, _table$options$filter4;
        const {
          globalFilterFn
        } = table.options;
        return isFunction(globalFilterFn) ? globalFilterFn : globalFilterFn === "auto" ? table.getGlobalAutoFilterFn() : (_table$options$filter3 = (_table$options$filter4 = table.options.filterFns) == null ? void 0 : _table$options$filter4[globalFilterFn]) != null ? _table$options$filter3 : filterFns[globalFilterFn];
      },
      setColumnFilters: (updater) => {
        const leafColumns = table.getAllLeafColumns();
        const updateFn = (old) => {
          var _functionalUpdate;
          return (_functionalUpdate = functionalUpdate(updater, old)) == null ? void 0 : _functionalUpdate.filter((filter) => {
            const column = leafColumns.find((d5) => d5.id === filter.id);
            if (column) {
              const filterFn = column.getFilterFn();
              if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {
                return false;
              }
            }
            return true;
          });
        };
        table.options.onColumnFiltersChange == null ? void 0 : table.options.onColumnFiltersChange(updateFn);
      },
      setGlobalFilter: (updater) => {
        table.options.onGlobalFilterChange == null ? void 0 : table.options.onGlobalFilterChange(updater);
      },
      resetGlobalFilter: (defaultState) => {
        table.setGlobalFilter(defaultState ? void 0 : table.initialState.globalFilter);
      },
      resetColumnFilters: (defaultState) => {
        var _table$initialState$c, _table$initialState;
        table.setColumnFilters(defaultState ? [] : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnFilters) != null ? _table$initialState$c : []);
      },
      getPreFilteredRowModel: () => table.getCoreRowModel(),
      getFilteredRowModel: () => {
        if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {
          table._getFilteredRowModel = table.options.getFilteredRowModel(table);
        }
        if (table.options.manualFiltering || !table._getFilteredRowModel) {
          return table.getPreFilteredRowModel();
        }
        return table._getFilteredRowModel();
      },
      _getGlobalFacetedRowModel: table.options.getFacetedRowModel && table.options.getFacetedRowModel(table, "__global__"),
      getGlobalFacetedRowModel: () => {
        if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {
          return table.getPreFilteredRowModel();
        }
        return table._getGlobalFacetedRowModel();
      },
      _getGlobalFacetedUniqueValues: table.options.getFacetedUniqueValues && table.options.getFacetedUniqueValues(table, "__global__"),
      getGlobalFacetedUniqueValues: () => {
        if (!table._getGlobalFacetedUniqueValues) {
          return /* @__PURE__ */ new Map();
        }
        return table._getGlobalFacetedUniqueValues();
      },
      _getGlobalFacetedMinMaxValues: table.options.getFacetedMinMaxValues && table.options.getFacetedMinMaxValues(table, "__global__"),
      getGlobalFacetedMinMaxValues: () => {
        if (!table._getGlobalFacetedMinMaxValues) {
          return;
        }
        return table._getGlobalFacetedMinMaxValues();
      }
    };
  }
};
function shouldAutoRemoveFilter(filterFn, value, column) {
  return (filterFn && filterFn.autoRemove ? filterFn.autoRemove(value, column) : false) || typeof value === "undefined" || typeof value === "string" && !value;
}
var sum = (columnId, _leafRows, childRows) => {
  return childRows.reduce((sum2, next) => {
    const nextValue = next.getValue(columnId);
    return sum2 + (typeof nextValue === "number" ? nextValue : 0);
  }, 0);
};
var min2 = (columnId, _leafRows, childRows) => {
  let min3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (min3 > value || min3 === void 0 && value >= value)) {
      min3 = value;
    }
  });
  return min3;
};
var max2 = (columnId, _leafRows, childRows) => {
  let max3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null && (max3 < value || max3 === void 0 && value >= value)) {
      max3 = value;
    }
  });
  return max3;
};
var extent = (columnId, _leafRows, childRows) => {
  let min3;
  let max3;
  childRows.forEach((row) => {
    const value = row.getValue(columnId);
    if (value != null) {
      if (min3 === void 0) {
        if (value >= value)
          min3 = max3 = value;
      } else {
        if (min3 > value)
          min3 = value;
        if (max3 < value)
          max3 = value;
      }
    }
  });
  return [min3, max3];
};
var mean = (columnId, leafRows) => {
  let count2 = 0;
  let sum2 = 0;
  leafRows.forEach((row) => {
    let value = row.getValue(columnId);
    if (value != null && (value = +value) >= value) {
      ++count2, sum2 += value;
    }
  });
  if (count2)
    return sum2 / count2;
  return;
};
var median = (columnId, leafRows) => {
  if (!leafRows.length) {
    return;
  }
  let min3 = 0;
  let max3 = 0;
  leafRows.forEach((row) => {
    let value = row.getValue(columnId);
    if (typeof value === "number") {
      min3 = Math.min(min3, value);
      max3 = Math.max(max3, value);
    }
  });
  return (min3 + max3) / 2;
};
var unique = (columnId, leafRows) => {
  return Array.from(new Set(leafRows.map((d5) => d5.getValue(columnId))).values());
};
var uniqueCount = (columnId, leafRows) => {
  return new Set(leafRows.map((d5) => d5.getValue(columnId))).size;
};
var count = (_columnId, leafRows) => {
  return leafRows.length;
};
var aggregationFns = {
  sum,
  min: min2,
  max: max2,
  extent,
  mean,
  median,
  unique,
  uniqueCount,
  count
};
var Grouping = {
  getDefaultColumnDef: () => {
    return {
      aggregatedCell: (props2) => {
        var _toString, _props$getValue;
        return (_toString = (_props$getValue = props2.getValue()) == null ? void 0 : _props$getValue.toString == null ? void 0 : _props$getValue.toString()) != null ? _toString : null;
      },
      aggregationFn: "auto"
    };
  },
  getInitialState: (state) => {
    return {
      grouping: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onGroupingChange: makeStateUpdater("grouping", table),
      groupedColumnMode: "reorder"
    };
  },
  createColumn: (column, table) => {
    return {
      toggleGrouping: () => {
        table.setGrouping((old) => {
          if (old != null && old.includes(column.id)) {
            return old.filter((d5) => d5 !== column.id);
          }
          return [...old != null ? old : [], column.id];
        });
      },
      getCanGroup: () => {
        var _ref, _ref2, _ref3, _column$columnDef$ena;
        return (_ref = (_ref2 = (_ref3 = (_column$columnDef$ena = column.columnDef.enableGrouping) != null ? _column$columnDef$ena : true) != null ? _ref3 : table.options.enableGrouping) != null ? _ref2 : true) != null ? _ref : !!column.accessorFn;
      },
      getIsGrouped: () => {
        var _table$getState$group;
        return (_table$getState$group = table.getState().grouping) == null ? void 0 : _table$getState$group.includes(column.id);
      },
      getGroupedIndex: () => {
        var _table$getState$group2;
        return (_table$getState$group2 = table.getState().grouping) == null ? void 0 : _table$getState$group2.indexOf(column.id);
      },
      getToggleGroupingHandler: () => {
        const canGroup = column.getCanGroup();
        return () => {
          if (!canGroup)
            return;
          column.toggleGrouping();
        };
      },
      getAutoAggregationFn: () => {
        const firstRow = table.getCoreRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "number") {
          return aggregationFns.sum;
        }
        if (Object.prototype.toString.call(value) === "[object Date]") {
          return aggregationFns.extent;
        }
      },
      getAggregationFn: () => {
        var _table$options$aggreg, _table$options$aggreg2;
        if (!column) {
          throw new Error();
        }
        return isFunction(column.columnDef.aggregationFn) ? column.columnDef.aggregationFn : column.columnDef.aggregationFn === "auto" ? column.getAutoAggregationFn() : (_table$options$aggreg = (_table$options$aggreg2 = table.options.aggregationFns) == null ? void 0 : _table$options$aggreg2[column.columnDef.aggregationFn]) != null ? _table$options$aggreg : aggregationFns[column.columnDef.aggregationFn];
      }
    };
  },
  createTable: (table) => {
    return {
      setGrouping: (updater) => table.options.onGroupingChange == null ? void 0 : table.options.onGroupingChange(updater),
      resetGrouping: (defaultState) => {
        var _table$initialState$g, _table$initialState;
        table.setGrouping(defaultState ? [] : (_table$initialState$g = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.grouping) != null ? _table$initialState$g : []);
      },
      getPreGroupedRowModel: () => table.getFilteredRowModel(),
      getGroupedRowModel: () => {
        if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {
          table._getGroupedRowModel = table.options.getGroupedRowModel(table);
        }
        if (table.options.manualGrouping || !table._getGroupedRowModel) {
          return table.getPreGroupedRowModel();
        }
        return table._getGroupedRowModel();
      }
    };
  },
  createRow: (row) => {
    return {
      getIsGrouped: () => !!row.groupingColumnId,
      _groupingValuesCache: {}
    };
  },
  createCell: (cell, column, row, table) => {
    return {
      getIsGrouped: () => column.getIsGrouped() && column.id === row.groupingColumnId,
      getIsPlaceholder: () => !cell.getIsGrouped() && column.getIsGrouped(),
      getIsAggregated: () => {
        var _row$subRows;
        return !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!((_row$subRows = row.subRows) != null && _row$subRows.length);
      }
    };
  }
};
function orderColumns(leafColumns, grouping, groupedColumnMode) {
  if (!(grouping != null && grouping.length) || !groupedColumnMode) {
    return leafColumns;
  }
  const nonGroupingColumns = leafColumns.filter((col) => !grouping.includes(col.id));
  if (groupedColumnMode === "remove") {
    return nonGroupingColumns;
  }
  const groupingColumns = grouping.map((g4) => leafColumns.find((col) => col.id === g4)).filter(Boolean);
  return [...groupingColumns, ...nonGroupingColumns];
}
var Ordering = {
  getInitialState: (state) => {
    return {
      columnOrder: [],
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnOrderChange: makeStateUpdater("columnOrder", table)
    };
  },
  createTable: (table) => {
    return {
      setColumnOrder: (updater) => table.options.onColumnOrderChange == null ? void 0 : table.options.onColumnOrderChange(updater),
      resetColumnOrder: (defaultState) => {
        var _table$initialState$c;
        table.setColumnOrder(defaultState ? [] : (_table$initialState$c = table.initialState.columnOrder) != null ? _table$initialState$c : []);
      },
      _getOrderColumnsFn: memo(() => [table.getState().columnOrder, table.getState().grouping, table.options.groupedColumnMode], (columnOrder, grouping, groupedColumnMode) => (columns) => {
        let orderedColumns = [];
        if (!(columnOrder != null && columnOrder.length)) {
          orderedColumns = columns;
        } else {
          const columnOrderCopy = [...columnOrder];
          const columnsCopy = [...columns];
          while (columnsCopy.length && columnOrderCopy.length) {
            const targetColumnId = columnOrderCopy.shift();
            const foundIndex = columnsCopy.findIndex((d5) => d5.id === targetColumnId);
            if (foundIndex > -1) {
              orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]);
            }
          }
          orderedColumns = [...orderedColumns, ...columnsCopy];
        }
        return orderColumns(orderedColumns, grouping, groupedColumnMode);
      }, {
        key: "getOrderColumnsFn"
      })
    };
  }
};
var defaultPageIndex = 0;
var defaultPageSize = 10;
var getDefaultPaginationState = () => ({
  pageIndex: defaultPageIndex,
  pageSize: defaultPageSize
});
var Pagination = {
  getInitialState: (state) => {
    return {
      ...state,
      pagination: {
        ...getDefaultPaginationState(),
        ...state == null ? void 0 : state.pagination
      }
    };
  },
  getDefaultOptions: (table) => {
    return {
      onPaginationChange: makeStateUpdater("pagination", table)
    };
  },
  createTable: (table) => {
    let registered = false;
    let queued = false;
    return {
      _autoResetPageIndex: () => {
        var _ref, _table$options$autoRe;
        if (!registered) {
          table._queue(() => {
            registered = true;
          });
          return;
        }
        if ((_ref = (_table$options$autoRe = table.options.autoResetAll) != null ? _table$options$autoRe : table.options.autoResetPageIndex) != null ? _ref : !table.options.manualPagination) {
          if (queued)
            return;
          queued = true;
          table._queue(() => {
            table.resetPageIndex();
            queued = false;
          });
        }
      },
      setPagination: (updater) => {
        const safeUpdater = (old) => {
          let newState = functionalUpdate(updater, old);
          return newState;
        };
        return table.options.onPaginationChange == null ? void 0 : table.options.onPaginationChange(safeUpdater);
      },
      resetPagination: (defaultState) => {
        var _table$initialState$p;
        table.setPagination(defaultState ? getDefaultPaginationState() : (_table$initialState$p = table.initialState.pagination) != null ? _table$initialState$p : getDefaultPaginationState());
      },
      setPageIndex: (updater) => {
        table.setPagination((old) => {
          let pageIndex = functionalUpdate(updater, old.pageIndex);
          const maxPageIndex = typeof table.options.pageCount === "undefined" || table.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : table.options.pageCount - 1;
          pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex));
          return {
            ...old,
            pageIndex
          };
        });
      },
      resetPageIndex: (defaultState) => {
        var _table$initialState$p2, _table$initialState, _table$initialState$p3;
        table.setPageIndex(defaultState ? defaultPageIndex : (_table$initialState$p2 = (_table$initialState = table.initialState) == null ? void 0 : (_table$initialState$p3 = _table$initialState.pagination) == null ? void 0 : _table$initialState$p3.pageIndex) != null ? _table$initialState$p2 : defaultPageIndex);
      },
      resetPageSize: (defaultState) => {
        var _table$initialState$p4, _table$initialState2, _table$initialState2$;
        table.setPageSize(defaultState ? defaultPageSize : (_table$initialState$p4 = (_table$initialState2 = table.initialState) == null ? void 0 : (_table$initialState2$ = _table$initialState2.pagination) == null ? void 0 : _table$initialState2$.pageSize) != null ? _table$initialState$p4 : defaultPageSize);
      },
      setPageSize: (updater) => {
        table.setPagination((old) => {
          const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize));
          const topRowIndex = old.pageSize * old.pageIndex;
          const pageIndex = Math.floor(topRowIndex / pageSize);
          return {
            ...old,
            pageIndex,
            pageSize
          };
        });
      },
      setPageCount: (updater) => table.setPagination((old) => {
        var _table$options$pageCo;
        let newPageCount = functionalUpdate(updater, (_table$options$pageCo = table.options.pageCount) != null ? _table$options$pageCo : -1);
        if (typeof newPageCount === "number") {
          newPageCount = Math.max(-1, newPageCount);
        }
        return {
          ...old,
          pageCount: newPageCount
        };
      }),
      getPageOptions: memo(() => [table.getPageCount()], (pageCount) => {
        let pageOptions = [];
        if (pageCount && pageCount > 0) {
          pageOptions = [...new Array(pageCount)].fill(null).map((_12, i4) => i4);
        }
        return pageOptions;
      }, {
        key: "getPageOptions",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
        }
      }),
      getCanPreviousPage: () => table.getState().pagination.pageIndex > 0,
      getCanNextPage: () => {
        const {
          pageIndex
        } = table.getState().pagination;
        const pageCount = table.getPageCount();
        if (pageCount === -1) {
          return true;
        }
        if (pageCount === 0) {
          return false;
        }
        return pageIndex < pageCount - 1;
      },
      previousPage: () => {
        return table.setPageIndex((old) => old - 1);
      },
      nextPage: () => {
        return table.setPageIndex((old) => {
          return old + 1;
        });
      },
      getPrePaginationRowModel: () => table.getExpandedRowModel(),
      getPaginationRowModel: () => {
        if (!table._getPaginationRowModel && table.options.getPaginationRowModel) {
          table._getPaginationRowModel = table.options.getPaginationRowModel(table);
        }
        if (table.options.manualPagination || !table._getPaginationRowModel) {
          return table.getPrePaginationRowModel();
        }
        return table._getPaginationRowModel();
      },
      getPageCount: () => {
        var _table$options$pageCo2;
        return (_table$options$pageCo2 = table.options.pageCount) != null ? _table$options$pageCo2 : Math.ceil(table.getPrePaginationRowModel().rows.length / table.getState().pagination.pageSize);
      }
    };
  }
};
var getDefaultPinningState = () => ({
  left: [],
  right: []
});
var Pinning = {
  getInitialState: (state) => {
    return {
      columnPinning: getDefaultPinningState(),
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnPinningChange: makeStateUpdater("columnPinning", table)
    };
  },
  createColumn: (column, table) => {
    return {
      pin: (position) => {
        const columnIds = column.getLeafColumns().map((d5) => d5.id).filter(Boolean);
        table.setColumnPinning((old) => {
          var _old$left3, _old$right3;
          if (position === "right") {
            var _old$left, _old$right;
            return {
              left: ((_old$left = old == null ? void 0 : old.left) != null ? _old$left : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))),
              right: [...((_old$right = old == null ? void 0 : old.right) != null ? _old$right : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))), ...columnIds]
            };
          }
          if (position === "left") {
            var _old$left2, _old$right2;
            return {
              left: [...((_old$left2 = old == null ? void 0 : old.left) != null ? _old$left2 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))), ...columnIds],
              right: ((_old$right2 = old == null ? void 0 : old.right) != null ? _old$right2 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5)))
            };
          }
          return {
            left: ((_old$left3 = old == null ? void 0 : old.left) != null ? _old$left3 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5))),
            right: ((_old$right3 = old == null ? void 0 : old.right) != null ? _old$right3 : []).filter((d5) => !(columnIds != null && columnIds.includes(d5)))
          };
        });
      },
      getCanPin: () => {
        const leafColumns = column.getLeafColumns();
        return leafColumns.some((d5) => {
          var _d$columnDef$enablePi, _table$options$enable;
          return ((_d$columnDef$enablePi = d5.columnDef.enablePinning) != null ? _d$columnDef$enablePi : true) && ((_table$options$enable = table.options.enablePinning) != null ? _table$options$enable : true);
        });
      },
      getIsPinned: () => {
        const leafColumnIds = column.getLeafColumns().map((d5) => d5.id);
        const {
          left,
          right
        } = table.getState().columnPinning;
        const isLeft = leafColumnIds.some((d5) => left == null ? void 0 : left.includes(d5));
        const isRight = leafColumnIds.some((d5) => right == null ? void 0 : right.includes(d5));
        return isLeft ? "left" : isRight ? "right" : false;
      },
      getPinnedIndex: () => {
        var _table$getState$colum, _table$getState$colum2, _table$getState$colum3;
        const position = column.getIsPinned();
        return position ? (_table$getState$colum = (_table$getState$colum2 = table.getState().columnPinning) == null ? void 0 : (_table$getState$colum3 = _table$getState$colum2[position]) == null ? void 0 : _table$getState$colum3.indexOf(column.id)) != null ? _table$getState$colum : -1 : 0;
      }
    };
  },
  createRow: (row, table) => {
    return {
      getCenterVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allCells, left, right) => {
        const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
        return allCells.filter((d5) => !leftAndRight.includes(d5.column.id));
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
        }
      }),
      getLeftVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.left, ,], (allCells, left) => {
        const cells = (left != null ? left : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d5) => ({
          ...d5,
          position: "left"
        }));
        return cells;
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
        }
      }),
      getRightVisibleCells: memo(() => [row._getAllVisibleCells(), table.getState().columnPinning.right], (allCells, right) => {
        const cells = (right != null ? right : []).map((columnId) => allCells.find((cell) => cell.column.id === columnId)).filter(Boolean).map((d5) => ({
          ...d5,
          position: "right"
        }));
        return cells;
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugRows;
        }
      })
    };
  },
  createTable: (table) => {
    return {
      setColumnPinning: (updater) => table.options.onColumnPinningChange == null ? void 0 : table.options.onColumnPinningChange(updater),
      resetColumnPinning: (defaultState) => {
        var _table$initialState$c, _table$initialState;
        return table.setColumnPinning(defaultState ? getDefaultPinningState() : (_table$initialState$c = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.columnPinning) != null ? _table$initialState$c : getDefaultPinningState());
      },
      getIsSomeColumnsPinned: (position) => {
        var _pinningState$positio;
        const pinningState = table.getState().columnPinning;
        if (!position) {
          var _pinningState$left, _pinningState$right;
          return Boolean(((_pinningState$left = pinningState.left) == null ? void 0 : _pinningState$left.length) || ((_pinningState$right = pinningState.right) == null ? void 0 : _pinningState$right.length));
        }
        return Boolean((_pinningState$positio = pinningState[position]) == null ? void 0 : _pinningState$positio.length);
      },
      getLeftLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left], (allColumns, left) => {
        return (left != null ? left : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
      }, {
        key: "getLeftLeafColumns",
        debug: () => {
          var _table$options$debugA4;
          return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugColumns;
        }
      }),
      getRightLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.right], (allColumns, right) => {
        return (right != null ? right : []).map((columnId) => allColumns.find((column) => column.id === columnId)).filter(Boolean);
      }, {
        key: "getRightLeafColumns",
        debug: () => {
          var _table$options$debugA5;
          return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugColumns;
        }
      }),
      getCenterLeafColumns: memo(() => [table.getAllLeafColumns(), table.getState().columnPinning.left, table.getState().columnPinning.right], (allColumns, left, right) => {
        const leftAndRight = [...left != null ? left : [], ...right != null ? right : []];
        return allColumns.filter((d5) => !leftAndRight.includes(d5.id));
      }, {
        key: "getCenterLeafColumns",
        debug: () => {
          var _table$options$debugA6;
          return (_table$options$debugA6 = table.options.debugAll) != null ? _table$options$debugA6 : table.options.debugColumns;
        }
      })
    };
  }
};
var RowSelection = {
  getInitialState: (state) => {
    return {
      rowSelection: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onRowSelectionChange: makeStateUpdater("rowSelection", table),
      enableRowSelection: true,
      enableMultiRowSelection: true,
      enableSubRowSelection: true
    };
  },
  createTable: (table) => {
    return {
      setRowSelection: (updater) => table.options.onRowSelectionChange == null ? void 0 : table.options.onRowSelectionChange(updater),
      resetRowSelection: (defaultState) => {
        var _table$initialState$r;
        return table.setRowSelection(defaultState ? {} : (_table$initialState$r = table.initialState.rowSelection) != null ? _table$initialState$r : {});
      },
      toggleAllRowsSelected: (value) => {
        table.setRowSelection((old) => {
          value = typeof value !== "undefined" ? value : !table.getIsAllRowsSelected();
          const rowSelection = {
            ...old
          };
          const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows;
          if (value) {
            preGroupedFlatRows.forEach((row) => {
              if (!row.getCanSelect()) {
                return;
              }
              rowSelection[row.id] = true;
            });
          } else {
            preGroupedFlatRows.forEach((row) => {
              delete rowSelection[row.id];
            });
          }
          return rowSelection;
        });
      },
      toggleAllPageRowsSelected: (value) => table.setRowSelection((old) => {
        const resolvedValue = typeof value !== "undefined" ? value : !table.getIsAllPageRowsSelected();
        const rowSelection = {
          ...old
        };
        table.getRowModel().rows.forEach((row) => {
          mutateRowIsSelected(rowSelection, row.id, resolvedValue, table);
        });
        return rowSelection;
      }),
      getPreSelectedRowModel: () => table.getCoreRowModel(),
      getSelectedRowModel: memo(() => [table.getState().rowSelection, table.getCoreRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: "getSelectedRowModel",
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
        }
      }),
      getFilteredSelectedRowModel: memo(() => [table.getState().rowSelection, table.getFilteredRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugTable;
        }
      }),
      getGroupedSelectedRowModel: memo(() => [table.getState().rowSelection, table.getSortedRowModel()], (rowSelection, rowModel) => {
        if (!Object.keys(rowSelection).length) {
          return {
            rows: [],
            flatRows: [],
            rowsById: {}
          };
        }
        return selectRowsFn(table, rowModel);
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugTable;
        }
      }),
      getIsAllRowsSelected: () => {
        const preGroupedFlatRows = table.getFilteredRowModel().flatRows;
        const {
          rowSelection
        } = table.getState();
        let isAllRowsSelected = Boolean(preGroupedFlatRows.length && Object.keys(rowSelection).length);
        if (isAllRowsSelected) {
          if (preGroupedFlatRows.some((row) => row.getCanSelect() && !rowSelection[row.id])) {
            isAllRowsSelected = false;
          }
        }
        return isAllRowsSelected;
      },
      getIsAllPageRowsSelected: () => {
        const paginationFlatRows = table.getPaginationRowModel().flatRows;
        const {
          rowSelection
        } = table.getState();
        let isAllPageRowsSelected = !!paginationFlatRows.length;
        if (isAllPageRowsSelected && paginationFlatRows.some((row) => row.getCanSelect() && !rowSelection[row.id])) {
          isAllPageRowsSelected = false;
        }
        return isAllPageRowsSelected;
      },
      getIsSomeRowsSelected: () => {
        var _table$getState$rowSe;
        const totalSelected = Object.keys((_table$getState$rowSe = table.getState().rowSelection) != null ? _table$getState$rowSe : {}).length;
        return totalSelected > 0 && totalSelected < table.getFilteredRowModel().flatRows.length;
      },
      getIsSomePageRowsSelected: () => {
        const paginationFlatRows = table.getPaginationRowModel().flatRows;
        return table.getIsAllPageRowsSelected() ? false : paginationFlatRows.some((d5) => d5.getIsSelected() || d5.getIsSomeSelected());
      },
      getToggleAllRowsSelectedHandler: () => {
        return (e4) => {
          table.toggleAllRowsSelected(e4.target.checked);
        };
      },
      getToggleAllPageRowsSelectedHandler: () => {
        return (e4) => {
          table.toggleAllPageRowsSelected(e4.target.checked);
        };
      }
    };
  },
  createRow: (row, table) => {
    return {
      toggleSelected: (value) => {
        const isSelected = row.getIsSelected();
        table.setRowSelection((old) => {
          value = typeof value !== "undefined" ? value : !isSelected;
          if (isSelected === value) {
            return old;
          }
          const selectedRowIds = {
            ...old
          };
          mutateRowIsSelected(selectedRowIds, row.id, value, table);
          return selectedRowIds;
        });
      },
      getIsSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isRowSelected(row, rowSelection);
      },
      getIsSomeSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isSubRowSelected(row, rowSelection) === "some";
      },
      getIsAllSubRowsSelected: () => {
        const {
          rowSelection
        } = table.getState();
        return isSubRowSelected(row, rowSelection) === "all";
      },
      getCanSelect: () => {
        var _table$options$enable;
        if (typeof table.options.enableRowSelection === "function") {
          return table.options.enableRowSelection(row);
        }
        return (_table$options$enable = table.options.enableRowSelection) != null ? _table$options$enable : true;
      },
      getCanSelectSubRows: () => {
        var _table$options$enable2;
        if (typeof table.options.enableSubRowSelection === "function") {
          return table.options.enableSubRowSelection(row);
        }
        return (_table$options$enable2 = table.options.enableSubRowSelection) != null ? _table$options$enable2 : true;
      },
      getCanMultiSelect: () => {
        var _table$options$enable3;
        if (typeof table.options.enableMultiRowSelection === "function") {
          return table.options.enableMultiRowSelection(row);
        }
        return (_table$options$enable3 = table.options.enableMultiRowSelection) != null ? _table$options$enable3 : true;
      },
      getToggleSelectedHandler: () => {
        const canSelect = row.getCanSelect();
        return (e4) => {
          var _target;
          if (!canSelect)
            return;
          row.toggleSelected((_target = e4.target) == null ? void 0 : _target.checked);
        };
      }
    };
  }
};
var mutateRowIsSelected = (selectedRowIds, id2, value, table) => {
  var _row$subRows;
  const row = table.getRow(id2);
  if (value) {
    if (!row.getCanMultiSelect()) {
      Object.keys(selectedRowIds).forEach((key2) => delete selectedRowIds[key2]);
    }
    if (row.getCanSelect()) {
      selectedRowIds[id2] = true;
    }
  } else {
    delete selectedRowIds[id2];
  }
  if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getCanSelectSubRows()) {
    row.subRows.forEach((row2) => mutateRowIsSelected(selectedRowIds, row2.id, value, table));
  }
};
function selectRowsFn(table, rowModel) {
  const rowSelection = table.getState().rowSelection;
  const newSelectedFlatRows = [];
  const newSelectedRowsById = {};
  const recurseRows = function(rows, depth) {
    return rows.map((row) => {
      var _row$subRows2;
      const isSelected = isRowSelected(row, rowSelection);
      if (isSelected) {
        newSelectedFlatRows.push(row);
        newSelectedRowsById[row.id] = row;
      }
      if ((_row$subRows2 = row.subRows) != null && _row$subRows2.length) {
        row = {
          ...row,
          subRows: recurseRows(row.subRows)
        };
      }
      if (isSelected) {
        return row;
      }
    }).filter(Boolean);
  };
  return {
    rows: recurseRows(rowModel.rows),
    flatRows: newSelectedFlatRows,
    rowsById: newSelectedRowsById
  };
}
function isRowSelected(row, selection) {
  var _selection$row$id;
  return (_selection$row$id = selection[row.id]) != null ? _selection$row$id : false;
}
function isSubRowSelected(row, selection, table) {
  if (row.subRows && row.subRows.length) {
    let allChildrenSelected = true;
    let someSelected = false;
    row.subRows.forEach((subRow) => {
      if (someSelected && !allChildrenSelected) {
        return;
      }
      if (isRowSelected(subRow, selection)) {
        someSelected = true;
      } else {
        allChildrenSelected = false;
      }
    });
    return allChildrenSelected ? "all" : someSelected ? "some" : false;
  }
  return false;
}
var reSplitAlphaNumeric = /([0-9]+)/gm;
var alphanumeric = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString2(rowA.getValue(columnId)).toLowerCase(), toString2(rowB.getValue(columnId)).toLowerCase());
};
var alphanumericCaseSensitive = (rowA, rowB, columnId) => {
  return compareAlphanumeric(toString2(rowA.getValue(columnId)), toString2(rowB.getValue(columnId)));
};
var text = (rowA, rowB, columnId) => {
  return compareBasic(toString2(rowA.getValue(columnId)).toLowerCase(), toString2(rowB.getValue(columnId)).toLowerCase());
};
var textCaseSensitive = (rowA, rowB, columnId) => {
  return compareBasic(toString2(rowA.getValue(columnId)), toString2(rowB.getValue(columnId)));
};
var datetime = (rowA, rowB, columnId) => {
  const a5 = rowA.getValue(columnId);
  const b4 = rowB.getValue(columnId);
  return a5 > b4 ? 1 : a5 < b4 ? -1 : 0;
};
var basic = (rowA, rowB, columnId) => {
  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId));
};
function compareBasic(a5, b4) {
  return a5 === b4 ? 0 : a5 > b4 ? 1 : -1;
}
function toString2(a5) {
  if (typeof a5 === "number") {
    if (isNaN(a5) || a5 === Infinity || a5 === -Infinity) {
      return "";
    }
    return String(a5);
  }
  if (typeof a5 === "string") {
    return a5;
  }
  return "";
}
function compareAlphanumeric(aStr, bStr) {
  const a5 = aStr.split(reSplitAlphaNumeric).filter(Boolean);
  const b4 = bStr.split(reSplitAlphaNumeric).filter(Boolean);
  while (a5.length && b4.length) {
    const aa = a5.shift();
    const bb = b4.shift();
    const an2 = parseInt(aa, 10);
    const bn2 = parseInt(bb, 10);
    const combo = [an2, bn2].sort();
    if (isNaN(combo[0])) {
      if (aa > bb) {
        return 1;
      }
      if (bb > aa) {
        return -1;
      }
      continue;
    }
    if (isNaN(combo[1])) {
      return isNaN(an2) ? -1 : 1;
    }
    if (an2 > bn2) {
      return 1;
    }
    if (bn2 > an2) {
      return -1;
    }
  }
  return a5.length - b4.length;
}
var sortingFns = {
  alphanumeric,
  alphanumericCaseSensitive,
  text,
  textCaseSensitive,
  datetime,
  basic
};
var Sorting = {
  getInitialState: (state) => {
    return {
      sorting: [],
      ...state
    };
  },
  getDefaultColumnDef: () => {
    return {
      sortingFn: "auto"
    };
  },
  getDefaultOptions: (table) => {
    return {
      onSortingChange: makeStateUpdater("sorting", table),
      isMultiSortEvent: (e4) => {
        return e4.shiftKey;
      }
    };
  },
  createColumn: (column, table) => {
    return {
      getAutoSortingFn: () => {
        const firstRows = table.getFilteredRowModel().flatRows.slice(10);
        let isString = false;
        for (const row of firstRows) {
          const value = row == null ? void 0 : row.getValue(column.id);
          if (Object.prototype.toString.call(value) === "[object Date]") {
            return sortingFns.datetime;
          }
          if (typeof value === "string") {
            isString = true;
            if (value.split(reSplitAlphaNumeric).length > 1) {
              return sortingFns.alphanumeric;
            }
          }
        }
        if (isString) {
          return sortingFns.text;
        }
        return sortingFns.basic;
      },
      getAutoSortDir: () => {
        const firstRow = table.getFilteredRowModel().flatRows[0];
        const value = firstRow == null ? void 0 : firstRow.getValue(column.id);
        if (typeof value === "string") {
          return "asc";
        }
        return "desc";
      },
      getSortingFn: () => {
        var _table$options$sortin, _table$options$sortin2;
        if (!column) {
          throw new Error();
        }
        return isFunction(column.columnDef.sortingFn) ? column.columnDef.sortingFn : column.columnDef.sortingFn === "auto" ? column.getAutoSortingFn() : (_table$options$sortin = (_table$options$sortin2 = table.options.sortingFns) == null ? void 0 : _table$options$sortin2[column.columnDef.sortingFn]) != null ? _table$options$sortin : sortingFns[column.columnDef.sortingFn];
      },
      toggleSorting: (desc, multi) => {
        const nextSortingOrder = column.getNextSortingOrder();
        const hasManualValue = typeof desc !== "undefined" && desc !== null;
        table.setSorting((old) => {
          const existingSorting = old == null ? void 0 : old.find((d5) => d5.id === column.id);
          const existingIndex = old == null ? void 0 : old.findIndex((d5) => d5.id === column.id);
          let newSorting = [];
          let sortAction;
          let nextDesc = hasManualValue ? desc : nextSortingOrder === "desc";
          if (old != null && old.length && column.getCanMultiSort() && multi) {
            if (existingSorting) {
              sortAction = "toggle";
            } else {
              sortAction = "add";
            }
          } else {
            if (old != null && old.length && existingIndex !== old.length - 1) {
              sortAction = "replace";
            } else if (existingSorting) {
              sortAction = "toggle";
            } else {
              sortAction = "replace";
            }
          }
          if (sortAction === "toggle") {
            if (!hasManualValue) {
              if (!nextSortingOrder) {
                sortAction = "remove";
              }
            }
          }
          if (sortAction === "add") {
            var _table$options$maxMul;
            newSorting = [...old, {
              id: column.id,
              desc: nextDesc
            }];
            newSorting.splice(0, newSorting.length - ((_table$options$maxMul = table.options.maxMultiSortColCount) != null ? _table$options$maxMul : Number.MAX_SAFE_INTEGER));
          } else if (sortAction === "toggle") {
            newSorting = old.map((d5) => {
              if (d5.id === column.id) {
                return {
                  ...d5,
                  desc: nextDesc
                };
              }
              return d5;
            });
          } else if (sortAction === "remove") {
            newSorting = old.filter((d5) => d5.id !== column.id);
          } else {
            newSorting = [{
              id: column.id,
              desc: nextDesc
            }];
          }
          return newSorting;
        });
      },
      getFirstSortDir: () => {
        var _ref, _column$columnDef$sor;
        const sortDescFirst = (_ref = (_column$columnDef$sor = column.columnDef.sortDescFirst) != null ? _column$columnDef$sor : table.options.sortDescFirst) != null ? _ref : column.getAutoSortDir() === "desc";
        return sortDescFirst ? "desc" : "asc";
      },
      getNextSortingOrder: (multi) => {
        var _table$options$enable, _table$options$enable2;
        const firstSortDirection = column.getFirstSortDir();
        const isSorted = column.getIsSorted();
        if (!isSorted) {
          return firstSortDirection;
        }
        if (isSorted !== firstSortDirection && ((_table$options$enable = table.options.enableSortingRemoval) != null ? _table$options$enable : true) && (multi ? (_table$options$enable2 = table.options.enableMultiRemove) != null ? _table$options$enable2 : true : true)) {
          return false;
        }
        return isSorted === "desc" ? "asc" : "desc";
      },
      getCanSort: () => {
        var _column$columnDef$ena, _table$options$enable3;
        return ((_column$columnDef$ena = column.columnDef.enableSorting) != null ? _column$columnDef$ena : true) && ((_table$options$enable3 = table.options.enableSorting) != null ? _table$options$enable3 : true) && !!column.accessorFn;
      },
      getCanMultiSort: () => {
        var _ref2, _column$columnDef$ena2;
        return (_ref2 = (_column$columnDef$ena2 = column.columnDef.enableMultiSort) != null ? _column$columnDef$ena2 : table.options.enableMultiSort) != null ? _ref2 : !!column.accessorFn;
      },
      getIsSorted: () => {
        var _table$getState$sorti;
        const columnSort = (_table$getState$sorti = table.getState().sorting) == null ? void 0 : _table$getState$sorti.find((d5) => d5.id === column.id);
        return !columnSort ? false : columnSort.desc ? "desc" : "asc";
      },
      getSortIndex: () => {
        var _table$getState$sorti2, _table$getState$sorti3;
        return (_table$getState$sorti2 = (_table$getState$sorti3 = table.getState().sorting) == null ? void 0 : _table$getState$sorti3.findIndex((d5) => d5.id === column.id)) != null ? _table$getState$sorti2 : -1;
      },
      clearSorting: () => {
        table.setSorting((old) => old != null && old.length ? old.filter((d5) => d5.id !== column.id) : []);
      },
      getToggleSortingHandler: () => {
        const canSort = column.getCanSort();
        return (e4) => {
          if (!canSort)
            return;
          e4.persist == null ? void 0 : e4.persist();
          column.toggleSorting == null ? void 0 : column.toggleSorting(void 0, column.getCanMultiSort() ? table.options.isMultiSortEvent == null ? void 0 : table.options.isMultiSortEvent(e4) : false);
        };
      }
    };
  },
  createTable: (table) => {
    return {
      setSorting: (updater) => table.options.onSortingChange == null ? void 0 : table.options.onSortingChange(updater),
      resetSorting: (defaultState) => {
        var _table$initialState$s, _table$initialState;
        table.setSorting(defaultState ? [] : (_table$initialState$s = (_table$initialState = table.initialState) == null ? void 0 : _table$initialState.sorting) != null ? _table$initialState$s : []);
      },
      getPreSortedRowModel: () => table.getGroupedRowModel(),
      getSortedRowModel: () => {
        if (!table._getSortedRowModel && table.options.getSortedRowModel) {
          table._getSortedRowModel = table.options.getSortedRowModel(table);
        }
        if (table.options.manualSorting || !table._getSortedRowModel) {
          return table.getPreSortedRowModel();
        }
        return table._getSortedRowModel();
      }
    };
  }
};
var Visibility = {
  getInitialState: (state) => {
    return {
      columnVisibility: {},
      ...state
    };
  },
  getDefaultOptions: (table) => {
    return {
      onColumnVisibilityChange: makeStateUpdater("columnVisibility", table)
    };
  },
  createColumn: (column, table) => {
    return {
      toggleVisibility: (value) => {
        if (column.getCanHide()) {
          table.setColumnVisibility((old) => ({
            ...old,
            [column.id]: value != null ? value : !column.getIsVisible()
          }));
        }
      },
      getIsVisible: () => {
        var _table$getState$colum, _table$getState$colum2;
        return (_table$getState$colum = (_table$getState$colum2 = table.getState().columnVisibility) == null ? void 0 : _table$getState$colum2[column.id]) != null ? _table$getState$colum : true;
      },
      getCanHide: () => {
        var _column$columnDef$ena, _table$options$enable;
        return ((_column$columnDef$ena = column.columnDef.enableHiding) != null ? _column$columnDef$ena : true) && ((_table$options$enable = table.options.enableHiding) != null ? _table$options$enable : true);
      },
      getToggleVisibilityHandler: () => {
        return (e4) => {
          column.toggleVisibility == null ? void 0 : column.toggleVisibility(e4.target.checked);
        };
      }
    };
  },
  createRow: (row, table) => {
    return {
      _getAllVisibleCells: memo(() => [row.getAllCells(), table.getState().columnVisibility], (cells) => {
        return cells.filter((cell) => cell.column.getIsVisible());
      }, {
        key: false,
        debug: () => {
          var _table$options$debugA;
          return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
        }
      }),
      getVisibleCells: memo(() => [row.getLeftVisibleCells(), row.getCenterVisibleCells(), row.getRightVisibleCells()], (left, center, right) => [...left, ...center, ...right], {
        key: "row.getVisibleCells",
        debug: () => {
          var _table$options$debugA2;
          return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
        }
      })
    };
  },
  createTable: (table) => {
    const makeVisibleColumnsMethod = (key2, getColumns) => {
      return memo(() => [getColumns(), getColumns().filter((d5) => d5.getIsVisible()).map((d5) => d5.id).join("_")], (columns) => {
        return columns.filter((d5) => d5.getIsVisible == null ? void 0 : d5.getIsVisible());
      }, {
        key: key2,
        debug: () => {
          var _table$options$debugA3;
          return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugColumns;
        }
      });
    };
    return {
      getVisibleFlatColumns: makeVisibleColumnsMethod("getVisibleFlatColumns", () => table.getAllFlatColumns()),
      getVisibleLeafColumns: makeVisibleColumnsMethod("getVisibleLeafColumns", () => table.getAllLeafColumns()),
      getLeftVisibleLeafColumns: makeVisibleColumnsMethod("getLeftVisibleLeafColumns", () => table.getLeftLeafColumns()),
      getRightVisibleLeafColumns: makeVisibleColumnsMethod("getRightVisibleLeafColumns", () => table.getRightLeafColumns()),
      getCenterVisibleLeafColumns: makeVisibleColumnsMethod("getCenterVisibleLeafColumns", () => table.getCenterLeafColumns()),
      setColumnVisibility: (updater) => table.options.onColumnVisibilityChange == null ? void 0 : table.options.onColumnVisibilityChange(updater),
      resetColumnVisibility: (defaultState) => {
        var _table$initialState$c;
        table.setColumnVisibility(defaultState ? {} : (_table$initialState$c = table.initialState.columnVisibility) != null ? _table$initialState$c : {});
      },
      toggleAllColumnsVisible: (value) => {
        var _value;
        value = (_value = value) != null ? _value : !table.getIsAllColumnsVisible();
        table.setColumnVisibility(table.getAllLeafColumns().reduce((obj, column) => ({
          ...obj,
          [column.id]: !value ? !(column.getCanHide != null && column.getCanHide()) : value
        }), {}));
      },
      getIsAllColumnsVisible: () => !table.getAllLeafColumns().some((column) => !(column.getIsVisible != null && column.getIsVisible())),
      getIsSomeColumnsVisible: () => table.getAllLeafColumns().some((column) => column.getIsVisible == null ? void 0 : column.getIsVisible()),
      getToggleAllColumnsVisibilityHandler: () => {
        return (e4) => {
          var _target;
          table.toggleAllColumnsVisible((_target = e4.target) == null ? void 0 : _target.checked);
        };
      }
    };
  }
};
var features = [Headers, Visibility, Ordering, Pinning, Filters, Sorting, Grouping, Expanding, Pagination, RowSelection, ColumnSizing];
function createTable(options) {
  var _options$initialState;
  if (options.debugAll || options.debugTable) {
    console.info("Creating Table Instance...");
  }
  let table = {
    _features: features
  };
  const defaultOptions4 = table._features.reduce((obj, feature) => {
    return Object.assign(obj, feature.getDefaultOptions == null ? void 0 : feature.getDefaultOptions(table));
  }, {});
  const mergeOptions = (options2) => {
    if (table.options.mergeOptions) {
      return table.options.mergeOptions(defaultOptions4, options2);
    }
    return {
      ...defaultOptions4,
      ...options2
    };
  };
  const coreInitialState = {};
  let initialState2 = {
    ...coreInitialState,
    ...(_options$initialState = options.initialState) != null ? _options$initialState : {}
  };
  table._features.forEach((feature) => {
    var _feature$getInitialSt;
    initialState2 = (_feature$getInitialSt = feature.getInitialState == null ? void 0 : feature.getInitialState(initialState2)) != null ? _feature$getInitialSt : initialState2;
  });
  const queued = [];
  let queuedTimeout = false;
  const coreInstance = {
    _features: features,
    options: {
      ...defaultOptions4,
      ...options
    },
    initialState: initialState2,
    _queue: (cb) => {
      queued.push(cb);
      if (!queuedTimeout) {
        queuedTimeout = true;
        Promise.resolve().then(() => {
          while (queued.length) {
            queued.shift()();
          }
          queuedTimeout = false;
        }).catch((error) => setTimeout(() => {
          throw error;
        }));
      }
    },
    reset: () => {
      table.setState(table.initialState);
    },
    setOptions: (updater) => {
      const newOptions = functionalUpdate(updater, table.options);
      table.options = mergeOptions(newOptions);
    },
    getState: () => {
      return table.options.state;
    },
    setState: (updater) => {
      table.options.onStateChange == null ? void 0 : table.options.onStateChange(updater);
    },
    _getRowId: (row, index, parent) => {
      var _table$options$getRow;
      return (_table$options$getRow = table.options.getRowId == null ? void 0 : table.options.getRowId(row, index, parent)) != null ? _table$options$getRow : `${parent ? [parent.id, index].join(".") : index}`;
    },
    getCoreRowModel: () => {
      if (!table._getCoreRowModel) {
        table._getCoreRowModel = table.options.getCoreRowModel(table);
      }
      return table._getCoreRowModel();
    },
    getRowModel: () => {
      return table.getPaginationRowModel();
    },
    getRow: (id2) => {
      const row = table.getRowModel().rowsById[id2];
      if (!row) {
        if (true) {
          throw new Error(`getRow expected an ID, but got ${id2}`);
        }
        throw new Error();
      }
      return row;
    },
    _getDefaultColumnDef: memo(() => [table.options.defaultColumn], (defaultColumn) => {
      var _defaultColumn;
      defaultColumn = (_defaultColumn = defaultColumn) != null ? _defaultColumn : {};
      return {
        header: (props2) => {
          const resolvedColumnDef = props2.header.column.columnDef;
          if (resolvedColumnDef.accessorKey) {
            return resolvedColumnDef.accessorKey;
          }
          if (resolvedColumnDef.accessorFn) {
            return resolvedColumnDef.id;
          }
          return null;
        },
        cell: (props2) => {
          var _props$renderValue$to, _props$renderValue;
          return (_props$renderValue$to = (_props$renderValue = props2.renderValue()) == null ? void 0 : _props$renderValue.toString == null ? void 0 : _props$renderValue.toString()) != null ? _props$renderValue$to : null;
        },
        ...table._features.reduce((obj, feature) => {
          return Object.assign(obj, feature.getDefaultColumnDef == null ? void 0 : feature.getDefaultColumnDef());
        }, {}),
        ...defaultColumn
      };
    }, {
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugColumns;
      },
      key: "getDefaultColumnDef"
    }),
    _getColumnDefs: () => table.options.columns,
    getAllColumns: memo(() => [table._getColumnDefs()], (columnDefs) => {
      const recurseColumns = function(columnDefs2, parent, depth) {
        if (depth === void 0) {
          depth = 0;
        }
        return columnDefs2.map((columnDef) => {
          const column = createColumn(table, columnDef, depth, parent);
          const groupingColumnDef = columnDef;
          column.columns = groupingColumnDef.columns ? recurseColumns(groupingColumnDef.columns, column, depth + 1) : [];
          return column;
        });
      };
      return recurseColumns(columnDefs);
    }, {
      key: "getAllColumns",
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugColumns;
      }
    }),
    getAllFlatColumns: memo(() => [table.getAllColumns()], (allColumns) => {
      return allColumns.flatMap((column) => {
        return column.getFlatColumns();
      });
    }, {
      key: "getAllFlatColumns",
      debug: () => {
        var _table$options$debugA3;
        return (_table$options$debugA3 = table.options.debugAll) != null ? _table$options$debugA3 : table.options.debugColumns;
      }
    }),
    _getAllFlatColumnsById: memo(() => [table.getAllFlatColumns()], (flatColumns) => {
      return flatColumns.reduce((acc, column) => {
        acc[column.id] = column;
        return acc;
      }, {});
    }, {
      key: "getAllFlatColumnsById",
      debug: () => {
        var _table$options$debugA4;
        return (_table$options$debugA4 = table.options.debugAll) != null ? _table$options$debugA4 : table.options.debugColumns;
      }
    }),
    getAllLeafColumns: memo(() => [table.getAllColumns(), table._getOrderColumnsFn()], (allColumns, orderColumns2) => {
      let leafColumns = allColumns.flatMap((column) => column.getLeafColumns());
      return orderColumns2(leafColumns);
    }, {
      key: "getAllLeafColumns",
      debug: () => {
        var _table$options$debugA5;
        return (_table$options$debugA5 = table.options.debugAll) != null ? _table$options$debugA5 : table.options.debugColumns;
      }
    }),
    getColumn: (columnId) => {
      const column = table._getAllFlatColumnsById()[columnId];
      if (!column) {
        console.error(`[Table] Column with id '${columnId}' does not exist.`);
      }
      return column;
    }
  };
  Object.assign(table, coreInstance);
  table._features.forEach((feature) => {
    return Object.assign(table, feature.createTable == null ? void 0 : feature.createTable(table));
  });
  return table;
}
function createCell(table, row, column, columnId) {
  const getRenderValue = () => {
    var _cell$getValue;
    return (_cell$getValue = cell.getValue()) != null ? _cell$getValue : table.options.renderFallbackValue;
  };
  const cell = {
    id: `${row.id}_${column.id}`,
    row,
    column,
    getValue: () => row.getValue(columnId),
    renderValue: getRenderValue,
    getContext: memo(() => [table, column, row, cell], (table2, column2, row2, cell2) => ({
      table: table2,
      column: column2,
      row: row2,
      cell: cell2,
      getValue: cell2.getValue,
      renderValue: cell2.renderValue
    }), {
      key: "cell.getContext",
      debug: () => table.options.debugAll
    })
  };
  table._features.forEach((feature) => {
    Object.assign(cell, feature.createCell == null ? void 0 : feature.createCell(cell, column, row, table));
  }, {});
  return cell;
}
var createRow = (table, id2, original, rowIndex, depth, subRows) => {
  let row = {
    id: id2,
    index: rowIndex,
    original,
    depth,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (columnId) => {
      if (row._valuesCache.hasOwnProperty(columnId)) {
        return row._valuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      row._valuesCache[columnId] = column.accessorFn(row.original, rowIndex);
      return row._valuesCache[columnId];
    },
    getUniqueValues: (columnId) => {
      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {
        return row._uniqueValuesCache[columnId];
      }
      const column = table.getColumn(columnId);
      if (!(column != null && column.accessorFn)) {
        return void 0;
      }
      if (!column.columnDef.getUniqueValues) {
        row._uniqueValuesCache[columnId] = [row.getValue(columnId)];
        return row._uniqueValuesCache[columnId];
      }
      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(row.original, rowIndex);
      return row._uniqueValuesCache[columnId];
    },
    renderValue: (columnId) => {
      var _row$getValue;
      return (_row$getValue = row.getValue(columnId)) != null ? _row$getValue : table.options.renderFallbackValue;
    },
    subRows: subRows != null ? subRows : [],
    getLeafRows: () => flattenBy(row.subRows, (d5) => d5.subRows),
    getAllCells: memo(() => [table.getAllLeafColumns()], (leafColumns) => {
      return leafColumns.map((column) => {
        return createCell(table, row, column, column.id);
      });
    }, {
      key: "row.getAllCells",
      debug: () => {
        var _table$options$debugA;
        return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugRows;
      }
    }),
    _getAllCellsByColumnId: memo(() => [row.getAllCells()], (allCells) => {
      return allCells.reduce((acc, cell) => {
        acc[cell.column.id] = cell;
        return acc;
      }, {});
    }, {
      key: false,
      debug: () => {
        var _table$options$debugA2;
        return (_table$options$debugA2 = table.options.debugAll) != null ? _table$options$debugA2 : table.options.debugRows;
      }
    })
  };
  for (let i4 = 0; i4 < table._features.length; i4++) {
    const feature = table._features[i4];
    Object.assign(row, feature == null ? void 0 : feature.createRow == null ? void 0 : feature.createRow(row, table));
  }
  return row;
};
function getCoreRowModel() {
  return (table) => memo(() => [table.options.data], (data2) => {
    const rowModel = {
      rows: [],
      flatRows: [],
      rowsById: {}
    };
    const accessRows = function(originalRows, depth, parent) {
      if (depth === void 0) {
        depth = 0;
      }
      const rows = [];
      for (let i4 = 0; i4 < originalRows.length; i4++) {
        const row = createRow(table, table._getRowId(originalRows[i4], i4, parent), originalRows[i4], i4, depth);
        rowModel.flatRows.push(row);
        rowModel.rowsById[row.id] = row;
        rows.push(row);
        if (table.options.getSubRows) {
          var _row$originalSubRows;
          row.originalSubRows = table.options.getSubRows(originalRows[i4], i4);
          if ((_row$originalSubRows = row.originalSubRows) != null && _row$originalSubRows.length) {
            row.subRows = accessRows(row.originalSubRows, depth + 1, row);
          }
        }
      }
      return rows;
    };
    rowModel.rows = accessRows(data2);
    return rowModel;
  }, {
    key: "getRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    },
    onChange: () => {
      table._autoResetPageIndex();
    }
  });
}
function getGroupedRowModel() {
  return (table) => memo(() => [table.getState().grouping, table.getPreGroupedRowModel()], (grouping, rowModel) => {
    if (!rowModel.rows.length || !grouping.length) {
      return rowModel;
    }
    const existingGrouping = grouping.filter((columnId) => table.getColumn(columnId));
    const groupedFlatRows = [];
    const groupedRowsById = {};
    const groupUpRecursively = function(rows, depth, parentId) {
      if (depth === void 0) {
        depth = 0;
      }
      if (depth >= existingGrouping.length) {
        return rows.map((row) => {
          row.depth = depth;
          groupedFlatRows.push(row);
          groupedRowsById[row.id] = row;
          if (row.subRows) {
            row.subRows = groupUpRecursively(row.subRows, depth + 1);
          }
          return row;
        });
      }
      const columnId = existingGrouping[depth];
      const rowGroupsMap = groupBy(rows, columnId);
      const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map((_ref, index) => {
        let [groupingValue, groupedRows2] = _ref;
        let id2 = `${columnId}:${groupingValue}`;
        id2 = parentId ? `${parentId}>${id2}` : id2;
        const subRows = groupUpRecursively(groupedRows2, depth + 1, id2);
        const leafRows = depth ? flattenBy(groupedRows2, (row2) => row2.subRows) : groupedRows2;
        const row = createRow(table, id2, leafRows[0].original, index, depth);
        Object.assign(row, {
          groupingColumnId: columnId,
          groupingValue,
          subRows,
          leafRows,
          getValue: (columnId2) => {
            if (existingGrouping.includes(columnId2)) {
              if (row._valuesCache.hasOwnProperty(columnId2)) {
                return row._valuesCache[columnId2];
              }
              if (groupedRows2[0]) {
                var _groupedRows$0$getVal;
                row._valuesCache[columnId2] = (_groupedRows$0$getVal = groupedRows2[0].getValue(columnId2)) != null ? _groupedRows$0$getVal : void 0;
              }
              return row._valuesCache[columnId2];
            }
            if (row._groupingValuesCache.hasOwnProperty(columnId2)) {
              return row._groupingValuesCache[columnId2];
            }
            const column = table.getColumn(columnId2);
            const aggregateFn = column == null ? void 0 : column.getAggregationFn();
            if (aggregateFn) {
              row._groupingValuesCache[columnId2] = aggregateFn(columnId2, leafRows, groupedRows2);
              return row._groupingValuesCache[columnId2];
            }
          }
        });
        subRows.forEach((subRow) => {
          groupedFlatRows.push(subRow);
          groupedRowsById[subRow.id] = subRow;
        });
        return row;
      });
      return aggregatedGroupedRows;
    };
    const groupedRows = groupUpRecursively(rowModel.rows, 0, "");
    groupedRows.forEach((subRow) => {
      groupedFlatRows.push(subRow);
      groupedRowsById[subRow.id] = subRow;
    });
    return {
      rows: groupedRows,
      flatRows: groupedFlatRows,
      rowsById: groupedRowsById
    };
  }, {
    key: "getGroupedRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    },
    onChange: () => {
      table._queue(() => {
        table._autoResetExpanded();
        table._autoResetPageIndex();
      });
    }
  });
}
function groupBy(rows, columnId) {
  const groupMap = /* @__PURE__ */ new Map();
  return rows.reduce((map2, row) => {
    const resKey = `${row.getValue(columnId)}`;
    const previous = map2.get(resKey);
    if (!previous) {
      map2.set(resKey, [row]);
    } else {
      previous.push(row);
    }
    return map2;
  }, groupMap);
}
function getExpandedRowModel() {
  return (table) => memo(() => [table.getState().expanded, table.getPreExpandedRowModel(), table.options.paginateExpandedRows], (expanded, rowModel, paginateExpandedRows) => {
    if (!rowModel.rows.length || expanded !== true && !Object.keys(expanded != null ? expanded : {}).length) {
      return rowModel;
    }
    if (!paginateExpandedRows) {
      return rowModel;
    }
    return expandRows(rowModel);
  }, {
    key: "getExpandedRowModel",
    debug: () => {
      var _table$options$debugA;
      return (_table$options$debugA = table.options.debugAll) != null ? _table$options$debugA : table.options.debugTable;
    }
  });
}
function expandRows(rowModel) {
  const expandedRows = [];
  const handleRow = (row) => {
    var _row$subRows;
    expandedRows.push(row);
    if ((_row$subRows = row.subRows) != null && _row$subRows.length && row.getIsExpanded()) {
      row.subRows.forEach(handleRow);
    }
  };
  rowModel.rows.forEach(handleRow);
  return {
    rows: expandedRows,
    flatRows: rowModel.flatRows,
    rowsById: rowModel.rowsById
  };
}

// node_modules/@tanstack/react-table/build/lib/index.mjs
function flexRender(Comp, props2) {
  return !Comp ? null : isReactComponent(Comp) ? /* @__PURE__ */ y(Comp, props2) : Comp;
}
function isReactComponent(component) {
  return isClassComponent(component) || typeof component === "function" || isExoticComponent(component);
}
function isClassComponent(component) {
  return typeof component === "function" && (() => {
    const proto = Object.getPrototypeOf(component);
    return proto.prototype && proto.prototype.isReactComponent;
  })();
}
function isExoticComponent(component) {
  return typeof component === "object" && typeof component.$$typeof === "symbol" && ["react.memo", "react.forward_ref"].includes(component.$$typeof.description);
}
function useReactTable(options) {
  const resolvedOptions = {
    state: {},
    onStateChange: () => {
    },
    renderFallbackValue: null,
    ...options
  };
  const [tableRef] = h2(() => ({
    current: createTable(resolvedOptions)
  }));
  const [state, setState] = h2(() => tableRef.current.initialState);
  tableRef.current.setOptions((prev) => ({
    ...prev,
    ...options,
    state: {
      ...state,
      ...options.state
    },
    onStateChange: (updater) => {
      setState(updater);
      options.onStateChange == null ? void 0 : options.onStateChange(updater);
    }
  }));
  return tableRef.current;
}

// src/components/Space/Contexts/TableView/TableView.tsx
init_compat_module();
init_compat_module();

// src/components/Space/Contexts/DataTypeView/ContextCell.tsx
init_compat_module();

// src/components/Space/Contexts/DataTypeView/OptionCell.tsx
var import_lodash8 = __toESM(require_lodash());
init_compat_module();
var OptionCell = (props2) => {
  var _a2, _b2;
  const initialValue = (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).filter((f4) => f4);
  const initialOptions = [
    ...(_b2 = parseMultiString(props2.options).filter((f4) => f4).map((t4) => ({ name: t4, value: t4, removeable: true }))) != null ? _b2 : [],
    ...initialValue.map((f4) => ({ name: f4, value: f4, removeable: true }))
  ].filter(onlyUniqueProp("value")).filter((f4) => f4.value.length > 0);
  const [options, setOptions] = h2(initialOptions);
  const [value, setValue] = h2(initialValue);
  p2(() => {
    var _a3;
    setValue(
      (props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]).filter((f4) => f4)
    );
  }, [props2.initialValue]);
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4 != v3);
    setValue(newValues);
    props2.saveOptions(
      serializeMultiString(options.map((f4) => f4.value)),
      serializeMultiString(newValues)
    );
  };
  const removeOption = (option) => {
    const newOptions = options.filter((f4) => f4.value != option);
    const newValues = value.filter((f4) => f4 != option);
    setOptions(newOptions);
    setValue(newValues);
    props2.saveOptions(
      serializeMultiString(newOptions.map((f4) => f4.value)),
      serializeMultiString(newValues)
    );
  };
  const saveOptions = (_options, _value) => {
    if (!props2.multi) {
      setOptions(
        _options.filter((f4) => f4.length > 0).map((t4) => ({ name: t4, value: t4, removeable: true }))
      );
      setValue(_value);
      props2.saveOptions(
        serializeMultiString(_options.filter((f4) => f4.length > 0)),
        serializeMultiString(_value)
      );
    } else {
      const newValues = (0, import_lodash8.uniq)([...value, _value[0]]);
      setOptions(
        _options.map((t4) => ({ name: t4, value: t4, removeable: true }))
      );
      setValue(newValues);
      props2.saveOptions(
        serializeMultiString(_options.filter((f4) => f4.length > 0)),
        serializeMultiString(newValues)
      );
    }
  };
  const menuProps = () => ({
    multi: false,
    editable: true,
    plugin: props2.plugin,
    value,
    options: !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options,
    saveOptions,
    removeOption,
    placeholder: i18n_default.labels.optionItemSelectPlaceholder,
    searchable: true,
    showAll: true,
    onHide: () => props2.setEditMode(null)
  });
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    baseClass: "mk-cell-option",
    value,
    menuProps,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};
var OptionCellBase = (props2) => {
  const {
    value,
    menuProps,
    removeValue,
    getLabelString,
    openItem,
    valueClass
  } = props2;
  const menuRef = _2(null);
  p2(() => {
    if (props2.editMode == 2) {
      if (!menuRef.current)
        showMenu();
    }
  }, [props2.editMode]);
  const ref2 = _2(null);
  const showMenu = () => {
    const offset2 = ref2.current.getBoundingClientRect();
    menuRef.current = showSelectMenu(
      { x: offset2.left - 4, y: offset2.bottom - 4 },
      menuProps()
    );
  };
  const editable = props2.editMode > 0;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: props2.baseClass,
    ref: ref2
  }, value.length > 0 ? value.map((o3, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-cell-option-item"
  }, (getLabelString ? getLabelString(o3).length > 0 : o3.length > 0) ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: valueClass && valueClass(o3),
    onClick: () => openItem && openItem(o3)
  }, getLabelString ? getLabelString(o3) : o3), editable && props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    onClick: () => removeValue(o3),
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-close"]
    }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)) : /* @__PURE__ */ Cn.createElement("div", null, i18n_default.labels.select), editable && !props2.multi && value.length > 0 ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => editable && !props2.multi && showMenu(),
    className: "mk-cell-option-select mk-icon-xxsmall mk-icon-rotated",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse-sm"]
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null))) : editable && !props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => !props2.multi && showMenu()
  }, i18n_default.labels.select)) : props2.editMode == -1 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item mk-cell-empty"
  }, /* @__PURE__ */ Cn.createElement("div", null, i18n_default.menu.none)) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), editable && props2.multi ? /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => editable && showMenu(),
    className: "mk-cell-option-new mk-icon-small",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/Space/Contexts/DataTypeView/ContextCell.tsx
var ContextCell = (props2) => {
  var _a2, _b2, _c2;
  const stringValueToLink = (strings) => strings.map((f4) => {
    return {
      label: parseLinkDisplayString(f4),
      path: parseLinkString(f4)
    };
  });
  const initialValue = stringValueToLink(
    props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]
  );
  const ref2 = _2(null);
  const options = stringValueToLink(
    (_c2 = (_b2 = props2.contextTable) == null ? void 0 : _b2.rows.map((f4) => f4[FilePropertyName])) != null ? _c2 : []
  ).map((f4) => ({
    name: f4.label,
    value: f4.path
  }));
  const [value, setValue] = h2(initialValue);
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4.path != v3.path);
    setValue(newValues);
    props2.saveValue(serializeMultiString(newValues.map((f4) => f4.path)));
  };
  p2(() => {
    var _a3;
    setValue(
      stringValueToLink(
        props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]
      )
    );
  }, [props2.initialValue]);
  const saveOptions = (_options, _value) => {
    insertContextItems(props2.plugin, _options, props2.contextTag);
    if (!props2.multi) {
      setValue(
        _value.map((f4) => ({
          path: f4,
          label: fileNameToString(folderPathToString(f4))
        }))
      );
      props2.saveValue(serializeMultiString(_value));
    } else {
      const newValue = _value[0];
      if (newValue) {
        const newValues = uniq([...value.map((f4) => f4.path), newValue]);
        setValue(
          newValues.map((f4) => ({
            label: fileNameToString(folderPathToString(f4)),
            path: f4
          }))
        );
        props2.saveValue(serializeMultiString(newValues));
      }
    }
  };
  const openLink = async (o3) => {
    const file = getAbstractFileAtPath(app, o3.path);
    if (file) {
      openAFile(file, props2.plugin, false);
    }
  };
  const menuProps = () => {
    const _options = !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options;
    return {
      plugin: props2.plugin,
      multi: false,
      editable: true,
      value: value.map((f4) => f4.path),
      options: _options,
      saveOptions,
      placeholder: i18n_default.labels.contextItemSelectPlaceholder,
      searchable: true,
      showAll: true,
      onHide: () => props2.setEditMode(null)
    };
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    baseClass: "mk-cell-context",
    menuProps,
    openItem: openLink,
    getLabelString: (o3) => o3.label,
    value,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};

// src/components/ui/menus/datePickerMenu.tsx
var import_obsidian23 = require("obsidian");
init_compat_module();

// node_modules/react-day-picker/dist/index.esm.js
init_compat_module();
init_compat_module();
var __assign = function() {
  __assign = Object.assign || function __assign5(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
function __rest(s5, e4) {
  var t4 = {};
  for (var p3 in s5)
    if (Object.prototype.hasOwnProperty.call(s5, p3) && e4.indexOf(p3) < 0)
      t4[p3] = s5[p3];
  if (s5 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p3 = Object.getOwnPropertySymbols(s5); i4 < p3.length; i4++) {
      if (e4.indexOf(p3[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s5, p3[i4]))
        t4[p3[i4]] = s5[p3[i4]];
    }
  return t4;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i4 = 0, l3 = from.length, ar; i4 < l3; i4++) {
      if (ar || !(i4 in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i4);
        ar[i4] = from[i4];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}
function isDayPickerMultiple(props2) {
  return props2.mode === "multiple";
}
function isDayPickerRange(props2) {
  return props2.mode === "range";
}
function isDayPickerSingle(props2) {
  return props2.mode === "single";
}
var defaultClassNames = {
  root: "rdp",
  multiple_months: "rdp-multiple_months",
  with_weeknumber: "rdp-with_weeknumber",
  vhidden: "rdp-vhidden",
  button_reset: "rdp-button_reset",
  button: "rdp-button",
  caption: "rdp-caption",
  caption_start: "rdp-caption_start",
  caption_end: "rdp-caption_end",
  caption_between: "rdp-caption_between",
  caption_label: "rdp-caption_label",
  caption_dropdowns: "rdp-caption_dropdowns",
  dropdown: "rdp-dropdown",
  dropdown_month: "rdp-dropdown_month",
  dropdown_year: "rdp-dropdown_year",
  dropdown_icon: "rdp-dropdown_icon",
  months: "rdp-months",
  month: "rdp-month",
  table: "rdp-table",
  tbody: "rdp-tbody",
  tfoot: "rdp-tfoot",
  head: "rdp-head",
  head_row: "rdp-head_row",
  head_cell: "rdp-head_cell",
  nav: "rdp-nav",
  nav_button: "rdp-nav_button",
  nav_button_previous: "rdp-nav_button_previous",
  nav_button_next: "rdp-nav_button_next",
  nav_icon: "rdp-nav_icon",
  row: "rdp-row",
  weeknumber: "rdp-weeknumber",
  cell: "rdp-cell",
  day: "rdp-day",
  day_today: "rdp-day_today",
  day_outside: "rdp-day_outside",
  day_selected: "rdp-day_selected",
  day_disabled: "rdp-day_disabled",
  day_hidden: "rdp-day_hidden",
  day_range_start: "rdp-day_range_start",
  day_range_end: "rdp-day_range_end",
  day_range_middle: "rdp-day_range_middle"
};
function formatCaption(month, options) {
  return format(month, "LLLL y", options);
}
function formatDay(day, options) {
  return format(day, "d", options);
}
function formatMonthCaption(month, options) {
  return format(month, "LLLL", options);
}
function formatWeekNumber(weekNumber) {
  return "".concat(weekNumber);
}
function formatWeekdayName(weekday, options) {
  return format(weekday, "cccccc", options).toUpperCase();
}
function formatYearCaption(year, options) {
  return format(year, "yyyy", options);
}
var formatters3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  formatCaption,
  formatDay,
  formatMonthCaption,
  formatWeekNumber,
  formatWeekdayName,
  formatYearCaption
});
var labelDay = function(day, activeModifiers, options) {
  return format(day, "do MMMM (EEEE)", options);
};
var labelMonthDropdown = function() {
  return "Month: ";
};
var labelNext = function() {
  return "Go to next month";
};
var labelPrevious = function() {
  return "Go to previous month";
};
var labelWeekday = function(day, options) {
  return format(day, "cccc", options);
};
var labelWeekNumber = function(n2) {
  return "Week n. ".concat(n2);
};
var labelYearDropdown = function() {
  return "Year: ";
};
var labels = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  labelDay,
  labelMonthDropdown,
  labelNext,
  labelPrevious,
  labelWeekNumber,
  labelWeekday,
  labelYearDropdown
});
function getDefaultContextValues() {
  var captionLayout = "buttons";
  var classNames9 = defaultClassNames;
  var locale2 = en_US_default;
  var modifiersClassNames = {};
  var modifiers = {};
  var numberOfMonths = 1;
  var styles2 = {};
  var today = new Date();
  return {
    captionLayout,
    classNames: classNames9,
    formatters: formatters3,
    labels,
    locale: locale2,
    modifiersClassNames,
    modifiers,
    numberOfMonths,
    styles: styles2,
    today,
    mode: "default"
  };
}
function parseFromToProps(props2) {
  var fromYear = props2.fromYear, toYear = props2.toYear, fromMonth = props2.fromMonth, toMonth = props2.toMonth;
  var fromDate = props2.fromDate, toDate2 = props2.toDate;
  if (fromMonth) {
    fromDate = startOfMonth(fromMonth);
  } else if (fromYear) {
    fromDate = new Date(fromYear, 0, 1);
  }
  if (toMonth) {
    toDate2 = endOfMonth(toMonth);
  } else if (toYear) {
    toDate2 = new Date(toYear, 11, 31);
  }
  return {
    fromDate: fromDate ? startOfDay(fromDate) : void 0,
    toDate: toDate2 ? startOfDay(toDate2) : void 0
  };
}
var DayPickerContext = F(void 0);
function DayPickerProvider(props2) {
  var _a2;
  var initialProps = props2.initialProps;
  var defaultContextValues = getDefaultContextValues();
  var _b2 = parseFromToProps(initialProps), fromDate = _b2.fromDate, toDate2 = _b2.toDate;
  var captionLayout = (_a2 = initialProps.captionLayout) !== null && _a2 !== void 0 ? _a2 : defaultContextValues.captionLayout;
  if (captionLayout !== "buttons" && (!fromDate || !toDate2)) {
    captionLayout = "buttons";
  }
  var onSelect;
  if (isDayPickerSingle(initialProps) || isDayPickerMultiple(initialProps) || isDayPickerRange(initialProps)) {
    onSelect = initialProps.onSelect;
  }
  var value = __assign(__assign(__assign({}, defaultContextValues), initialProps), { captionLayout, classNames: __assign(__assign({}, defaultContextValues.classNames), initialProps.classNames), components: __assign({}, initialProps.components), formatters: __assign(__assign({}, defaultContextValues.formatters), initialProps.formatters), fromDate, labels: __assign(__assign({}, defaultContextValues.labels), initialProps.labels), mode: initialProps.mode || defaultContextValues.mode, modifiers: __assign(__assign({}, defaultContextValues.modifiers), initialProps.modifiers), modifiersClassNames: __assign(__assign({}, defaultContextValues.modifiersClassNames), initialProps.modifiersClassNames), onSelect, styles: __assign(__assign({}, defaultContextValues.styles), initialProps.styles), toDate: toDate2 });
  return Cn.createElement(DayPickerContext.Provider, { value }, props2.children);
}
function useDayPicker() {
  var context = q2(DayPickerContext);
  if (!context) {
    throw new Error("useDayPicker must be used within a DayPickerProvider.");
  }
  return context;
}
function CaptionLabel(props2) {
  var _a2 = useDayPicker(), locale2 = _a2.locale, classNames9 = _a2.classNames, styles2 = _a2.styles, formatCaption2 = _a2.formatters.formatCaption;
  return Cn.createElement("div", { className: classNames9.caption_label, style: styles2.caption_label, "aria-live": "polite", role: "presentation", id: props2.id }, formatCaption2(props2.displayMonth, { locale: locale2 }));
}
function IconDropdown(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "8px", height: "8px", viewBox: "0 0 120 120", "data-testid": "iconDropdown" }, props2),
    Cn.createElement("path", { d: "M4.22182541,48.2218254 C8.44222828,44.0014225 15.2388494,43.9273804 19.5496459,47.9996989 L19.7781746,48.2218254 L60,88.443 L100.221825,48.2218254 C104.442228,44.0014225 111.238849,43.9273804 115.549646,47.9996989 L115.778175,48.2218254 C119.998577,52.4422283 120.07262,59.2388494 116.000301,63.5496459 L115.778175,63.7781746 L67.7781746,111.778175 C63.5577717,115.998577 56.7611506,116.07262 52.4503541,112.000301 L52.2218254,111.778175 L4.22182541,63.7781746 C-0.0739418023,59.4824074 -0.0739418023,52.5175926 4.22182541,48.2218254 Z", fill: "currentColor", fillRule: "nonzero" })
  );
}
function Dropdown(props2) {
  var _a2, _b2;
  var onChange = props2.onChange, value = props2.value, children = props2.children, caption = props2.caption, className = props2.className, style = props2.style;
  var dayPicker = useDayPicker();
  var IconDropdownComponent = (_b2 = (_a2 = dayPicker.components) === null || _a2 === void 0 ? void 0 : _a2.IconDropdown) !== null && _b2 !== void 0 ? _b2 : IconDropdown;
  return Cn.createElement(
    "div",
    { className, style },
    Cn.createElement("span", { className: dayPicker.classNames.vhidden }, props2["aria-label"]),
    Cn.createElement("select", { name: props2.name, "aria-label": props2["aria-label"], className: dayPicker.classNames.dropdown, style: dayPicker.styles.dropdown, value, onChange }, children),
    Cn.createElement(
      "div",
      { className: dayPicker.classNames.caption_label, style: dayPicker.styles.caption_label, "aria-hidden": "true" },
      caption,
      Cn.createElement(IconDropdownComponent, { className: dayPicker.classNames.dropdown_icon, style: dayPicker.styles.dropdown_icon })
    )
  );
}
function MonthsDropdown(props2) {
  var _a2;
  var _b2 = useDayPicker(), fromDate = _b2.fromDate, toDate2 = _b2.toDate, styles2 = _b2.styles, locale2 = _b2.locale, formatMonthCaption2 = _b2.formatters.formatMonthCaption, classNames9 = _b2.classNames, components = _b2.components, labelMonthDropdown2 = _b2.labels.labelMonthDropdown;
  if (!fromDate)
    return Cn.createElement(Cn.Fragment, null);
  if (!toDate2)
    return Cn.createElement(Cn.Fragment, null);
  var dropdownMonths = [];
  if (isSameYear(fromDate, toDate2)) {
    var date = startOfMonth(fromDate);
    for (var month = fromDate.getMonth(); month <= toDate2.getMonth(); month++) {
      dropdownMonths.push(setMonth(date, month));
    }
  } else {
    var date = startOfMonth(new Date());
    for (var month = 0; month <= 11; month++) {
      dropdownMonths.push(setMonth(date, month));
    }
  }
  var handleChange = function(e4) {
    var selectedMonth = Number(e4.target.value);
    var newMonth = setMonth(startOfMonth(props2.displayMonth), selectedMonth);
    props2.onChange(newMonth);
  };
  var DropdownComponent2 = (_a2 = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a2 !== void 0 ? _a2 : Dropdown;
  return Cn.createElement(DropdownComponent2, { name: "months", "aria-label": labelMonthDropdown2(), className: classNames9.dropdown_month, style: styles2.dropdown_month, onChange: handleChange, value: props2.displayMonth.getMonth(), caption: formatMonthCaption2(props2.displayMonth, { locale: locale2 }) }, dropdownMonths.map(function(m5) {
    return Cn.createElement("option", { key: m5.getMonth(), value: m5.getMonth() }, formatMonthCaption2(m5, { locale: locale2 }));
  }));
}
function YearsDropdown(props2) {
  var _a2;
  var displayMonth = props2.displayMonth;
  var _b2 = useDayPicker(), fromDate = _b2.fromDate, toDate2 = _b2.toDate, locale2 = _b2.locale, styles2 = _b2.styles, classNames9 = _b2.classNames, components = _b2.components, formatYearCaption2 = _b2.formatters.formatYearCaption, labelYearDropdown2 = _b2.labels.labelYearDropdown;
  var years = [];
  if (!fromDate)
    return Cn.createElement(Cn.Fragment, null);
  if (!toDate2)
    return Cn.createElement(Cn.Fragment, null);
  var fromYear = fromDate.getFullYear();
  var toYear = toDate2.getFullYear();
  for (var year = fromYear; year <= toYear; year++) {
    years.push(setYear(startOfYear(new Date()), year));
  }
  var handleChange = function(e4) {
    var newMonth = setYear(startOfMonth(displayMonth), Number(e4.target.value));
    props2.onChange(newMonth);
  };
  var DropdownComponent2 = (_a2 = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a2 !== void 0 ? _a2 : Dropdown;
  return Cn.createElement(DropdownComponent2, { name: "years", "aria-label": labelYearDropdown2(), className: classNames9.dropdown_year, style: styles2.dropdown_year, onChange: handleChange, value: displayMonth.getFullYear(), caption: formatYearCaption2(displayMonth, { locale: locale2 }) }, years.map(function(year2) {
    return Cn.createElement("option", { key: year2.getFullYear(), value: year2.getFullYear() }, formatYearCaption2(year2, { locale: locale2 }));
  }));
}
function useControlledValue(defaultValue2, controlledValue) {
  var _a2 = h2(defaultValue2), uncontrolledValue = _a2[0], setValue = _a2[1];
  var value = controlledValue === void 0 ? uncontrolledValue : controlledValue;
  return [value, setValue];
}
function getInitialMonth(context) {
  var month = context.month, defaultMonth = context.defaultMonth, today = context.today;
  var initialMonth = month || defaultMonth || today || new Date();
  var toDate2 = context.toDate, fromDate = context.fromDate, _a2 = context.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  if (toDate2 && differenceInCalendarMonths(toDate2, initialMonth) < 0) {
    var offset2 = -1 * (numberOfMonths - 1);
    initialMonth = addMonths(toDate2, offset2);
  }
  if (fromDate && differenceInCalendarMonths(initialMonth, fromDate) < 0) {
    initialMonth = fromDate;
  }
  return startOfMonth(initialMonth);
}
function useNavigationState() {
  var context = useDayPicker();
  var initialMonth = getInitialMonth(context);
  var _a2 = useControlledValue(initialMonth, context.month), month = _a2[0], setMonth2 = _a2[1];
  var goToMonth = function(date) {
    var _a3;
    if (context.disableNavigation)
      return;
    var month2 = startOfMonth(date);
    setMonth2(month2);
    (_a3 = context.onMonthChange) === null || _a3 === void 0 ? void 0 : _a3.call(context, month2);
  };
  return [month, goToMonth];
}
function getDisplayMonths(month, _a2) {
  var reverseMonths = _a2.reverseMonths, numberOfMonths = _a2.numberOfMonths;
  var start = startOfMonth(month);
  var end = startOfMonth(addMonths(start, numberOfMonths));
  var monthsDiff = differenceInCalendarMonths(end, start);
  var months = [];
  for (var i4 = 0; i4 < monthsDiff; i4++) {
    var nextMonth = addMonths(start, i4);
    months.push(nextMonth);
  }
  if (reverseMonths)
    months = months.reverse();
  return months;
}
function getNextMonth(startingMonth, options) {
  if (options.disableNavigation) {
    return void 0;
  }
  var toDate2 = options.toDate, pagedNavigation = options.pagedNavigation, _a2 = options.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  var offset2 = pagedNavigation ? numberOfMonths : 1;
  var month = startOfMonth(startingMonth);
  if (!toDate2) {
    return addMonths(month, offset2);
  }
  var monthsDiff = differenceInCalendarMonths(toDate2, startingMonth);
  if (monthsDiff < numberOfMonths) {
    return void 0;
  }
  return addMonths(month, offset2);
}
function getPreviousMonth(startingMonth, options) {
  if (options.disableNavigation) {
    return void 0;
  }
  var fromDate = options.fromDate, pagedNavigation = options.pagedNavigation, _a2 = options.numberOfMonths, numberOfMonths = _a2 === void 0 ? 1 : _a2;
  var offset2 = pagedNavigation ? numberOfMonths : 1;
  var month = startOfMonth(startingMonth);
  if (!fromDate) {
    return addMonths(month, -offset2);
  }
  var monthsDiff = differenceInCalendarMonths(month, fromDate);
  if (monthsDiff <= 0) {
    return void 0;
  }
  return addMonths(month, -offset2);
}
var NavigationContext = F(void 0);
function NavigationProvider(props2) {
  var dayPicker = useDayPicker();
  var _a2 = useNavigationState(), currentMonth = _a2[0], goToMonth = _a2[1];
  var displayMonths = getDisplayMonths(currentMonth, dayPicker);
  var nextMonth = getNextMonth(currentMonth, dayPicker);
  var previousMonth = getPreviousMonth(currentMonth, dayPicker);
  var isDateDisplayed = function(date) {
    return displayMonths.some(function(displayMonth) {
      return isSameMonth(date, displayMonth);
    });
  };
  var goToDate = function(date, refDate) {
    if (isDateDisplayed(date)) {
      return;
    }
    if (refDate && isBefore(date, refDate)) {
      goToMonth(addMonths(date, 1 + dayPicker.numberOfMonths * -1));
    } else {
      goToMonth(date);
    }
  };
  var value = {
    currentMonth,
    displayMonths,
    goToMonth,
    goToDate,
    previousMonth,
    nextMonth,
    isDateDisplayed
  };
  return Cn.createElement(NavigationContext.Provider, { value }, props2.children);
}
function useNavigation() {
  var context = q2(NavigationContext);
  if (!context) {
    throw new Error("useNavigation must be used within a NavigationProvider");
  }
  return context;
}
function CaptionDropdowns(props2) {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, styles2 = _b2.styles, components = _b2.components;
  var goToMonth = useNavigation().goToMonth;
  var handleMonthChange = function(newMonth) {
    goToMonth(newMonth);
  };
  var CaptionLabelComponent = (_a2 = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a2 !== void 0 ? _a2 : CaptionLabel;
  var captionLabel = Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth });
  return Cn.createElement(
    "div",
    { className: classNames9.caption_dropdowns, style: styles2.caption_dropdowns },
    Cn.createElement("div", { className: classNames9.vhidden }, captionLabel),
    Cn.createElement(MonthsDropdown, { onChange: handleMonthChange, displayMonth: props2.displayMonth }),
    Cn.createElement(YearsDropdown, { onChange: handleMonthChange, displayMonth: props2.displayMonth })
  );
}
function IconLeft(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "16px", height: "16px", viewBox: "0 0 120 120" }, props2),
    Cn.createElement("path", { d: "M69.490332,3.34314575 C72.6145263,0.218951416 77.6798462,0.218951416 80.8040405,3.34314575 C83.8617626,6.40086786 83.9268205,11.3179931 80.9992143,14.4548388 L80.8040405,14.6568542 L35.461,60 L80.8040405,105.343146 C83.8617626,108.400868 83.9268205,113.317993 80.9992143,116.454839 L80.8040405,116.656854 C77.7463184,119.714576 72.8291931,119.779634 69.6923475,116.852028 L69.490332,116.656854 L18.490332,65.6568542 C15.4326099,62.5991321 15.367552,57.6820069 18.2951583,54.5451612 L18.490332,54.3431458 L69.490332,3.34314575 Z", fill: "currentColor", fillRule: "nonzero" })
  );
}
function IconRight(props2) {
  return Cn.createElement(
    "svg",
    __assign({ width: "16px", height: "16px", viewBox: "0 0 120 120" }, props2),
    Cn.createElement("path", { d: "M49.8040405,3.34314575 C46.6798462,0.218951416 41.6145263,0.218951416 38.490332,3.34314575 C35.4326099,6.40086786 35.367552,11.3179931 38.2951583,14.4548388 L38.490332,14.6568542 L83.8333725,60 L38.490332,105.343146 C35.4326099,108.400868 35.367552,113.317993 38.2951583,116.454839 L38.490332,116.656854 C41.5480541,119.714576 46.4651794,119.779634 49.602025,116.852028 L49.8040405,116.656854 L100.804041,65.6568542 C103.861763,62.5991321 103.926821,57.6820069 100.999214,54.5451612 L100.804041,54.3431458 L49.8040405,3.34314575 Z", fill: "currentColor" })
  );
}
var Button = k3(function(props2, ref2) {
  var _a2 = useDayPicker(), classNames9 = _a2.classNames, styles2 = _a2.styles;
  var classNamesArr = [classNames9.button_reset, classNames9.button];
  if (props2.className) {
    classNamesArr.push(props2.className);
  }
  var className = classNamesArr.join(" ");
  var style = __assign(__assign({}, styles2.button_reset), styles2.button);
  if (props2.style) {
    Object.assign(style, props2.style);
  }
  return Cn.createElement("button", __assign({}, props2, { ref: ref2, type: "button", className, style }));
});
function Navigation(props2) {
  var _a2, _b2;
  var _c2 = useDayPicker(), dir = _c2.dir, locale2 = _c2.locale, classNames9 = _c2.classNames, styles2 = _c2.styles, _d2 = _c2.labels, labelPrevious2 = _d2.labelPrevious, labelNext2 = _d2.labelNext, components = _c2.components;
  if (!props2.nextMonth && !props2.previousMonth) {
    return Cn.createElement(Cn.Fragment, null);
  }
  var previousLabel = labelPrevious2(props2.previousMonth, { locale: locale2 });
  var previousClassName = [
    classNames9.nav_button,
    classNames9.nav_button_previous
  ].join(" ");
  var nextLabel = labelNext2(props2.nextMonth, { locale: locale2 });
  var nextClassName = [
    classNames9.nav_button,
    classNames9.nav_button_next
  ].join(" ");
  var IconRightComponent = (_a2 = components === null || components === void 0 ? void 0 : components.IconRight) !== null && _a2 !== void 0 ? _a2 : IconRight;
  var IconLeftComponent = (_b2 = components === null || components === void 0 ? void 0 : components.IconLeft) !== null && _b2 !== void 0 ? _b2 : IconLeft;
  return Cn.createElement(
    "div",
    { className: classNames9.nav, style: styles2.nav },
    !props2.hidePrevious && Cn.createElement(Button, { name: "previous-month", "aria-label": previousLabel, className: previousClassName, style: styles2.nav_button_previous, disabled: !props2.previousMonth, onClick: props2.onPreviousClick }, dir === "rtl" ? Cn.createElement(IconRightComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }) : Cn.createElement(IconLeftComponent, { className: classNames9.nav_icon, style: styles2.nav_icon })),
    !props2.hideNext && Cn.createElement(Button, { name: "next-month", "aria-label": nextLabel, className: nextClassName, style: styles2.nav_button_next, disabled: !props2.nextMonth, onClick: props2.onNextClick }, dir === "rtl" ? Cn.createElement(IconLeftComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }) : Cn.createElement(IconRightComponent, { className: classNames9.nav_icon, style: styles2.nav_icon }))
  );
}
function CaptionNavigation(props2) {
  var _a2;
  var _b2 = useDayPicker(), numberOfMonths = _b2.numberOfMonths, dir = _b2.dir;
  var _c2 = useNavigation(), previousMonth = _c2.previousMonth, nextMonth = _c2.nextMonth, goToMonth = _c2.goToMonth, displayMonths = _c2.displayMonths;
  var displayIndex = displayMonths.findIndex(function(month) {
    return isSameMonth(props2.displayMonth, month);
  });
  var isFirst = displayIndex === 0;
  var isLast = displayIndex === displayMonths.length - 1;
  if (dir === "rtl") {
    _a2 = [isFirst, isLast], isLast = _a2[0], isFirst = _a2[1];
  }
  var hideNext = numberOfMonths > 1 && (isFirst || !isLast);
  var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);
  var handlePreviousClick = function() {
    if (!previousMonth)
      return;
    goToMonth(previousMonth);
  };
  var handleNextClick = function() {
    if (!nextMonth)
      return;
    goToMonth(nextMonth);
  };
  return Cn.createElement(Navigation, { displayMonth: props2.displayMonth, hideNext, hidePrevious, nextMonth, previousMonth, onPreviousClick: handlePreviousClick, onNextClick: handleNextClick });
}
function Caption(props2) {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, disableNavigation = _b2.disableNavigation, styles2 = _b2.styles, captionLayout = _b2.captionLayout, components = _b2.components;
  var CaptionLabelComponent = (_a2 = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a2 !== void 0 ? _a2 : CaptionLabel;
  var caption;
  if (disableNavigation) {
    caption = Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth });
  } else if (captionLayout === "dropdown") {
    caption = Cn.createElement(CaptionDropdowns, { displayMonth: props2.displayMonth, id: props2.id });
  } else if (captionLayout === "dropdown-buttons") {
    caption = Cn.createElement(
      Cn.Fragment,
      null,
      Cn.createElement(CaptionDropdowns, { displayMonth: props2.displayMonth, id: props2.id }),
      Cn.createElement(CaptionNavigation, { displayMonth: props2.displayMonth, id: props2.id })
    );
  } else {
    caption = Cn.createElement(
      Cn.Fragment,
      null,
      Cn.createElement(CaptionLabelComponent, { id: props2.id, displayMonth: props2.displayMonth }),
      Cn.createElement(CaptionNavigation, { displayMonth: props2.displayMonth, id: props2.id })
    );
  }
  return Cn.createElement("div", { className: classNames9.caption, style: styles2.caption }, caption);
}
function Footer(props2) {
  var _a2 = useDayPicker(), footer = _a2.footer, styles2 = _a2.styles, tfoot = _a2.classNames.tfoot;
  if (!footer)
    return Cn.createElement(Cn.Fragment, null);
  return Cn.createElement(
    "tfoot",
    { className: tfoot, style: styles2.tfoot },
    Cn.createElement(
      "tr",
      null,
      Cn.createElement("td", { colSpan: 8 }, footer)
    )
  );
}
function getWeekdays(locale2, weekStartsOn, ISOWeek) {
  var start = ISOWeek ? startOfISOWeek(new Date()) : startOfWeek(new Date(), { locale: locale2, weekStartsOn });
  var days = [];
  for (var i4 = 0; i4 < 7; i4++) {
    var day = addDays(start, i4);
    days.push(day);
  }
  return days;
}
function HeadRow() {
  var _a2 = useDayPicker(), classNames9 = _a2.classNames, styles2 = _a2.styles, showWeekNumber = _a2.showWeekNumber, locale2 = _a2.locale, weekStartsOn = _a2.weekStartsOn, ISOWeek = _a2.ISOWeek, formatWeekdayName2 = _a2.formatters.formatWeekdayName, labelWeekday2 = _a2.labels.labelWeekday;
  var weekdays = getWeekdays(locale2, weekStartsOn, ISOWeek);
  return Cn.createElement(
    "tr",
    { style: styles2.head_row, className: classNames9.head_row },
    showWeekNumber && Cn.createElement("th", { scope: "col", style: styles2.head_cell, className: classNames9.head_cell }),
    weekdays.map(function(weekday, i4) {
      return Cn.createElement("th", { key: i4, scope: "col", className: classNames9.head_cell, style: styles2.head_cell, "aria-label": labelWeekday2(weekday, { locale: locale2 }) }, formatWeekdayName2(weekday, { locale: locale2 }));
    })
  );
}
function Head() {
  var _a2;
  var _b2 = useDayPicker(), classNames9 = _b2.classNames, styles2 = _b2.styles, components = _b2.components;
  var HeadRowComponent = (_a2 = components === null || components === void 0 ? void 0 : components.HeadRow) !== null && _a2 !== void 0 ? _a2 : HeadRow;
  return Cn.createElement(
    "thead",
    { style: styles2.head, className: classNames9.head },
    Cn.createElement(HeadRowComponent, null)
  );
}
function DayContent(props2) {
  var _a2 = useDayPicker(), locale2 = _a2.locale, formatDay2 = _a2.formatters.formatDay;
  return Cn.createElement(Cn.Fragment, null, formatDay2(props2.date, { locale: locale2 }));
}
var SelectMultipleContext = F(void 0);
function SelectMultipleProvider(props2) {
  if (!isDayPickerMultiple(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0,
      modifiers: {
        disabled: []
      }
    };
    return Cn.createElement(SelectMultipleContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectMultipleProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectMultipleProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var selected = initialProps.selected, min3 = initialProps.min, max3 = initialProps.max;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b2;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    var isMinSelected = Boolean(activeModifiers.selected && min3 && (selected === null || selected === void 0 ? void 0 : selected.length) === min3);
    if (isMinSelected) {
      return;
    }
    var isMaxSelected = Boolean(!activeModifiers.selected && max3 && (selected === null || selected === void 0 ? void 0 : selected.length) === max3);
    if (isMaxSelected) {
      return;
    }
    var selectedDays = selected ? __spreadArray([], selected, true) : [];
    if (activeModifiers.selected) {
      var index = selectedDays.findIndex(function(selectedDay) {
        return isSameDay(day, selectedDay);
      });
      selectedDays.splice(index, 1);
    } else {
      selectedDays.push(day);
    }
    (_b2 = initialProps.onSelect) === null || _b2 === void 0 ? void 0 : _b2.call(initialProps, selectedDays, day, activeModifiers, e4);
  };
  var modifiers = {
    disabled: []
  };
  if (selected) {
    modifiers.disabled.push(function(day) {
      var isMaxSelected = max3 && selected.length > max3 - 1;
      var isSelected = selected.some(function(selectedDay) {
        return isSameDay(selectedDay, day);
      });
      return Boolean(isMaxSelected && !isSelected);
    });
  }
  var contextValue = {
    selected,
    onDayClick,
    modifiers
  };
  return Cn.createElement(SelectMultipleContext.Provider, { value: contextValue }, children);
}
function useSelectMultiple() {
  var context = q2(SelectMultipleContext);
  if (!context) {
    throw new Error("useSelectMultiple must be used within a SelectMultipleProvider");
  }
  return context;
}
function addToRange(day, range) {
  var _a2 = range || {}, from = _a2.from, to = _a2.to;
  if (!from) {
    return { from: day, to: void 0 };
  }
  if (!to && isSameDay(from, day)) {
    return { from, to: day };
  }
  if (!to && isBefore(day, from)) {
    return { from: day, to: from };
  }
  if (!to) {
    return { from, to: day };
  }
  if (isSameDay(to, day) && isSameDay(from, day)) {
    return void 0;
  }
  if (isSameDay(to, day)) {
    return { from: to, to: void 0 };
  }
  if (isSameDay(from, day)) {
    return void 0;
  }
  if (isAfter2(from, day)) {
    return { from: day, to };
  }
  return { from, to: day };
}
var SelectRangeContext = F(void 0);
function SelectRangeProvider(props2) {
  if (!isDayPickerRange(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0,
      modifiers: {
        range_start: [],
        range_end: [],
        range_middle: [],
        disabled: []
      }
    };
    return Cn.createElement(SelectRangeContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectRangeProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectRangeProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var selected = initialProps.selected;
  var _b2 = selected || {}, selectedFrom = _b2.from, selectedTo = _b2.to;
  var min3 = initialProps.min;
  var max3 = initialProps.max;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b3;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    var newRange = addToRange(day, selected);
    (_b3 = initialProps.onSelect) === null || _b3 === void 0 ? void 0 : _b3.call(initialProps, newRange, day, activeModifiers, e4);
  };
  var modifiers = {
    range_start: [],
    range_end: [],
    range_middle: [],
    disabled: []
  };
  if (selectedFrom) {
    modifiers.range_start = [selectedFrom];
    if (!selectedTo) {
      modifiers.range_end = [selectedFrom];
    } else {
      modifiers.range_end = [selectedTo];
      if (!isSameDay(selectedFrom, selectedTo)) {
        modifiers.range_middle = [
          {
            after: selectedFrom,
            before: selectedTo
          }
        ];
      }
    }
  }
  if (min3) {
    if (selectedFrom && !selectedTo) {
      modifiers.disabled.push({
        after: subDays(selectedFrom, min3 - 1),
        before: addDays(selectedFrom, min3 - 1)
      });
    }
    if (selectedFrom && selectedTo) {
      modifiers.disabled.push({
        after: selectedFrom,
        before: addDays(selectedFrom, min3 - 1)
      });
    }
  }
  if (max3) {
    if (selectedFrom && !selectedTo) {
      modifiers.disabled.push({
        before: addDays(selectedFrom, -max3 + 1)
      });
      modifiers.disabled.push({
        after: addDays(selectedFrom, max3 - 1)
      });
    }
    if (selectedFrom && selectedTo) {
      var selectedCount = differenceInCalendarDays(selectedTo, selectedFrom) + 1;
      var offset2 = max3 - selectedCount;
      modifiers.disabled.push({
        before: subDays(selectedFrom, offset2)
      });
      modifiers.disabled.push({
        after: addDays(selectedTo, offset2)
      });
    }
  }
  return Cn.createElement(SelectRangeContext.Provider, { value: { selected, onDayClick, modifiers } }, children);
}
function useSelectRange() {
  var context = q2(SelectRangeContext);
  if (!context) {
    throw new Error("useSelectRange must be used within a SelectRangeProvider");
  }
  return context;
}
function matcherToArray(matcher) {
  if (Array.isArray(matcher)) {
    return __spreadArray([], matcher, true);
  } else if (matcher !== void 0) {
    return [matcher];
  } else {
    return [];
  }
}
function getCustomModifiers(dayModifiers) {
  var customModifiers = {};
  Object.entries(dayModifiers).forEach(function(_a2) {
    var modifier = _a2[0], matcher = _a2[1];
    customModifiers[modifier] = matcherToArray(matcher);
  });
  return customModifiers;
}
var InternalModifier;
(function(InternalModifier2) {
  InternalModifier2["Outside"] = "outside";
  InternalModifier2["Disabled"] = "disabled";
  InternalModifier2["Selected"] = "selected";
  InternalModifier2["Hidden"] = "hidden";
  InternalModifier2["Today"] = "today";
  InternalModifier2["RangeStart"] = "range_start";
  InternalModifier2["RangeEnd"] = "range_end";
  InternalModifier2["RangeMiddle"] = "range_middle";
})(InternalModifier || (InternalModifier = {}));
var Selected = InternalModifier.Selected;
var Disabled = InternalModifier.Disabled;
var Hidden = InternalModifier.Hidden;
var Today = InternalModifier.Today;
var RangeEnd = InternalModifier.RangeEnd;
var RangeMiddle = InternalModifier.RangeMiddle;
var RangeStart = InternalModifier.RangeStart;
var Outside2 = InternalModifier.Outside;
function getInternalModifiers(dayPicker, selectMultiple, selectRange2) {
  var _a2;
  var internalModifiers = (_a2 = {}, _a2[Selected] = matcherToArray(dayPicker.selected), _a2[Disabled] = matcherToArray(dayPicker.disabled), _a2[Hidden] = matcherToArray(dayPicker.hidden), _a2[Today] = [dayPicker.today], _a2[RangeEnd] = [], _a2[RangeMiddle] = [], _a2[RangeStart] = [], _a2[Outside2] = [], _a2);
  if (dayPicker.fromDate) {
    internalModifiers[Disabled].push({ before: dayPicker.fromDate });
  }
  if (dayPicker.toDate) {
    internalModifiers[Disabled].push({ after: dayPicker.toDate });
  }
  if (isDayPickerMultiple(dayPicker)) {
    internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectMultiple.modifiers[Disabled]);
  } else if (isDayPickerRange(dayPicker)) {
    internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectRange2.modifiers[Disabled]);
    internalModifiers[RangeStart] = selectRange2.modifiers[RangeStart];
    internalModifiers[RangeMiddle] = selectRange2.modifiers[RangeMiddle];
    internalModifiers[RangeEnd] = selectRange2.modifiers[RangeEnd];
  }
  return internalModifiers;
}
var ModifiersContext = F(void 0);
function ModifiersProvider(props2) {
  var dayPicker = useDayPicker();
  var selectMultiple = useSelectMultiple();
  var selectRange2 = useSelectRange();
  var internalModifiers = getInternalModifiers(dayPicker, selectMultiple, selectRange2);
  var customModifiers = getCustomModifiers(dayPicker.modifiers);
  var modifiers = __assign(__assign({}, internalModifiers), customModifiers);
  return Cn.createElement(ModifiersContext.Provider, { value: modifiers }, props2.children);
}
function useModifiers() {
  var context = q2(ModifiersContext);
  if (!context) {
    throw new Error("useModifiers must be used within a ModifiersProvider");
  }
  return context;
}
function isDateInterval(matcher) {
  return Boolean(matcher && typeof matcher === "object" && "before" in matcher && "after" in matcher);
}
function isDateRange(value) {
  return Boolean(value && typeof value === "object" && "from" in value);
}
function isDateAfterType(value) {
  return Boolean(value && typeof value === "object" && "after" in value);
}
function isDateBeforeType(value) {
  return Boolean(value && typeof value === "object" && "before" in value);
}
function isDayOfWeekType(value) {
  return Boolean(value && typeof value === "object" && "dayOfWeek" in value);
}
function isDateInRange(date, range) {
  var _a2;
  var from = range.from, to = range.to;
  if (!from) {
    return false;
  }
  if (!to && isSameDay(from, date)) {
    return true;
  }
  if (!to) {
    return false;
  }
  var isRangeInverted = differenceInCalendarDays(to, from) < 0;
  if (isRangeInverted) {
    _a2 = [to, from], from = _a2[0], to = _a2[1];
  }
  var isInRange = differenceInCalendarDays(date, from) >= 0 && differenceInCalendarDays(to, date) >= 0;
  return isInRange;
}
function isDateType(value) {
  return isDate(value);
}
function isArrayOfDates(value) {
  return Array.isArray(value) && value.every(isDate);
}
function isMatch(day, matchers2) {
  return matchers2.some(function(matcher) {
    if (typeof matcher === "boolean") {
      return matcher;
    }
    if (isDateType(matcher)) {
      return isSameDay(day, matcher);
    }
    if (isArrayOfDates(matcher)) {
      return matcher.includes(day);
    }
    if (isDateRange(matcher)) {
      return isDateInRange(day, matcher);
    }
    if (isDayOfWeekType(matcher)) {
      return matcher.dayOfWeek.includes(day.getDay());
    }
    if (isDateInterval(matcher)) {
      var diffBefore = differenceInCalendarDays(matcher.before, day);
      var diffAfter = differenceInCalendarDays(matcher.after, day);
      var isDayBefore = diffBefore > 0;
      var isDayAfter = diffAfter < 0;
      var isClosedInterval = isAfter2(matcher.before, matcher.after);
      if (isClosedInterval) {
        return isDayAfter && isDayBefore;
      } else {
        return isDayBefore || isDayAfter;
      }
    }
    if (isDateAfterType(matcher)) {
      return differenceInCalendarDays(day, matcher.after) > 0;
    }
    if (isDateBeforeType(matcher)) {
      return differenceInCalendarDays(matcher.before, day) > 0;
    }
    if (typeof matcher === "function") {
      return matcher(day);
    }
    return false;
  });
}
function getActiveModifiers(day, modifiers, displayMonth) {
  var matchedModifiers = Object.keys(modifiers).reduce(function(result, key2) {
    var modifier = modifiers[key2];
    if (isMatch(day, modifier)) {
      result.push(key2);
    }
    return result;
  }, []);
  var activeModifiers = {};
  matchedModifiers.forEach(function(modifier) {
    return activeModifiers[modifier] = true;
  });
  if (displayMonth && !isSameMonth(day, displayMonth)) {
    activeModifiers.outside = true;
  }
  return activeModifiers;
}
function getInitialFocusTarget(displayMonths, modifiers) {
  var firstDayInMonth = startOfMonth(displayMonths[0]);
  var lastDayInMonth = endOfMonth(displayMonths[displayMonths.length - 1]);
  var firstFocusableDay;
  var today;
  var date = firstDayInMonth;
  while (date <= lastDayInMonth) {
    var activeModifiers = getActiveModifiers(date, modifiers);
    var isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;
    if (!isFocusable) {
      date = addDays(date, 1);
      continue;
    }
    if (activeModifiers.selected) {
      return date;
    }
    if (activeModifiers.today && !today) {
      today = date;
    }
    if (!firstFocusableDay) {
      firstFocusableDay = date;
    }
    date = addDays(date, 1);
  }
  if (today) {
    return today;
  } else {
    return firstFocusableDay;
  }
}
var MAX_RETRY = 365;
function getNextFocus(focusedDay, options) {
  var moveBy = options.moveBy, direction = options.direction, context = options.context, modifiers = options.modifiers, _a2 = options.retry, retry = _a2 === void 0 ? { count: 0, lastFocused: focusedDay } : _a2;
  var weekStartsOn = context.weekStartsOn, fromDate = context.fromDate, toDate2 = context.toDate, locale2 = context.locale;
  var moveFns = {
    day: addDays,
    week: addWeeks,
    month: addMonths,
    year: addYears,
    startOfWeek: function(date) {
      return context.ISOWeek ? startOfISOWeek(date) : startOfWeek(date, { locale: locale2, weekStartsOn });
    },
    endOfWeek: function(date) {
      return context.ISOWeek ? endOfISOWeek(date) : endOfWeek(date, { locale: locale2, weekStartsOn });
    }
  };
  var newFocusedDay = moveFns[moveBy](focusedDay, direction === "after" ? 1 : -1);
  if (direction === "before" && fromDate) {
    newFocusedDay = max([fromDate, newFocusedDay]);
  } else if (direction === "after" && toDate2) {
    newFocusedDay = min([toDate2, newFocusedDay]);
  }
  var isFocusable = true;
  if (modifiers) {
    var activeModifiers = getActiveModifiers(newFocusedDay, modifiers);
    isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;
  }
  if (isFocusable) {
    return newFocusedDay;
  } else {
    if (retry.count > MAX_RETRY) {
      return retry.lastFocused;
    }
    return getNextFocus(newFocusedDay, {
      moveBy,
      direction,
      context,
      modifiers,
      retry: __assign(__assign({}, retry), { count: retry.count + 1 })
    });
  }
}
var FocusContext = F(void 0);
function FocusProvider(props2) {
  var navigation = useNavigation();
  var modifiers = useModifiers();
  var _a2 = h2(), focusedDay = _a2[0], setFocusedDay = _a2[1];
  var _b2 = h2(), lastFocused = _b2[0], setLastFocused = _b2[1];
  var initialFocusTarget = getInitialFocusTarget(navigation.displayMonths, modifiers);
  var focusTarget = (focusedDay !== null && focusedDay !== void 0 ? focusedDay : lastFocused && navigation.isDateDisplayed(lastFocused)) ? lastFocused : initialFocusTarget;
  var blur = function() {
    setLastFocused(focusedDay);
    setFocusedDay(void 0);
  };
  var focus = function(date) {
    setFocusedDay(date);
  };
  var context = useDayPicker();
  var moveFocus = function(moveBy, direction) {
    if (!focusedDay)
      return;
    var nextFocused = getNextFocus(focusedDay, {
      moveBy,
      direction,
      context,
      modifiers
    });
    if (isSameDay(focusedDay, nextFocused))
      return void 0;
    navigation.goToDate(nextFocused, focusedDay);
    focus(nextFocused);
  };
  var value = {
    focusedDay,
    focusTarget,
    blur,
    focus,
    focusDayAfter: function() {
      return moveFocus("day", "after");
    },
    focusDayBefore: function() {
      return moveFocus("day", "before");
    },
    focusWeekAfter: function() {
      return moveFocus("week", "after");
    },
    focusWeekBefore: function() {
      return moveFocus("week", "before");
    },
    focusMonthBefore: function() {
      return moveFocus("month", "before");
    },
    focusMonthAfter: function() {
      return moveFocus("month", "after");
    },
    focusYearBefore: function() {
      return moveFocus("year", "before");
    },
    focusYearAfter: function() {
      return moveFocus("year", "after");
    },
    focusStartOfWeek: function() {
      return moveFocus("startOfWeek", "before");
    },
    focusEndOfWeek: function() {
      return moveFocus("endOfWeek", "after");
    }
  };
  return Cn.createElement(FocusContext.Provider, { value }, props2.children);
}
function useFocusContext() {
  var context = q2(FocusContext);
  if (!context) {
    throw new Error("useFocusContext must be used within a FocusProvider");
  }
  return context;
}
function useActiveModifiers(day, displayMonth) {
  var modifiers = useModifiers();
  var activeModifiers = getActiveModifiers(day, modifiers, displayMonth);
  return activeModifiers;
}
var SelectSingleContext = F(void 0);
function SelectSingleProvider(props2) {
  if (!isDayPickerSingle(props2.initialProps)) {
    var emptyContextValue = {
      selected: void 0
    };
    return Cn.createElement(SelectSingleContext.Provider, { value: emptyContextValue }, props2.children);
  }
  return Cn.createElement(SelectSingleProviderInternal, { initialProps: props2.initialProps, children: props2.children });
}
function SelectSingleProviderInternal(_a2) {
  var initialProps = _a2.initialProps, children = _a2.children;
  var onDayClick = function(day, activeModifiers, e4) {
    var _a3, _b2, _c2;
    (_a3 = initialProps.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(initialProps, day, activeModifiers, e4);
    if (activeModifiers.selected && !initialProps.required) {
      (_b2 = initialProps.onSelect) === null || _b2 === void 0 ? void 0 : _b2.call(initialProps, void 0, day, activeModifiers, e4);
      return;
    }
    (_c2 = initialProps.onSelect) === null || _c2 === void 0 ? void 0 : _c2.call(initialProps, day, day, activeModifiers, e4);
  };
  var contextValue = {
    selected: initialProps.selected,
    onDayClick
  };
  return Cn.createElement(SelectSingleContext.Provider, { value: contextValue }, children);
}
function useSelectSingle() {
  var context = q2(SelectSingleContext);
  if (!context) {
    throw new Error("useSelectSingle must be used within a SelectSingleProvider");
  }
  return context;
}
function useDayEventHandlers(date, activeModifiers) {
  var dayPicker = useDayPicker();
  var single = useSelectSingle();
  var multiple = useSelectMultiple();
  var range = useSelectRange();
  var _a2 = useFocusContext(), focusDayAfter = _a2.focusDayAfter, focusDayBefore = _a2.focusDayBefore, focusWeekAfter = _a2.focusWeekAfter, focusWeekBefore = _a2.focusWeekBefore, blur = _a2.blur, focus = _a2.focus, focusMonthBefore = _a2.focusMonthBefore, focusMonthAfter = _a2.focusMonthAfter, focusYearBefore = _a2.focusYearBefore, focusYearAfter = _a2.focusYearAfter, focusStartOfWeek = _a2.focusStartOfWeek, focusEndOfWeek = _a2.focusEndOfWeek;
  var onClick = function(e4) {
    var _a3, _b2, _c2, _d2;
    if (isDayPickerSingle(dayPicker)) {
      (_a3 = single.onDayClick) === null || _a3 === void 0 ? void 0 : _a3.call(single, date, activeModifiers, e4);
    } else if (isDayPickerMultiple(dayPicker)) {
      (_b2 = multiple.onDayClick) === null || _b2 === void 0 ? void 0 : _b2.call(multiple, date, activeModifiers, e4);
    } else if (isDayPickerRange(dayPicker)) {
      (_c2 = range.onDayClick) === null || _c2 === void 0 ? void 0 : _c2.call(range, date, activeModifiers, e4);
    } else {
      (_d2 = dayPicker.onDayClick) === null || _d2 === void 0 ? void 0 : _d2.call(dayPicker, date, activeModifiers, e4);
    }
  };
  var onFocus = function(e4) {
    var _a3;
    focus(date);
    (_a3 = dayPicker.onDayFocus) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onBlur = function(e4) {
    var _a3;
    blur();
    (_a3 = dayPicker.onDayBlur) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onMouseEnter = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayMouseEnter) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onMouseLeave = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayMouseLeave) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onPointerEnter = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayPointerEnter) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onPointerLeave = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayPointerLeave) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchCancel = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchCancel) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchEnd = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchEnd) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchMove = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchMove) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onTouchStart = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayTouchStart) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onKeyUp = function(e4) {
    var _a3;
    (_a3 = dayPicker.onDayKeyUp) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var onKeyDown = function(e4) {
    var _a3;
    switch (e4.key) {
      case "ArrowLeft":
        e4.preventDefault();
        e4.stopPropagation();
        dayPicker.dir === "rtl" ? focusDayAfter() : focusDayBefore();
        break;
      case "ArrowRight":
        e4.preventDefault();
        e4.stopPropagation();
        dayPicker.dir === "rtl" ? focusDayBefore() : focusDayAfter();
        break;
      case "ArrowDown":
        e4.preventDefault();
        e4.stopPropagation();
        focusWeekAfter();
        break;
      case "ArrowUp":
        e4.preventDefault();
        e4.stopPropagation();
        focusWeekBefore();
        break;
      case "PageUp":
        e4.preventDefault();
        e4.stopPropagation();
        e4.shiftKey ? focusYearBefore() : focusMonthBefore();
        break;
      case "PageDown":
        e4.preventDefault();
        e4.stopPropagation();
        e4.shiftKey ? focusYearAfter() : focusMonthAfter();
        break;
      case "Home":
        e4.preventDefault();
        e4.stopPropagation();
        focusStartOfWeek();
        break;
      case "End":
        e4.preventDefault();
        e4.stopPropagation();
        focusEndOfWeek();
        break;
    }
    (_a3 = dayPicker.onDayKeyDown) === null || _a3 === void 0 ? void 0 : _a3.call(dayPicker, date, activeModifiers, e4);
  };
  var eventHandlers = {
    onClick,
    onFocus,
    onBlur,
    onKeyDown,
    onKeyUp,
    onMouseEnter,
    onMouseLeave,
    onPointerEnter,
    onPointerLeave,
    onTouchCancel,
    onTouchEnd,
    onTouchMove,
    onTouchStart
  };
  return eventHandlers;
}
function useSelectedDays() {
  var dayPicker = useDayPicker();
  var single = useSelectSingle();
  var multiple = useSelectMultiple();
  var range = useSelectRange();
  var selectedDays = isDayPickerSingle(dayPicker) ? single.selected : isDayPickerMultiple(dayPicker) ? multiple.selected : isDayPickerRange(dayPicker) ? range.selected : void 0;
  return selectedDays;
}
function isInternalModifier(modifier) {
  return Object.values(InternalModifier).includes(modifier);
}
function getDayClassNames(dayPicker, activeModifiers) {
  var classNames9 = [dayPicker.classNames.day];
  Object.keys(activeModifiers).forEach(function(modifier) {
    var customClassName = dayPicker.modifiersClassNames[modifier];
    if (customClassName) {
      classNames9.push(customClassName);
    } else if (isInternalModifier(modifier)) {
      var internalClassName = dayPicker.classNames["day_".concat(modifier)];
      if (internalClassName) {
        classNames9.push(internalClassName);
      }
    }
  });
  return classNames9;
}
function getDayStyle(dayPicker, activeModifiers) {
  var style = __assign({}, dayPicker.styles.day);
  Object.keys(activeModifiers).forEach(function(modifier) {
    var _a2;
    style = __assign(__assign({}, style), (_a2 = dayPicker.modifiersStyles) === null || _a2 === void 0 ? void 0 : _a2[modifier]);
  });
  return style;
}
function useDayRender(day, displayMonth, buttonRef) {
  var _a2;
  var _b2, _c2;
  var dayPicker = useDayPicker();
  var focusContext = useFocusContext();
  var activeModifiers = useActiveModifiers(day, displayMonth);
  var eventHandlers = useDayEventHandlers(day, activeModifiers);
  var selectedDays = useSelectedDays();
  var isButton = Boolean(dayPicker.onDayClick || dayPicker.mode !== "default");
  p2(function() {
    var _a3;
    if (activeModifiers.outside)
      return;
    if (!focusContext.focusedDay)
      return;
    if (!isButton)
      return;
    if (isSameDay(focusContext.focusedDay, day)) {
      (_a3 = buttonRef.current) === null || _a3 === void 0 ? void 0 : _a3.focus();
    }
  }, [
    focusContext.focusedDay,
    day,
    buttonRef,
    isButton,
    activeModifiers.outside
  ]);
  var className = getDayClassNames(dayPicker, activeModifiers).join(" ");
  var style = getDayStyle(dayPicker, activeModifiers);
  var isHidden = Boolean(activeModifiers.outside && !dayPicker.showOutsideDays || activeModifiers.hidden);
  var DayContentComponent = (_c2 = (_b2 = dayPicker.components) === null || _b2 === void 0 ? void 0 : _b2.DayContent) !== null && _c2 !== void 0 ? _c2 : DayContent;
  var children = Cn.createElement(DayContentComponent, { date: day, displayMonth, activeModifiers });
  var divProps = {
    style,
    className,
    children,
    role: "gridcell"
  };
  var isFocusTarget = focusContext.focusTarget && isSameDay(focusContext.focusTarget, day) && !activeModifiers.outside;
  var isFocused = focusContext.focusedDay && isSameDay(focusContext.focusedDay, day);
  var buttonProps = __assign(__assign(__assign({}, divProps), (_a2 = { disabled: activeModifiers.disabled, role: "gridcell" }, _a2["aria-selected"] = activeModifiers.selected, _a2.tabIndex = isFocused || isFocusTarget ? 0 : -1, _a2)), eventHandlers);
  var dayRender = {
    isButton,
    isHidden,
    activeModifiers,
    selectedDays,
    buttonProps,
    divProps
  };
  return dayRender;
}
function Day(props2) {
  var buttonRef = _2(null);
  var dayRender = useDayRender(props2.date, props2.displayMonth, buttonRef);
  if (dayRender.isHidden) {
    return Cn.createElement("div", { role: "gridcell" });
  }
  if (!dayRender.isButton) {
    return Cn.createElement("div", __assign({}, dayRender.divProps));
  }
  return Cn.createElement(Button, __assign({ name: "day", ref: buttonRef }, dayRender.buttonProps));
}
function WeekNumber(props2) {
  var weekNumber = props2.number, dates = props2.dates;
  var _a2 = useDayPicker(), onWeekNumberClick = _a2.onWeekNumberClick, styles2 = _a2.styles, classNames9 = _a2.classNames, locale2 = _a2.locale, labelWeekNumber2 = _a2.labels.labelWeekNumber, formatWeekNumber2 = _a2.formatters.formatWeekNumber;
  var content = formatWeekNumber2(Number(weekNumber), { locale: locale2 });
  if (!onWeekNumberClick) {
    return Cn.createElement("span", { className: classNames9.weeknumber, style: styles2.weeknumber }, content);
  }
  var label = labelWeekNumber2(Number(weekNumber), { locale: locale2 });
  var handleClick = function(e4) {
    onWeekNumberClick(weekNumber, dates, e4);
  };
  return Cn.createElement(Button, { name: "week-number", "aria-label": label, className: classNames9.weeknumber, style: styles2.weeknumber, onClick: handleClick }, content);
}
function Row(props2) {
  var _a2, _b2;
  var _c2 = useDayPicker(), styles2 = _c2.styles, classNames9 = _c2.classNames, showWeekNumber = _c2.showWeekNumber, components = _c2.components;
  var DayComponent = (_a2 = components === null || components === void 0 ? void 0 : components.Day) !== null && _a2 !== void 0 ? _a2 : Day;
  var WeeknumberComponent = (_b2 = components === null || components === void 0 ? void 0 : components.WeekNumber) !== null && _b2 !== void 0 ? _b2 : WeekNumber;
  var weekNumberCell;
  if (showWeekNumber) {
    weekNumberCell = Cn.createElement(
      "td",
      { className: classNames9.cell, style: styles2.cell },
      Cn.createElement(WeeknumberComponent, { number: props2.weekNumber, dates: props2.dates })
    );
  }
  return Cn.createElement(
    "tr",
    { className: classNames9.row, style: styles2.row },
    weekNumberCell,
    props2.dates.map(function(date) {
      return Cn.createElement(
        "td",
        { className: classNames9.cell, style: styles2.cell, key: getUnixTime(date), role: "presentation" },
        Cn.createElement(DayComponent, { displayMonth: props2.displayMonth, date })
      );
    })
  );
}
function daysToMonthWeeks(fromDate, toDate2, options) {
  var toWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? endOfISOWeek(toDate2) : endOfWeek(toDate2, options);
  var fromWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? startOfISOWeek(fromDate) : startOfWeek(fromDate, options);
  var nOfDays = differenceInCalendarDays(toWeek, fromWeek);
  var days = [];
  for (var i4 = 0; i4 <= nOfDays; i4++) {
    days.push(addDays(fromWeek, i4));
  }
  var weeksInMonth = days.reduce(function(result, date) {
    var weekNumber = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? getISOWeek(date) : getWeek(date, options);
    var existingWeek = result.find(function(value) {
      return value.weekNumber === weekNumber;
    });
    if (existingWeek) {
      existingWeek.dates.push(date);
      return result;
    }
    result.push({
      weekNumber,
      dates: [date]
    });
    return result;
  }, []);
  return weeksInMonth;
}
function getMonthWeeks(month, options) {
  var weeksInMonth = daysToMonthWeeks(startOfMonth(month), endOfMonth(month), options);
  if (options === null || options === void 0 ? void 0 : options.useFixedWeeks) {
    var nrOfMonthWeeks = getWeeksInMonth(month, options);
    if (nrOfMonthWeeks < 6) {
      var lastWeek = weeksInMonth[weeksInMonth.length - 1];
      var lastDate = lastWeek.dates[lastWeek.dates.length - 1];
      var toDate2 = addWeeks(lastDate, 6 - nrOfMonthWeeks);
      var extraWeeks = daysToMonthWeeks(addWeeks(lastDate, 1), toDate2, options);
      weeksInMonth.push.apply(weeksInMonth, extraWeeks);
    }
  }
  return weeksInMonth;
}
function Table(props2) {
  var _a2, _b2, _c2;
  var _d2 = useDayPicker(), locale2 = _d2.locale, classNames9 = _d2.classNames, styles2 = _d2.styles, hideHead = _d2.hideHead, fixedWeeks = _d2.fixedWeeks, components = _d2.components, weekStartsOn = _d2.weekStartsOn, firstWeekContainsDate = _d2.firstWeekContainsDate, ISOWeek = _d2.ISOWeek;
  var weeks = getMonthWeeks(props2.displayMonth, {
    useFixedWeeks: Boolean(fixedWeeks),
    ISOWeek,
    locale: locale2,
    weekStartsOn,
    firstWeekContainsDate
  });
  var HeadComponent = (_a2 = components === null || components === void 0 ? void 0 : components.Head) !== null && _a2 !== void 0 ? _a2 : Head;
  var RowComponent = (_b2 = components === null || components === void 0 ? void 0 : components.Row) !== null && _b2 !== void 0 ? _b2 : Row;
  var FooterComponent = (_c2 = components === null || components === void 0 ? void 0 : components.Footer) !== null && _c2 !== void 0 ? _c2 : Footer;
  return Cn.createElement(
    "table",
    { className: classNames9.table, style: styles2.table, role: "grid", "aria-labelledby": props2["aria-labelledby"] },
    !hideHead && Cn.createElement(HeadComponent, null),
    Cn.createElement("tbody", { className: classNames9.tbody, style: styles2.tbody, role: "rowgroup" }, weeks.map(function(week) {
      return Cn.createElement(RowComponent, { displayMonth: props2.displayMonth, key: week.weekNumber, dates: week.dates, weekNumber: week.weekNumber });
    })),
    Cn.createElement(FooterComponent, { displayMonth: props2.displayMonth })
  );
}
function canUseDOM2() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var useIsomorphicLayoutEffect2 = canUseDOM2() ? y2 : p2;
var serverHandoffComplete = false;
var id = 0;
function genId2() {
  return "react-day-picker-".concat(++id);
}
function useId(providedId) {
  var _a2;
  var initialId = providedId !== null && providedId !== void 0 ? providedId : serverHandoffComplete ? genId2() : null;
  var _b2 = h2(initialId), id2 = _b2[0], setId = _b2[1];
  useIsomorphicLayoutEffect2(function() {
    if (id2 === null) {
      setId(genId2());
    }
  }, []);
  p2(function() {
    if (serverHandoffComplete === false) {
      serverHandoffComplete = true;
    }
  }, []);
  return (_a2 = providedId !== null && providedId !== void 0 ? providedId : id2) !== null && _a2 !== void 0 ? _a2 : void 0;
}
function Month(props2) {
  var _a2;
  var _b2;
  var dayPicker = useDayPicker();
  var dir = dayPicker.dir, classNames9 = dayPicker.classNames, styles2 = dayPicker.styles, components = dayPicker.components;
  var displayMonths = useNavigation().displayMonths;
  var captionId = useId(dayPicker.id ? "".concat(dayPicker.id, "-").concat(props2.displayIndex) : void 0);
  var className = [classNames9.month];
  var style = styles2.month;
  var isStart = props2.displayIndex === 0;
  var isEnd = props2.displayIndex === displayMonths.length - 1;
  var isCenter = !isStart && !isEnd;
  if (dir === "rtl") {
    _a2 = [isStart, isEnd], isEnd = _a2[0], isStart = _a2[1];
  }
  if (isStart) {
    className.push(classNames9.caption_start);
    style = __assign(__assign({}, style), styles2.caption_start);
  }
  if (isEnd) {
    className.push(classNames9.caption_end);
    style = __assign(__assign({}, style), styles2.caption_end);
  }
  if (isCenter) {
    className.push(classNames9.caption_between);
    style = __assign(__assign({}, style), styles2.caption_between);
  }
  var CaptionComponent = (_b2 = components === null || components === void 0 ? void 0 : components.Caption) !== null && _b2 !== void 0 ? _b2 : Caption;
  return Cn.createElement(
    "div",
    { key: props2.displayIndex, className: className.join(" "), style },
    Cn.createElement(CaptionComponent, { id: captionId, displayMonth: props2.displayMonth }),
    Cn.createElement(Table, { "aria-labelledby": captionId, displayMonth: props2.displayMonth })
  );
}
function Root2() {
  var dayPicker = useDayPicker();
  var focusContext = useFocusContext();
  var navigation = useNavigation();
  var _a2 = h2(false), hasInitialFocus = _a2[0], setHasInitialFocus = _a2[1];
  p2(function() {
    if (!dayPicker.initialFocus)
      return;
    if (!focusContext.focusTarget)
      return;
    if (hasInitialFocus)
      return;
    focusContext.focus(focusContext.focusTarget);
    setHasInitialFocus(true);
  }, [
    dayPicker.initialFocus,
    hasInitialFocus,
    focusContext.focus,
    focusContext.focusTarget,
    focusContext
  ]);
  var classNames9 = [dayPicker.classNames.root, dayPicker.className];
  if (dayPicker.numberOfMonths > 1) {
    classNames9.push(dayPicker.classNames.multiple_months);
  }
  if (dayPicker.showWeekNumber) {
    classNames9.push(dayPicker.classNames.with_weeknumber);
  }
  var style = __assign(__assign({}, dayPicker.styles.root), dayPicker.style);
  return Cn.createElement(
    "div",
    { className: classNames9.join(" "), style, dir: dayPicker.dir },
    Cn.createElement("div", { className: dayPicker.classNames.months, style: dayPicker.styles.months }, navigation.displayMonths.map(function(month, i4) {
      return Cn.createElement(Month, { key: i4, displayIndex: i4, displayMonth: month });
    }))
  );
}
function RootProvider(props2) {
  var children = props2.children, initialProps = __rest(props2, ["children"]);
  return Cn.createElement(
    DayPickerProvider,
    { initialProps },
    Cn.createElement(
      NavigationProvider,
      null,
      Cn.createElement(
        SelectSingleProvider,
        { initialProps },
        Cn.createElement(
          SelectMultipleProvider,
          { initialProps },
          Cn.createElement(
            SelectRangeProvider,
            { initialProps },
            Cn.createElement(
              ModifiersProvider,
              null,
              Cn.createElement(FocusProvider, null, children)
            )
          )
        )
      )
    )
  );
}
function DayPicker(props2) {
  return Cn.createElement(
    RootProvider,
    __assign({}, props2),
    Cn.createElement(Root2, null)
  );
}

// src/components/ui/menus/datePickerMenu.tsx
var showDatePickerMenu = (point, value, setValue, format2) => {
  const menu = new import_obsidian23.Menu();
  menu.dom.toggleClass("mk-menu", true);
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createEl("div");
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mousedown", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mouseup", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  const setDate = (date) => {
    setValue(date);
    menu.hide();
  };
  const root2 = createRoot(div);
  root2.render(
    /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(DayPicker, {
      defaultMonth: value,
      mode: "single",
      selected: value,
      labels: {
        labelMonthDropdown: () => void 0,
        labelYearDropdown: () => void 0,
        labelNext: () => void 0,
        labelPrevious: () => void 0,
        labelDay: () => void 0,
        labelWeekday: () => void 0,
        labelWeekNumber: () => void 0
      },
      onSelect: setDate
    }))
  );
  menu.addItem((item) => {
    item.setTitle(frag);
  });
  const keys2 = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys2.length; i4++) {
    if (keys2[i4].key != "Escape") {
      menu.scope.unregister(keys2[i4]);
    }
  }
  menu.showAtPosition(point);
  return menu;
};

// src/components/Space/Contexts/DataTypeView/DateCell.tsx
init_hooks_module();
init_compat_module();

// src/utils/date.ts
var formatDate = (plugin, date, dateFormat) => {
  let dateString;
  try {
    dateString = format(
      date,
      (dateFormat == null ? void 0 : dateFormat.length) > 0 ? dateFormat : plugin.settings.defaultDateFormat
    );
  } catch (e4) {
    dateString = "Date Format Invalid";
  }
  return dateString;
};

// src/components/Space/Contexts/DataTypeView/DateCell.tsx
var DateCell = (props2) => {
  const [value, setValue] = h2(props2.initialValue);
  p2(() => {
    setValue(props2.initialValue);
  }, [props2.initialValue]);
  const date = F2(() => {
    const dateTime = Date.parse(value);
    return dateTime > 0 ? new Date(dateTime + new Date().getTimezoneOffset() * 60 * 1e3) : null;
  }, [value]);
  const saveValue = (date2) => {
    const newValue = format(date2, "yyyy-MM-dd");
    props2.saveValue(newValue);
    setValue(newValue);
    props2.setEditMode(null);
  };
  const menuRef = _2(null);
  const ref2 = _2(null);
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      if (ref2.current) {
        showPicker();
        ref2.current.focus();
      }
    }
  }, [props2.editMode]);
  const showPicker = T2(
    (e4) => {
      if (props2.editMode <= 0) {
        return;
      }
      const offset2 = e4 ? e4.target.getBoundingClientRect() : ref2.current.getBoundingClientRect();
      menuRef.current = showDatePickerMenu(
        { x: offset2.left - 4, y: offset2.bottom - 4 },
        date,
        saveValue
      );
    },
    [date]
  );
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter" || e4.key == "Escape") {
      e4.target.blur();
      saveValue(date);
      menuRef.current.hide();
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-date",
    onClick: (e4) => !value && showPicker(e4)
  }, props2.editMode == 2 ? /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    ref: ref2,
    type: "text",
    value,
    onChange: (e4) => setValue(e4.target.value),
    onMouseDown: () => showPicker(),
    onKeyDown
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-date-value",
    onClick: (e4) => showPicker(e4)
  }, date ? formatDate(props2.plugin, date, props2.propertyValue) : value));
};

// src/components/ui/modals/editSpaceModal.tsx
var import_obsidian24 = require("obsidian");
var EditSpaceModal = class extends import_obsidian24.Modal {
  constructor(plugin, space, action, def) {
    super(plugin.app);
    this.space = space;
    this.action = action;
    this.plugin = plugin;
    this.def = def;
  }
  onOpen() {
    const { contentEl } = this;
    let headerText;
    if (this.action === "rename") {
      headerText = i18n_default.labels.renameSection;
    } else if (this.action === "create") {
      headerText = i18n_default.labels.createSection;
    }
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    const inputEl = contentEl.createEl("input");
    inputEl.style.cssText = "width: 100%; height: 2.5em; margin-bottom: 15px;";
    if (this.action === "rename") {
      inputEl.value = this.space.name;
    }
    inputEl.focus();
    let changeButtonText;
    if (this.action === "rename") {
      changeButtonText = i18n_default.buttons.saveSpace;
    } else if (this.action === "create") {
      changeButtonText = i18n_default.buttons.saveSpace;
    }
    const changeButton = contentEl.createEl("button", {
      text: changeButtonText
    });
    const cancelButton = contentEl.createEl("button", {
      text: i18n_default.buttons.cancel
    });
    cancelButton.style.cssText = "float: right;";
    cancelButton.addEventListener("click", () => {
      this.close();
    });
    const onClickAction = async () => {
      var _a2;
      const newName = inputEl.value.replace(/\//g, "");
      if (newName.length == 0) {
        new import_obsidian24.Notice(i18n_default.notice.newSpaceName);
        return;
      }
      if (this.plugin.index.spacesIndex.has(newName) && newName != this.space.name) {
        new import_obsidian24.Notice(i18n_default.notice.duplicateSpaceName);
        return;
      }
      if (this.action === "rename") {
        renamePath(this.plugin, this.space.space.uri, newName);
      } else if (this.action === "create") {
        await insertSpaceAtIndex(this.plugin, newName, {
          def: (_a2 = this.def) != null ? _a2 : {
            type: "links"
          },
          contexts: []
        });
        openSpace(spacePathFromName(newName), this.plugin, false);
      }
      this.close();
    };
    changeButton.addEventListener("click", onClickAction);
    inputEl.addEventListener("keydown", (e4) => {
      if (e4.key === "Enter")
        onClickAction();
    });
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/components/ui/menus/fileMenu.tsx
var import_obsidian25 = require("obsidian");

// src/utils/color.ts
var colors = [
  ["Red", "#eb3b5a"],
  ["Orange", "#fa8231"],
  ["Yellow", "#f7b731"],
  ["Green", "#20bf6b"],
  ["Turquoise", "#0fb9b1"],
  ["Teal", "#2d98da"],
  ["Blue", "#3867d6"],
  ["Purple", "#8854d0"],
  ["Charcoal", "#4b6584"]
];

// src/components/ui/menus/fileMenu.tsx
var triggerSectionAddMenu = (plugin, e4, space, activeFile) => {
  const fileMenu = new import_obsidian25.Menu();
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("edit");
    menuItem.setTitle(i18n_default.buttons.createNote);
    menuItem.onClick((ev) => {
      newFileInSpace(plugin, space.space, activeFile);
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("layout-dashboard");
    menuItem.setTitle(i18n_default.buttons.createCanvas);
    menuItem.onClick((ev) => {
      newFileInSpace(plugin, space.space, activeFile, true);
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("folder-plus");
    menuItem.setTitle(i18n_default.buttons.createFolder);
    menuItem.onClick((ev) => {
      newFolderInSpace(plugin, space.space, activeFile);
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("plus");
    menuItem.setTitle(i18n_default.buttons.createSection);
    menuItem.onClick((ev) => {
      const vaultChangeModal = new EditSpaceModal(plugin, null, "create");
      vaultChangeModal.open();
    });
  });
  if (isMouseEvent(e4)) {
    fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
  } else {
    fileMenu.showAtPosition({
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    });
  }
  return false;
};
var triggerSpaceMenu = (plugin, space, e4, activeFile, parentSpace) => {
  if (!space)
    return;
  const spaceMenu = new import_obsidian25.Menu();
  spaceMenu.addItem((menuItem) => {
    menuItem.setIcon("arrow-up-right");
    menuItem.setTitle("Reveal in Finder");
    menuItem.onClick((ev) => {
      const file = getAbstractFileAtPath(
        app,
        space.type == "folder" ? space.path : `${plugin.settings.spacesFolder}/${space.name}`
      );
      if (file instanceof import_obsidian25.TFolder) {
        const leaf = app.workspace.getLeaf(false);
        app.workspace.setActiveLeaf(leaf, { focus: true });
        leaf.openFile(file, { eState: { focus: true } });
      }
    });
  });
  spaceMenu.addItem((menuItem) => {
    menuItem.setIcon("edit");
    menuItem.setTitle(i18n_default.buttons.createNote);
    menuItem.onClick((ev) => {
      newFileInSpace(plugin, space.space, activeFile);
    });
  });
  spaceMenu.addItem((menuItem) => {
    menuItem.setIcon("layout-dashboard");
    menuItem.setTitle(i18n_default.buttons.createCanvas);
    menuItem.onClick((ev) => {
      newFileInSpace(plugin, space.space, activeFile, true);
    });
  });
  spaceMenu.addItem((menuItem) => {
    menuItem.setIcon("folder-plus");
    menuItem.setTitle(i18n_default.buttons.createFolder);
    menuItem.onClick((ev) => {
      newFolderInSpace(plugin, space.space, activeFile);
    });
  });
  spaceMenu.addSeparator();
  spaceMenu.addItem((menuItem) => {
    menuItem.setIcon("plus-square");
    menuItem.setTitle("Add to Space");
    menuItem.onClick((ev) => {
      const vaultChangeModal = new AddToSpaceModal(plugin, [space.path]);
      vaultChangeModal.open();
    });
  });
  spaceMenu.addItem((menuItem) => {
    const pinned = plugin.settings.waypoints.some((f4) => f4 == space.path);
    menuItem.setTitle(pinned ? i18n_default.menu.unpinSpace : i18n_default.menu.pinSpace);
    menuItem.setIcon("pin");
    menuItem.onClick((ev) => {
      toggleSpacePin(plugin, space.path, "pinned", pinned);
    });
  });
  if (space) {
    const spaceCache = plugin.index.spacesIndex.get(parentSpace);
    if (spaceCache) {
      spaceMenu.addItem((menuItem) => {
        menuItem.setIcon("minus-square");
        menuItem.setTitle("Remove from Space");
        menuItem.onClick((ev) => {
          removePathsFromSpace(plugin, spaceCache, [space.path]);
        });
      });
    }
  }
  spaceMenu.addSeparator();
  if (plugin.settings.spacesStickers) {
    spaceMenu.addSeparator();
    spaceMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.changeIcon);
      menuItem.setIcon("lucide-sticker");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new stickerModal(
          plugin.app,
          plugin,
          (emoji) => saveSpaceIcon(plugin, space.path, emoji)
        );
        vaultChangeModal.open();
      });
    });
    spaceMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.removeIcon);
      menuItem.setIcon("lucide-file-minus");
      menuItem.onClick((ev) => {
        removeSpaceIcon(plugin, space.path);
      });
    });
  }
  spaceMenu.addSeparator();
  spaceMenu.addSeparator();
  if (space.type == "links" || space.type == "folder" || space.type == "vault") {
    spaceMenu.addItem((menuItem) => {
      const sortOption = ["rank", true];
      menuItem.setIcon("arrow-up-down");
      menuItem.setTitle(i18n_default.menu.customSort);
      menuItem.setChecked(
        space.metadata.sort == JSON.stringify(sortOption) || space.metadata.sort == ""
      );
      menuItem.onClick((ev) => {
        updateSpaceSort(plugin, space.path, sortOption);
      });
    });
  }
  spaceMenu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.sortBy);
    menuItem.setIcon("sort-desc");
    menuItem.onClick((ev) => {
      const sortMenu = new import_obsidian25.Menu();
      sortMenu.addItem((menuItem2) => {
        const sortOption = ["name", true];
        menuItem2.setTitle(i18n_default.menu.fileNameSortAlphaAsc);
        menuItem2.setChecked(space.metadata.sort == JSON.stringify(sortOption));
        menuItem2.onClick((ev2) => {
          updateSpaceSort(plugin, space.path, sortOption);
        });
      });
      sortMenu.addItem((menuItem2) => {
        const sortOption = ["name", false];
        menuItem2.setTitle(i18n_default.menu.fileNameSortAlphaDesc);
        menuItem2.setChecked(space.metadata.sort == JSON.stringify(sortOption));
        menuItem2.onClick((ev2) => {
          updateSpaceSort(plugin, space.path, sortOption);
        });
      });
      sortMenu.addSeparator();
      sortMenu.addItem((menuItem2) => {
        const sortOption = ["ctime", false];
        menuItem2.setTitle(i18n_default.menu.createdTimeSortAsc);
        menuItem2.setChecked(space.metadata.sort == JSON.stringify(sortOption));
        menuItem2.onClick((ev2) => {
          updateSpaceSort(plugin, space.path, sortOption);
        });
      });
      sortMenu.addItem((menuItem2) => {
        const sortOption = ["ctime", true];
        menuItem2.setTitle(i18n_default.menu.createdTimeSortDesc);
        menuItem2.setChecked(space.metadata.sort == JSON.stringify(sortOption));
        menuItem2.onClick((ev2) => {
          updateSpaceSort(plugin, space.path, sortOption);
        });
      });
      const offset2 = e4.target.getBoundingClientRect();
      if (isMouseEvent(e4)) {
        sortMenu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
      } else {
        sortMenu.showAtPosition({
          x: e4.nativeEvent.locationX,
          y: e4.nativeEvent.locationY
        });
      }
    });
  });
  spaceMenu.addSeparator();
  if (space.type != "vault")
    spaceMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.edit);
      menuItem.setIcon("pencil");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new EditSpaceModal(plugin, space, "rename");
        vaultChangeModal.open();
      });
    });
  if (space.type != "vault")
    spaceMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.deleteSpace);
      menuItem.setIcon("trash");
      menuItem.onClick((ev) => {
        removeSpace(plugin, space.path);
      });
    });
  if (isMouseEvent(e4)) {
    spaceMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
  } else {
    spaceMenu.showAtPosition({
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    });
  }
  return false;
};
var triggerMultiFileMenu = (plugin, selectedFiles, e4) => {
  const files = selectedFiles.map((s5) => s5.item.path);
  const fileMenu = new import_obsidian25.Menu();
  fileMenu.addSeparator();
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("plus");
    menuItem.setTitle("Add to Space");
    menuItem.onClick((ev) => {
      const vaultChangeModal = new AddToSpaceModal(
        plugin,
        selectedFiles.map((f4) => f4.path)
      );
      vaultChangeModal.open();
    });
  });
  if (plugin.settings.spacesStickers) {
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("palette");
      disclosureMenuItem(
        plugin,
        menuItem,
        false,
        false,
        i18n_default.menu.changeColor,
        "",
        [
          { name: "None", value: "" },
          ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
        ],
        (_12, values) => {
          saveFileColors(plugin, files, values[0]);
        }
      );
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.changeIcon);
      menuItem.setIcon("lucide-sticker");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new stickerModal(
          plugin.app,
          plugin,
          (emoji) => saveFileIcons(plugin, files, emoji)
        );
        vaultChangeModal.open();
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.removeIcon);
      menuItem.setIcon("lucide-file-minus");
      menuItem.onClick((ev) => {
        removeFileIcons(plugin, files);
      });
    });
  }
  fileMenu.addSeparator();
  fileMenu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.deleteFiles);
    menuItem.setIcon("trash");
    menuItem.onClick((ev) => {
      deleteFiles(plugin, files);
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("go-to-file");
    menuItem.setTitle(i18n_default.menu.openFilePane);
    menuItem.onClick((ev) => {
      files.forEach(
        (file) => openAFile(getAbstractFileAtPath(app, file), plugin, true)
      );
    });
  });
  if (!internalPluginLoaded("file-explorer", plugin.app)) {
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.moveFile);
      menuItem.setIcon("paper-plane");
      menuItem.onClick((ev) => {
        const fileMoveSuggester = new MoveSuggestionModal(plugin.app, files);
        fileMoveSuggester.open();
      });
    });
  }
  if (isMouseEvent(e4)) {
    fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
  } else {
    fileMenu.showAtPosition({
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    });
  }
  return false;
};
var triggerFileMenu = (plugin, file, isFolder, e4, space) => {
  const cache = plugin.index.filesIndex.get(file.path);
  const fileMenu = new import_obsidian25.Menu();
  if (isFolder) {
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("edit");
      menuItem.setTitle(i18n_default.buttons.createNote);
      menuItem.onClick((ev) => {
        newFileInFolder(plugin, file);
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("layout-dashboard");
      menuItem.setTitle(i18n_default.buttons.createCanvas);
      menuItem.onClick((ev) => {
        createNewCanvasFile(plugin, file, "");
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("folder-plus");
      menuItem.setTitle(i18n_default.buttons.createFolder);
      menuItem.onClick((ev) => {
        const vaultChangeModal = new VaultChangeModal(
          plugin,
          file,
          "create folder",
          "/"
        );
        vaultChangeModal.open();
      });
    });
  }
  fileMenu.addSeparator();
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("plus-square");
    menuItem.setTitle("Add to Space");
    menuItem.onClick((ev) => {
      const vaultChangeModal = new AddToSpaceModal(plugin, [file.path]);
      vaultChangeModal.open();
    });
  });
  if (space) {
    const spaceCache = plugin.index.spacesIndex.get(space);
    if (spaceCache) {
      fileMenu.addItem((menuItem) => {
        menuItem.setIcon("minus-square");
        menuItem.setTitle("Remove from Space");
        menuItem.onClick((ev) => {
          removePathsFromSpace(plugin, spaceCache, [file.path]);
        });
      });
    }
  }
  if (isFolder && cache) {
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.customSort);
      menuItem.setIcon("arrow-up-down");
      menuItem.setChecked(cache.sortBy == "");
      menuItem.onClick((ev) => {
        saveFolderSort(plugin, file.path, "");
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.sortBy);
      menuItem.setIcon("sort-desc");
      menuItem.onClick((ev) => {
        const sortMenu = new import_obsidian25.Menu();
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.fileNameSortAlphaAsc);
          menuItem2.setChecked(cache.sortBy == "name_asc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "name_asc");
          });
        });
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.fileNameSortAlphaDesc);
          menuItem2.setChecked(cache.sortBy == "name_desc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "name_desc");
          });
        });
        sortMenu.addSeparator();
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.createdTimeSortAsc);
          menuItem2.setChecked(cache.sortBy == "ctime_asc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "ctime_asc");
          });
        });
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.createdTimeSortDesc);
          menuItem2.setChecked(cache.sortBy == "ctime_desc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "ctime_desc");
          });
        });
        sortMenu.addSeparator();
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.modifiedTimeSortAsc);
          menuItem2.setChecked(cache.sortBy == "mtime_asc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "mtime_asc");
          });
        });
        sortMenu.addItem((menuItem2) => {
          menuItem2.setTitle(i18n_default.menu.modifiedTimeSortDesc);
          menuItem2.setChecked(cache.sortBy == "mtime_desc");
          menuItem2.onClick((ev2) => {
            saveFolderSort(plugin, file.path, "mtime_desc");
          });
        });
        const offset2 = e4.target.getBoundingClientRect();
        if (isMouseEvent(e4)) {
          sortMenu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        } else {
          sortMenu.showAtPosition({
            x: e4.nativeEvent.locationX,
            y: e4.nativeEvent.locationY
          });
        }
      });
    });
  }
  if (plugin.settings.spacesStickers) {
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("palette");
      disclosureMenuItem(
        plugin,
        menuItem,
        false,
        false,
        i18n_default.menu.changeColor,
        "",
        [
          { name: "None", value: "" },
          ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
        ],
        (_12, values) => {
          saveFileColor(plugin, file.path, values[0]);
        }
      );
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.changeIcon);
      menuItem.setIcon("lucide-sticker");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new stickerModal(
          plugin.app,
          plugin,
          (emoji) => saveFileIcon(plugin, file, emoji)
        );
        vaultChangeModal.open();
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.removeIcon);
      menuItem.setIcon("lucide-file-minus");
      menuItem.onClick((ev) => {
        removeFileIcon(plugin, file);
      });
    });
  }
  fileMenu.addSeparator();
  fileMenu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.rename);
    menuItem.setIcon("pencil");
    menuItem.onClick((ev) => {
      const vaultChangeModal = new VaultChangeModal(plugin, file, "rename");
      vaultChangeModal.open();
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.delete);
    menuItem.setIcon("trash");
    menuItem.onClick((ev) => {
      const deleteOption = plugin.settings.deleteFileOption;
      if (deleteOption === "permanent") {
        plugin.app.vault.delete(file, true);
      } else if (deleteOption === "system-trash") {
        plugin.app.vault.trash(file, true);
      } else if (deleteOption === "trash") {
        plugin.app.vault.trash(file, false);
      }
    });
  });
  if (!isFolder) {
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.changeToFolderNote);
      menuItem.setIcon("file-plus-2");
      menuItem.onClick((ev) => {
        if (file instanceof import_obsidian25.TFile)
          noteToFolderNote(plugin, file, true);
      });
    });
  }
  fileMenu.addItem((menuItem) => {
    menuItem.setIcon("go-to-file");
    menuItem.setTitle(i18n_default.menu.openFilePane);
    menuItem.onClick((ev) => {
      openFileInNewPane(plugin, { ...file, isFolder });
    });
  });
  fileMenu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.duplicate);
    menuItem.setIcon("documents");
    menuItem.onClick((ev) => {
      if (file.basename && file.extension)
        plugin.app.vault.copy(
          file,
          `${file.parent.path}/${file.basename} 1.${file.extension}`
        );
    });
  });
  if (!internalPluginLoaded("file-explorer", plugin.app)) {
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.moveFile);
      menuItem.setIcon("paper-plane");
      menuItem.onClick((ev) => {
        const fileMoveSuggester = new MoveSuggestionModal(plugin.app, [
          file.path
        ]);
        fileMoveSuggester.open();
      });
    });
  }
  plugin.app.workspace.trigger("file-menu", fileMenu, file, "file-explorer");
  if (isMouseEvent(e4)) {
    fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
  } else {
    fileMenu.showAtPosition({
      x: e4.nativeEvent.locationX,
      y: e4.nativeEvent.locationY
    });
  }
  return false;
};

// src/components/Space/Contexts/DataTypeView/FileCell.tsx
var import_obsidian26 = require("obsidian");
init_compat_module();
var FileCell = (props2) => {
  const fileOrCleanPath = (f4) => {
    if (!f4)
      return {
        path: ""
      };
    const fileCache = props2.plugin.index.filesIndex.get(f4);
    return fileCache ? { path: f4, fileCache } : { path: f4 };
  };
  const value = F2(
    () => {
      var _a2;
      return (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).map((f4) => fileOrCleanPath(f4));
    },
    [props2.initialValue]
  );
  const ref2 = _2(null);
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    e4.key == "Enter" && e4.target.blur();
  };
  const fileExists = (name) => {
    if (!name)
      return false;
    return getAbstractFileAtPath(app, name) ? true : false;
  };
  const onBlur = () => {
    var _a2;
    if (!ref2.current)
      return;
    if (fileExists((_a2 = ref2.current) == null ? void 0 : _a2.value)) {
      new import_obsidian26.Notice(i18n_default.notice.fileExists);
    } else {
      props2.saveValue(ref2.current.value);
      props2.setEditMode(null);
    }
  };
  const newFile = async (file) => {
    const filePath = file.path.replace(/\//g, "").replace(/\./g, "");
    const path = `${props2.folder}/${filePath}.md`;
    if (filePath.length == 0) {
      return;
    }
    if (fileExists(path)) {
      new import_obsidian26.Notice(i18n_default.notice.fileExists);
    } else {
      await createNewMarkdownFile(
        props2.plugin,
        getAbstractFileAtPath(app, props2.folder),
        filePath
      );
    }
  };
  const deleteRow = () => {
    props2.deleteRow();
  };
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-file"
  }, value.map((v3, i4) => {
    var _a2;
    if (props2.editMode == 0) {
      if (v3.fileCache) {
        return /* @__PURE__ */ Cn.createElement("div", {
          key: i4,
          className: "mk-cell-file-title"
        }, v3 && v3.fileCache ? v3.fileCache.name : "", ((_a2 = v3.fileCache.extension) == null ? void 0 : _a2.length) > 0 && v3.fileCache.extension != "md" && /* @__PURE__ */ Cn.createElement("span", {
          className: "nav-file-tag"
        }, v3.fileCache.extension), /* @__PURE__ */ Cn.createElement("button", {
          "aria-label": i18n_default.buttons.toggleFlow,
          className: "mk-cell-file-flow mk-inline-button",
          dangerouslySetInnerHTML: {
            __html: uiIconSet["mk-ui-flow-hover"]
          },
          onClick: (e4) => {
            if (props2.openFlow) {
              props2.openFlow(e4);
              e4.stopPropagation();
            }
          }
        }));
      } else {
        return /* @__PURE__ */ Cn.createElement("div", {
          key: i4,
          className: "mk-cell-file-title"
        }, v3.path);
      }
    }
    if (v3.fileCache) {
      return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-cell-file-item",
        onContextMenu: (e4) => triggerFileMenu(
          props2.plugin,
          getAbstractFileAtPath(app, v3.fileCache.path),
          v3.fileCache.isFolder,
          e4,
          null
        )
      }, /* @__PURE__ */ Cn.createElement(FileSticker, {
        plugin: props2.plugin,
        fileCache: v3.fileCache
      }), /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-cell-file-name",
        onClick: (e4) => openAFile(
          getAbstractFileAtPath(app, v3.fileCache.path),
          props2.plugin,
          e4.ctrlKey || e4.metaKey
        )
      }, v3 && v3.fileCache ? filePathToString(v3.fileCache.name) : "")));
    }
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-file-item"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-file-icon"
    }, /* @__PURE__ */ Cn.createElement("button", {
      onClick: (e4) => newFile(v3),
      dangerouslySetInnerHTML: {
        __html: uiIconSet["mk-ui-new-file"]
      }
    })), props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
      className: "mk-cell-file-name",
      type: "text",
      placeholder: "Untitled",
      ref: ref2,
      value: v3.path,
      onKeyDown,
      onBlur
    }) : /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-file-name"
    }, v3.path)));
  }));
};

// src/components/Space/Contexts/DataTypeView/FilePropertyCell.tsx
init_compat_module();
var humanFileSize = (bytes, si = false, dp = 1) => {
  const thresh = si ? 1e3 : 1024;
  if (Math.abs(bytes) < thresh) {
    return bytes + " B";
  }
  const units = si ? ["kB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"] : ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"];
  let u4 = -1;
  const r3 = 10 ** dp;
  do {
    bytes /= thresh;
    ++u4;
  } while (Math.round(Math.abs(bytes) * r3) / r3 >= thresh && u4 < units.length - 1);
  return bytes.toFixed(dp) + " " + units[u4];
};
var LookUpCell = (props2) => {
  const [cache, setCache] = h2(null);
  const initialValue = props2.initialValue;
  const { field, property: property2 } = parsePropString(props2.propertyValue);
  if (property2 == "folder") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop",
      onClick: () => {
        openTFolder(
          getAbstractFileAtPath(app, initialValue),
          props2.plugin,
          false
        );
      }
    }, folderPathToString(initialValue));
  }
  if (property2 == "extension") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, initialValue);
  } else if (property2 == "ctime" || property2 == "mtime") {
    const date = new Date(parseInt(initialValue)).getTime() ? new Date(parseInt(initialValue)) : null;
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, date && formatDistance3(new Date(date), new Date(), { addSuffix: true }));
  } else if (property2 == "size" || property2 == "File.size") {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-fileprop"
    }, humanFileSize(parseInt(initialValue)));
  }
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-fileprop"
  }, initialValue);
};

// src/components/Space/Contexts/DataTypeView/NumberCell.tsx
init_compat_module();
var NumberCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const ref2 = _2(null);
  const onBlur = () => {
    if (initialValue != value)
      saveValue(value);
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter") {
      e4.target.blur();
      props2.setEditMode(null);
    }
    if (e4.key == "Escape") {
      setValue(initialValue);
      e4.target.blur();
      props2.setEditMode(null);
    }
  };
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
    className: "mk-cell-text",
    type: "number",
    ref: ref2,
    value,
    onChange: (e4) => setValue(e4.target.value),
    onKeyDown,
    onBlur
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-number"
  }, value);
};

// src/components/Space/Contexts/DataTypeView/TextCell.tsx
init_compat_module();
var TextCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const ref2 = _2(null);
  const onBlur = () => {
    if (initialValue != value)
      saveValue(value);
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "Enter") {
      e4.target.blur();
      props2.setEditMode(null);
    }
    if (e4.key == "Escape") {
      setValue(initialValue);
      e4.target.blur();
      props2.setEditMode(null);
    }
  };
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  return props2.editMode > 1 ? /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    ref: ref2,
    type: "text",
    value,
    onChange: (e4) => setValue(e4.target.value),
    onKeyDown,
    onBlur
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-text"
  }, value);
};

// src/components/Space/Contexts/TableView/TableView.tsx
var import_lodash11 = __toESM(require_lodash());
var import_obsidian39 = require("obsidian");

// src/utils/ui/selection.ts
var selectNextIndex = (currIndex, array) => {
  if (!currIndex && array.length > 0)
    return array[0];
  const pos = array.indexOf(currIndex);
  if (pos < array.length - 1)
    return array[pos + 1];
  return currIndex;
};
var selectPrevIndex = (currIndex, array) => {
  const pos = array.indexOf(currIndex);
  if (pos > 0)
    return array[pos - 1];
  return array[0];
};
var selectRange = (currSel, newSel, array) => {
  const lastIndex = array.findIndex((f4) => f4 == currSel);
  const newIndex = array.findIndex((f4) => f4 == newSel);
  if (lastIndex < newIndex) {
    return array.filter((f4, i4) => i4 > lastIndex && i4 <= newIndex);
  }
  return array.filter((f4, i4) => i4 < lastIndex && i4 >= newIndex);
};

// src/components/Space/Contexts/DataTypeView/ImageCell.tsx
init_compat_module();
var ImageCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue);
  const menuRef = _2(null);
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      if (!menuRef.current)
        showModal();
    }
  }, []);
  const file = F2(() => {
    const f4 = getAbstractFileAtPath(app, value);
    return f4 ? app.vault.getResourcePath(f4) : value;
  }, [value]);
  Cn.useEffect(() => {
    setValue(initialValue);
  }, [initialValue]);
  const showModal = () => {
    const vaultChangeModal = new imageModal(
      props2.plugin,
      props2.plugin.app,
      (image) => saveValue(image)
    );
    vaultChangeModal.open();
    props2.setEditMode(null);
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-image"
  }, /* @__PURE__ */ Cn.createElement("img", {
    src: file
  }), props2.editMode > 0 ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-image-selector"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: showModal,
    className: "mk-hover-button mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-edit"] }
  }), (value == null ? void 0 : value.length) > 0 && /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveValue(""),
    className: "mk-hover-button mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/Space/Contexts/DataTypeView/LinkCell.tsx
init_compat_module();

// src/utils/flow/flowEditor.ts
var import_state5 = require("@codemirror/state");

// src/cm-extensions/flowEditor/atomic.ts
var import_state4 = require("@codemirror/state");

// src/cm-extensions/flowEditor/selectiveEditor.ts
var import_state3 = require("@codemirror/state");
var import_view3 = require("@codemirror/view");

// node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends,
  __assign: __assign2,
  __rest: __rest2,
  __decorate,
  __param,
  __esDecorate,
  __runInitializers,
  __propKey,
  __setFunctionName,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray: __spreadArray2,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn
} = import_tslib.default;

// src/cm-extensions/flowEditor/selectiveEditor.ts
var combinedRangeFacets = (rangeA, rangeB) => {
  const startRange = !(rangeA == null ? void 0 : rangeA[0]) ? rangeB[0] : !(rangeB == null ? void 0 : rangeB[0]) ? rangeA[0] : Math.max(rangeA == null ? void 0 : rangeA[0], rangeB == null ? void 0 : rangeB[0]);
  const endRange = !(rangeA == null ? void 0 : rangeA[1]) ? rangeB[1] : !(rangeB == null ? void 0 : rangeB[1]) ? rangeA[1] : Math.min(rangeA == null ? void 0 : rangeA[1], rangeB == null ? void 0 : rangeB[1]);
  return [isNaN(startRange) ? null : startRange, isNaN(endRange) ? null : endRange];
};
var editableRange = import_state3.Annotation.define();
var contentRange = import_state3.Annotation.define();
var hiddenLine = import_view3.Decoration.replace({ inclusive: true, block: true });
var hideLine = import_state3.StateField.define({
  create() {
    return import_view3.Decoration.none;
  },
  update(value, tr) {
    const builder = new import_state3.RangeSetBuilder();
    const betterFacet = combinedRangeFacets(tr.state.field(selectiveLinesFacet, false), tr.state.field(frontmatterFacet, false));
    if ((betterFacet == null ? void 0 : betterFacet[0]) != null) {
      const starterLine = Math.min(
        tr.state.doc.lines,
        betterFacet[0]
      );
      builder.add(
        tr.state.doc.line(1).from,
        tr.state.doc.line(starterLine).from - 1,
        hiddenLine
      );
      if (tr.newDoc.lines != betterFacet[1])
        builder.add(
          tr.state.doc.line(
            Math.min(tr.newDoc.lines, betterFacet[1])
          ).to,
          tr.state.doc.line(tr.newDoc.lines).to,
          hiddenLine
        );
    }
    const dec = builder.finish();
    return dec;
  },
  provide: (f4) => import_view3.EditorView.decorations.from(f4)
});
var frontmatterFacet = import_state3.StateField.define({
  create: () => [void 0, void 0],
  update(value, tr) {
    if (tr.annotation(contentRange)) {
      if (tr.annotation(contentRange)[0]) {
        return [
          tr.annotation(contentRange)[0],
          Math.min(tr.state.doc.lines, tr.annotation(contentRange)[1])
        ];
      }
      return tr.annotation(contentRange);
    }
    return value;
  }
});
var selectiveLinesFacet = import_state3.StateField.define({
  create: () => [void 0, void 0],
  update(value, tr) {
    if (tr.annotation(editableRange)) {
      if (tr.annotation(editableRange)[0]) {
        return [
          tr.annotation(editableRange)[0],
          Math.min(tr.state.doc.lines, tr.annotation(editableRange)[1])
        ];
      }
      return tr.annotation(editableRange);
    }
    return value;
  }
});
var lineRangeToPosRange = (state, range) => {
  return {
    from: state.doc.line(range[0]).from,
    to: state.doc.line(Math.min(state.doc.lines, range[1])).to
  };
};
var smartDelete = import_state3.EditorState.transactionFilter.of(
  (tr) => {
    if (tr.isUserEvent("delete") && !tr.annotation(import_state3.Transaction.userEvent).endsWith(".smart")) {
      const initialSelections = tr.startState.selection.ranges.map((range) => ({
        from: range.from,
        to: range.to
      }));
      const betterFacet = combinedRangeFacets(tr.startState.field(selectiveLinesFacet, false), tr.startState.field(frontmatterFacet, false));
      if (initialSelections.length > 0 && (betterFacet == null ? void 0 : betterFacet[0])) {
        const posRange = lineRangeToPosRange(
          tr.startState,
          betterFacet
        );
        if (tr.changes.touchesRange(0, posRange.from - 1)) {
          const minFrom = Math.max(posRange.from, initialSelections[0].from);
          const minTo = Math.min(posRange.to, initialSelections[0].to);
          return [{
            changes: {
              from: Math.min(minFrom, minTo),
              to: Math.max(minFrom, minTo)
            },
            annotations: import_state3.Transaction.userEvent.of(
              `${tr.annotation(import_state3.Transaction.userEvent)}.smart`
            )
          }];
        }
      }
    }
    return tr;
  }
);
var preventModifyTargetRanges = import_state3.EditorState.transactionFilter.of(
  (tr) => {
    const newTrans = [];
    try {
      const editableLines = tr.startState.field(selectiveLinesFacet, false);
      const contentLines = tr.startState.field(frontmatterFacet, false);
      const selectiveLines = combinedRangeFacets(editableLines, contentLines);
      if (tr.isUserEvent("input") || tr.isUserEvent("delete") || tr.isUserEvent("move")) {
        if (selectiveLines == null ? void 0 : selectiveLines[0]) {
          const posRange = lineRangeToPosRange(
            tr.startState,
            selectiveLines
          );
          if (!tr.changes.touchesRange(posRange.from, posRange.to)) {
            return [];
          }
        }
      }
      if (tr.state.doc.lines != tr.startState.doc.lines) {
        const numberNewLines = tr.state.doc.lines - tr.startState.doc.lines;
        if (selectiveLines == null ? void 0 : selectiveLines[0]) {
          const posRange = lineRangeToPosRange(
            tr.startState,
            selectiveLines
          );
          if (tr.changes.touchesRange(0, posRange.from - 1)) {
            const newAnnotations = [];
            if (editableLines[0]) {
              newAnnotations.push(editableRange.of([
                editableLines[0] + numberNewLines,
                editableLines[1] + numberNewLines
              ]));
            }
            if (contentLines[0]) {
              newAnnotations.push(contentRange.of([
                contentLines[0] + numberNewLines,
                contentLines[1] + numberNewLines
              ]));
            }
            newTrans.push({
              annotations: newAnnotations
            });
          } else if (tr.changes.touchesRange(posRange.from - 1, posRange.to)) {
            const newAnnotations = [];
            if (editableLines[0]) {
              newAnnotations.push(editableRange.of([
                editableLines[0],
                editableLines[1] + numberNewLines
              ]));
            }
            if (contentLines[0]) {
              newAnnotations.push(contentRange.of([
                contentLines[0],
                contentLines[1] + numberNewLines
              ]));
            }
            newTrans.push({
              annotations: newAnnotations
            });
          }
        }
      }
    } catch (e4) {
      return [];
    }
    return [tr, ...newTrans];
  }
);
var readOnlyRangesExtension = [smartDelete, preventModifyTargetRanges];
var editBlockExtensions = () => [
  readOnlyRangesExtension,
  hideLine,
  selectiveLinesFacet,
  frontmatterFacet
];

// src/cm-extensions/flowEditor/atomic.ts
var arrowKeyAnnotation = import_state4.Annotation.define();
var atomicSelect = import_state4.EditorState.transactionFilter.of(
  (tr) => {
    if (tr.isUserEvent("delete") || tr.isUserEvent("input")) {
      return tr;
    }
    const flowID = tr.startState.field(flowIDStateField, false);
    if (tr.annotation(arrowKeyAnnotation) && flowID) {
      const oldSel = tr.startState.selection.main;
      const lineRange = tr.state.field(selectiveLinesFacet, false);
      const posRange = lineRange && lineRange[0] != void 0 ? lineRangeToPosRange(tr.startState, lineRange) : { from: 0, to: tr.startState.doc.length };
      if (oldSel.from <= posRange.from && tr.annotation(arrowKeyAnnotation) == 3) {
        focusFlowEditorParent(flowID, true);
      }
      if (oldSel.to >= posRange.to && tr.annotation(arrowKeyAnnotation) == 4) {
        focusFlowEditorParent(flowID, false);
      }
      return tr;
    }
    const selection = tr.newSelection.main;
    if (selection.from == 0 && selection.to == 0 || selection.from != selection.to)
      return tr;
    const flowEditors = tr.state.field(flowEditorInfo, false);
    if (flowEditors) {
      for (const info of flowEditors) {
        if (info.embed == 1) {
          if (info.from - 3 <= selection.from && info.to + 2 >= selection.to && info.expandedState == 2) {
            const top = tr.annotation(arrowKeyAnnotation) == 1 || tr.startState.selection.main.from > selection.from ? false : true;
            focusFlowEditor(info.id, top);
            return {
              selection: import_state4.EditorSelection.single(info.from - 4)
            };
            break;
          }
        }
      }
    }
    return tr;
  }
);

// src/components/Space/Editor/EmbedView/EmbedContextView.tsx
var import_obsidian36 = require("obsidian");
init_compat_module();

// src/components/Space/Frames/ViewNodes/FrameRoot.tsx
var import_lodash10 = __toESM(require_lodash());
init_compat_module();

// src/utils/frames/runner.ts
function extractDependencies(code) {
  const dependencies = [];
  function visit(node, parts = []) {
    if (node.type === "Identifier") {
      parts.push(node.name);
      return parts;
    } else if (node.type === "MemberExpression") {
      const objectParts = visit(node.object, parts);
      if (objectParts && node.computed) {
        if (node.property.type === "Literal") {
          objectParts.push(String(node.property.value));
          return objectParts;
        } else {
          return null;
        }
      } else if (objectParts) {
        return visit(node.property, objectParts);
      }
    } else if (node.type === "Literal") {
      parts.push(String(node.value));
      return parts;
    }
    return null;
  }
  function explore(node) {
    if (node.type === "MemberExpression") {
      const parts = visit(node);
      if (parts) {
        dependencies.push(parts);
      }
      return;
    }
    for (const key2 in node) {
      if (typeof node[key2] === "object" && node[key2] !== null) {
        explore(node[key2]);
      }
    }
  }
  try {
    const ast = parse3(code.replace("return ", ""), { ecmaVersion: 2020 });
    explore(ast);
  } catch (e4) {
    return [];
  }
  return dependencies;
}
function sortKeysByDependencies(codeBlockStore, identifier) {
  const graph = /* @__PURE__ */ new Map();
  const dependencies = /* @__PURE__ */ new Map();
  const allDependencies = /* @__PURE__ */ new Map();
  for (const key2 in codeBlockStore) {
    const code = codeBlockStore[key2];
    const extractedDependencies = extractDependencies(code);
    const localDependencies = extractedDependencies.filter((dep) => {
      return dep.slice(0, -1).join(".") === identifier;
    });
    dependencies.set(key2, localDependencies);
    allDependencies.set(key2, extractedDependencies);
    if (!graph.has(key2)) {
      graph.set(key2, /* @__PURE__ */ new Set());
    }
    for (const dep of localDependencies) {
      const depStr = dep[dep.length - 1];
      if (depStr === key2)
        continue;
      graph.get(key2).add(depStr);
    }
  }
  const visited = /* @__PURE__ */ new Set();
  const result = [];
  const temp = /* @__PURE__ */ new Set();
  const visit = (key2) => {
    if (temp.has(key2))
      throw new Error("Circular dependency detected");
    if (!visited.has(key2)) {
      temp.add(key2);
      const edges = graph.get(key2) || /* @__PURE__ */ new Set();
      for (const dep of edges) {
        visit(dep);
      }
      visited.add(key2);
      temp.delete(key2);
      result.push(key2);
    }
  };
  for (const key2 in codeBlockStore) {
    if (!visited.has(key2)) {
      visit(key2);
    }
  }
  return { sortedKeys: result, dependencies: allDependencies };
}
var executeTreeNode = async (_treeNode, state, api, saveState, root2, runID, newState) => {
  var _a2, _b2, _c2;
  const treeNode = _treeNode;
  let execState = await executeNode(treeNode.node, { state, newState }, api);
  if (treeNode.node.type == "list") {
    let uid = 0;
    treeNode.children = parseMultiString(execState.state[treeNode.id].props.value).flatMap((f4, i4) => treeNode.children.map((n2) => {
      const [tree, m5] = linkTreeNodes({ ...n2, node: { ...n2.node, props: { ...n2.node.props, value: wrapQuotes(f4) } } }, uid);
      uid = m5;
      return tree;
    }));
  }
  if (typeof ((_b2 = (_a2 = execState.state[treeNode.id]) == null ? void 0 : _a2.actions) == null ? void 0 : _b2.onRun) == "function") {
    (_c2 = execState.state[treeNode.id].actions) == null ? void 0 : _c2.onRun(
      execState,
      (s5) => {
        saveState(s5, { state: execState.state, root: root2, id: runID });
      },
      api
    );
  }
  for (let i4 = 0; i4 < treeNode.children.length; i4++) {
    const [newState2, newNode] = await executeTreeNode(treeNode.children[i4], execState.state, api, saveState, root2, runID, execState.newState).then((f4) => [{ state: f4.state, newState: f4.newState }, f4.root]);
    execState = newState2;
    treeNode.children[i4] = newNode;
  }
  return { id: runID, root: treeNode, state: execState.state, newState: execState.newState };
};
var executeNode = async (node, results, api) => {
  const propResults = await executePropsCodeBlocks(node, results, api);
  const stylesResults = executeCodeBlocks(node, "styles", propResults);
  const actions = executeCodeBlocks(node, "actions", stylesResults);
  return actions;
};
var executePropsCodeBlocks = async (node, results, api) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k;
  const { type, props: props2, id: id2 } = node;
  const codeBlockStore = props2 != null ? props2 : {};
  const { sortedKeys, dependencies } = sortKeysByDependencies(codeBlockStore, `${node.id}.props`);
  const runKeys = results.newState ? sortedKeys.filter((f4) => {
    var _a3, _b3, _c3, _d3, _e3, _f2;
    const deps = dependencies.get(f4);
    if (f4 in ((_c3 = (_b3 = (_a3 = results.newState) == null ? void 0 : _a3[node.id]) == null ? void 0 : _b3["props"]) != null ? _c3 : {})) {
      return true;
    }
    for (const dep of deps) {
      if (dep[0] == "api")
        return true;
      if ((_f2 = (_e3 = (_d3 = results.newState) == null ? void 0 : _d3[dep[0]]) == null ? void 0 : _e3[dep[1]]) == null ? void 0 : _f2[dep[2]]) {
        return true;
      }
    }
    return false;
  }) : sortedKeys.filter((f4) => {
    var _a3;
    return ((_a3 = codeBlockStore[f4]) == null ? void 0 : _a3.length) > 0;
  });
  const environment = results.state;
  environment[id2] = {
    props: (_b2 = (_a2 = results.state[id2]) == null ? void 0 : _a2.props) != null ? _b2 : {},
    actions: (_d2 = (_c2 = results.state[id2]) == null ? void 0 : _c2.actions) != null ? _d2 : {},
    styles: (_f = (_e2 = results.state[id2]) == null ? void 0 : _e2.styles) != null ? _f : {},
    contexts: (_h = (_g = results.state[id2]) == null ? void 0 : _g.contexts) != null ? _h : {}
  };
  environment.api = api;
  for (const key2 of runKeys) {
    try {
      let result;
      if (key2 in (((_j = (_i = results.newState) == null ? void 0 : _i[node.id]) == null ? void 0 : _j["props"]) || {})) {
        result = results.newState[node.id]["props"][key2];
      } else {
        const isMultiLine = codeBlockStore[key2].includes("\n");
        const func = isMultiLine ? new Function(`with(this) { ${codeBlockStore[key2]} }`) : new Function(`with(this) { return ${codeBlockStore[key2]}; }`);
        result = func.call(environment);
        if (result instanceof Promise) {
          result = await result;
        }
      }
      environment[id2]["props"][key2] = result;
      results.state[id2]["props"][key2] = result;
      if (results.newState) {
        results.newState[id2] = (_k = results.newState[id2]) != null ? _k : { props: {}, styles: {}, actions: {}, contexts: {} };
        results.newState[id2]["props"][key2] = result;
      }
    } catch (error) {
      console.log(error);
    }
  }
  return results;
};
function executeCodeBlocks(node, type, results) {
  var _a2;
  const codeBlockStore = (_a2 = node[type]) != null ? _a2 : {};
  for (const key2 of Object.keys(codeBlockStore)) {
    try {
      const isMultiLine = typeof codeBlockStore[key2] === "string" || codeBlockStore[key2] instanceof String ? codeBlockStore[key2].includes("\n") : false;
      const func = isMultiLine && !(type == "actions") ? new Function(`with(this) { ${codeBlockStore[key2]} }`) : new Function(`with(this) { return ${codeBlockStore[key2]}; }`);
      const result = func.call(results.state);
      parseKeyResult(results.state[node.id][type], key2, result);
    } catch (error) {
      console.log(error);
    }
  }
  return results;
}
var parseKeyResult = (resultStore, key2, result) => {
  if (key2 == "layout") {
    if (result == "row" || result == "column") {
      resultStore["display"] = "flex";
      resultStore["flexDirection"] = result;
      return;
    }
    resultStore["display"] = result;
    return;
  }
  resultStore[key2] = result;
};

// src/components/Space/Frames/ViewNodes/FrameView.tsx
init_compat_module();

// src/components/Space/Editor/FlowView.tsx
init_compat_module();
var FlowView = (props2) => {
  var _a2;
  const ref2 = _2(null);
  const loadFile = async () => {
    var _a3;
    const div = ref2.current;
    const path = uriByString(props2.path, props2.source);
    const { ref: refStr, type } = path;
    let from = props2.from;
    let to = props2.to;
    if (((_a3 = path.refStr) == null ? void 0 : _a3.length) > 0 && path.type == "file") {
      [from, to] = getLineRangeFromRef(
        getAbstractFileAtPath(app, path.path),
        path.refStr,
        props2.plugin
      );
    }
    const portalType = type == "tag" || type == "folder" ? "context" : "doc";
    await spawnLeafFromFile(
      props2.plugin,
      props2.leaf,
      props2.source,
      path,
      div,
      portalType,
      from,
      to
    );
  };
  const toggleFlow = () => {
    if (props2.load) {
      loadFile();
    } else {
      ref2.current.empty();
    }
  };
  p2(() => {
    toggleFlow();
  }, [props2.load, props2.path, props2.from, props2.to]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `${(_a2 = props2.classname) != null ? _a2 : ""} "mk-flowspace-editor"`,
    ref: ref2
  });
};

// src/components/ui/menus/linkMenu.tsx
var showLinkMenu = (e4, plugin, saveLink) => {
  const offset2 = e4.target.getBoundingClientRect();
  const options = getAllAbstractFilesInVault(plugin, app).map((f4) => ({
    name: fileNameToString(f4.name),
    value: f4.path
  }));
  showSelectMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      plugin,
      multi: false,
      editable: false,
      value: [],
      options,
      saveOptions: (_12, value) => {
        saveLink(value[0]);
      },
      placeholder: i18n_default.labels.linkItemSelectPlaceholder,
      detail: true,
      searchable: true
    }
  );
};

// src/context/FrameEditorContext.tsx
var import_lodash9 = __toESM(require_lodash());
var import_obsidian27 = require("obsidian");
init_compat_module();

// src/utils/frames/frames.ts
var stringIsConst = (str) => {
  const hasQuotesAtStartEndOnly = /^["'][^"']*["'](?:;)?$/.test(str);
  const isNumber = !isNaN(parseFloat(str)) && isFinite(str);
  return hasQuotesAtStartEndOnly || isNumber || str == null || str == "";
};
var newUniqueNode = (node, parent, otherNodes, schemaId) => {
  const id2 = uniqueNameFromString(
    node.node.id,
    otherNodes.map((f4) => f4.id)
  );
  return {
    ...node.node,
    id: id2,
    schemaId,
    parentId: parent
  };
};

// src/context/FrameEditorContext.tsx
var FramesEditorContext = F({
  root: null,
  runRoot: () => null,
  instance: { state: {}, id: null, root: null },
  saveState: () => null,
  fastSaveState: () => null,
  nodes: [],
  properties: [],
  dragNode: null,
  setDragNode: () => null,
  hoverNode: null,
  setHoverNode: () => null,
  selectedNodes: [],
  selectNodes: () => null,
  saveProperty: () => false,
  newProperty: () => false,
  delProperty: () => null,
  groupNodes: () => null,
  renameNode: () => null,
  addNode: () => null,
  deleteNode: () => null,
  saveNodes: () => null,
  moveUp: () => null,
  moveDown: () => null,
  moveToRank: () => null,
  moveNodeFromSchema: () => null
});
var FramesEditorProvider = (props2) => {
  var _a2;
  const { spaceInfo } = q2(SpaceContext);
  const {
    frameSchema,
    setFrameSchema: setDBSchema,
    saveFrame,
    frameSchemas: schemas,
    tableData,
    getMDBData
  } = q2(FramesMDBContext);
  const [hoverNode, setHoverNode] = h2(null);
  const [dragNode, setDragNode] = h2(null);
  const [selectedNodes, setSelectedNodes] = h2([]);
  const nodes = F2(() => {
    var _a3;
    if (!frameSchema)
      return [];
    const frames2 = (_a3 = tableData == null ? void 0 : tableData.rows.map(
      (f4) => f4.id == frameSchema.id ? {
        ...frameToNode(f4),
        types: tableData.cols.reduce(
          (p3, c4) => ({ ...p3, [c4.name]: c4.type }),
          {}
        )
      } : frameToNode(f4)
    )) != null ? _a3 : [];
    const _root = schemaToRoot(frameSchema);
    if (frames2.some((f4) => f4.id == _root.id)) {
      return frames2;
    }
    return [...frames2, _root];
  }, [tableData, frameSchema]);
  const [root2, setRoot] = h2(null);
  const [instance, setInstance] = h2({
    state: {},
    id: null,
    root: null
  });
  const activeRunID = _2(null);
  const saveState = (newState, instance2) => {
    const { root: _root, id: runID, state } = instance2;
    if (activeRunID.current != runID)
      return;
    executeTreeNode(
      applyPropsToRoot(_root, props2.props),
      state,
      props2.plugin.index.api,
      saveState,
      _root,
      runID,
      newState
    ).then(
      (s5) => setInstance((p3) => {
        return s5;
      })
    );
  };
  const fastSaveState = (newState) => {
    setInstance((p3) => {
      return { ...p3, state: newState };
    });
  };
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const runRoot = () => {
    var _a3;
    if ((frameSchema == null ? void 0 : frameSchema.type) == "frame" || (frameSchema == null ? void 0 : frameSchema.type) == "listitem") {
      const _newRoot = buildRoot(
        frameSchema,
        (_a3 = tableData == null ? void 0 : tableData.cols) != null ? _a3 : [],
        nodes,
        props2.plugin
      );
      setRoot(_newRoot);
      if (_newRoot) {
        const newRoot = import_lodash9.default.cloneDeep(_newRoot);
        const runID = (0, import_lodash9.uniqueId)();
        activeRunID.current = runID;
        executeTreeNode(
          applyPropsToRoot(newRoot, props2.props),
          {},
          props2.plugin.index.api,
          saveState,
          newRoot,
          runID
        ).then((s5) => {
          setInstance((p3) => {
            return s5;
          });
          activeRunID.current = s5.id;
        });
        if (selectedNodes.length == 0) {
          setSelectedNodes([newRoot.node]);
        } else {
          setSelectedNodes(
            nodes.filter((f4) => selectedNodes.find((g4) => g4.id == f4.id))
          );
        }
      }
    }
  };
  const refreshFrame = (e4) => {
    if (e4.detail.type == "frames" && e4.detail.name == spaceInfo.path) {
      runRoot();
    }
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshFrame);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshFrame);
    };
  }, [spaceInfo]);
  p2(() => {
    runRoot();
  }, [frameSchema, nodes, tableData, props2.props]);
  const moveUp = (node) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex <= 0) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    const swappedItem = items[itemIndex - 1];
    [item.rank, swappedItem.rank] = [swappedItem.rank, item.rank];
    saveNodes(items);
  };
  const moveDown = (node) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex < 0 || itemIndex >= items.length - 1) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    const swappedItem = items[itemIndex + 1];
    [item.rank, swappedItem.rank] = [swappedItem.rank, item.rank];
    saveNodes(items.sort((a5, b4) => a5.rank - b4.rank));
  };
  const moveToRank = (node, newRank) => {
    const items = nodes.filter((f4) => f4.parentId == node.parentId).sort((a5, b4) => a5.rank - b4.rank).map((f4, i4) => ({ ...f4, rank: i4 }));
    const itemIndex = items.findIndex((item2) => item2.id === node.id);
    if (itemIndex < 0 || newRank < 0 || newRank >= items.length) {
      saveNodes(items);
      return;
    }
    const item = items[itemIndex];
    const currentRank = item.rank;
    item.rank = newRank;
    items.forEach((otherItem) => {
      if (otherItem.id !== node.id) {
        if (currentRank < newRank && otherItem.rank > currentRank && otherItem.rank <= newRank) {
          otherItem.rank--;
        } else if (currentRank > newRank && otherItem.rank >= newRank && otherItem.rank < currentRank) {
          otherItem.rank++;
        }
      }
    });
    saveNodes(items);
  };
  const groupNodes = (treeNodes) => {
    const parentId = treeNodes[0].id == frameSchema.id ? "" : treeNodes[0].parentId;
    const group = {
      ...newUniqueNode(groupNode, parentId, nodes, frameSchema.id)
    };
    const newNodes = treeNodes.map((f4) => {
      const node = import_lodash9.default.cloneDeep(f4);
      node.parentId = group.id;
      return node;
    });
    saveNodes([group, ...newNodes]);
  };
  const addNode = (treeNode, target) => {
    const id2 = uniqueNameFromString(
      treeNode.id,
      nodes.map((f4) => f4.id)
    );
    let parent = target ? target : selectedNodes.length > 0 ? selectedNodes[0] : root2.node;
    let rank = parent.rank;
    if (!groupableTypes.some((f4) => parent.type == f4)) {
      parent = findParent(root2, parent.id).node;
    } else {
      rank = nodes.filter((f4) => f4.parentId == parent.id).length;
    }
    const newTreeNode = {
      ...treeNode,
      id: id2,
      schemaId: frameSchema.id,
      parentId: parent.id
    };
    saveNodes([{ ...newTreeNode, rank }]);
  };
  const saveNodes = async (treeNodes) => {
    var _a3, _b2, _c2;
    if (!tableData) {
      return;
    }
    const newRows = ((_a3 = tableData == null ? void 0 : tableData.rows) == null ? void 0 : _a3.some((f4) => f4.id == root2.id)) ? tableData.rows : [...(_b2 = tableData == null ? void 0 : tableData.rows) != null ? _b2 : [], nodeToFrame(root2.node)];
    const insertRows = treeNodes.filter((f4) => !newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
    const modRows = treeNodes.filter((f4) => newRows.some((g4) => g4.id == f4.id)).map((f4) => nodeToFrame(f4));
    const newTable = {
      ...tableData,
      cols: (_c2 = tableData.cols) != null ? _c2 : [],
      rows: [
        ...newRows.map((f4) => {
          var _a4;
          return (_a4 = modRows.find((g4) => g4.id == f4.id)) != null ? _a4 : f4;
        }),
        ...insertRows
      ]
    };
    await saveFrame(newTable);
  };
  const moveNodeFromSchema = async (nodeId, schemaId, newParentId, styles2) => {
    const oldTable = await getMDBData();
    if (!oldTable[schemaId])
      return;
    const tableNodes = oldTable[schemaId].rows.map(
      (g4) => frameToNode(g4)
    );
    const oldSchema = schemas.find((f4) => f4.id == schemaId);
    const treeNode = tableNodes.find((f4) => f4.id == nodeId);
    if (!oldSchema || !treeNode)
      return;
    const tree = buildFrameTree(
      treeNode,
      tableNodes,
      props2.plugin,
      0,
      false
    )[0];
    const deleteNodes = flattenToFrameNodes(tree);
    const newTreeNodes = deleteNodes.map((f4) => ({
      ...f4,
      schemaId: frameSchema.id,
      styles: f4.id == nodeId && styles2 ? {
        ...f4.styles,
        ...styles2
      } : f4.styles,
      parentId: f4.id == nodeId ? newParentId : f4.parentId
    }));
    await saveFrame({
      ...oldTable[frameSchema.id],
      rows: oldTable[frameSchema.id].rows.filter(
        (f4) => !deleteNodes.some((g4) => f4.schemaId == g4.schemaId && f4.id == g4.id)
      )
    });
    await saveFrame({
      ...tableData,
      rows: [
        ...tableData.rows,
        ...newTreeNodes.map((f4) => nodeToFrame(f4))
      ]
    });
  };
  const deleteNode = (treeNode) => {
    const tree = buildFrameTree(treeNode, nodes, props2.plugin, 0, false)[0];
    const parent = findParent(root2, treeNode.id);
    const deleteNodes = flattenToFrameNodes(tree);
    if ((parent == null ? void 0 : parent.children.length) == 1 && parent.node.type == "column")
      deleteNodes.push(parent.node);
    saveFrame({
      ...tableData,
      rows: tableData.rows.filter(
        (f4) => !deleteNodes.some((g4) => f4.schemaId == g4.schemaId && f4.id == g4.id)
      )
    });
  };
  const properties2 = (_a2 = tableData == null ? void 0 : tableData.cols) != null ? _a2 : [];
  const selectNodes = (frames2) => {
    setSelectedNodes(frames2);
  };
  const delProperty = (column) => {
    const mdbtable = tableData;
    const newFields = mdbtable.cols.filter(
      (f4, i4) => f4.name != column.name
    );
    const newTable = {
      ...mdbtable,
      cols: newFields != null ? newFields : []
    };
    saveFrame(newTable);
  };
  const newProperty = (col) => {
    return saveProperty(col);
  };
  const renameNode = (node, newName) => {
  };
  const saveProperty = (newColumn, oldColumn) => {
    const column = {
      ...newColumn,
      name: sanitizeColumnName(newColumn.name)
    };
    const mdbtable = tableData;
    if (column.name == "") {
      new import_obsidian27.Notice(i18n_default.notice.noPropertyName);
      return false;
    }
    if (!oldColumn && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    ) || oldColumn && oldColumn.name != column.name && mdbtable.cols.find(
      (f4) => f4.name.toLowerCase() == column.name.toLowerCase()
    )) {
      new import_obsidian27.Notice(i18n_default.notice.duplicatePropertyName);
      return false;
    }
    const oldFieldIndex = oldColumn ? mdbtable.cols.findIndex((f4) => f4.name == oldColumn.name) : -1;
    const newFields = oldFieldIndex == -1 ? [...mdbtable.cols, column] : mdbtable.cols.map((f4, i4) => i4 == oldFieldIndex ? column : f4);
    const newTable = {
      ...mdbtable,
      cols: newFields != null ? newFields : []
    };
    saveFrame(newTable);
    return true;
  };
  return /* @__PURE__ */ Cn.createElement(FramesEditorContext.Provider, {
    value: {
      root: root2,
      runRoot,
      instance,
      dragNode,
      fastSaveState,
      setDragNode,
      hoverNode,
      setHoverNode,
      saveState,
      nodes,
      properties: properties2,
      addNode,
      deleteNode,
      selectedNodes,
      selectNodes,
      saveProperty,
      newProperty,
      renameNode,
      delProperty,
      saveNodes,
      moveUp,
      moveDown,
      moveToRank,
      moveNodeFromSchema,
      groupNodes
    }
  }, props2.children);
};

// src/components/Space/Frames/EditorNodes/FlowNodeView.tsx
init_compat_module();
function parseContent(input) {
  const regex1 = /!\[!\[(.*?)\]\]/;
  const regex2 = /!!\[\[(.*?)\]\]/;
  const match1 = input.match(regex1);
  const match2 = input.match(regex2);
  return match1 ? match1[1] : match2 ? match2[1] : input;
}
var FlowNodeView = (props2) => {
  var _a2, _b2;
  const fullPath = (_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.props) == null ? void 0 : _b2.value;
  const path = fullPath ? parseContent(fullPath) : null;
  const { saveNodes } = q2(FramesEditorContext);
  const selectLink = (e4) => {
    showLinkMenu(
      e4,
      props2.plugin,
      (link) => saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(link) }
        }
      ])
    );
  };
  return props2.instance.state[props2.treeNode.id] && path ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(FlowView, {
    source: props2.source,
    plugin: props2.plugin,
    path,
    load: true,
    classname: "mk-flow-node"
  })) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-placeholder",
    onClick: (e4) => selectLink(e4)
  }, "Select Note");
};

// src/components/Space/Frames/EditorNodes/FrameNodeView.tsx
var import_classnames = __toESM(require_classnames());

// src/utils/contexts/mdtable.ts
var createTable2 = (object, columns) => {
  const columnNames = columns.map((f4) => f4.name);
  const base2 = "|";
  let outputString = base2 + columnNames.join(base2) + "|\n";
  columns.forEach((f4) => {
    outputString += base2 + "----";
  });
  outputString += base2 + "\n";
  object.forEach((row) => {
    outputString += columnNames.map((c4) => base2 + row[c4]).join("") + "|\n";
  });
  return outputString;
};
var createInlineTable = async (plugin, path) => {
  const context = spaceInfoByPath(plugin, path);
  const schemas = await getMDBTableSchemas(plugin, context, "context");
  if (schemas)
    return uniqueNameFromString(
      "Table",
      schemas.map((f4) => f4.id)
    );
  return "Table";
};

// src/components/ui/menus/newFrameMenu.tsx
var showNewFrameMenu = (e4, plugin, space, addNode) => {
  const offset2 = e4.target.getBoundingClientRect();
  const kits = plugin.settings.quickFrames.flatMap((s5) => {
    var _a2, _b2;
    const frameSchemas = (_b2 = (_a2 = plugin.index.framesIndex.get(s5)) == null ? void 0 : _a2.schemas) != null ? _b2 : [];
    return frameSchemas.map((f4) => mdbSchemaToFrameSchema(f4)).map((f4) => ({
      id: `${s5}#*${f4.id}`,
      def: f4.def,
      node: {
        ...schemaToFrame(f4),
        ref: `${s5}#*${f4.id}`
      }
    }));
  });
  const presets = [
    {
      name: "New Note",
      value: { type: "preset", value: "note" },
      section: "default",
      icon: "ui//mk-make-flow"
    },
    {
      name: "Table",
      value: { type: "preset", value: "table" },
      section: "default",
      icon: "ui//mk-make-table"
    }
  ];
  const defaultElements = [
    flowNode,
    spaceNode,
    textNode,
    imageNode,
    iconNode
  ];
  const defaultFrames = [
    buttonNode,
    linkNode,
    cardNode,
    progressNode
  ];
  const options = [
    ...presets,
    ...defaultElements.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "element", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    }),
    ...defaultFrames.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "default", value: f4 },
        section: "element",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    }),
    ...kits.map((f4) => {
      var _a2;
      return {
        name: f4.node.name,
        value: { type: "kit", value: f4.node },
        section: "kit",
        icon: (_a2 = f4.def) == null ? void 0 : _a2.icon
      };
    })
  ];
  const insertNode = async (item) => {
    if (item.type == "preset") {
      if (item.value == "note") {
        if (space.uri.type == "folder") {
          const newFile = await createNewMarkdownFile(
            plugin,
            getAbstractFileAtPath(app, space.path),
            "",
            null,
            true
          );
          addNode({
            ...flowNode.node,
            props: { value: `'${newFile.path}'` }
          });
        } else {
          const _space = plugin.index.spacesIndex.get(space.path);
          if (_space) {
            const newFile = await newFileInSpace(
              plugin,
              space,
              uriByString(space.path),
              false,
              true
            );
            addNode({
              ...flowNode.node,
              props: { value: `'${newFile.path}'` }
            });
          }
        }
      } else if (item.value == "table") {
        const table = await createInlineTable(plugin, space.uri.fullPath);
        addNode({
          ...spaceNode.node,
          props: { value: `'${space.uri.fullPath}/#^${table}'` }
        });
      } else if (item.value == "link") {
      }
    } else if (item.type == "default") {
      addNode({
        ...item.value.node,
        type: "frame",
        ref: "spaces://$kit/#*" + item.value.node.id
      });
    } else if (item.type == "element") {
      addNode({
        ...item.value.node
      });
    }
  };
  showSelectMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      plugin,
      multi: false,
      editable: false,
      value: [],
      options,
      saveOptions: (_12, value) => insertNode(value[0]),
      searchable: false,
      showAll: true
    }
  );
};

// src/components/ui/menus/showFramePropsMenu.tsx
var import_obsidian28 = require("obsidian");

// src/components/ui/menus/spaceMenu.tsx
var showSpacesMenu = (e4, plugin, saveLink) => {
  const offset2 = e4.target.getBoundingClientRect();
  const options = plugin.index.allSpaces().map((f4) => ({
    name: f4.name,
    value: f4.path
  }));
  showSelectMenu(
    { x: offset2.left, y: offset2.top + 30 },
    {
      plugin,
      multi: false,
      editable: false,
      value: [],
      options,
      saveOptions: (_12, value) => {
        saveLink(value[0]);
      },
      placeholder: i18n_default.labels.linkItemSelectPlaceholder,
      detail: true,
      searchable: true
    }
  );
};

// src/components/ui/menus/showFramePropsMenu.tsx
var showFramePropsMenu = (props2) => {
  const {
    plugin,
    position,
    fields,
    deleteFrame,
    duplicateFrame,
    frameProps,
    savePropValue,
    saveStyleValue
  } = props2;
  const showValueMenu = (e4, field) => {
    const currentValue = removeQuotes(frameProps[field.name]);
    switch (field.type) {
      case "space":
        {
          const menu2 = new import_obsidian28.Menu();
          menu2.setUseNativeMenu(false);
          menu2.addItem((menuItem) => {
            menuItem.setIcon("type");
            menuItem.setTitle("Select Space");
            menuItem.onClick(
              (e5) => showSpacesMenu(
                e5,
                props2.plugin,
                (link) => savePropValue(field.name, wrapQuotes(link + "#^files"))
              )
            );
          });
          menu2.addSeparator();
          props2.schemaProps.filter((f4) => f4.type == field.type).forEach((f4) => {
            menu2.addItem((menuItem) => {
              menuItem.setTitle(f4.name);
              menuItem.setIcon("type");
              menuItem.onClick((e5) => {
                savePropValue(field.name, `${f4.schemaId}.props.${f4.name}`);
              });
            });
          });
          const offset2 = e4.target.getBoundingClientRect();
          menu2.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        }
        break;
      case "link":
        {
          const menu2 = new import_obsidian28.Menu();
          menu2.setUseNativeMenu(false);
          menu2.addItem((menuItem) => {
            menuItem.setIcon("type");
            menuItem.setTitle("Select Note");
            menuItem.onClick(
              (e5) => showLinkMenu(
                e5,
                props2.plugin,
                (link) => savePropValue(field.name, wrapQuotes(link))
              )
            );
          });
          menu2.addSeparator();
          props2.schemaProps.filter((f4) => f4.type == field.type).forEach((f4) => {
            menu2.addItem((menuItem) => {
              menuItem.setTitle(f4.name);
              menuItem.setIcon("type");
              menuItem.onClick((e5) => {
                savePropValue(field.name, `${f4.schemaId}.props.${f4.name}`);
              });
            });
          });
          const offset2 = e4.target.getBoundingClientRect();
          menu2.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        }
        break;
      case "icon":
        {
          const vaultChangeModal = new stickerModal(
            props2.plugin.app,
            props2.plugin,
            (emoji) => savePropValue(field.name, wrapQuotes(emoji))
          );
          vaultChangeModal.open();
        }
        break;
      case "image":
        {
          const vaultChangeModal = new imageModal(
            props2.plugin,
            props2.plugin.app,
            (image) => savePropValue(field.name, wrapQuotes(image))
          );
          vaultChangeModal.open();
        }
        break;
      case "text":
      case "number":
        {
          const menu2 = new import_obsidian28.Menu();
          menu2.setUseNativeMenu(false);
          menu2.addItem((menuItem) => {
            inputMenuItem(
              menuItem,
              currentValue,
              (value) => savePropValue(field.name, wrapQuotes(value))
            );
            menuItem.setIcon("type");
          });
          props2.schemaProps.forEach((f4) => {
            menu2.addItem((menuItem) => {
              menuItem.setTitle(f4.name);
              menuItem.setIcon("type");
              menuItem.onClick((e5) => {
                savePropValue(field.name, `${f4.schemaId}.props.${f4.name}`);
              });
            });
          });
          const offset2 = e4.target.getBoundingClientRect();
          menu2.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        }
        break;
      case "date":
        {
          const offset2 = e4.target.getBoundingClientRect();
          const date = new Date(currentValue);
          showDatePickerMenu(
            { x: offset2.left, y: offset2.top + 30 },
            date.getTime() ? date : null,
            (date2) => savePropValue(field.name, date2.valueOf().toString())
          );
          break;
        }
        break;
    }
  };
  const showTypographyMenu = (e4) => {
    const menu2 = new import_obsidian28.Menu();
    menu2.setUseNativeMenu(false);
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H1");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h1'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H2");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h2'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H3");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h3'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H4");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h4'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H5");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h5'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("H6");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'h6'`);
      });
    });
    menu2.addItem((menuItem) => {
      menuItem.setTitle("Text");
      menuItem.setIcon("type");
      menuItem.onClick((e5) => {
        savePropValue("style", `'p'`);
      });
    });
    const offset2 = e4.target.getBoundingClientRect();
    menu2.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
  };
  const menu = new import_obsidian28.Menu();
  menu.setUseNativeMenu(false);
  if (props2.node.type == "text") {
    menu.addItem((menuItem) => {
      menuItem.setTitle("Style");
      menuItem.setIcon("sort-asc");
      menuItem.onClick((e4) => showTypographyMenu(e4));
    });
    menu.addItem((menuItem) => {
      menuItem.setIcon("palette");
      disclosureMenuItem(
        plugin,
        menuItem,
        false,
        false,
        i18n_default.menu.changeColor,
        "",
        [
          { name: "Default", value: "" },
          ...colors.map((f4) => ({ name: f4[0], value: f4[1] }))
        ],
        (_12, values) => {
          saveStyleValue("color", wrapQuotes(values[0]));
        }
      );
    });
  }
  fields.forEach(
    (f4) => menu.addItem((menuItem) => {
      var _a2;
      const icon = (_a2 = fieldTypeForType(f4.type)) == null ? void 0 : _a2.icon;
      menuItem.setTitle(f4.name);
      menuItem.iconEl.innerHTML = stickerFromString(icon, props2.plugin);
      menuItem.onClick((e4) => showValueMenu(e4, f4));
    })
  );
  menu.addSeparator();
  menu.addItem((menuItem) => {
    menuItem.setTitle("Duplicate");
    menuItem.setIcon("copy");
    menuItem.onClick(() => duplicateFrame());
  });
  menu.addItem((menuItem) => {
    menuItem.setTitle("Delete");
    menuItem.setIcon("trash");
    menuItem.onClick(() => deleteFrame());
  });
  menu.showAtPosition(position);
  return menu;
};

// src/components/Space/Frames/FrameHoverMenu.tsx
init_compat_module();

// src/components/Space/Frames/Setters/PropSetter.tsx
init_compat_module();

// src/components/Space/Frames/Setters/CodeEditorSetter.tsx
init_compat_module();
var CodeEditorSetter = (props2) => {
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-setter-code"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => props2.editCode(props2.node, props2.name, props2.type),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-mark-code"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-setter-code-value"
  }, props2.value));
};

// src/components/Space/Frames/Setters/PropSetter.tsx
var PropSetter = (props2) => {
  return stringIsConst(props2.value) ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(DataTypeView, {
    plugin: props2.plugin,
    initialValue: removeQuotes(props2.value),
    column: { ...props2.field, table: "" },
    editable: true,
    updateValue: (value) => props2.saveValue(`${value}`)
  })) : /* @__PURE__ */ Cn.createElement(CodeEditorSetter, {
    name: props2.field.name,
    value: props2.value,
    type: "props",
    node: props2.node.id,
    editCode: props2.editCode
  });
};

// src/components/Space/Frames/FrameHoverMenu.tsx
var HoverPropsMenu = (props2) => {
  const deleteNode = (node) => {
    props2.deleteNode(node);
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-props-editor"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: stickerFromString(props2.node.icon, props2.plugin)
    }
  }), props2.fields.map((f4, i4) => {
    var _a2, _b2;
    return /* @__PURE__ */ Cn.createElement(PropSetter, {
      key: i4,
      node: props2.node,
      plugin: props2.plugin,
      value: (_b2 = (_a2 = props2.node) == null ? void 0 : _a2.props) == null ? void 0 : _b2[f4.name],
      field: f4,
      saveValue: (value) => {
        props2.saveNodeValue({ [f4.name]: wrapQuotes(value) }, props2.node);
      },
      editCode: () => {
      }
    });
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.deleteNode(props2.node),
    dangerouslySetInnerHTML: {
      __html: lucideIcon("trash")
    }
  }));
};
var FrameHoverMenu = (props2) => {
  const { spaceInfo } = q2(SpaceContext);
  const { saveNodes, addNode, deleteNode, nodes, root: root2 } = q2(FramesEditorContext);
  const fields = props2.node ? propertiesForNode(props2.node) : [];
  const saveNodeValue = (values, node) => {
    const newNodes = {
      ...node,
      props: {
        ...node.props,
        ...values
      }
    };
    saveNodes([newNodes]);
  };
  const saveStyleValue = (values, node) => {
    const newNodes = {
      ...node,
      styles: {
        ...node.styles,
        ...values
      }
    };
    saveNodes([newNodes]);
  };
  const showPropsMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showFramePropsMenu({
      position: offset2,
      plugin: props2.plugin,
      node: props2.node,
      duplicateFrame: () => {
        addNode(props2.node);
      },
      deleteFrame: () => deleteNode(props2.node),
      fields,
      frameProps: props2.node.props,
      schemaProps: props2.rootProps,
      savePropValue: (key2, value) => saveNodeValue({ [key2]: value }, props2.node),
      saveStyleValue: (key2, value) => saveStyleValue({ [key2]: value }, props2.node)
    });
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-hover-menu-container"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-hover-menu"
  }, props2.dragRef && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-handle"] },
    ref: props2.dragRef,
    onClick: (e4) => {
      showPropsMenu(e4);
    },
    ...props2.listeners
  }), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => showNewFrameMenu(
      e4,
      props2.plugin,
      spaceInfo,
      (newNode) => addNode(newNode, props2.node)
    ),
    className: "mk-icon-small mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }))));
};

// src/components/ui/menus/nodePropsMenu.tsx
var import_obsidian29 = require("obsidian");
init_compat_module();
var showNodePropsMenu = (e4, plugin, node, saveNodes, deleteNode) => {
  const fields = node ? propertiesForNode(node) : [];
  const saveNodeValue = (values, node2) => {
    const newNodes = {
      ...node2,
      props: {
        ...node2.props,
        ...values
      }
    };
    saveNodes([newNodes]);
  };
  const menu = new import_obsidian29.Menu();
  menu.dom.toggleClass("mk-menu", true);
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createDiv("mk-options-container");
  div.style.minHeight = "200px";
  div.addEventListener("click", (e5) => {
    e5.stopImmediatePropagation();
  });
  div.addEventListener("mousedown", (e5) => {
    e5.stopImmediatePropagation();
  });
  div.addEventListener("mouseup", (e5) => {
    e5.stopImmediatePropagation();
  });
  const root2 = createRoot(div);
  root2.render(
    /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(HoverPropsMenu, {
      plugin,
      fields,
      saveNodeValue,
      deleteNode,
      node
    }))
  );
  menu.addItem((item) => {
    item.setTitle(frag);
  });
  const keys2 = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys2.length; i4++) {
    if (keys2[i4].key != "Escape") {
      menu.scope.unregister(keys2[i4]);
    }
  }
  const offset2 = e4.target.getBoundingClientRect();
  menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
  return menu;
};

// node_modules/re-resizable/lib/index.js
init_compat_module();
init_compat_module();

// node_modules/re-resizable/lib/resizer.js
init_compat_module();
var __extends2 = function() {
  var extendStatics = function(d5, b4) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b5) {
      d6.__proto__ = b5;
    } || function(d6, b5) {
      for (var p3 in b5)
        if (Object.prototype.hasOwnProperty.call(b5, p3))
          d6[p3] = b5[p3];
    };
    return extendStatics(d5, b4);
  };
  return function(d5, b4) {
    extendStatics(d5, b4);
    function __() {
      this.constructor = d5;
    }
    d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  };
}();
var __assign3 = function() {
  __assign3 = Object.assign || function(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign3.apply(this, arguments);
};
var rowSizeBase = {
  width: "100%",
  height: "10px",
  top: "0px",
  left: "0px",
  cursor: "row-resize"
};
var colSizeBase = {
  width: "10px",
  height: "100%",
  top: "0px",
  left: "0px",
  cursor: "col-resize"
};
var edgeBase = {
  width: "20px",
  height: "20px",
  position: "absolute"
};
var styles = {
  top: __assign3(__assign3({}, rowSizeBase), { top: "-5px" }),
  right: __assign3(__assign3({}, colSizeBase), { left: void 0, right: "-5px" }),
  bottom: __assign3(__assign3({}, rowSizeBase), { top: void 0, bottom: "-5px" }),
  left: __assign3(__assign3({}, colSizeBase), { left: "-5px" }),
  topRight: __assign3(__assign3({}, edgeBase), { right: "-10px", top: "-10px", cursor: "ne-resize" }),
  bottomRight: __assign3(__assign3({}, edgeBase), { right: "-10px", bottom: "-10px", cursor: "se-resize" }),
  bottomLeft: __assign3(__assign3({}, edgeBase), { left: "-10px", bottom: "-10px", cursor: "sw-resize" }),
  topLeft: __assign3(__assign3({}, edgeBase), { left: "-10px", top: "-10px", cursor: "nw-resize" })
};
var Resizer = function(_super) {
  __extends2(Resizer2, _super);
  function Resizer2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.onMouseDown = function(e4) {
      _this.props.onResizeStart(e4, _this.props.direction);
    };
    _this.onTouchStart = function(e4) {
      _this.props.onResizeStart(e4, _this.props.direction);
    };
    return _this;
  }
  Resizer2.prototype.render = function() {
    return y("div", { className: this.props.className || "", style: __assign3(__assign3({ position: "absolute", userSelect: "none" }, styles[this.props.direction]), this.props.replaceStyles || {}), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children);
  };
  return Resizer2;
}(w3);

// node_modules/re-resizable/lib/index.js
var __extends3 = function() {
  var extendStatics = function(d5, b4) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b5) {
      d6.__proto__ = b5;
    } || function(d6, b5) {
      for (var p3 in b5)
        if (Object.prototype.hasOwnProperty.call(b5, p3))
          d6[p3] = b5[p3];
    };
    return extendStatics(d5, b4);
  };
  return function(d5, b4) {
    extendStatics(d5, b4);
    function __() {
      this.constructor = d5;
    }
    d5.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
  };
}();
var __assign4 = function() {
  __assign4 = Object.assign || function(t4) {
    for (var s5, i4 = 1, n2 = arguments.length; i4 < n2; i4++) {
      s5 = arguments[i4];
      for (var p3 in s5)
        if (Object.prototype.hasOwnProperty.call(s5, p3))
          t4[p3] = s5[p3];
    }
    return t4;
  };
  return __assign4.apply(this, arguments);
};
var DEFAULT_SIZE = {
  width: "auto",
  height: "auto"
};
var clamp = function(n2, min3, max3) {
  return Math.max(Math.min(n2, max3), min3);
};
var snap = function(n2, size) {
  return Math.round(n2 / size) * size;
};
var hasDirection = function(dir, target) {
  return new RegExp(dir, "i").test(target);
};
var isTouchEvent2 = function(event) {
  return Boolean(event.touches && event.touches.length);
};
var isMouseEvent2 = function(event) {
  return Boolean((event.clientX || event.clientX === 0) && (event.clientY || event.clientY === 0));
};
var findClosestSnap = function(n2, snapArray, snapGap) {
  if (snapGap === void 0) {
    snapGap = 0;
  }
  var closestGapIndex = snapArray.reduce(function(prev, curr, index) {
    return Math.abs(curr - n2) < Math.abs(snapArray[prev] - n2) ? index : prev;
  }, 0);
  var gap = Math.abs(snapArray[closestGapIndex] - n2);
  return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n2;
};
var getStringSize = function(n2) {
  n2 = n2.toString();
  if (n2 === "auto") {
    return n2;
  }
  if (n2.endsWith("px")) {
    return n2;
  }
  if (n2.endsWith("%")) {
    return n2;
  }
  if (n2.endsWith("vh")) {
    return n2;
  }
  if (n2.endsWith("vw")) {
    return n2;
  }
  if (n2.endsWith("vmax")) {
    return n2;
  }
  if (n2.endsWith("vmin")) {
    return n2;
  }
  return n2 + "px";
};
var getPixelSize = function(size, parentSize, innerWidth2, innerHeight2) {
  if (size && typeof size === "string") {
    if (size.endsWith("px")) {
      return Number(size.replace("px", ""));
    }
    if (size.endsWith("%")) {
      var ratio = Number(size.replace("%", "")) / 100;
      return parentSize * ratio;
    }
    if (size.endsWith("vw")) {
      var ratio = Number(size.replace("vw", "")) / 100;
      return innerWidth2 * ratio;
    }
    if (size.endsWith("vh")) {
      var ratio = Number(size.replace("vh", "")) / 100;
      return innerHeight2 * ratio;
    }
  }
  return size;
};
var calculateNewMax = function(parentSize, innerWidth2, innerHeight2, maxWidth, maxHeight, minWidth, minHeight) {
  maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth2, innerHeight2);
  maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth2, innerHeight2);
  minWidth = getPixelSize(minWidth, parentSize.width, innerWidth2, innerHeight2);
  minHeight = getPixelSize(minHeight, parentSize.height, innerWidth2, innerHeight2);
  return {
    maxWidth: typeof maxWidth === "undefined" ? void 0 : Number(maxWidth),
    maxHeight: typeof maxHeight === "undefined" ? void 0 : Number(maxHeight),
    minWidth: typeof minWidth === "undefined" ? void 0 : Number(minWidth),
    minHeight: typeof minHeight === "undefined" ? void 0 : Number(minHeight)
  };
};
var definedProps = [
  "as",
  "style",
  "className",
  "grid",
  "snap",
  "bounds",
  "boundsByDirection",
  "size",
  "defaultSize",
  "minWidth",
  "minHeight",
  "maxWidth",
  "maxHeight",
  "lockAspectRatio",
  "lockAspectRatioExtraWidth",
  "lockAspectRatioExtraHeight",
  "enable",
  "handleStyles",
  "handleClasses",
  "handleWrapperStyle",
  "handleWrapperClass",
  "children",
  "onResizeStart",
  "onResize",
  "onResizeStop",
  "handleComponent",
  "scale",
  "resizeRatio",
  "snapGap"
];
var baseClassName = "__resizable_base__";
var Resizable = function(_super) {
  __extends3(Resizable2, _super);
  function Resizable2(props2) {
    var _this = _super.call(this, props2) || this;
    _this.ratio = 1;
    _this.resizable = null;
    _this.parentLeft = 0;
    _this.parentTop = 0;
    _this.resizableLeft = 0;
    _this.resizableRight = 0;
    _this.resizableTop = 0;
    _this.resizableBottom = 0;
    _this.targetLeft = 0;
    _this.targetTop = 0;
    _this.appendBase = function() {
      if (!_this.resizable || !_this.window) {
        return null;
      }
      var parent = _this.parentNode;
      if (!parent) {
        return null;
      }
      var element = _this.window.document.createElement("div");
      element.style.width = "100%";
      element.style.height = "100%";
      element.style.position = "absolute";
      element.style.transform = "scale(0, 0)";
      element.style.left = "0";
      element.style.flex = "0 0 100%";
      if (element.classList) {
        element.classList.add(baseClassName);
      } else {
        element.className += baseClassName;
      }
      parent.appendChild(element);
      return element;
    };
    _this.removeBase = function(base2) {
      var parent = _this.parentNode;
      if (!parent) {
        return;
      }
      parent.removeChild(base2);
    };
    _this.ref = function(c4) {
      if (c4) {
        _this.resizable = c4;
      }
    };
    _this.state = {
      isResizing: false,
      width: typeof (_this.propsSize && _this.propsSize.width) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.width,
      height: typeof (_this.propsSize && _this.propsSize.height) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.height,
      direction: "right",
      original: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      backgroundStyle: {
        height: "100%",
        width: "100%",
        backgroundColor: "rgba(0,0,0,0)",
        cursor: "auto",
        opacity: 0,
        position: "fixed",
        zIndex: 9999,
        top: "0",
        left: "0",
        bottom: "0",
        right: "0"
      },
      flexBasis: void 0
    };
    _this.onResizeStart = _this.onResizeStart.bind(_this);
    _this.onMouseMove = _this.onMouseMove.bind(_this);
    _this.onMouseUp = _this.onMouseUp.bind(_this);
    return _this;
  }
  Object.defineProperty(Resizable2.prototype, "parentNode", {
    get: function() {
      if (!this.resizable) {
        return null;
      }
      return this.resizable.parentNode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "window", {
    get: function() {
      if (!this.resizable) {
        return null;
      }
      if (!this.resizable.ownerDocument) {
        return null;
      }
      return this.resizable.ownerDocument.defaultView;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "propsSize", {
    get: function() {
      return this.props.size || this.props.defaultSize || DEFAULT_SIZE;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "size", {
    get: function() {
      var width = 0;
      var height = 0;
      if (this.resizable && this.window) {
        var orgWidth = this.resizable.offsetWidth;
        var orgHeight = this.resizable.offsetHeight;
        var orgPosition = this.resizable.style.position;
        if (orgPosition !== "relative") {
          this.resizable.style.position = "relative";
        }
        width = this.resizable.style.width !== "auto" ? this.resizable.offsetWidth : orgWidth;
        height = this.resizable.style.height !== "auto" ? this.resizable.offsetHeight : orgHeight;
        this.resizable.style.position = orgPosition;
      }
      return { width, height };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Resizable2.prototype, "sizeStyle", {
    get: function() {
      var _this = this;
      var size = this.props.size;
      var getSize = function(key2) {
        if (typeof _this.state[key2] === "undefined" || _this.state[key2] === "auto") {
          return "auto";
        }
        if (_this.propsSize && _this.propsSize[key2] && _this.propsSize[key2].toString().endsWith("%")) {
          if (_this.state[key2].toString().endsWith("%")) {
            return _this.state[key2].toString();
          }
          var parentSize = _this.getParentSize();
          var value = Number(_this.state[key2].toString().replace("px", ""));
          var percent = value / parentSize[key2] * 100;
          return percent + "%";
        }
        return getStringSize(_this.state[key2]);
      };
      var width = size && typeof size.width !== "undefined" && !this.state.isResizing ? getStringSize(size.width) : getSize("width");
      var height = size && typeof size.height !== "undefined" && !this.state.isResizing ? getStringSize(size.height) : getSize("height");
      return { width, height };
    },
    enumerable: false,
    configurable: true
  });
  Resizable2.prototype.getParentSize = function() {
    if (!this.parentNode) {
      if (!this.window) {
        return { width: 0, height: 0 };
      }
      return { width: this.window.innerWidth, height: this.window.innerHeight };
    }
    var base2 = this.appendBase();
    if (!base2) {
      return { width: 0, height: 0 };
    }
    var wrapChanged = false;
    var wrap = this.parentNode.style.flexWrap;
    if (wrap !== "wrap") {
      wrapChanged = true;
      this.parentNode.style.flexWrap = "wrap";
    }
    base2.style.position = "relative";
    base2.style.minWidth = "100%";
    base2.style.minHeight = "100%";
    var size = {
      width: base2.offsetWidth,
      height: base2.offsetHeight
    };
    if (wrapChanged) {
      this.parentNode.style.flexWrap = wrap;
    }
    this.removeBase(base2);
    return size;
  };
  Resizable2.prototype.bindEvents = function() {
    if (this.window) {
      this.window.addEventListener("mouseup", this.onMouseUp);
      this.window.addEventListener("mousemove", this.onMouseMove);
      this.window.addEventListener("mouseleave", this.onMouseUp);
      this.window.addEventListener("touchmove", this.onMouseMove, {
        capture: true,
        passive: false
      });
      this.window.addEventListener("touchend", this.onMouseUp);
    }
  };
  Resizable2.prototype.unbindEvents = function() {
    if (this.window) {
      this.window.removeEventListener("mouseup", this.onMouseUp);
      this.window.removeEventListener("mousemove", this.onMouseMove);
      this.window.removeEventListener("mouseleave", this.onMouseUp);
      this.window.removeEventListener("touchmove", this.onMouseMove, true);
      this.window.removeEventListener("touchend", this.onMouseUp);
    }
  };
  Resizable2.prototype.componentDidMount = function() {
    if (!this.resizable || !this.window) {
      return;
    }
    var computedStyle = this.window.getComputedStyle(this.resizable);
    this.setState({
      width: this.state.width || this.size.width,
      height: this.state.height || this.size.height,
      flexBasis: computedStyle.flexBasis !== "auto" ? computedStyle.flexBasis : void 0
    });
  };
  Resizable2.prototype.componentWillUnmount = function() {
    if (this.window) {
      this.unbindEvents();
    }
  };
  Resizable2.prototype.createSizeForCssProperty = function(newSize, kind) {
    var propsSize = this.propsSize && this.propsSize[kind];
    return this.state[kind] === "auto" && this.state.original[kind] === newSize && (typeof propsSize === "undefined" || propsSize === "auto") ? "auto" : newSize;
  };
  Resizable2.prototype.calculateNewMaxFromBoundary = function(maxWidth, maxHeight) {
    var boundsByDirection = this.props.boundsByDirection;
    var direction = this.state.direction;
    var widthByDirection = boundsByDirection && hasDirection("left", direction);
    var heightByDirection = boundsByDirection && hasDirection("top", direction);
    var boundWidth;
    var boundHeight;
    if (this.props.bounds === "parent") {
      var parent_1 = this.parentNode;
      if (parent_1) {
        boundWidth = widthByDirection ? this.resizableRight - this.parentLeft : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);
        boundHeight = heightByDirection ? this.resizableBottom - this.parentTop : parent_1.offsetHeight + (this.parentTop - this.resizableTop);
      }
    } else if (this.props.bounds === "window") {
      if (this.window) {
        boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;
        boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;
      }
    } else if (this.props.bounds) {
      boundWidth = widthByDirection ? this.resizableRight - this.targetLeft : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);
      boundHeight = heightByDirection ? this.resizableBottom - this.targetTop : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);
    }
    if (boundWidth && Number.isFinite(boundWidth)) {
      maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;
    }
    if (boundHeight && Number.isFinite(boundHeight)) {
      maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;
    }
    return { maxWidth, maxHeight };
  };
  Resizable2.prototype.calculateNewSizeFromDirection = function(clientX, clientY) {
    var scale = this.props.scale || 1;
    var resizeRatio = this.props.resizeRatio || 1;
    var _a2 = this.state, direction = _a2.direction, original = _a2.original;
    var _b2 = this.props, lockAspectRatio = _b2.lockAspectRatio, lockAspectRatioExtraHeight = _b2.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b2.lockAspectRatioExtraWidth;
    var newWidth = original.width;
    var newHeight = original.height;
    var extraHeight = lockAspectRatioExtraHeight || 0;
    var extraWidth = lockAspectRatioExtraWidth || 0;
    if (hasDirection("right", direction)) {
      newWidth = original.width + (clientX - original.x) * resizeRatio / scale;
      if (lockAspectRatio) {
        newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
      }
    }
    if (hasDirection("left", direction)) {
      newWidth = original.width - (clientX - original.x) * resizeRatio / scale;
      if (lockAspectRatio) {
        newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
      }
    }
    if (hasDirection("bottom", direction)) {
      newHeight = original.height + (clientY - original.y) * resizeRatio / scale;
      if (lockAspectRatio) {
        newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
      }
    }
    if (hasDirection("top", direction)) {
      newHeight = original.height - (clientY - original.y) * resizeRatio / scale;
      if (lockAspectRatio) {
        newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
      }
    }
    return { newWidth, newHeight };
  };
  Resizable2.prototype.calculateNewSizeFromAspectRatio = function(newWidth, newHeight, max3, min3) {
    var _a2 = this.props, lockAspectRatio = _a2.lockAspectRatio, lockAspectRatioExtraHeight = _a2.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a2.lockAspectRatioExtraWidth;
    var computedMinWidth = typeof min3.width === "undefined" ? 10 : min3.width;
    var computedMaxWidth = typeof max3.width === "undefined" || max3.width < 0 ? newWidth : max3.width;
    var computedMinHeight = typeof min3.height === "undefined" ? 10 : min3.height;
    var computedMaxHeight = typeof max3.height === "undefined" || max3.height < 0 ? newHeight : max3.height;
    var extraHeight = lockAspectRatioExtraHeight || 0;
    var extraWidth = lockAspectRatioExtraWidth || 0;
    if (lockAspectRatio) {
      var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;
      var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;
      var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;
      var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;
      var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);
      var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);
      var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);
      var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);
      newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);
      newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);
    } else {
      newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);
      newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);
    }
    return { newWidth, newHeight };
  };
  Resizable2.prototype.setBoundingClientRect = function() {
    if (this.props.bounds === "parent") {
      var parent_2 = this.parentNode;
      if (parent_2) {
        var parentRect = parent_2.getBoundingClientRect();
        this.parentLeft = parentRect.left;
        this.parentTop = parentRect.top;
      }
    }
    if (this.props.bounds && typeof this.props.bounds !== "string") {
      var targetRect = this.props.bounds.getBoundingClientRect();
      this.targetLeft = targetRect.left;
      this.targetTop = targetRect.top;
    }
    if (this.resizable) {
      var _a2 = this.resizable.getBoundingClientRect(), left = _a2.left, top_1 = _a2.top, right = _a2.right, bottom = _a2.bottom;
      this.resizableLeft = left;
      this.resizableRight = right;
      this.resizableTop = top_1;
      this.resizableBottom = bottom;
    }
  };
  Resizable2.prototype.onResizeStart = function(event, direction) {
    if (!this.resizable || !this.window) {
      return;
    }
    var clientX = 0;
    var clientY = 0;
    if (event.nativeEvent && isMouseEvent2(event.nativeEvent)) {
      clientX = event.nativeEvent.clientX;
      clientY = event.nativeEvent.clientY;
    } else if (event.nativeEvent && isTouchEvent2(event.nativeEvent)) {
      clientX = event.nativeEvent.touches[0].clientX;
      clientY = event.nativeEvent.touches[0].clientY;
    }
    if (this.props.onResizeStart) {
      if (this.resizable) {
        var startResize = this.props.onResizeStart(event, direction, this.resizable);
        if (startResize === false) {
          return;
        }
      }
    }
    if (this.props.size) {
      if (typeof this.props.size.height !== "undefined" && this.props.size.height !== this.state.height) {
        this.setState({ height: this.props.size.height });
      }
      if (typeof this.props.size.width !== "undefined" && this.props.size.width !== this.state.width) {
        this.setState({ width: this.props.size.width });
      }
    }
    this.ratio = typeof this.props.lockAspectRatio === "number" ? this.props.lockAspectRatio : this.size.width / this.size.height;
    var flexBasis;
    var computedStyle = this.window.getComputedStyle(this.resizable);
    if (computedStyle.flexBasis !== "auto") {
      var parent_3 = this.parentNode;
      if (parent_3) {
        var dir = this.window.getComputedStyle(parent_3).flexDirection;
        this.flexDir = dir.startsWith("row") ? "row" : "column";
        flexBasis = computedStyle.flexBasis;
      }
    }
    this.setBoundingClientRect();
    this.bindEvents();
    var state = {
      original: {
        x: clientX,
        y: clientY,
        width: this.size.width,
        height: this.size.height
      },
      isResizing: true,
      backgroundStyle: __assign4(__assign4({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || "auto" }),
      direction,
      flexBasis
    };
    this.setState(state);
  };
  Resizable2.prototype.onMouseMove = function(event) {
    var _this = this;
    if (!this.state.isResizing || !this.resizable || !this.window) {
      return;
    }
    if (this.window.TouchEvent && isTouchEvent2(event)) {
      try {
        event.preventDefault();
        event.stopPropagation();
      } catch (e4) {
      }
    }
    var _a2 = this.props, maxWidth = _a2.maxWidth, maxHeight = _a2.maxHeight, minWidth = _a2.minWidth, minHeight = _a2.minHeight;
    var clientX = isTouchEvent2(event) ? event.touches[0].clientX : event.clientX;
    var clientY = isTouchEvent2(event) ? event.touches[0].clientY : event.clientY;
    var _b2 = this.state, direction = _b2.direction, original = _b2.original, width = _b2.width, height = _b2.height;
    var parentSize = this.getParentSize();
    var max3 = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);
    maxWidth = max3.maxWidth;
    maxHeight = max3.maxHeight;
    minWidth = max3.minWidth;
    minHeight = max3.minHeight;
    var _c2 = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c2.newHeight, newWidth = _c2.newWidth;
    var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);
    if (this.props.snap && this.props.snap.x) {
      newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);
    }
    if (this.props.snap && this.props.snap.y) {
      newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);
    }
    var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });
    newWidth = newSize.newWidth;
    newHeight = newSize.newHeight;
    if (this.props.grid) {
      var newGridWidth = snap(newWidth, this.props.grid[0]);
      var newGridHeight = snap(newHeight, this.props.grid[1]);
      var gap = this.props.snapGap || 0;
      newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;
      newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;
    }
    var delta = {
      width: newWidth - original.width,
      height: newHeight - original.height
    };
    if (width && typeof width === "string") {
      if (width.endsWith("%")) {
        var percent = newWidth / parentSize.width * 100;
        newWidth = percent + "%";
      } else if (width.endsWith("vw")) {
        var vw = newWidth / this.window.innerWidth * 100;
        newWidth = vw + "vw";
      } else if (width.endsWith("vh")) {
        var vh = newWidth / this.window.innerHeight * 100;
        newWidth = vh + "vh";
      }
    }
    if (height && typeof height === "string") {
      if (height.endsWith("%")) {
        var percent = newHeight / parentSize.height * 100;
        newHeight = percent + "%";
      } else if (height.endsWith("vw")) {
        var vw = newHeight / this.window.innerWidth * 100;
        newHeight = vw + "vw";
      } else if (height.endsWith("vh")) {
        var vh = newHeight / this.window.innerHeight * 100;
        newHeight = vh + "vh";
      }
    }
    var newState = {
      width: this.createSizeForCssProperty(newWidth, "width"),
      height: this.createSizeForCssProperty(newHeight, "height")
    };
    if (this.flexDir === "row") {
      newState.flexBasis = newState.width;
    } else if (this.flexDir === "column") {
      newState.flexBasis = newState.height;
    }
    pn(function() {
      _this.setState(newState);
    });
    if (this.props.onResize) {
      this.props.onResize(event, direction, this.resizable, delta);
    }
  };
  Resizable2.prototype.onMouseUp = function(event) {
    var _a2 = this.state, isResizing = _a2.isResizing, direction = _a2.direction, original = _a2.original;
    if (!isResizing || !this.resizable) {
      return;
    }
    var delta = {
      width: this.size.width - original.width,
      height: this.size.height - original.height
    };
    if (this.props.onResizeStop) {
      this.props.onResizeStop(event, direction, this.resizable, delta);
    }
    if (this.props.size) {
      this.setState(this.props.size);
    }
    this.unbindEvents();
    this.setState({
      isResizing: false,
      backgroundStyle: __assign4(__assign4({}, this.state.backgroundStyle), { cursor: "auto" })
    });
  };
  Resizable2.prototype.updateSize = function(size) {
    this.setState({ width: size.width, height: size.height });
  };
  Resizable2.prototype.renderResizer = function() {
    var _this = this;
    var _a2 = this.props, enable = _a2.enable, handleStyles = _a2.handleStyles, handleClasses = _a2.handleClasses, handleWrapperStyle = _a2.handleWrapperStyle, handleWrapperClass = _a2.handleWrapperClass, handleComponent = _a2.handleComponent;
    if (!enable) {
      return null;
    }
    var resizers = Object.keys(enable).map(function(dir) {
      if (enable[dir] !== false) {
        return y(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null);
      }
      return null;
    });
    return y("div", { className: handleWrapperClass, style: handleWrapperStyle }, resizers);
  };
  Resizable2.prototype.render = function() {
    var _this = this;
    var extendsProps = Object.keys(this.props).reduce(function(acc, key2) {
      if (definedProps.indexOf(key2) !== -1) {
        return acc;
      }
      acc[key2] = _this.props[key2];
      return acc;
    }, {});
    var style = __assign4(__assign4(__assign4({ position: "relative", userSelect: this.state.isResizing ? "none" : "auto" }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: "border-box", flexShrink: 0 });
    if (this.state.flexBasis) {
      style.flexBasis = this.state.flexBasis;
    }
    var Wrapper = this.props.as || "div";
    return y(
      Wrapper,
      __assign4({ ref: this.ref, style, className: this.props.className }, extendsProps),
      this.state.isResizing && y("div", { style: this.state.backgroundStyle }),
      this.props.children,
      this.renderResizer()
    );
  };
  Resizable2.defaultProps = {
    as: "div",
    onResizeStart: function() {
    },
    onResize: function() {
    },
    onResizeStop: function() {
    },
    enable: {
      top: true,
      right: true,
      bottom: true,
      left: true,
      topRight: true,
      bottomRight: true,
      bottomLeft: true,
      topLeft: true
    },
    style: {},
    grid: [1, 1],
    lockAspectRatio: false,
    lockAspectRatioExtraWidth: 0,
    lockAspectRatioExtraHeight: 0,
    scale: 1,
    resizeRatio: 1,
    snapGap: 0
  };
  return Resizable2;
}(w3);

// src/components/Space/Frames/EditorNodes/FrameNodeView.tsx
init_compat_module();

// src/components/Space/Frames/Placeholders/ColumnPlaceholder.tsx
init_compat_module();
var ColumnPlaceholder = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const { hoverNode } = q2(FramesEditorContext);
  const { setNodeRef } = useDroppable({
    id: props2.id,
    data: {
      id: props2.id,
      type: "item",
      parent: props2.parentId,
      frame: frameSchema.id
    }
  });
  return /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-drop-placeholder`,
    style: { width: props2.width, height: props2.height }
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `${props2.bottom && "mk-indicator-bottom"}`,
    style: { width: props2.width, height: props2.height },
    ref: props2.type < 3 && props2.dropRef
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-column-placeholder ${props2.right && "mk-indicator-right"}`,
    style: { height: props2.height },
    ref: setNodeRef
  }));
};

// src/components/Space/Frames/EditorNodes/IconNodeView.tsx
init_compat_module();
var IconNodeView = (props2) => {
  var _a2, _b2, _c2;
  const { saveNodes } = q2(FramesEditorContext);
  const selectIcon = () => {
    const vaultChangeModal = new stickerModal(
      props2.plugin.app,
      props2.plugin,
      (emoji) => saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(emoji) }
        }
      ])
    );
    vaultChangeModal.open();
  };
  return props2.instance.state[props2.treeNode.id] && (((_b2 = (_a2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a2.value) == null ? void 0 : _b2.length) > 0 ? /* @__PURE__ */ Cn.createElement(Sticker, {
    sticker: (_c2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _c2.value,
    plugin: props2.plugin
  }) : props2.editable ? /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => selectIcon(),
    className: "mk-frame-placeholder"
  }, "Select Icon") : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/Space/Frames/EditorNodes/ImageNodeView.tsx
init_compat_module();
var ImageNodeView = (props2) => {
  var _a2, _b2;
  const value = props2.instance.state[props2.treeNode.id].props.value;
  const file = F2(() => {
    const f4 = getAbstractFileAtPath(app, value);
    return f4 ? app.vault.getResourcePath(f4) : value;
  }, [value]);
  return props2.instance.state[props2.treeNode.id] && /* @__PURE__ */ Cn.createElement("img", {
    style: {
      width: (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles.width,
      height: (_b2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _b2.styles.height
    },
    src: file
  });
};

// src/components/Space/Frames/EditorNodes/SpaceNodeView.tsx
init_compat_module();
function parseContent2(input) {
  const regex1 = /!\[!\[(.*?)\]\]/;
  const regex2 = /!!\[\[(.*?)\]\]/;
  const match1 = input.match(regex1);
  const match2 = input.match(regex2);
  return match1 ? match1[1] : match2 ? match2[1] : input;
}
var SpaceNodeView = (props2) => {
  var _a2, _b2;
  const fullPath = (_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.props) == null ? void 0 : _b2.value;
  const path = fullPath ? uriByString(parseContent2(fullPath)) : null;
  const { saveNodes } = q2(FramesEditorContext);
  const selectLink = (e4) => {
    showSpacesMenu(
      e4,
      props2.plugin,
      (link) => saveNodes([
        {
          ...props2.treeNode.node,
          props: {
            ...props2.treeNode.node.props,
            value: wrapQuotes(link + "#^files")
          }
        }
      ])
    );
  };
  return props2.instance.state[props2.treeNode.id] && path ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(EmbedContextView, {
    plugin: props2.plugin,
    path
  })) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-placeholder",
    onClick: (e4) => selectLink(e4)
  }, "Select Space");
};

// src/components/Space/Frames/EditorNodes/TextNodeView.tsx
init_compat_module();
var TextNodeView = (props2) => {
  var _a2, _b2;
  const fileNameRef = _2(null);
  const { saveNodes } = q2(FramesEditorContext);
  const onBlur = (e4) => {
    var _a3;
    const newValue = e4.target.innerHTML;
    if (newValue != ((_a3 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a3.value)) {
      saveNodes([
        {
          ...props2.treeNode.node,
          props: { ...props2.treeNode.node.props, value: wrapQuotes(newValue) }
        }
      ]);
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      e4.preventDefault();
    }
  };
  const parseStyle = (style) => {
    switch (style) {
      case "h1":
        return "HyperMD-header-1";
      case "h2":
        return "HyperMD-header-2";
      case "h3":
        return "HyperMD-header-3";
      case "h4":
        return "HyperMD-header-4";
      case "h5":
        return "HyperMD-header-5";
      case "p":
        return "";
    }
    return "";
  };
  return props2.instance.state[props2.treeNode.id] && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-text ${parseStyle(
      (_a2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _a2.style
    )}`,
    placeholder: "Enter Text",
    dangerouslySetInnerHTML: {
      __html: (_b2 = props2.instance.state[props2.treeNode.id].props) == null ? void 0 : _b2.value
    },
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    ref: fileNameRef,
    contentEditable: props2.editable
  });
};

// src/components/Space/Frames/EditorNodes/FrameNodeView.tsx
var defaultFrameStyles = {
  position: "relative"
};
var FrameEditorNodeView = (props2) => {
  var _a2, _b2;
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(Resizable, {
    className: (0, import_classnames.default)(
      props2.column ? "mk-frame-column" : "mk-frame-bounds"
    ),
    enable: props2.column ? { right: true } : {
      top: true,
      right: true,
      bottom: true,
      left: true,
      topRight: true,
      bottomRight: true,
      bottomLeft: true,
      topLeft: true
    },
    onResizeStop: (e4, direction, ref2, d5) => {
      props2.resize({
        width: ref2.clientWidth,
        height: props2.column ? "" : ref2.clientHeight
      });
    },
    onResizeStart: (e4) => {
      e4.stopPropagation();
    },
    size: {
      width: (_a2 = props2.size.width) != null ? _a2 : "100%",
      height: (_b2 = props2.size.height) != null ? _b2 : "100%"
    },
    ...props2.listeners
  }));
};
var FrameNodeView = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l, _m, _n2, _o, _p, _q, _r, _s;
  const {
    selectedNodes,
    saveState,
    hoverNode,
    saveNodes,
    deleteNode,
    dragNode
  } = q2(FramesEditorContext);
  const { frameSchema } = q2(FramesMDBContext);
  const {
    attributes,
    listeners,
    setNodeRef,
    setDraggableNodeRef,
    transform,
    transition
  } = useSortable({
    id: frameSchema.id + props2.treeNode.id,
    data: {
      id: props2.treeNode.id,
      type: "item",
      parent: props2.treeNode.node.parentId,
      frame: frameSchema.id
    },
    disabled: dragNode === props2.treeNode.id,
    transition: null
  });
  const ref2 = _2(null);
  const isSelected = selectedNodes.some((f4) => props2.treeNode.id == f4.id);
  const innerComponents = props2.treeNode.node.type == "text" ? /* @__PURE__ */ Cn.createElement(TextNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "icon" ? /* @__PURE__ */ Cn.createElement(IconNodeView, {
    plugin: props2.plugin,
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "image" ? /* @__PURE__ */ Cn.createElement(ImageNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "space" ? /* @__PURE__ */ Cn.createElement(SpaceNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    plugin: props2.plugin,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.node.type == "flow" ? /* @__PURE__ */ Cn.createElement(FlowNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    plugin: props2.plugin,
    editable: !props2.treeNode.isRef
  }) : props2.treeNode.children.map((c4, i4) => /* @__PURE__ */ Cn.createElement(SortableContext, {
    key: i4,
    items: props2.treeNode.children,
    strategy: verticalListSortingStrategy
  }, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: props2.editMode,
    plugin: props2.plugin,
    key: i4,
    treeNode: c4,
    instance: props2.instance
  })));
  const parseAs = (role) => role == "checkbox" || role == "text" || role == "range" || role == "number" ? "input" : role;
  const tag = (_c2 = parseAs((_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles) == null ? void 0 : _b2.as)) != null ? _c2 : "div";
  const type = tag == "input" ? (_e2 = (_d2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _d2.styles) == null ? void 0 : _e2.as : null;
  const onResize = (size) => {
    saveNodes([
      {
        ...props2.treeNode.node,
        styles: { ...props2.treeNode.node.styles, ...size }
      }
    ]);
  };
  const selectNode = (nodes) => {
    const evt = new CustomEvent(eventTypes.frameLayerSelected, {
      detail: { selection: nodes.map((f4) => f4.id) }
    });
    window.dispatchEvent(evt);
  };
  const onClick = (e4) => {
    var _a3, _b3;
    if (isSelected)
      return;
    if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onClick) == "function") {
      (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onClick(
        e4,
        props2.instance.state,
        (s5) => saveState(s5, props2.instance),
        props2.plugin.index.api
      );
      e4.stopPropagation();
    } else if (props2.editMode > 1) {
      if (e4.shiftKey) {
        selectNode([
          ...selectedNodes.filter((f4) => f4.id != props2.treeNode.node.id),
          props2.treeNode.node
        ]);
      } else {
        selectNode([props2.treeNode.node]);
      }
      e4.stopPropagation();
    }
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Backspace" || e4.key == "Delete") {
      deleteNode(props2.treeNode.node);
    }
  };
  const canInteract = props2.editMode > 0 && !props2.treeNode.isRef && (props2.treeNode.node.type != "group" || props2.treeNode.parentType == "column" || props2.treeNode.children.length == 0);
  const canDrag = canInteract && ((_f = props2.treeNode.node.parentId) == null ? void 0 : _f.length) > 0;
  const canResize = props2.editMode > 1 && isSelected && canDrag || props2.treeNode.node.type == "image" || props2.treeNode.node.type == "column";
  const hasDragHandle = canInteract && props2.treeNode.node.type != "column" && ((_g = props2.treeNode.node.parentId) == null ? void 0 : _g.length) > 0 && props2.editMode == 1;
  const columnPlaceholderPosition = dragNode && props2.editMode == 1 && props2.treeNode.node.id != props2.instance.root.id && !props2.treeNode.isRef ? props2.treeNode.node.type != "column" ? props2.treeNode.parentType != "column" ? 1 : 2 : 3 : 0;
  const canDrop = canInteract || props2.editMode == 2;
  const hasContextMenu = hasDragHandle || props2.editMode == 2 && props2.treeNode.node.parentId == props2.instance.root.id;
  const inner = tag == "input" ? /* @__PURE__ */ Cn.createElement("input", {
    "data-path": props2.treeNode.id,
    type,
    onChange: (e4) => {
      var _a3, _b3;
      if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onChange) == "function") {
        (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onChange(
          e4.target.value,
          props2.instance.state,
          (s5) => saveState(s5, props2.instance),
          props2.plugin.index.api
        );
      }
    },
    style: {
      "--translate-x": `${(_h = transform == null ? void 0 : transform.x) != null ? _h : 0}px`,
      "--translate-y": `${(_i = transform == null ? void 0 : transform.y) != null ? _i : 0}px`,
      ...(_j = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _j.styles
    }
  }) : Cn.createElement(
    tag,
    {
      type,
      ref: (el) => {
        ref2.current = el;
      },
      className: `mk-frame ${(_m = (_l = (_k = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _k.styles) == null ? void 0 : _l.class) != null ? _m : ""}`,
      "data-path": props2.treeNode.id,
      onContextMenu: (e4) => {
        hasContextMenu && showNodePropsMenu(
          e4,
          props2.plugin,
          props2.treeNode.node,
          saveNodes,
          deleteNode
        );
      },
      onClick,
      style: {
        ...defaultFrameStyles,
        ...(_n2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _n2.styles,
        "--translate-x": `${(_o = transform == null ? void 0 : transform.x) != null ? _o : 0}px`,
        "--translate-y": `${(_p = transform == null ? void 0 : transform.y) != null ? _p : 0}px`,
        transition,
        ...props2.editMode == -1 && props2.treeNode.node.parentId == props2.instance.root.id ? { left: 0, top: 0 } : {}
      },
      ...props2.editMode == 2 || canDrag ? { ...attributes } : {}
    },
    [
      ...[
        columnPlaceholderPosition > 0 ? /* @__PURE__ */ Cn.createElement(ColumnPlaceholder, {
          parentId: props2.treeNode.node.parentId,
          key: `|${props2.treeNode.node.id}`,
          bottom: hoverNode == props2.treeNode.id,
          right: hoverNode == `|${props2.treeNode.node.id}`,
          plugin: props2.plugin,
          height: `100%`,
          width: `${columnPlaceholderPosition != 3 ? (_q = ref2.current) == null ? void 0 : _q.parentElement.clientWidth : (_r = ref2.current) == null ? void 0 : _r.clientWidth}px`,
          id: `|${props2.treeNode.node.id}`,
          type: columnPlaceholderPosition,
          dropRef: setNodeRef
        }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)
      ],
      ...canResize ? [
        /* @__PURE__ */ Cn.createElement(FrameEditorNodeView, {
          key: props2.treeNode.id,
          size: (_s = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _s.styles,
          column: props2.treeNode.node.type == "column",
          resize: onResize,
          listeners
        })
      ] : [],
      ...canDrag && props2.editMode > 1 && !isSelected ? [
        /* @__PURE__ */ Cn.createElement("div", {
          key: props2.treeNode.id,
          tabIndex: -1,
          className: (0, import_classnames.default)(
            "mk-frame-bounds",
            dragNode == props2.treeNode.id ? "is-selected" : ""
          ),
          onKeyDown,
          ...listeners
        })
      ] : [],
      innerComponents
    ]
  );
  return props2.instance.state[props2.treeNode.id] && (hasDragHandle ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-f"
  }, inner, /* @__PURE__ */ Cn.createElement(FrameHoverMenu, {
    key: props2.treeNode.id,
    plugin: props2.plugin,
    node: props2.treeNode.node,
    rootProps: Object.keys(props2.instance.root.node.props).map((f4) => ({
      name: f4,
      schemaId: props2.instance.root.id,
      type: props2.instance.root.node.types[f4]
    })),
    dragRef: setDraggableNodeRef,
    listeners
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, inner));
};

// src/components/Space/Frames/ViewNodes/FrameView.tsx
var FrameView = (props2) => {
  var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i;
  const innerComponents = props2.treeNode.node.type == "text" ? /* @__PURE__ */ Cn.createElement(TextNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "icon" ? /* @__PURE__ */ Cn.createElement(IconNodeView, {
    plugin: props2.plugin,
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "image" ? /* @__PURE__ */ Cn.createElement(ImageNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    editable: false
  }) : props2.treeNode.node.type == "space" ? /* @__PURE__ */ Cn.createElement(SpaceNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    plugin: props2.plugin,
    editable: false
  }) : props2.treeNode.node.type == "flow" ? /* @__PURE__ */ Cn.createElement(FlowNodeView, {
    treeNode: props2.treeNode,
    instance: props2.instance,
    plugin: props2.plugin,
    source: props2.source,
    editable: false
  }) : props2.treeNode.children.map((c4, i4) => /* @__PURE__ */ Cn.createElement(FrameView, {
    plugin: props2.plugin,
    key: i4,
    treeNode: c4,
    instance: props2.instance,
    saveState: props2.saveState,
    source: props2.source
  }));
  const parseAs = (role) => role == "checkbox" || role == "text" || role == "range" || role == "number" ? "input" : role;
  const tag = (_c2 = parseAs((_b2 = (_a2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _a2.styles) == null ? void 0 : _b2.as)) != null ? _c2 : "div";
  const type = tag == "input" ? (_e2 = (_d2 = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _d2.styles) == null ? void 0 : _e2.as : null;
  return props2.instance.state[props2.treeNode.id] && Cn.createElement(
    tag,
    {
      className: `mk-frame-view ${(_h = (_g = (_f = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _f.styles) == null ? void 0 : _g.class) != null ? _h : ""}`,
      type,
      onClick: (e4) => {
        var _a3, _b3;
        if (typeof ((_a3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _a3.onClick) == "function") {
          (_b3 = props2.instance.state[props2.treeNode.id].actions) == null ? void 0 : _b3.onClick(
            e4,
            props2.instance.state,
            (s5) => props2.saveState(s5, props2.instance),
            props2.plugin.index.api
          );
          e4.stopPropagation();
        }
      },
      style: {
        ...defaultFrameStyles,
        ...(_i = props2.instance.state[props2.treeNode.id]) == null ? void 0 : _i.styles
      }
    },
    [innerComponents]
  );
};

// src/components/Space/Frames/ViewNodes/FrameRoot.tsx
var FrameRootView = (props2) => {
  const [instance, setInstance] = h2({
    state: {},
    id: null,
    root: null
  });
  const activeRunID = _2(null);
  const runRoot = () => {
    if (props2.root) {
      const root2 = import_lodash10.default.cloneDeep(props2.root);
      const runID = (0, import_lodash10.uniqueId)();
      activeRunID.current = runID;
      executeTreeNode(
        applyPropsToRoot(root2, props2.props),
        {},
        props2.plugin.index.api,
        saveState,
        root2,
        runID
      ).then((s5) => {
        setInstance((p3) => s5);
        activeRunID.current = s5.id;
      });
    }
  };
  p2(() => {
    runRoot();
  }, [props2.root]);
  p2(() => runRoot(), []);
  const saveState = (state, instance2) => {
    const { root: root2, state: prevState, id: runID } = instance2;
    if (runID != activeRunID.current)
      return;
    executeTreeNode(
      applyPropsToRoot(root2, props2.props),
      prevState,
      props2.plugin.index.api,
      saveState,
      root2,
      runID,
      state
    ).then(
      (s5) => setInstance((p3) => ({
        ...s5,
        root: replaceSubtree(p3.root, s5.root)
      }))
    );
  };
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  return instance.root && /* @__PURE__ */ Cn.createElement(FrameView, {
    plugin: props2.plugin,
    treeNode: instance.root,
    instance,
    saveState,
    source: props2.source
  });
};

// src/components/Space/Editor/EmbedView/EmbedContextViewComponent.tsx
init_compat_module();

// src/components/Space/Contexts/ContextListView.tsx
init_hooks_module();
init_compat_module();

// src/components/Space/Contexts/CardsView/CardsView.tsx
var import_classnames4 = __toESM(require_classnames());
init_compat_module();
init_compat_module();

// src/components/Space/Contexts/CardsView/CardColumnView.tsx
var import_classnames2 = __toESM(require_classnames());
init_compat_module();
var CardColumnView = k3(
  ({
    id: id2,
    children,
    columns = 1,
    handleProps,
    horizontal,
    hover,
    onClick,
    onRemove,
    plugin,
    field,
    label,
    file,
    placeholder: placeholder2,
    style,
    scrollable,
    shadow,
    unstyled,
    ...props2
  }, ref2) => {
    const Component4 = "div";
    const { updateValue: updateValue2, updateFieldValue, contextTable } = q2(ContextEditorContext);
    return /* @__PURE__ */ Cn.createElement(Component4, {
      ...props2,
      ref: ref2,
      style: {
        ...style,
        "--columns": columns
      },
      className: (0, import_classnames2.default)(
        "mk-list-group",
        unstyled && "unstyled",
        horizontal && "horizontal",
        hover && "hover",
        placeholder2 && "placeholder",
        scrollable && "scrollable",
        shadow && "shadow"
      ),
      onClick,
      tabIndex: onClick ? 0 : void 0
    }, label != null && field ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-list-group-header"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      initialValue: label,
      plugin,
      file,
      column: field,
      editable: false,
      updateValue: (value) => updateValue2(
        field.name,
        value,
        field.table,
        parseInt(id2) * -1,
        file
      ),
      updateFieldValue: (value, fieldValue) => updateFieldValue(
        field.name,
        fieldValue,
        value,
        field.table,
        parseInt(id2) * -1,
        file
      ),
      contextTable
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: "Actions",
      ...handleProps
    })) : null, placeholder2 ? children : /* @__PURE__ */ Cn.createElement("ul", null, children));
  }
);
CardColumnView.displayName = "CardColumnView";
var CardColumnView_default = CardColumnView;

// src/components/Space/Contexts/CardsView/CardFrame.tsx
init_compat_module();
var CardFrame = (props2) => {
  const mapFramePropsFromDBRow = (predicate, value) => value && predicate.frameProps ? applyFunctionToObject(
    replaceKeysByValue(value, predicate.frameProps),
    wrapQuotes
  ) : {};
  const newProps = props2.value;
  return /* @__PURE__ */ Cn.createElement(FrameRootView, {
    root: props2.root,
    plugin: props2.plugin,
    props: newProps,
    contexts: {}
  });
};

// src/components/Space/Contexts/CardsView/CardView.tsx
var import_classnames3 = __toESM(require_classnames());
init_compat_module();
var CardView = Cn.memo(
  Cn.forwardRef(
    ({
      color,
      dragOverlay,
      dragging,
      disabled,
      fadeIn,
      handle,
      height,
      index,
      listeners,
      selected,
      onSelect,
      onRemove,
      renderItem,
      plugin,
      leaf,
      id: id2,
      sorting,
      style,
      transition,
      transform,
      value,
      cols,
      wrapperStyle,
      ...props2
    }, ref2) => {
      const onClickHandler = (e4) => {
        if (!onSelect) {
          return;
        }
        if (e4.detail === 1) {
          onSelect(e4.shiftKey ? 1 : e4.metaKey ? 2 : 0, value["_index"]);
        } else if (e4.detail === 2) {
          onSelect(3, value["_index"]);
        }
      };
      const { updateValue: updateValue2, updateFieldValue, contextTable, predicate } = q2(ContextEditorContext);
      p2(() => {
        if (!dragOverlay) {
          return;
        }
        document.body.style.cursor = "grabbing";
        return () => {
          document.body.style.cursor = "";
        };
      }, [dragOverlay]);
      const [openFlow, setOpenFlow] = h2(false);
      return renderItem ? /* @__PURE__ */ Cn.createElement("li", {
        className: (0, import_classnames3.default)(
          fadeIn && "fadeIn",
          sorting && "sorting",
          dragOverlay && "dragOverlay",
          selected && "mk-is-active"
        ),
        onClick: onClickHandler,
        style: {
          ...wrapperStyle,
          transition,
          "--translate-x": transform ? `${Math.round(transform.x)}px` : void 0,
          "--translate-y": transform ? `${Math.round(transform.y)}px` : void 0,
          "--scale-x": (transform == null ? void 0 : transform.scaleX) ? `${transform.scaleX}` : void 0,
          "--scale-y": (transform == null ? void 0 : transform.scaleY) ? `${transform.scaleY}` : void 0,
          "--index": index,
          "--color": color
        },
        ref: ref2
      }, renderItem({
        dragOverlay: Boolean(dragOverlay),
        dragging: Boolean(dragging),
        sorting: Boolean(sorting),
        index,
        fadeIn: Boolean(fadeIn),
        listeners,
        ref: ref2,
        style,
        transform,
        transition,
        value,
        predicate
      })) : /* @__PURE__ */ Cn.createElement("li", {
        className: (0, import_classnames3.default)(
          "mk-list-item",
          fadeIn && "fadeIn",
          sorting && "sorting",
          dragOverlay && "dragOverlay",
          selected && "mk-is-active"
        ),
        onClick: onClickHandler,
        style: {
          ...wrapperStyle,
          transition,
          "--translate-x": transform ? `${Math.round(transform.x)}px` : void 0,
          "--translate-y": transform ? `${Math.round(transform.y)}px` : void 0,
          "--scale-x": (transform == null ? void 0 : transform.scaleX) ? `${transform.scaleX}` : void 0,
          "--scale-y": (transform == null ? void 0 : transform.scaleY) ? `${transform.scaleY}` : void 0,
          "--index": index,
          "--color": color
        },
        ref: ref2
      }, value && cols.filter((f4) => f4.type == "preview" && f4.table == "").map((f4, i4) => /* @__PURE__ */ Cn.createElement(DataTypeView, {
        row: value,
        key: i4,
        cols,
        plugin,
        initialValue: value[f4.name + f4.table],
        column: f4,
        file: value[FilePropertyName],
        editable: false,
        updateValue: (v3) => updateValue2(
          f4.name,
          v3,
          f4.table,
          parseInt(id2),
          value[FilePropertyName]
        ),
        updateFieldValue: (v3, fv) => updateFieldValue(
          f4.name,
          fv,
          v3,
          f4.table,
          parseInt(id2),
          value[FilePropertyName]
        ),
        contextTable
      })), /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-list-content"
      }, /* @__PURE__ */ Cn.createElement("div", {
        className: (0, import_classnames3.default)(
          "mk-list-fields",
          dragging && "dragging",
          handle && "withHandle",
          dragOverlay && "dragOverlay",
          disabled && "disabled",
          color && "color"
        ),
        style,
        "data-cypress": "draggable-item",
        ...listeners,
        ...props2,
        tabIndex: !handle ? 0 : void 0
      }, value && cols.map((f4) => {
        var _a2;
        return ((_a2 = value[f4.name + f4.table]) == null ? void 0 : _a2.length) > 0 ? /* @__PURE__ */ Cn.createElement(DataTypeView, {
          openFlow: () => setOpenFlow((o3) => !o3),
          plugin,
          initialValue: value[f4.name + f4.table],
          column: f4,
          file: value[FilePropertyName],
          editable: false,
          updateValue: (v3) => updateValue2(
            f4.name,
            v3,
            f4.table,
            parseInt(id2),
            value[FilePropertyName]
          ),
          updateFieldValue: (v3, fv) => updateFieldValue(
            f4.name,
            fv,
            v3,
            f4.table,
            parseInt(id2),
            value[FilePropertyName]
          ),
          contextTable
        }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
      })), /* @__PURE__ */ Cn.createElement(FlowView, {
        leaf,
        plugin,
        path: value.File,
        load: openFlow
      })));
    }
  )
);

// src/components/Space/Contexts/CardsView/CardsView.tsx
var animateLayoutChanges = (args) => args.isSorting || args.wasDragging ? defaultAnimateLayoutChanges(args) : true;
function DroppableContainer({
  children,
  columns = 1,
  disabled,
  id: id2,
  items,
  style,
  ...props2
}) {
  var _a2;
  const {
    active,
    attributes,
    isDragging,
    listeners,
    over,
    setNodeRef,
    transition,
    transform
  } = useSortable({
    id: id2,
    data: {
      type: "container"
    },
    animateLayoutChanges
  });
  const isOverContainer = over ? id2 === over.id && ((_a2 = active == null ? void 0 : active.data.current) == null ? void 0 : _a2.type) !== "container" || items.includes(over.id) : false;
  return /* @__PURE__ */ Cn.createElement(CardColumnView_default, {
    id: id2,
    ref: disabled ? void 0 : setNodeRef,
    style: {
      ...style,
      transition,
      transform: CSS.Translate.toString(transform),
      opacity: isDragging ? 0.5 : void 0
    },
    hover: isOverContainer,
    handleProps: {
      ...attributes,
      ...listeners
    },
    columns,
    ...props2
  }, children);
}
var PLACEHOLDER_ID = "placeholder";
var CardsView = ({
  adjustScale: adjustScale2 = false,
  itemCount = 3,
  cancelDrop,
  columns,
  handle = false,
  items: initialItems,
  containerStyle,
  getItemStyles = () => ({}),
  wrapperStyle = () => ({}),
  minimal = false,
  modifiers,
  strategy = verticalListSortingStrategy,
  vertical = false,
  scrollable,
  plugin
}) => {
  var _a2, _b2;
  const { tableData } = q2(ContextMDBContext);
  const {
    filteredData,
    selectedRows,
    schema,
    selectRows,
    sortedColumns: cols,
    predicate,
    updateValue: updateValue2,
    contextTable,
    saveContextDB
  } = q2(ContextEditorContext);
  const getFrameListItemsByPath = (ref2) => {
    const path = uriByString(ref2);
    const context = plugin.index.framesIndex.get(path.basePath);
    return context == null ? void 0 : context.listitems[path.ref];
  };
  const frame = F2(() => {
    return (predicate == null ? void 0 : predicate.frame) ? getFrameListItemsByPath(predicate.frame) : null;
  }, [predicate]);
  const frameRoot = F2(() => {
    if (frame) {
      return buildRootFromMDBFrame(plugin, frame);
    }
    return null;
  }, [frame]);
  const renderItem = frameRoot ? (props2) => /* @__PURE__ */ Cn.createElement(CardFrame, {
    plugin,
    root: frameRoot,
    value: props2.value,
    predicate: props2.predicate
  }) : null;
  const groupBy2 = ((_a2 = predicate.groupBy) == null ? void 0 : _a2.length) > 0 ? cols.find((f4) => f4.name + f4.table == predicate.groupBy[0]) : null;
  const displayCols = (_b2 = cols == null ? void 0 : cols.filter(
    (f4) => !(f4.name == (groupBy2 == null ? void 0 : groupBy2.name) && f4.table == groupBy2.table)
  )) != null ? _b2 : [];
  const viewType = predicate.view;
  const items = F2(() => {
    var _a3, _b3;
    if (groupBy2) {
      const options = uniq([
        "",
        ...(_a3 = parseMultiString(groupBy2.value)) != null ? _a3 : [],
        ...filteredData.reduce(
          (p3, c4) => {
            var _a4;
            return [...p3, (_a4 = c4[groupBy2.name + groupBy2.table]) != null ? _a4 : ""];
          },
          []
        )
      ]);
      return options.reduce(
        (p3, c4) => {
          return {
            ...p3,
            [c4]: filteredData.filter((r3) => r3[groupBy2.name + groupBy2.table] == c4).map((r3) => r3._index)
          };
        },
        { "": [] }
      );
    }
    return {
      "": (_b3 = filteredData == null ? void 0 : filteredData.map((r3) => r3._index)) != null ? _b3 : []
    };
  }, [filteredData, predicate]);
  const containers = F2(
    () => Object.keys(items).map((f4, i4) => "-" + i4.toString()),
    [items]
  );
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const recentlyMovedToNewContainer = _2(false);
  const isSortingContainer = activeId ? containers.includes(activeId) : false;
  const [lastSelectedIndex, setLastSelectedIndex] = h2(null);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const findContainer = (id2) => {
    if (id2.charAt(0) == "-") {
      return id2;
    }
    return "-" + Object.keys(items).findIndex((key2) => items[key2].includes(id2)).toString();
  };
  const getIndex = (id2) => {
    const container = findContainer(id2);
    if (!container) {
      return -1;
    }
    const index = items[Object.keys(items)[parseInt(container) * -1]].indexOf(id2);
    return index;
  };
  const resetState = () => {
    setActiveId(null);
    setOverId(null);
  };
  const onDragCancel = () => {
    resetState();
  };
  p2(() => {
    requestAnimationFrame(() => {
      recentlyMovedToNewContainer.current = false;
    });
  }, [items]);
  const selectItem = (modifier, index) => {
    if (platformIsMobile()) {
      const file = getAbstractFileAtPath(
        app,
        tableData.rows[parseInt(index)].File
      );
      if (file)
        openAFile(file, plugin, false);
      return;
    }
    if (modifier == 3) {
      const file = getAbstractFileAtPath(
        app,
        tableData.rows[parseInt(index)].File
      );
      if (file)
        openAFile(file, plugin, false);
      return;
    }
    if (modifier == 2) {
      selectedRows.some((f4) => f4 == index) ? selectRows(
        null,
        selectedRows.filter((f4) => f4 != index)
      ) : selectRows(index, uniq([...selectedRows, index]));
    } else if (modifier == 1) {
      selectRows(
        index,
        uniq([
          ...selectedRows,
          ...selectRange(
            lastSelectedIndex,
            index,
            filteredData.map((f4) => f4._index)
          )
        ])
      );
    } else {
      selectRows(index, [index]);
    }
    setLastSelectedIndex(index);
  };
  const onKeyDown = (e4) => {
    if (e4.key == "Escape") {
      selectRows(null, []);
      setLastSelectedIndex(null);
    }
    if (e4.key == "Enter") {
      const file = getAbstractFileAtPath(
        app,
        tableData.rows[parseInt(lastSelectedIndex)].File
      );
      if (file)
        openAFile(file, plugin, false);
      return;
    }
    if (e4.key == "ArrowDown") {
      const newIndex = selectNextIndex(
        lastSelectedIndex,
        filteredData.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    }
    if (e4.key == "ArrowUp") {
      const newIndex = selectPrevIndex(
        lastSelectedIndex,
        filteredData.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    }
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    },
    onDragStart: ({ active }) => {
      setActiveId(active.id);
    },
    onDragOver: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (overId2)
        setOverId(overId2);
    },
    onDragEnd: ({ active, over }) => {
      if (active.id in items && (over == null ? void 0 : over.id)) {
        return;
      }
      const activeContainer = findContainer(active.id);
      if (!activeContainer) {
        resetState();
        return;
      }
      const overId2 = over == null ? void 0 : over.id;
      if (!overId2) {
        resetState();
        return;
      }
      if (overId2 === PLACEHOLDER_ID) {
        return;
      }
      const overContainer = findContainer(overId2);
      if (overContainer) {
        const activeIndex = items[Object.keys(items)[parseInt(activeContainer) * -1]].indexOf(active.id);
        const overIndex = items[Object.keys(items)[parseInt(overContainer) * -1]].indexOf(overId2);
        if (activeContainer != overContainer) {
          updateValue2(
            groupBy2.name,
            Object.keys(items)[parseInt(overContainer) * -1],
            groupBy2.table,
            groupBy2.table == "" ? parseInt(activeId) : parseInt(
              filteredData.find((f4) => f4._index == activeId)["_index" + groupBy2.table]
            ),
            ""
          );
        }
      }
      resetState();
    },
    cancelDrop,
    onDragCancel,
    modifiers
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames4.default)(
      viewType == "card" ? "mk-cards-container" : "mk-list-container",
      viewType == "card" && containers.length == 1 && "mk-cards-grid"
    ),
    onKeyDown
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-list-view"
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items: [...containers, PLACEHOLDER_ID],
    strategy: vertical ? verticalListSortingStrategy : horizontalListSortingStrategy
  }, containers.map((containerId) => /* @__PURE__ */ Cn.createElement(DroppableContainer, {
    key: containerId,
    id: containerId,
    plugin,
    label: minimal ? void 0 : `${Object.keys(items)[parseInt(containerId) * -1]}`,
    field: groupBy2,
    columns,
    items: items[Object.keys(items)[parseInt(containerId) * -1]],
    scrollable,
    style: containerStyle,
    unstyled: minimal
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items: items[Object.keys(items)[parseInt(containerId) * -1]],
    strategy
  }, items[Object.keys(items)[parseInt(containerId) * -1]].map(
    (value, index) => {
      return /* @__PURE__ */ Cn.createElement(SortableItem, {
        disabled: isSortingContainer,
        key: value,
        id: value,
        plugin,
        value: filteredData.find((f4) => f4._index == value),
        cols: displayCols,
        index,
        handle,
        style: getItemStyles,
        wrapperStyle,
        renderItem,
        onSelect: selectItem,
        selected: selectedRows == null ? void 0 : selectedRows.some((f4) => f4 == value),
        containerId,
        getIndex
      });
    }
  ))))))), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      adjustScale: adjustScale2
    }, activeId ? containers.includes(activeId) ? renderContainerDragOverlay(activeId) : renderSortableItemDragOverlay(activeId) : null),
    document.body
  ));
  function renderSortableItemDragOverlay(id2) {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: viewType == "card" ? "mk-cards-container" : "mk-list-container"
    }, /* @__PURE__ */ Cn.createElement(CardView, {
      plugin,
      value: filteredData.find((f4) => f4._index == id2),
      handle,
      id: id2,
      cols: displayCols,
      style: getItemStyles({
        containerId: findContainer(id2),
        overIndex: -1,
        index: getIndex(id2),
        value: id2,
        isSorting: true,
        isDragging: true,
        isDragOverlay: true
      }),
      color: getColor(id2),
      wrapperStyle: wrapperStyle({ index: 0 }),
      renderItem,
      dragOverlay: true
    }));
  }
  function renderContainerDragOverlay(containerId) {
    return /* @__PURE__ */ Cn.createElement(CardColumnView_default, {
      id: containerId,
      plugin,
      label: `Column ${containerId}`,
      field: groupBy2,
      columns,
      style: {
        height: "100%"
      },
      shadow: true,
      unstyled: false
    }, items[Object.keys(items)[parseInt(containerId) * -1]].map(
      (item, index) => /* @__PURE__ */ Cn.createElement(CardView, {
        key: item,
        id: item,
        plugin,
        value: filteredData.find((f4) => f4._index == item),
        cols: displayCols,
        handle,
        style: getItemStyles({
          containerId,
          overIndex: -1,
          index: getIndex(item),
          value: item,
          isDragging: false,
          isSorting: false,
          isDragOverlay: false
        }),
        color: getColor(item),
        selected: selectedRows.some((f4) => f4 == item),
        onSelect: selectItem,
        wrapperStyle: wrapperStyle({ index }),
        renderItem
      })
    ));
  }
  function getNextContainerId() {
    const containeIds = Object.keys(items);
    const lastContaineId = containeIds[containeIds.length - 1];
    return String.fromCharCode(lastContaineId.charCodeAt(0) + 1);
  }
};
function getColor(id2) {
  switch (id2[0]) {
    case "A":
      return "#7193f1";
    case "B":
      return "#ffda6c";
    case "C":
      return "#00bcd4";
    case "D":
      return "#ef769f";
  }
  return void 0;
}
function SortableItem({
  disabled,
  id: id2,
  plugin,
  index,
  handle,
  renderItem,
  style,
  containerId,
  onSelect,
  selected,
  getIndex,
  cols,
  value,
  wrapperStyle
}) {
  const {
    setNodeRef,
    listeners,
    isDragging,
    isSorting,
    over,
    overIndex,
    transform,
    transition
  } = useSortable({
    id: id2
  });
  const mounted = useMountStatus();
  const mountedWhileDragging = isDragging && !mounted;
  return /* @__PURE__ */ Cn.createElement(CardView, {
    ref: disabled ? void 0 : setNodeRef,
    value,
    plugin,
    id: id2,
    cols,
    dragging: isDragging,
    sorting: isSorting,
    handle,
    index,
    wrapperStyle: wrapperStyle({ index }),
    style: style({
      index,
      value: id2,
      isDragging,
      isSorting,
      overIndex: over ? getIndex(over.id) : overIndex,
      containerId
    }),
    onSelect,
    selected,
    color: getColor(id2),
    transition,
    transform,
    fadeIn: mountedWhileDragging,
    listeners,
    renderItem
  });
}
function useMountStatus() {
  const [isMounted, setIsMounted] = h2(false);
  p2(() => {
    const timeout = setTimeout(() => setIsMounted(true), 500);
    return () => clearTimeout(timeout);
  }, []);
  return isMounted;
}

// src/components/Space/Contexts/ContextBuilder/ContextDesigner.tsx
init_compat_module();
init_compat_module();
var ContextProperties = (props2) => {
  const { spaceInfo, contexts } = q2(SpaceContext);
  const { sortedColumns, predicate, savePredicate, saveColumn } = q2(ContextEditorContext);
  const [activeId, setActiveId] = h2("");
  const items = sortedColumns.map((f4) => ({ ...f4, id: f4.name + f4.table }));
  const [overId, setOverId] = h2("");
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const resetState = () => {
    setActiveId(null);
    setOverId(null);
  };
  const saveNewField = (source, field) => {
    saveColumn({ ...field, table: "" });
  };
  const newProperty = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showNewPropertyMenu(
      props2.plugin,
      { x: offset2.left, y: offset2.top + 30 },
      contexts,
      [],
      saveNewField,
      "files",
      spaceInfo.path,
      false
    );
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    },
    onDragStart: ({ active }) => {
      setActiveId(active.id);
    },
    onDragOver: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (overId2)
        setOverId(overId2);
    },
    onDragEnd: ({ active, over }) => {
      const overId2 = over == null ? void 0 : over.id;
      if (!overId2) {
        resetState();
        return;
      }
      savePredicate({
        ...predicate,
        colsOrder: arrayMove(
          predicate.colsOrder,
          predicate.colsOrder.findIndex((f4) => f4 == activeId),
          predicate.colsOrder.findIndex((f4) => f4 == overId2)
        )
      });
      resetState();
    },
    onDragCancel: resetState
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-properties"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-properties-list"
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items,
    strategy: verticalListSortingStrategy
  }, items.map((value, index) => {
    return /* @__PURE__ */ Cn.createElement(SortableItem2, {
      key: index,
      id: value.id,
      field: value,
      plugin: props2.plugin,
      saveField: (field) => saveColumn(field, value)
    });
  }))), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      newProperty(e4);
    }
  }, "New Property")), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      adjustScale: false
    }, activeId ? /* @__PURE__ */ Cn.createElement(SortableItem2, {
      id: items.find((f4) => f4.id == activeId).id,
      field: items.find((f4) => f4.id == activeId),
      plugin: props2.plugin
    }) : null),
    document.body
  ));
};
function SortableItem2(props2) {
  var _a2, _b2;
  const { spaceInfo } = q2(SpaceContext);
  const { field } = props2;
  const {
    dbSchema,
    tableData,
    contextTable,
    saveDB: saveDB2,
    saveContextDB,
    dbFileExists,
    saveSchema
  } = q2(ContextMDBContext);
  const {
    data: data2,
    cols,
    schema,
    sortedColumns,
    saveColumn,
    loadContextFields,
    hideColumn,
    sortColumn,
    delColumn,
    predicate
  } = q2(ContextEditorContext);
  const saveField = (field2, oldField) => {
    if (field2.name.length > 0) {
      if (field2.name != oldField.name || field2.type != oldField.type || field2.value != oldField.value || field2.attrs != oldField.attrs) {
        const saveResult = saveColumn(field2, oldField);
      }
    }
  };
  const saveContext = (field2, oldField, value) => {
    const newContext = value[0];
    initiateContextIfNotExists(props2.plugin, newContext).then((f4) => {
      if (f4) {
        return insertContextItems(
          props2.plugin,
          optionValuesForColumn(
            field2.name,
            field2.table == "" ? tableData : contextTable[field2.table]
          ),
          newContext
        );
      }
    }).then((f4) => loadContextFields(newContext));
    const newField = {
      ...field2,
      value: newContext != null ? newContext : ""
    };
    saveColumn(newField, oldField);
  };
  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: props2.id });
  const style = {
    transform: CSS.Transform.toString(transform),
    transition
  };
  const icon = (_b2 = props2.field.attrs) != null ? _b2 : (_a2 = fieldTypeForType(props2.field.type)) == null ? void 0 : _a2.icon;
  const selectedType = (_12, value) => {
    const newField = {
      ...props2.field,
      type: value[0]
    };
    props2.saveField(newField);
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: setNodeRef,
    style,
    ...attributes,
    ...listeners
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-field-icon",
    dangerouslySetInnerHTML: {
      __html: stickerFromString(icon, props2.plugin)
    },
    onClick: (e4) => {
      selectPropertyTypeMenu(e4, props2.plugin, selectedType);
    }
  }), props2.field.name, /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-options"]
    },
    onClick: (e4) => {
      const offset2 = e4.target.getBoundingClientRect();
      showPropertyMenu({
        plugin: props2.plugin,
        position: { x: offset2.left, y: offset2.top + 30 },
        editable: true,
        options: [],
        field,
        fields: cols,
        contextPath: spaceInfo.path,
        saveField: (newField) => saveField(newField, field),
        saveContext: (newField, val) => saveContext(newField, field, val),
        hide: hideColumn,
        deleteColumn: delColumn,
        sortColumn,
        hidden: predicate.colsHidden.includes(field.name + field.table)
      });
    }
  }));
}

// src/components/Space/Frames/FrameEditorView.tsx
var import_obsidian30 = require("obsidian");
init_compat_module();

// src/components/Space/Frames/FrameEditor.tsx
init_compat_module();

// src/components/Space/Frames/Panels/PropsPanel.tsx
init_compat_module();
var PropsPanel = (props2) => {
  const { spaceInfo } = q2(SpaceContext);
  const { saveNodes, root: root2, selectedNodes } = q2(FramesEditorContext);
  const saveContexts = (values, node) => {
    const newRoot = {
      ...node,
      contexts: {
        ...node.contexts,
        ...values
      }
    };
    saveNodes([newRoot]);
  };
  const saveNodeValue = (values, node) => {
    const newNodes = {
      ...node,
      props: {
        ...node.props,
        ...values
      }
    };
    saveNodes([newNodes]);
  };
  const saveRootProperty = (name) => {
    saveProperty({
      schemaId: root2.node.id,
      type: "text",
      name
    });
  };
  const { properties: properties2, saveProperty, delProperty } = q2(FramesEditorContext);
  const showMenu = (e4, field) => {
    const offset2 = e4.target.getBoundingClientRect();
    showPropertyMenu({
      plugin: props2.plugin,
      position: { x: offset2.left, y: offset2.top + 30 },
      editable: true,
      options: [],
      field: { ...field, table: "" },
      fields: properties2.map((f4) => ({ ...f4, table: "" })),
      contextPath: spaceInfo.path,
      saveField: (newField) => saveProperty(newField, field),
      saveContext: () => null,
      deleteColumn: delProperty,
      editCode: () => props2.editCode(root2.node.id, "props", field.name)
    });
  };
  const showContextMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const f4 = loadTags(props2.plugin);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: true,
        value: [],
        options: f4.map((m5) => ({ name: m5, value: m5 })),
        saveOptions: (_12, value) => addTag(value[0]),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  const addTag = (tag) => {
    saveContexts({ ...props2.contexts, [tag]: "" }, root2.node);
  };
  const [newProp, setNewProp] = h2("");
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-title"
  }, "Properties"), properties2.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-row",
    key: i4
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-field",
    onClick: (e4) => showMenu(e4, f4),
    "aria-label": f4.type
  }, f4.name), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-value"
  }, stringIsConst(root2.node.props[f4.name]) ? /* @__PURE__ */ Cn.createElement(DataTypeView, {
    plugin: props2.plugin,
    initialValue: removeQuotes(root2.node.props[f4.name]),
    column: { ...f4, table: "" },
    editable: !spaceInfo.readOnly,
    updateFieldValue: (fieldValue, value) => {
      saveProperty({ ...f4, value: fieldValue }, f4);
      saveNodeValue({ [f4.name]: `"${value}"` }, root2.node);
    },
    updateValue: (value) => saveNodeValue({ [f4.name]: `"${value}"` }, root2.node)
  }) : /* @__PURE__ */ Cn.createElement(CodeEditorSetter, {
    name: f4.name,
    value: root2.node.props[f4.name],
    type: "props",
    node: root2.id,
    editCode: props2.editCode
  })))), /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(TextCell, {
    initialValue: newProp,
    saveValue: (value) => saveRootProperty(value),
    editMode: 2 /* EditModeActive */,
    setEditMode: () => null,
    plugin: props2.plugin,
    propertyValue: ""
  })));
};

// src/components/Space/Frames/FrameEditor.tsx
var FrameEditor = (props2) => {
  var _a2;
  const activationConstraint = {
    distance: { y: 0 },
    tolerance: { x: 0 }
  };
  const mouseSensor = useSensor(MouseSensor, {
    activationConstraint
  });
  const touchSensor = useSensor(TouchSensor, {
    activationConstraint
  });
  const keyboardSensor = useSensor(KeyboardSensor, {});
  const sensors = useSensors(mouseSensor, touchSensor, keyboardSensor);
  const [tab, setTab] = h2(0);
  const { frameSchema } = q2(FramesMDBContext);
  const [preselectedProp, setPreselectedProp] = h2(null);
  const [preselectedPropType, setPreselectedPropType] = h2(null);
  const {
    root: root2,
    instance,
    nodes,
    saveNodes: saveFrames,
    saveProperty,
    setHoverNode,
    selectNodes,
    selectedNodes,
    properties: properties2
  } = q2(FramesEditorContext);
  const nodesSelected = (evt) => {
    selectNodes(
      evt.detail.selection.map((f4) => nodes.find((n2) => n2.id == f4)).filter((f4) => f4)
    );
  };
  p2(() => {
    window.addEventListener(eventTypes.frameLayerSelected, nodesSelected);
    return () => {
      window.removeEventListener(eventTypes.frameLayerSelected, nodesSelected);
    };
  }, [nodes]);
  const editCode = (node, key2, type) => {
    setTab(1);
    if (!((selectedNodes == null ? void 0 : selectedNodes.length) > 0)) {
      if (selectedNodes[0].id != node) {
        selectNodes(nodes);
      }
    } else {
    }
    setPreselectedProp(key2);
    setPreselectedPropType(type);
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-editor"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-container"
  }, instance.root && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-main"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-canvas"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-props-editor"
  }, /* @__PURE__ */ Cn.createElement(PropsPanel, {
    contexts: (_a2 = root2.node.contexts) != null ? _a2 : {},
    plugin: props2.plugin,
    editCode
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-frame-canvas-editor"
  }, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: 2,
    plugin: props2.plugin,
    treeNode: instance.root,
    instance
  })))))));
};

// src/components/Space/Frames/FrameEditorView.tsx
var FRAME_EDITOR_TYPE = "mk-frame-editor";
var openFrameEditor = async (plugin, path, schema) => {
  const leaf = app.workspace.getLeaf(false);
  plugin.openFileContextLeaf();
  const viewType = FRAME_EDITOR_TYPE;
  app.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({
    type: viewType,
    state: { path, schema }
  });
  await app.workspace.requestSaveLayout();
  if (path) {
    const evt2 = new CustomEvent(eventTypes.activePathChange, {
      detail: { path: uriByString(path) }
    });
    window.dispatchEvent(evt2);
    const evt = new CustomEvent(eventTypes.frameSelected, {
      detail: { path: uriByString(path + "#*" + schema) }
    });
    window.dispatchEvent(evt);
  }
};
var FrameEditorView = class extends import_obsidian30.ItemView {
  constructor(leaf, plugin, viewType) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
    this.viewType = viewType;
  }
  getViewType() {
    return FRAME_EDITOR_TYPE;
  }
  getDisplayText() {
    var _a2;
    return (_a2 = this.space) == null ? void 0 : _a2.name;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.space = spaceInfoByPath(this.plugin, state.path);
    this.schema = state.schema;
    if (!this.space)
      return;
    this.constructNote(this.space, this.schema);
    const displayName = pathDisplayName(this.space.uri);
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = displayName;
    this.leaf.view.titleEl = displayName;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = displayName;
    }
    result.history = true;
    return;
  }
  getState() {
    var _a2, _b2;
    const state = super.getState();
    state.path = (_b2 = (_a2 = this.space) == null ? void 0 : _a2.uri) == null ? void 0 : _b2.fullPath;
    state.schema = this.schema;
    return state;
  }
  constructNote(space, schema) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-space-view"
      }, /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
        plugin: this.plugin,
        space
      }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
        plugin: this.plugin,
        schema
      }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
        plugin: this.plugin,
        props: {}
      }, /* @__PURE__ */ Cn.createElement(FrameEditor, {
        plugin: this.plugin
      })))))
    );
  }
};

// src/components/Space/Frames/Placeholders/RowPlaceholder.tsx
init_compat_module();
var RowPlaceholder = (props2) => {
  const { hoverNode, root: root2 } = q2(FramesEditorContext);
  const { setNodeRef } = useDroppable({
    id: props2.id,
    data: {
      id: props2.id,
      type: "item",
      parent: props2.parentId
    }
  });
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-frame-row-placeholder ${hoverNode == props2.id && "mk-indicator-bottom"}`,
    ref: setNodeRef
  }, /* @__PURE__ */ Cn.createElement(FrameHoverMenu, {
    plugin: props2.plugin,
    node: root2.node,
    listeners: null,
    dragRef: null
  })));
};

// src/components/ui/modals/saveViewModal.ts
var import_obsidian31 = require("obsidian");
var SaveViewModal = class extends import_obsidian31.Modal {
  constructor(schema, saveSchema, action) {
    super(app);
    this.schema = schema;
    this.saveSchema = saveSchema;
    this.action = action;
  }
  onOpen() {
    const { contentEl } = this;
    let headerText;
    if (this.action == "new view")
      headerText = i18n_default.labels.saveView;
    if (this.action == "rename view")
      headerText = i18n_default.labels.renameView;
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    const inputEl = contentEl.createEl("input");
    inputEl.style.cssText = "width: 100%; height: 2.5em; margin-bottom: 15px;";
    inputEl.focus();
    let changeButtonText;
    if (this.action == "new view")
      changeButtonText = i18n_default.buttons.saveView;
    if (this.action == "rename view")
      changeButtonText = i18n_default.buttons.renameView;
    const changeButton = contentEl.createEl("button", {
      text: changeButtonText
    });
    const cancelButton = contentEl.createEl("button", {
      text: i18n_default.buttons.cancel
    });
    cancelButton.style.cssText = "float: right;";
    cancelButton.addEventListener("click", () => {
      this.close();
    });
    const onClickAction = async () => {
      const newName = inputEl.value;
      if (this.action == "new view") {
        this.saveSchema({ ...this.schema, id: newName.replace(/ /g, "_"), name: newName });
      } else {
        this.saveSchema({ ...this.schema, name: newName });
      }
      this.close();
    };
    changeButton.addEventListener("click", onClickAction);
    inputEl.addEventListener("keydown", (e4) => {
      if (e4.key === "Enter") {
        e4.preventDefault();
        onClickAction();
      }
    });
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/components/Space/Contexts/ContextBuilder/ContextFrameView.tsx
init_compat_module();
init_compat_module();
var PLACEHOLDER_ID2 = "_placeholder";
var ContextFrameView = (props2) => {
  const { predicate, savePredicate, cols, data: data2 } = q2(ContextEditorContext);
  const { frameSchemas, saveSchema } = q2(FramesMDBContext);
  const { spaceInfo } = q2(SpaceContext);
  const selectedFrame = (predicate == null ? void 0 : predicate.frame) ? uriByString(predicate.frame).ref : null;
  const selectFrame = (frameRef) => {
    savePredicate({ ...predicate, view: "frame", frame: frameRef });
  };
  const setFrameProps = (frameProps) => {
    savePredicate({ ...predicate, frameProps });
  };
  const newSchema = (schema) => {
    selectFrame(schema.id);
    saveSchema(schema);
  };
  const addFrame = () => {
    const vaultChangeModal = new SaveViewModal(
      { name: "", type: "listitem", id: "frame" },
      newSchema,
      "new view"
    );
    vaultChangeModal.open();
  };
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  const saveViewType = (type) => {
    savePredicate({
      ...predicate,
      view: type,
      frame: ""
    });
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-view-editor"
  }, selectedFrame ? /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    plugin: props2.plugin,
    schema: selectedFrame
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    plugin: props2.plugin,
    props: data2[0]
  }, /* @__PURE__ */ Cn.createElement(FrameListView, {
    plugin: props2.plugin,
    cols
  })))) : predicate.view == "table" ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-table"
  }, /* @__PURE__ */ Cn.createElement("table", null, /* @__PURE__ */ Cn.createElement("tr", null, cols.map((f4, i4) => /* @__PURE__ */ Cn.createElement("th", {
    key: i4,
    className: "mk-th"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-col-header"
  }, f4.name)))), /* @__PURE__ */ Cn.createElement("tr", null, cols.map((f4, i4) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("td", {
      key: i4,
      className: "mk-td"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      column: f4,
      editable: false,
      initialValue: (_a2 = data2[0]) == null ? void 0 : _a2[f4.name],
      plugin: props2.plugin
    }));
  })))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-context-view-selector"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveViewType("table")
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//table-2", props2.plugin)
    }
  }), "Table"), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveViewType("list")
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//layout-list", props2.plugin)
    }
  }), "List"), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveViewType("card")
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//layout-grid", props2.plugin)
    }
  }), "Card"), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveViewType("flow")
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//infinity", props2.plugin)
    }
  }), "Flow"), frameSchemas.filter((f4) => f4.type == "listitem").map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onClick: () => selectFrame(`${spaceInfo.path}/#^${f4.id}`),
    onContextMenu: () => openFrameEditor(props2.plugin, spaceInfo.path, f4.id)
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//square", props2.plugin)
    }
  }), f4.name)), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => addFrame()
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString("lucide//plus", props2.plugin)
    }
  }), "New")));
};
var FrameListView = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const {
    instance,
    root: root2,
    saveState,
    hoverNode,
    setHoverNode,
    dragNode,
    moveToRank,
    nodes,
    setDragNode,
    addNode,
    saveNodes,
    moveNodeFromSchema
  } = q2(FramesEditorContext);
  const _instance = F2(() => {
    return instance ? {
      ...instance,
      root: instance.root ? {
        ...instance.root,
        node: {
          ...instance.root.node,
          props: props2.cols.reduce(
            (p3, c4) => ({
              ...p3,
              [c4.name]: ""
            }),
            {}
          )
        }
      } : null
    } : null;
  }, [props2.cols, instance]);
  const activeRunID = _2(null);
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const resetState = () => {
    setHoverNode(null);
    setDragNode(null);
  };
  const getDragLayer = () => {
    var _a2;
    if (dragNode === null) {
      return null;
    }
    const node = (_a2 = findParent(instance.root, dragNode)) == null ? void 0 : _a2.children.find(
      (f4) => f4.id == dragNode
    );
    if (!node)
      return null;
    return /* @__PURE__ */ Cn.createElement(FrameNodeView, {
      editMode: 1,
      plugin: props2.plugin,
      treeNode: node,
      instance
    });
  };
  const moveParent = (node, newParent, schemaId) => {
  };
  useDndMonitor({
    onDragStart({ active }) {
      if (active.data.current.frame == frameSchema.id)
        setDragNode(active.data.current.id);
    },
    onDragOver({ active, over }) {
      const overId = over == null ? void 0 : over.data.current.id;
      if ((over == null ? void 0 : over.data.current.frame) == frameSchema.id) {
        if (overId)
          setHoverNode(overId);
      }
    },
    onDragCancel() {
      resetState();
    },
    onDragEnd({ active, over }) {
      if (!active) {
        resetState();
        return;
      }
      let overId = hoverNode;
      let overNewColumn = false;
      if ((overId == null ? void 0 : overId.charAt(0)) == "|") {
        overId = overId.substring(1);
        overNewColumn = true;
      }
      if (overId == active.data.current.id) {
        resetState();
        return;
      }
      const overParentNode = findParent(instance.root, overId);
      const overNode = overParentNode == null ? void 0 : overParentNode.children.find(
        (f4) => f4.id == overId
      );
      const activeParentNode = findParent(
        instance.root,
        active.data.current.id
      );
      const activeNode = activeParentNode == null ? void 0 : activeParentNode.children.find(
        (f4) => f4.id == active.data.current.id
      );
      if (overNewColumn) {
        if (overNode.node.type == "column") {
          const column = {
            ...newUniqueNode(columnNode, overParentNode.id, [], frameSchema.id),
            rank: overNode.node.rank > activeNode.node.rank ? overNode.node.rank : overNode.node.rank + 1
          };
          const nodes2 = [column, { ...activeNode.node, parentId: column.id }];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes([column]).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes(nodes2);
          }
        } else {
          const newColumns = newUniqueNode(
            columnsNode,
            overParentNode.id,
            nodes,
            frameSchema.id
          );
          const column1 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns],
            frameSchema.id
          );
          const column2 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns, column1],
            frameSchema.id
          );
          const newNodes = [
            newColumns,
            column1,
            column2,
            { ...overNode.node, parentId: column1.id }
          ];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes(newNodes).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column2.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes([
              ...newNodes,
              { ...activeNode.node, parentId: column2.id }
            ]);
          }
        }
        resetState();
        return;
      }
      if (active.data.current.frame != frameSchema.id) {
        moveNodeFromSchema(
          active.data.current.id,
          active.data.current.frame,
          overNode.node.parentId,
          {
            position: `'relative'`,
            left: "0",
            top: "0"
          }
        );
        resetState();
        return;
      }
      if ((overParentNode == null ? void 0 : overParentNode.id) == (activeParentNode == null ? void 0 : activeParentNode.id)) {
        console.group("same parent", overNode);
        if (overNode)
          moveToRank(activeNode.node, overNode.node.rank);
      } else {
        if (overNode)
          saveNodes([{ ...activeNode.node, parentId: overNode.node.parentId }]);
      }
      if (!overId) {
        resetState();
        return;
      }
      if (overId === PLACEHOLDER_ID2) {
        saveNodes([{ ...activeNode.node, parentId: overNode.node.id }]);
        resetState();
        return;
      }
      resetState();
    }
  });
  return (_instance == null ? void 0 : _instance.root) && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: 1,
    plugin: props2.plugin,
    treeNode: _instance.root,
    instance: _instance
  }), /* @__PURE__ */ Cn.createElement(RowPlaceholder, {
    plugin: props2.plugin,
    id: PLACEHOLDER_ID2,
    parentId: frameSchema.id
  }), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, null, getDragLayer()),
    document.body
  ));
};

// src/components/ui/modals/contextEditorModal.tsx
var import_obsidian32 = require("obsidian");
init_compat_module();
var ContextEditorModal = class extends import_obsidian32.Modal {
  constructor(plugin, space, db, view, type) {
    super(plugin.app);
    this.space = space;
    this.view = view;
    this.db = db;
    this.plugin = plugin;
    this.type = type;
  }
  onOpen() {
    const { contentEl } = this;
    this.modalEl.toggleClass("mk-context-maker", true);
    const queryEl = contentEl.createDiv("mk-context-maker-container");
    const root2 = createRoot(queryEl);
    this.titleEl.textContent = this.type == 0 ? "Properties" : "View";
    root2.render(
      /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
        plugin: this.plugin,
        space: this.space
      }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
        plugin: this.plugin,
        schema: this.db
      }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
        plugin: this.plugin
      }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
        plugin: this.plugin,
        schema: this.view
      }, this.type == 0 ? /* @__PURE__ */ Cn.createElement(ContextProperties, {
        plugin: this.plugin
      }) : /* @__PURE__ */ Cn.createElement(ContextFrameView, {
        plugin: this.plugin
      })))))
    );
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/components/ui/modals/mergeColumnModal.ts
var import_obsidian33 = require("obsidian");
var MergeColumnModal = class extends import_obsidian33.Modal {
  constructor(columns, mergeColumn) {
    super(app);
    this.columns = columns;
    this.mergeColumn = mergeColumn;
  }
  onOpen() {
    const { contentEl } = this;
    const headerText = i18n_default.labels.mergeProperties;
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    const containerEl = contentEl.createEl("div");
    containerEl.style.cssText = "width: 100%; height: 2.5em; margin-bottom: 15px;";
    const select = containerEl.createEl("select");
    for (let i4 = 0; i4 < this.columns.length; i4++) {
      const opt = document.createElement("option");
      opt.value = i4.toString();
      opt.innerHTML = this.columns[i4].name + this.columns[i4].table;
      select.appendChild(opt);
    }
    const select2 = containerEl.createEl("select");
    for (let i4 = 0; i4 < this.columns.length; i4++) {
      const opt = document.createElement("option");
      opt.value = i4.toString();
      opt.innerHTML = this.columns[i4].name + this.columns[i4].table;
      select2.appendChild(opt);
    }
    const changeButtonText = i18n_default.buttons.merge;
    const changeButton = contentEl.createEl("button", {
      text: changeButtonText
    });
    const cancelButton = contentEl.createEl("button", {
      text: i18n_default.buttons.cancel
    });
    cancelButton.style.cssText = "float: right;";
    cancelButton.addEventListener("click", () => {
      this.close();
    });
    const onClickAction = async () => {
      this.mergeColumn(
        this.columns[parseInt(select.value)],
        this.columns[parseInt(select2.value)]
      );
      this.close();
    };
    changeButton.addEventListener("click", onClickAction);
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};

// src/components/Space/Contexts/FilterBar/FilterBar.tsx
var import_obsidian34 = require("obsidian");
init_compat_module();

// src/utils/contexts/predicate/filterFns/filterFnLabels.ts
var filterFnLabels = {
  isEmpty: i18n_default.filterTypes.isEmpty,
  isNotEmpty: i18n_default.filterTypes.isNotEmpty,
  include: i18n_default.filterTypes.contains,
  notInclude: i18n_default.filterTypes.notContains,
  is: i18n_default.filterTypes.is,
  isNot: i18n_default.filterTypes.isNot,
  equal: "=",
  isGreatThan: ">",
  isLessThan: "<",
  isLessThanOrEqual: "\u2264",
  isGreatThanOrEqual: "\u2265",
  dateBefore: i18n_default.filterTypes.before,
  dateAfter: i18n_default.filterTypes.after,
  isSameDateAsToday: "today",
  isAnyInList: i18n_default.filterTypes.anyOf,
  isNoneInList: i18n_default.filterTypes.noneOf,
  isTrue: i18n_default.filterTypes.checked,
  isFalse: i18n_default.filterTypes.unchecked
};

// src/components/Space/Contexts/FilterBar/SearchBar.tsx
init_compat_module();
var SearchBar = (props2) => {
  const clearSearch = () => {
    props2.setSearchString("");
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-search"
  }, /* @__PURE__ */ Cn.createElement("button", {
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-search"] }
  }), /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("input", {
    onChange: (e4) => props2.setSearchString(e4.target.value),
    placeholder: i18n_default.labels.searchPlaceholder,
    className: "mk-search-bar"
  }), /* @__PURE__ */ Cn.createElement("button", {
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-clear"] },
    onClick: () => clearSearch()
  })));
};

// src/components/Space/Contexts/FilterBar/FilterBar.tsx
var FilterBar = (props2) => {
  const ctxRef = _2(null);
  const { spaceInfo, contexts } = q2(SpaceContext);
  const {
    dbSchemas: schemas,
    setDBSchema,
    saveDB: saveDB2,
    saveContextDB,
    dbSchema,
    contextTable,
    tableData
  } = q2(ContextMDBContext);
  const {
    data: data2,
    loadContextFields,
    cols,
    schema,
    setSchema,
    setSearchString,
    predicate,
    savePredicate,
    hideColumn,
    saveColumn,
    sortColumn,
    delColumn,
    views
  } = q2(ContextEditorContext);
  const { saveSchema, frameSchemas, deleteSchema } = q2(FramesMDBContext);
  const filteredCols = cols.filter((f4) => f4.hidden != "true");
  const saveViewType = (type) => {
    savePredicate({
      ...predicate,
      view: type
    });
  };
  const selectView = (_dbschema, value) => {
    setDBSchema(_dbschema);
    value && setSchema(views.find((f4) => f4.id == value));
  };
  const openView = (e4, view) => {
    const dbSchema2 = schemas.find((f4) => f4.type == "db" && f4.id == view.def.db);
    if (dbSchema2) {
      selectView(dbSchema2, view.id);
      return;
    }
    return;
  };
  const showViewMenu = (e4, _dbschema) => {
    const views2 = schemas.filter(
      (f4) => f4.type != "db" && f4.def == _dbschema.id
    );
    const offset2 = e4.target.getBoundingClientRect();
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: contexts,
        options: views2.map((m5) => ({ name: m5.name, value: m5.id })),
        saveOptions: (_12, value) => selectView(_dbschema, value[0]),
        placeholder: i18n_default.labels.viewItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const clearFilters = () => {
    savePredicate({
      ...predicate,
      filters: [],
      sort: []
    });
  };
  const clearHiddenCols = () => {
    savePredicate({
      ...predicate,
      colsHidden: []
    });
  };
  const removeFilter = (filter) => {
    const newFilters = [
      ...predicate.filters.filter((f4) => f4.field != filter.field)
    ];
    savePredicate({
      ...predicate,
      filters: newFilters
    });
  };
  const viewContextMenu = (e4, _schema) => {
    const fileMenu = new import_obsidian34.Menu();
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle("Copy Embed Link");
      menuItem.onClick(() => {
        navigator.clipboard.writeText(
          contextEmbedStringFromContext(spaceInfo, _schema.id)
        );
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle("Rename View");
      menuItem.onClick(() => {
        const vaultChangeModal = new SaveViewModal(
          _schema,
          (s5) => saveSchema(s5),
          "rename view"
        );
        vaultChangeModal.open();
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle("Delete View");
      menuItem.onClick(() => {
        deleteSchema(_schema);
      });
    });
    if (isMouseEvent(e4)) {
      fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
    } else {
      fileMenu.showAtPosition({
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      });
    }
  };
  const showFilterMenu = (e4) => {
    const menu = new import_obsidian34.Menu();
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.tableView);
      item.setIcon("table-2");
      item.onClick(() => {
        saveViewType("table");
      });
    });
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.cardView);
      item.setIcon("layout-grid");
      item.onClick(() => {
        saveViewType("card");
      });
    });
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.listView);
      item.setIcon("layout-list");
      item.onClick(() => {
        saveViewType("list");
      });
    });
    if (dbSchema == null ? void 0 : dbSchema.primary) {
      menu.addItem((item) => {
        item.setTitle(i18n_default.menu.flowView);
        item.setIcon("infinity");
        item.onClick(() => {
          saveViewType("flow");
        });
      });
    }
    menu.addSeparator();
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.groupBy);
      item.setIcon("columns");
      item.onClick(() => {
        showGroupByMenu(e4);
      });
    });
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.sortBy);
      item.setIcon("sort-desc");
      item.onClick(() => {
        showSortMenu(e4);
      });
    });
    menu.addSeparator();
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.newFilter);
      item.setIcon("filter");
      item.onClick(() => {
        showAddFilterMenu(e4);
      });
    });
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.clearFilters);
      item.setIcon("x-square");
      item.onClick(() => {
        clearFilters();
      });
    });
    menu.addSeparator();
    menu.addItem((item) => {
      item.setTitle(i18n_default.menu.unhideFields);
      item.setIcon("eye");
      item.onClick(() => {
        clearHiddenCols();
      });
    });
    const offset2 = e4.target.getBoundingClientRect();
    menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
  };
  const addSort = (_12, sort) => {
    var _a2;
    const field = sort[0];
    const fieldType = (_a2 = filteredCols.find((f4) => f4.name + f4.table == field)) == null ? void 0 : _a2.type;
    if (fieldType) {
      const type = defaultPredicateFnForType(fieldType, sortFnTypes);
      const newSort = {
        field,
        fn: type
      };
      savePredicate({
        ...predicate,
        sort: [
          ...predicate.sort.filter((s5) => s5.field != newSort.field),
          newSort
        ]
      });
    }
  };
  const saveGroupBy = (_12, groupBy2) => {
    savePredicate({
      ...predicate,
      groupBy: groupBy2
    });
  };
  const removeSort = (sort) => {
    const newSort = [...predicate.sort.filter((f4) => f4.field != sort.field)];
    savePredicate({
      ...predicate,
      sort: newSort
    });
  };
  const addFilter = (_12, filter) => {
    var _a2;
    const field = filter[0];
    const fieldType = (_a2 = filteredCols.find((f4) => f4.name + f4.table == field)) == null ? void 0 : _a2.type;
    if (fieldType) {
      const type = defaultPredicateFnForType(fieldType, filterFnTypes);
      const newFilter = fieldType == "boolean" ? {
        field,
        fn: type,
        value: "true"
      } : {
        field,
        fn: type,
        value: ""
      };
      savePredicate({
        ...predicate,
        filters: [
          ...predicate.filters.filter((s5) => s5.field != newFilter.field),
          newFilter
        ]
      });
    }
  };
  const changeSortMenu = (e4, sort) => {
    var _a2;
    const offset2 = e4.target.getBoundingClientRect();
    const saveSort = (_12, newType) => {
      const type = newType[0];
      const newSort = {
        ...sort,
        fn: type
      };
      savePredicate({
        ...predicate,
        sort: [
          ...predicate.sort.filter((s5) => s5.field != newSort.field),
          newSort
        ]
      });
    };
    const fieldType = (_a2 = filteredCols.find(
      (f4) => f4.name + f4.table == sort.field
    )) == null ? void 0 : _a2.type;
    const sortsForType = predicateFnsForType(fieldType, sortFnTypes);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: sortsForType.map((f4) => ({
          name: sortFnTypes[f4].label,
          value: f4
        })),
        saveOptions: saveSort,
        placeholder: i18n_default.labels.sortItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showViewsMenu = (e4) => {
    const vaultChangeModal = new ContextEditorModal(
      props2.plugin,
      spaceInfo,
      dbSchema == null ? void 0 : dbSchema.id,
      schema == null ? void 0 : schema.id,
      1
    );
    vaultChangeModal.open();
  };
  const showColsMenu = (e4) => {
    const vaultChangeModal = new ContextEditorModal(
      props2.plugin,
      spaceInfo,
      dbSchema == null ? void 0 : dbSchema.id,
      schema == null ? void 0 : schema.id,
      0
    );
    vaultChangeModal.open();
  };
  const saveField = (field, oldField) => {
    if (field.name.length > 0) {
      if (field.name != oldField.name || field.type != oldField.type || field.value != oldField.value || field.attrs != oldField.attrs) {
        const saveResult = saveColumn(field, oldField);
      }
    }
  };
  const showMenu = (e4, field) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = optionValuesForColumn(
      field.name,
      field.table == "" ? tableData : contextTable[field.table]
    );
    showPropertyMenu({
      plugin: props2.plugin,
      position: { x: offset2.left, y: offset2.top + 30 },
      editable: true,
      options,
      field,
      fields: cols,
      contextPath: spaceInfo.path,
      saveField: (newField) => saveField(newField, field),
      saveContext: (newField, val) => {
      },
      hide: hideColumn,
      deleteColumn: delColumn,
      sortColumn,
      hidden: predicate.colsHidden.includes(field.name + field.table)
    });
  };
  const changeFilterMenu = (e4, filter) => {
    var _a2;
    const offset2 = e4.target.getBoundingClientRect();
    const saveFilter = (_12, newType) => {
      const type = newType[0];
      const newFilter = {
        ...filter,
        fn: type
      };
      savePredicate({
        ...predicate,
        filters: [
          ...predicate.filters.filter((s5) => s5.field != newFilter.field),
          newFilter
        ]
      });
    };
    const fieldType = (_a2 = filteredCols.find(
      (f4) => f4.name + f4.table == filter.field
    )) == null ? void 0 : _a2.type;
    const filtersForType = predicateFnsForType(fieldType, filterFnTypes);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: filtersForType.map((f4) => ({
          name: filterFnLabels[f4],
          value: f4
        })),
        saveOptions: saveFilter,
        placeholder: i18n_default.labels.filterItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showAddFilterMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.filter((f4) => predicateFnsForType(f4.type, filterFnTypes).length > 0).map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: addFilter,
        placeholder: i18n_default.labels.propertyItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showSortMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: addSort,
        placeholder: i18n_default.labels.sortItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showGroupByMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: filteredCols.filter((f4) => f4.primary != "true").map((f4) => ({
          name: f4.name + f4.table,
          value: f4.name + f4.table
        })),
        saveOptions: saveGroupBy,
        placeholder: i18n_default.labels.propertyItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const showAddMenu = (e4) => {
    const fileMenu = new import_obsidian34.Menu();
    const folder = getAbstractFileAtPath(app, spaceInfo.path);
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("edit");
      menuItem.setTitle(i18n_default.buttons.createNote);
      menuItem.onClick((ev) => {
        newFileInFolder(props2.plugin, folder);
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("layout-dashboard");
      menuItem.setTitle(i18n_default.buttons.createCanvas);
      menuItem.onClick((ev) => {
        createNewCanvasFile(props2.plugin, folder, "");
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setIcon("folder-plus");
      menuItem.setTitle(i18n_default.buttons.createFolder);
      menuItem.onClick((ev) => {
        const vaultChangeModal = new VaultChangeModal(
          props2.plugin,
          folder,
          "create folder",
          "/"
        );
        vaultChangeModal.open();
      });
    });
    if (isMouseEvent(e4)) {
      fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
    } else {
      fileMenu.showAtPosition({
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      });
    }
    return false;
  };
  const showFMMenu2 = (e4) => {
    const menu = new import_obsidian34.Menu();
    menu.addItem((menuItem) => {
      menuItem.setIcon("log-in");
      menuItem.setTitle(i18n_default.menu.mergeProperties);
      menuItem.onClick(() => {
        showMergeColumnModal();
      });
    });
    const offset2 = e4.target.getBoundingClientRect();
    menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
  };
  const mergeColumn = (fromCol, toCol) => {
    const fromTable = fromCol.table == "" ? tableData : contextTable[fromCol.table];
    if (toCol.table == "") {
      saveDB2({
        ...tableData,
        rows: tableData.rows.map((r3, i4) => {
          const foundRow = fromTable.rows.find((f4) => f4.File == r3.File);
          return foundRow ? { ...r3, [toCol.name]: foundRow[fromCol.name] } : r3;
        })
      });
    } else {
      saveContextDB(
        {
          ...contextTable[toCol.table],
          rows: contextTable[toCol.table].rows.map((r3, i4) => {
            const foundRow = fromTable.rows.find((f4) => f4.File == r3.File);
            return foundRow ? { ...r3, [toCol.name]: foundRow[fromCol.name] } : r3;
          })
        },
        toCol.table
      );
    }
  };
  const showMergeColumnModal = () => {
    var _a2;
    const vaultChangeModal = new MergeColumnModal(
      [
        ...(_a2 = filteredCols == null ? void 0 : filteredCols.map((f4) => ({ ...f4, table: "" }))) != null ? _a2 : [],
        ...contexts.reduce(
          (p3, c4) => {
            var _a3, _b2;
            return [
              ...p3,
              ...(_b2 = (_a3 = contextTable[c4]) == null ? void 0 : _a3.cols.filter(
                (f4) => f4.name != FilePropertyName && f4.hidden != "true" && f4.type != "fileprop"
              ).map((f4) => ({ ...f4, table: c4 }))) != null ? _b2 : []
            ];
          },
          []
        )
      ],
      mergeColumn
    );
    vaultChangeModal.open();
  };
  const showSaveViewModal = () => {
    const vaultChangeModal = new SaveViewModal(schema, saveSchema, "new view");
    vaultChangeModal.open();
  };
  const editViewModal = () => {
    const vaultChangeModal = new SaveViewModal(
      schema,
      saveSchema,
      "rename view"
    );
    vaultChangeModal.open();
  };
  const selectFilterValue = (e4, filter) => {
    var _a2, _b2, _c2;
    switch (filterFnTypes[filter.fn].valueType) {
      case "text":
      case "number":
        {
          const menu = new import_obsidian34.Menu();
          menu.setUseNativeMenu(false);
          const saveFilterValue = (value) => {
            const newFilter = {
              ...filter,
              value
            };
            savePredicate({
              ...predicate,
              filters: [
                ...predicate.filters.filter((s5) => s5.field != newFilter.field),
                newFilter
              ]
            });
          };
          menu.addItem((menuItem) => {
            inputMenuItem(
              menuItem,
              filter.value,
              (value) => saveFilterValue(value)
            );
            menuItem.setIcon("type");
          });
          const offset2 = e4.target.getBoundingClientRect();
          menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        }
        break;
      case "date": {
        const saveValue = (date2) => {
          const newFilter = {
            ...filter,
            value: date2.valueOf().toString()
          };
          savePredicate({
            ...predicate,
            filters: [
              ...predicate.filters.filter((s5) => s5.field != newFilter.field),
              newFilter
            ]
          });
        };
        const offset2 = e4.target.getBoundingClientRect();
        const date = new Date(filter.value);
        showDatePickerMenu(
          { x: offset2.left, y: offset2.top + 30 },
          date.getTime() ? date : null,
          saveValue
        );
        break;
      }
      case "list":
        {
          const col = cols.find((f4) => f4.name + f4.table == filter.field);
          const saveOptions = (options, values) => {
            const newFilter = {
              ...filter,
              value: serializeMultiString(values)
            };
            savePredicate({
              ...predicate,
              filters: [
                ...predicate.filters.filter((s5) => s5.field != newFilter.field),
                newFilter
              ]
            });
          };
          if (col.type.startsWith("option")) {
            const offset2 = e4.target.getBoundingClientRect();
            showSelectMenu(
              { x: offset2.left, y: offset2.top + 30 },
              {
                plugin: props2.plugin,
                multi: true,
                editable: false,
                value: parseMultiString(filter.value),
                options: parseMultiString(col.value).map((f4) => ({
                  name: f4,
                  value: f4
                })),
                saveOptions,
                placeholder: i18n_default.labels.optionItemSelectPlaceholder,
                searchable: true,
                showAll: true
              }
            );
          } else if (col.type.startsWith("context")) {
            const contextData = (_b2 = (_a2 = contextTable[col.table]) == null ? void 0 : _a2.rows) != null ? _b2 : [];
            const offset2 = e4.target.getBoundingClientRect();
            showSelectMenu(
              { x: offset2.left, y: offset2.top + 30 },
              {
                plugin: props2.plugin,
                multi: true,
                editable: false,
                value: parseMultiString(filter.value),
                options: (_c2 = contextData.map((f4) => ({
                  name: filePathToString(f4[FilePropertyName]),
                  value: f4[FilePropertyName]
                }))) != null ? _c2 : [],
                saveOptions,
                placeholder: i18n_default.labels.optionItemSelectPlaceholder,
                searchable: true,
                showAll: true
              }
            );
          }
        }
        break;
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-config"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-selector"
  }, views.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: `${(schema == null ? void 0 : schema.id) == f4.id ? "mk-is-active" : ""}`,
    onContextMenu: (e4) => viewContextMenu(e4, f4)
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => openView(e4, f4)
  }, f4.name))), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showSaveViewModal()
  }, "+")), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-view-options"
  }, /* @__PURE__ */ Cn.createElement(SearchBar, {
    setSearchString
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showFilterMenu(e4),
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-view-options"]
    }
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showViewsMenu(e4),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-build"] }
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showColsMenu(e4),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-list"] }
  }), spaceInfo.uri.type == "folder" && (dbSchema == null ? void 0 : dbSchema.id) == "files" && /* @__PURE__ */ Cn.createElement("button", {
    className: "mk-button-new",
    onClick: (e4) => showAddMenu(e4),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }))), (predicate.filters.length > 0 || predicate.sort.length > 0 || predicate.groupBy.length > 0) && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter-bar"
  }, predicate.groupBy.length > 0 && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", null, "Group By"), /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => showGroupByMenu(e4)
  }, predicate.groupBy[0]), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => saveGroupBy(null, []),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  })), predicate.sort.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", null, f4.field), /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => changeSortMenu(e4, f4)
  }, sortFnTypes[f4.fn].label), /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => removeSort(f4),
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }))), predicate.filters.map((f4, i4) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-filter"
    }, /* @__PURE__ */ Cn.createElement("span", null, f4.field), /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => changeFilterMenu(e4, f4)
    }, filterFnLabels[f4.fn]), /* @__PURE__ */ Cn.createElement(FilterValueSpan, {
      fieldType: (_a2 = cols.find((c4) => c4.name + c4.table == f4.field)) == null ? void 0 : _a2.type,
      filter: f4,
      selectFilterValue
    }), /* @__PURE__ */ Cn.createElement("div", {
      onClick: () => removeFilter(f4),
      dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
    }));
  }), /* @__PURE__ */ Cn.createElement("span", null)));
};
var FilterValueSpan = (props2) => {
  const { filter, selectFilterValue, fieldType } = props2;
  const fnType = filterFnTypes[filter.fn];
  if (!fieldType || !fnType || fnType.valueType == "none") {
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
  } else if (filter.value.length == 0) {
    return /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => selectFilterValue(e4, filter)
    }, "Select");
  } else if (fieldType.startsWith("option") || fieldType.startsWith("context")) {
    const options = parseMultiString(filter.value);
    return /* @__PURE__ */ Cn.createElement("span", {
      onClick: (e4) => selectFilterValue(e4, filter)
    }, " ", options.map((f4, i4) => /* @__PURE__ */ Cn.createElement("span", {
      key: i4
    }, f4)));
  }
  return /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectFilterValue(e4, filter)
  }, filter.value);
};

// src/components/Space/Contexts/FlowListView/FlowListView.tsx
init_compat_module();
var import_obsidian35 = require("obsidian");
var FlowListView = (props2) => {
  const { filteredData: data2 } = q2(ContextEditorContext);
  const flowItems = F2(() => {
    return data2.map((f4) => getAbstractFileAtPath(app, f4.File)).filter((f4) => f4 instanceof import_obsidian35.TFile && f4.extension == "md");
  }, [data2]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flow-container"
  }, flowItems.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4
  }, /* @__PURE__ */ Cn.createElement("span", null, fileNameToString(f4.name)), /* @__PURE__ */ Cn.createElement(FlowView, {
    leaf: props2.leaf,
    plugin: props2.plugin,
    path: f4.path,
    load: true
  }))));
};

// src/components/Space/Contexts/ContextListView.tsx
var ContextListView = (props2) => {
  const { predicate } = q2(ContextEditorContext);
  const [error, resetError] = P2();
  if (error)
    console.log(error);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(FilterBar, {
    plugin: props2.plugin
  }), predicate ? predicate.view == "flow" ? /* @__PURE__ */ Cn.createElement(FlowListView, {
    plugin: props2.plugin
  }) : predicate.view == "table" || predicate.view == "db" ? /* @__PURE__ */ Cn.createElement(TableView, {
    plugin: props2.plugin
  }) : /* @__PURE__ */ Cn.createElement(CardsView, {
    plugin: props2.plugin
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), " ");
};

// src/components/Space/Editor/EmbedView/EmbedContextViewComponent.tsx
var EmbedFrameView = (props2) => {
  var _a2, _b2, _c2;
  const getFileCache = (file) => {
    if (!file || file.path == "/")
      return null;
    const cache = props2.plugin.index.filesIndex.get(file.path);
    return cache;
  };
  const [fileCache, setFileCache] = h2(
    getFileCache(getAbstractFileAtPath(app, props2.source))
  );
  const refreshFile = () => {
    return;
    if (!props2.source) {
      return;
    }
    setFileCache(getFileCache(getAbstractFileAtPath(app, props2.source)));
  };
  const cacheChanged = (evt) => {
    if (evt.detail.type == "file" && evt.detail.name == props2.source) {
      refreshFile();
    }
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, cacheChanged);
    refreshFile();
    return () => {
      window.removeEventListener(eventTypes.spacesChange, cacheChanged);
    };
  }, [props2.source]);
  const mdbFrame = (_a2 = props2.plugin.index.framesIndex.get(props2.path.path)) == null ? void 0 : _a2.frames[props2.path.ref];
  const root2 = mdbFrame ? buildRootFromMDBFrame(props2.plugin, mdbFrame) : null;
  return root2 && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.path.fullPath, /* @__PURE__ */ Cn.createElement(FrameRootView, {
    root: root2,
    plugin: props2.plugin,
    props: (_c2 = (_b2 = props2.path.query) != null ? _b2 : fileCache == null ? void 0 : fileCache.frontmatter) != null ? _c2 : {},
    contexts: {},
    source: props2.source
  }));
};
var EmbedContextView = (props2) => {
  const context = spaceInfoByPath(props2.plugin, props2.path.fullPath);
  return context && /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    plugin: props2.plugin,
    space: context
  }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
    plugin: props2.plugin,
    schema: props2.path.ref
  }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
    plugin: props2.plugin
  }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
    plugin: props2.plugin
  }, /* @__PURE__ */ Cn.createElement(ContextListView, {
    plugin: props2.plugin
  })))));
};
var EmbedViewComponent = (props2) => {
  const path = uriByString(props2.path);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, path.refType == "context" ? /* @__PURE__ */ Cn.createElement(EmbedContextView, {
    plugin: props2.plugin,
    path
  }) : path.refType == "frame" ? /* @__PURE__ */ Cn.createElement(EmbedFrameView, {
    plugin: props2.plugin,
    path,
    source: props2.source
  }) : path.type == "url" ? /* @__PURE__ */ Cn.createElement("iframe", {
    width: "853",
    height: "480",
    src: `${path.fullPath}`,
    frameBorder: "0",
    allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
    allowFullScreen: true,
    title: "Embedded youtube"
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/Space/Editor/EmbedView/EmbedContextView.tsx
var EMBED_CONTEXT_VIEW_TYPE = "make-inline-context";
var EmbedContextView2 = class extends import_obsidian36.ItemView {
  constructor(leaf, plugin) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
  }
  getViewType() {
    return EMBED_CONTEXT_VIEW_TYPE;
  }
  getDisplayText() {
    return this.path;
  }
  async onClose() {
    this.destroy();
  }
  onunload() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.path = state.path;
    this.source = state.source;
    this.constructInlineContext(this.path);
    await super.setState(state, result);
    const context = uriByString(this.path);
    const title = pathDisplayName(context);
    this.leaf.tabHeaderInnerTitleEl.innerText = title;
    this.leaf.view.titleEl = title;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = title;
    }
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path;
    state.source = this.source;
    return state;
  }
  constructInlineContext(file) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement(EmbedViewComponent, {
        plugin: this.plugin,
        path: this.path,
        source: this.source
      }))
    );
  }
};

// src/components/Space/Editor/FlowEditor.tsx
var import_obsidian37 = require("obsidian");
var popovers = /* @__PURE__ */ new WeakMap();
var mouseCoords = { x: 0, y: 0 };
function nosuper(base2) {
  const derived = function() {
    return Object.setPrototypeOf(new import_obsidian37.Component(), new.target.prototype);
  };
  derived.prototype = base2.prototype;
  return Object.setPrototypeOf(derived, base2);
}
var _a, _b, _c, _d, _e;
var FlowEditor = class extends nosuper(import_obsidian37.HoverPopover) {
  constructor(parent, targetEl, plugin, waitTime, onShowCallback) {
    super();
    this.targetEl = targetEl;
    this.plugin = plugin;
    this.onShowCallback = onShowCallback;
    this.abortController = this.addChild(new import_obsidian37.Component());
    this.detaching = false;
    this.opening = false;
    this.rootSplit = new import_obsidian37.WorkspaceSplit(
      window.app.workspace,
      "vertical"
    );
    this.targetRect = (_a = this.targetEl) == null ? void 0 : _a.getBoundingClientRect();
    this.oldPopover = (_b = this.parent) == null ? void 0 : _b.flowEditor;
    this.document = (_e = (_d = (_c = this.targetEl) == null ? void 0 : _c.ownerDocument) != null ? _d : window.activeDocument) != null ? _e : window.document;
    this.id = genId();
    this.hoverEl = this.document.defaultView.createDiv({
      cls: "mk-floweditor mk-hover-popover",
      attr: { id: "he" + this.id }
    });
    if (waitTime === void 0) {
      waitTime = 300;
    }
    this.onTarget = true;
    this.parent = parent;
    this.waitTime = waitTime;
    this.state = import_obsidian37.PopoverState.Showing;
    const { hoverEl } = this;
    this.abortController.load();
    this.timer = window.setTimeout(this.show.bind(this), waitTime);
    this.setActive = this._setActive.bind(this);
    if (hoverEl) {
      hoverEl.addEventListener("mousedown", this.setActive);
      hoverEl.addEventListener("mousedown", (e4) => e4.stopPropagation());
    }
    popovers.set(this.hoverEl, this);
    this.hoverEl.addClass("hover-editor");
    this.containerEl = this.hoverEl.createDiv("popover-content");
    this.setTitleBar();
    this.hoverEl.style.height = "auto";
    this.hoverEl.style.width = "100%";
    this.hoverEl.addEventListener("keydown", (e4) => e4.stopPropagation());
  }
  static activeWindows() {
    const windows = [window];
    const { floatingSplit } = app.workspace;
    if (floatingSplit) {
      for (const split of floatingSplit.children) {
        if (split.win)
          windows.push(split.win);
      }
    }
    return windows;
  }
  static containerForDocument(doc) {
    if (doc !== document && app.workspace.floatingSplit)
      for (const container of app.workspace.floatingSplit.children) {
        if (container.doc === doc)
          return container;
      }
    return app.workspace.rootSplit;
  }
  static activePopovers() {
    return this.activeWindows().flatMap(this.popoversForWindow);
  }
  static popoversForWindow(win) {
    var _a2, _b2;
    return Array.prototype.slice.call(
      (_b2 = (_a2 = win == null ? void 0 : win.document) == null ? void 0 : _a2.body.querySelectorAll(".mk-hover-popover")) != null ? _b2 : []
    ).map((el) => popovers.get(el)).filter((he2) => he2);
  }
  static forLeaf(leaf) {
    const el = leaf && document.body.matchParent.call(leaf.containerEl, ".mk-hover-popover");
    return el ? popovers.get(el) : void 0;
  }
  onunload() {
    this.hide();
  }
  _setActive() {
    this.plugin.app.workspace.setActiveLeaf(this.leaves()[0], { focus: true });
  }
  getDefaultMode() {
    var _a2, _b2;
    return ((_b2 = (_a2 = this.parent) == null ? void 0 : _a2.view) == null ? void 0 : _b2.getMode) ? this.parent.view.getMode() : "preview";
  }
  updateLeaves() {
    if (this.onTarget && this.targetEl && !this.document.contains(this.targetEl)) {
      this.onTarget = false;
      this.transition();
    }
    let leafCount = 0;
    this.plugin.app.workspace.iterateLeaves((leaf) => {
      leafCount++;
    }, this.rootSplit);
    if (leafCount === 0) {
      this.hide();
    } else if (leafCount > 1) {
    }
    this.hoverEl.setAttribute("data-leaf-count", leafCount.toString());
  }
  setTitleBar() {
    this.titleEl = this.document.defaultView.createDiv("mk-flow-titlebar");
    this.containerEl.prepend(this.titleEl);
  }
  attachLeaf() {
    this.rootSplit.getRoot = () => this.plugin.app.workspace[this.document === document ? "rootSplit" : "floatingSplit"];
    this.rootSplit.getContainer = () => FlowEditor.containerForDocument(this.document);
    this.titleEl.insertAdjacentElement("afterend", this.rootSplit.containerEl);
    let leaf = this.plugin.app.workspace.createLeafInParent(this.rootSplit, 0);
    leaf.isFlowBlock = true;
    this.updateLeaves();
    return leaf;
  }
  onload() {
    super.onload();
    this.registerEvent(
      this.plugin.app.workspace.on("layout-change", this.updateLeaves, this)
    );
    this.registerEvent(
      app.workspace.on("layout-change", () => {
        this.rootSplit.children.forEach((item, index) => {
          if (item instanceof import_obsidian37.WorkspaceTabs) {
            this.rootSplit.replaceChild(index, item.children[0]);
          }
        });
      })
    );
  }
  leaves() {
    const leaves = [];
    this.plugin.app.workspace.iterateLeaves((leaf) => {
      leaves.push(leaf);
    }, this.rootSplit);
    return leaves;
  }
  async onShow() {
    var _a2, _b2;
    const closeDelay = 600;
    setTimeout(() => this.waitTime = closeDelay, closeDelay);
    (_a2 = this.oldPopover) == null ? void 0 : _a2.hide();
    this.oldPopover = null;
    this.hoverEl.toggleClass("is-new", true);
    this.document.body.addEventListener(
      "click",
      () => {
        this.hoverEl.toggleClass("is-new", false);
      },
      { once: true, capture: true }
    );
    if (this.parent) {
      this.parent.flowEditor = this;
      this.parent.view.addChild(this);
    }
    await ((_b2 = this.onShowCallback) == null ? void 0 : _b2.call(this, this));
    this.onShowCallback = void 0;
    const viewHeaderEl = this.hoverEl.querySelector(".view-header");
    viewHeaderEl == null ? void 0 : viewHeaderEl.remove();
    const sizer = this.hoverEl.querySelector(".workspace-leaf");
    if (sizer)
      this.hoverEl.appendChild(sizer);
    const inlineTitle = this.hoverEl.querySelector(".inline-title");
    inlineTitle == null ? void 0 : inlineTitle.remove();
  }
  transition() {
    if (this.shouldShow()) {
      if (this.state === import_obsidian37.PopoverState.Hiding) {
        this.state = import_obsidian37.PopoverState.Shown;
        clearTimeout(this.timer);
      }
    } else {
      if (this.state === import_obsidian37.PopoverState.Showing) {
        this.hide();
      } else {
        if (this.state === import_obsidian37.PopoverState.Shown) {
          this.state = import_obsidian37.PopoverState.Hiding;
          this.timer = window.setTimeout(() => {
            if (this.shouldShow()) {
              this.transition();
            } else {
              this.hide();
            }
          }, this.waitTime);
        }
      }
    }
  }
  shouldShow() {
    return this.shouldShowSelf() || this.shouldShowChild();
  }
  shouldShowChild() {
    return FlowEditor.activePopovers().some((popover) => {
      if (popover !== this && popover.targetEl && this.hoverEl.contains(popover.targetEl)) {
        return popover.shouldShow();
      }
      return false;
    });
  }
  shouldShowSelf() {
    return !this.detaching && !!(this.onTarget || this.state == import_obsidian37.PopoverState.Shown || this.document.querySelector(
      `body>.modal-container, body > #he${this.id} ~ .menu, body > #he${this.id} ~ .suggestion-container`
    ));
  }
  show() {
    if (!this.targetEl || this.document.body.contains(this.targetEl)) {
      this.state = import_obsidian37.PopoverState.Shown;
      this.timer = 0;
      this.shownPos = mouseCoords;
      this.targetEl.replaceChildren(this.hoverEl);
      this.onShow();
      app.workspace.onLayoutChange();
      this.load();
    } else {
      this.hide();
    }
  }
  onHide() {
    var _a2;
    this.oldPopover = null;
    if (((_a2 = this.parent) == null ? void 0 : _a2.flowEditor) === this) {
      this.parent.flowEditor = null;
    }
  }
  hide() {
    var _a2;
    this.onTarget = false;
    this.detaching = true;
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = 0;
    }
    this.hoverEl.hide();
    if (this.opening)
      return;
    const leaves = this.leaves();
    if (leaves.length) {
      leaves.forEach((leaf) => {
        leaf.detach();
      });
    } else {
      this.parent = null;
      (_a2 = this.abortController) == null ? void 0 : _a2.unload();
      this.abortController = void 0;
      return this.nativeHide();
    }
  }
  nativeHide() {
    var _a2;
    const { hoverEl, targetEl } = this;
    this.state = import_obsidian37.PopoverState.Hidden;
    hoverEl.detach();
    if (targetEl) {
      const parent = targetEl.matchParent(".mk-hover-popover");
      if (parent)
        (_a2 = popovers.get(parent)) == null ? void 0 : _a2.transition();
    }
    this.onHide();
    this.unload();
  }
  resolveLink(linkText, sourcePath) {
    const link = (0, import_obsidian37.parseLinktext)(linkText);
    const tFile = link ? this.plugin.app.metadataCache.getFirstLinkpathDest(
      link.path,
      sourcePath != null ? sourcePath : ""
    ) : null;
    return tFile;
  }
  async openContext(file, openState, useLeaf) {
    if (this.detaching)
      return;
    const leaf = useLeaf != null ? useLeaf : this.attachLeaf();
    this.opening = true;
    try {
      await leaf.openFile(file, openState);
    } catch (e4) {
      console.error(e4);
    } finally {
      this.opening = false;
      if (this.detaching)
        this.hide();
    }
    return leaf;
  }
  async openFile(file, openState, useLeaf) {
    if (this.detaching)
      return;
    const leaf = useLeaf != null ? useLeaf : this.attachLeaf();
    this.opening = true;
    try {
      await leaf.openFile(file, openState);
    } catch (e4) {
      console.error(e4);
    } finally {
      this.opening = false;
      if (this.detaching)
        this.hide();
    }
    return leaf;
  }
  buildState(parentMode, eState) {
    return {
      active: false,
      state: {},
      eState
    };
  }
  buildEphemeralState(file, link) {
    const cache = this.plugin.app.metadataCache.getFileCache(file);
    const subpath = cache ? (0, import_obsidian37.resolveSubpath)(cache, (link == null ? void 0 : link.subpath) || "") : void 0;
    const eState = { subpath: link == null ? void 0 : link.subpath };
    if (subpath) {
      eState.line = subpath.start.line;
      eState.startLoc = subpath.start;
      eState.endLoc = subpath.end || void 0;
    }
    return eState;
  }
};

// src/utils/flow/flowEditor.ts
var import_obsidian38 = require("obsidian");
var parseOutReferences = (ostr) => {
  const str = ostr.split("|")[0];
  const refIndex = str.lastIndexOf("#");
  return refIndex > 0 ? [str.substring(0, refIndex), str.substring(refIndex + 1)] : [str, void 0];
};
var getFileFromString = (url, source) => {
  return app.metadataCache.getFirstLinkpathDest(url, source != null ? source : "");
};
var getLineRangeFromRef = (file, ref2, plugin) => {
  var _a2;
  if (!ref2) {
    return [void 0, void 0];
  }
  const cache = app.metadataCache.getFileCache(file);
  const headings = cache.headings;
  const blocks = cache.blocks;
  const sections = cache.sections;
  if (blocks && ref2.charAt(0) == "^" && blocks[ref2.substring(1)]) {
    return [
      blocks[ref2.substring(1)].position.start.line + 1,
      blocks[ref2.substring(1)].position.end.line + 1
    ];
  }
  const heading = headings == null ? void 0 : headings.find((f4) => f4.heading.replace("#", " ") == ref2);
  if (heading) {
    const index = headings.findIndex((f4) => f4.heading == heading.heading);
    const level = (_a2 = headings[index]) == null ? void 0 : _a2.level;
    const nextIndex2 = headings.findIndex(
      (f4, i4) => i4 > index && f4.level <= level
    );
    const start = plugin.settings.editorFlowStyle == "classic" ? heading.position.start.line + 1 : heading.position.start.line + 2;
    if (index < headings.length - 1 && nextIndex2 != -1) {
      return [start, headings[nextIndex2].position.end.line];
    }
    return [start, sections[sections.length - 1].position.end.line + 1];
  }
  return [void 0, void 0];
};
var loadFlowEditorByDOM2 = (make, el, view, id2) => {
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    let dom = el;
    while (!dom.hasClass("mk-floweditor") && !dom.hasClass("workspace") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (!dom.hasClass("mk-floweditor") && !dom.hasClass("workspace") && !(dom.nodeName == "HTML")) {
      return;
    }
    setTimeout(async () => {
      var _a2, _b2;
      let leafFound = false;
      if (app.workspace.activeEditor) {
        if (((_b2 = (_a2 = app.workspace.activeEditor) == null ? void 0 : _a2.editor) == null ? void 0 : _b2.cm.dom) == view.dom) {
          leafFound = true;
          app.workspace.iterateLeaves((leaf) => {
            var _a3, _b3;
            if (((_a3 = leaf.view.editor) == null ? void 0 : _a3.cm.dom) == view.dom) {
              loadFlowEditorsForLeafForID(
                leaf,
                app.workspace.activeEditor.editor.cm,
                (_b3 = app.workspace.activeEditor.file) == null ? void 0 : _b3.path,
                make,
                id2
              );
            }
          }, app.workspace["rootSplit"]);
        }
      }
      if (!leafFound) {
        app.workspace.iterateLeaves((leaf) => {
          var _a3, _b3;
          const cm = (_a3 = leaf.view.editor) == null ? void 0 : _a3.cm;
          if (cm && view.dom == cm.dom) {
            leafFound = true;
            loadFlowEditorsForLeafForID(
              leaf,
              cm,
              (_b3 = leaf.view.file) == null ? void 0 : _b3.path,
              make,
              id2
            );
          }
        }, app.workspace["rootSplit"]);
      }
    });
  });
};
var loadFlowEditorsForLeafForID = (leaf, cm, source, make, id2) => {
  const stateField = cm.state.field(flowEditorInfo, false);
  if (!stateField)
    return;
  const flowInfo = stateField.find((f4) => f4.id == id2);
  if (flowInfo && flowInfo.expandedState == 2) {
    loadFlowEditor(leaf, cm, flowInfo, source, make);
  }
};
var loadFlowEditor = (leaf, cm, flowEditorInfo2, source, make) => {
  const dom = cm.dom.querySelector(
    "#mk-flow-" + flowEditorInfo2.id
  );
  const path = uriByString(flowEditorInfo2.link, source);
  if (dom) {
    if (path.type == "folder" || path.type == "tag" || path.type == "space") {
      if (!dom.hasAttribute("ready")) {
        dom.setAttribute("ready", "");
        createFlowEditorInElement(
          flowEditorInfo2.id,
          leaf,
          source,
          dom,
          "context",
          path
        );
        return;
      }
    } else if (path.type == "file") {
      const file = getFileFromString(path.path, source);
      const aFile = getAbstractFileAtPath(app, path.path);
      if (file) {
        const selectiveRange = getLineRangeFromRef(file, path.ref, make);
        if (!dom.hasAttribute("ready")) {
          dom.setAttribute("ready", "");
          createFlowEditorInElement(
            flowEditorInfo2.id,
            leaf,
            source,
            dom,
            path.ref ? "block" : "flow",
            { ...path, fullPath: file.path, path: file.path },
            selectiveRange[0],
            selectiveRange[1]
          );
        }
      } else {
        if (aFile instanceof import_obsidian38.TFolder) {
          if (!dom.hasAttribute("ready")) {
            dom.setAttribute("ready", "");
            createFlowEditorInElement(
              flowEditorInfo2.id,
              leaf,
              source,
              dom,
              path.ref ? "block" : "flow",
              path
            );
          }
          return;
        }
        dom.empty();
        const createDiv = dom.createDiv("file-embed");
        createDiv.toggleClass("mod-empty", true);
        const createFile = async (e4) => {
          e4.stopPropagation();
          e4.stopImmediatePropagation();
          await app.fileManager.createNewMarkdownFile(app.vault.getRoot(), path.path);
          loadFlowEditor(leaf, cm, flowEditorInfo2, source, make);
        };
        createDiv.setText(`"${path}" ` + i18n_default.labels.noFile);
        createDiv.addEventListener("click", createFile);
      }
    }
  }
};
var focusPortal = async (plugin, evt) => {
  const { id: id2, parent, top } = evt.detail;
  if (parent) {
    app.workspace.iterateLeaves((leaf) => {
      var _a2;
      const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
      if (cm) {
        const stateField = cm.state.field(flowEditorInfo, false);
        if (stateField) {
          const foundInfo = stateField.find((f4) => f4.id == id2);
          if (foundInfo) {
            cm.focus();
            if (top) {
              cm.dispatch({
                selection: import_state5.EditorSelection.single(foundInfo.from - 4),
                annotations: arrowKeyAnnotation.of(1)
              });
            } else {
              if (foundInfo.to + 2 == cm.state.doc.length) {
                cm.dispatch({
                  changes: [
                    {
                      from: foundInfo.to + 2,
                      to: foundInfo.to + 2,
                      insert: cm.state.lineBreak
                    }
                  ],
                  selection: import_state5.EditorSelection.single(foundInfo.to + 3),
                  annotations: arrowKeyAnnotation.of(2)
                });
              } else {
                cm.dispatch({
                  selection: import_state5.EditorSelection.single(foundInfo.to + 3),
                  annotations: arrowKeyAnnotation.of(2)
                });
              }
            }
          }
        }
      }
    }, app.workspace["rootSplit"]);
  } else {
    app.workspace.iterateLeaves((leaf) => {
      var _a2;
      const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
      if (cm) {
        const stateField = cm.state.field(flowIDStateField, false);
        if (stateField && stateField == id2) {
          cm.focus();
          const lineRange = cm.state.field(selectiveLinesFacet, false);
          const posRange = lineRange && lineRange[0] != void 0 ? lineRangeToPosRange(cm.state, lineRange) : { from: 0, to: cm.state.doc.length };
          if (top) {
            cm.dispatch({
              selection: import_state5.EditorSelection.single(posRange.from)
            });
          } else {
            cm.dispatch({
              selection: import_state5.EditorSelection.single(posRange.to)
            });
          }
        }
      }
    }, app.workspace["rootSplit"]);
  }
};
var openFileFromPortal = (plugin, evt) => {
  const { file: fullLink, source } = evt.detail;
  const [link, ref2] = parseOutReferences(fullLink);
  const file = getFileFromString(link, source);
  openAFile(file, plugin, false);
};
var spawnLeafFromFile = async (plugin, parentLeaf, source, path, el, type, from, to, onLeafAttachCallback) => {
  if (type == "context") {
    spawnPortal(plugin, parentLeaf, el, null, async (editor) => {
      const newLeaf = editor.attachLeaf();
      await newLeaf.setViewState({
        type: EMBED_CONTEXT_VIEW_TYPE,
        state: { path: path.fullPath, source }
      });
      if (onLeafAttachCallback)
        onLeafAttachCallback(newLeaf);
    });
    return;
  }
  const portalFile = plugin.app.vault.getAbstractFileByPath(path.path);
  spawnPortal(plugin, parentLeaf, el, path.path, async (editor) => {
    let leaf;
    if (portalFile) {
      leaf = await editor.openFile(portalFile).then((newLeaf) => {
        var _a2;
        if (newLeaf.view.setMode)
          newLeaf.view.setMode(newLeaf.view.editMode);
        if (from && to) {
          (_a2 = newLeaf.view.editor) == null ? void 0 : _a2.cm.dispatch({
            annotations: [editableRange.of([from, to])]
          });
          if (onLeafAttachCallback)
            onLeafAttachCallback(newLeaf);
        }
      });
    } else {
      const newFile = await app.fileManager.createNewMarkdownFile(
        app.vault.getRoot(),
        path.path
      );
      leaf = await editor.openFile(newFile).then((newLeaf) => {
        if (onLeafAttachCallback)
          onLeafAttachCallback(newLeaf);
      });
    }
    return leaf;
  });
};
var spawnNewPortal = async (plugin, evt) => {
  const { path, leaf, el, source, ref: ref2, from, to, type } = evt.detail;
  spawnLeafFromFile(plugin, leaf, source, path, el, type, from, to, (newLeaf) => {
    var _a2, _b2, _c2;
    if (!((_a2 = newLeaf == null ? void 0 : newLeaf.view) == null ? void 0 : _a2.editor)) {
      return;
    }
    const view = (_b2 = newLeaf.view.editor) == null ? void 0 : _b2.cm;
    view.dispatch({
      annotations: [
        portalTypeAnnotation.of(evt.detail.type),
        flowIDAnnotation.of(evt.detail.id)
      ]
    });
    view.dom.addEventListener("keydown", (e4) => {
      if (e4.key == "ArrowUp") {
        if (e4.metaKey == true) {
          view.dispatch({
            annotations: arrowKeyAnnotation.of(3)
          });
        } else {
          view.dispatch({
            annotations: arrowKeyAnnotation.of(1)
          });
        }
      }
      if (e4.key == "ArrowDown") {
        if (e4.metaKey == true) {
          view.dispatch({
            annotations: arrowKeyAnnotation.of(4)
          });
        } else {
          view.dispatch({
            annotations: arrowKeyAnnotation.of(2)
          });
        }
      }
    });
    if (from && to) {
      (_c2 = newLeaf.view.editor) == null ? void 0 : _c2.cm.dispatch({
        annotations: [editableRange.of([from, to])]
      });
    }
  });
};
var spawnPortal = (plugin, parentLeaf, initiatingEl, fileName, onShowCallback) => {
  const parent = parentLeaf != null ? parentLeaf : plugin.app.workspace.activeLeaf;
  if (!initiatingEl)
    initiatingEl = parent.containerEl;
  const hoverPopover = new FlowEditor(
    parent,
    initiatingEl,
    plugin,
    void 0,
    onShowCallback
  );
  if (fileName)
    hoverPopover.titleEl.textContent = fileName.substring(
      0,
      fileName.lastIndexOf(".")
    );
};

// src/components/Space/Contexts/DataTypeView/LinkCell.tsx
var LinkCell = (props2) => {
  var _a2;
  const initialValue = (props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue]).filter((f4) => f4);
  const stringValueToLink = (strings) => strings.map((f4) => {
    return {
      label: parseLinkDisplayString(f4),
      value: parseLinkString(f4)
    };
  });
  p2(() => {
    var _a3;
    setValue(
      resolveLinks(
        stringValueToLink(
          props2.multi ? (_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : [] : [props2.initialValue]
        )
      )
    );
  }, [props2.initialValue]);
  const resolveLinks = (links) => links.map((f4) => ({
    value: f4.value,
    label: filePathToString(f4.value),
    file: getFileFromString(f4.value, getFolderPathFromString(props2.file))
  }));
  const ref2 = _2(null);
  const [value, setValue] = h2(
    resolveLinks(stringValueToLink(initialValue))
  );
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4.value != v3.value);
    setValue(newValues);
    props2.saveValue(serializeMultiString(newValues.map((f4) => f4.value)));
  };
  const saveOptions = (_12, _value) => {
    if (!props2.multi) {
      setValue(resolveLinks(stringValueToLink(_value)));
      props2.saveValue(serializeMultiString(_value));
    } else {
      const newValue = _value[0];
      if (newValue) {
        const newValues = uniq([...value.map((f4) => f4.value), newValue]);
        setValue(resolveLinks(stringValueToLink(newValues)));
        props2.saveValue(serializeMultiString(newValues));
      }
    }
  };
  const menuProps = () => {
    const options = getAllAbstractFilesInVault(props2.plugin, app).map((f4) => ({
      name: fileNameToString(f4.name),
      value: f4.path,
      description: f4.path
    }));
    const _options = !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options;
    return {
      plugin: props2.plugin,
      multi: false,
      editable: true,
      value: value.map((f4) => f4.value),
      options: _options,
      saveOptions,
      placeholder: i18n_default.labels.linkItemSelectPlaceholder,
      detail: true,
      searchable: true
    };
  };
  const openLink = async (o3) => {
    if (o3.file) {
      openTFile(o3.file, props2.plugin, false);
    } else {
      const file = await app.fileManager.createNewMarkdownFile(
        app.vault.getRoot(),
        o3.value
      );
      openTFile(file, props2.plugin, false);
      setValue(resolveLinks(value));
    }
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    baseClass: "mk-cell-link",
    menuProps,
    getLabelString: (o3) => o3.label,
    valueClass: (o3) => o3.file ? "mk-cell-link-item" : "mk-cell-link-unresolved",
    openItem: openLink,
    value,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};

// src/components/Space/Contexts/DataTypeView/TagCell.tsx
init_compat_module();
var TagCell = (props2) => {
  var _a2;
  const initialValue = ((_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : []).filter(
    (f4) => (f4 == null ? void 0 : f4.length) > 0
  );
  const [value, setValue] = h2(initialValue);
  p2(() => {
    var _a3;
    setValue((_a3 = parseMultiString(props2.initialValue)) != null ? _a3 : []);
  }, [props2.initialValue]);
  const removeValue = (v3) => {
    const newValues = value.filter((f4) => f4 != v3);
    setValue(newValues);
    props2.saveValue(serializeMultiString(newValues));
  };
  const saveOptions = (_options, _value) => {
    if (!props2.multi) {
      setValue(_value);
      props2.saveValue(serializeMultiString(_value));
    } else {
      const newValue = _value[0];
      if (newValue) {
        const newValues = uniq([...value, newValue]);
        setValue(newValues);
        props2.saveValue(serializeMultiString(newValues));
      }
    }
  };
  const menuProps = () => {
    const options = loadTags(props2.plugin).map((f4) => ({
      name: f4,
      value: f4
    }));
    const _options = !props2.multi ? [{ name: i18n_default.menu.none, value: "" }, ...options] : options;
    return {
      plugin: props2.plugin,
      multi: false,
      editable: true,
      value,
      options: _options,
      saveOptions,
      placeholder: i18n_default.labels.tagItemSelectPlaceholder,
      searchable: true,
      showAll: true,
      onHide: () => props2.setEditMode(null)
    };
  };
  return /* @__PURE__ */ Cn.createElement(OptionCellBase, {
    baseClass: "mk-cell-tag",
    menuProps,
    value,
    multi: props2.multi,
    editMode: props2.editMode,
    removeValue
  });
};

// src/components/Space/Contexts/TableView/TableView.tsx
var TableView = (props2) => {
  const { spaceInfo, contexts, readMode } = q2(SpaceContext);
  const {
    tableData,
    dbSchema,
    contextTable,
    saveDB: saveDB2
  } = q2(ContextMDBContext);
  const {
    selectedRows,
    selectRows,
    sortedColumns: cols,
    filteredData: data2,
    predicate,
    savePredicate,
    updateFieldValue,
    updateValue: updateValue2
  } = q2(ContextEditorContext);
  const [activeId, setActiveId] = h2(null);
  const [lastSelectedIndex, setLastSelectedIndex] = h2(null);
  const [selectedColumn, setSelectedColumn] = h2(null);
  const [currentEdit, setCurrentEdit] = h2(null);
  const [overId, setOverId] = h2(null);
  const [openFlows, setOpenFlows] = h2([]);
  const [colsSize, setColsSize] = h2({});
  const ref2 = _2(null);
  p2(() => {
    setColsSize({ ...predicate.colsSize, "+": 30 });
  }, [predicate]);
  p2(() => {
    setCurrentEdit(null);
  }, [selectedColumn, lastSelectedIndex]);
  p2(() => {
    if (currentEdit == null) {
      ref2.current.focus();
    }
  }, [currentEdit]);
  const saveColsSize = (colSize) => {
    const newColSize = colSize(colsSize);
    setColsSize(newColSize);
    debouncedSavePredicate(newColSize);
  };
  const debouncedSavePredicate = T2(
    (0, import_lodash11.debounce)(
      (nextValue) => savePredicate({
        ...predicate,
        colsSize: nextValue
      }),
      1e3
    ),
    [predicate]
  );
  const newRow = (index, data3) => {
    saveDB2(createNewRow(tableData, { File: "", ...data3 != null ? data3 : {} }, index));
  };
  const deleteRow = (rowIndex) => {
    const row = tableData.rows.find((f4, i4) => i4 == rowIndex);
    if (getAbstractFileAtPath(app, row.File)) {
      deleteFile(props2.plugin, getAbstractFileAtPath(app, row.File));
    }
    if (row) {
      saveDB2({
        ...tableData,
        rows: tableData.rows.filter((f4, i4) => i4 != rowIndex)
      });
    }
  };
  const toggleFlow = (path) => {
    setOpenFlows(
      (f4) => f4.find((p3) => p3 == path) ? f4.filter((p3) => p3 != path) : uniq([...f4, path])
    );
  };
  const selectItem = (modifier, index) => {
    if (modifier == 3) {
      const file = getAbstractFileAtPath(
        app,
        tableData.rows[parseInt(index)].File
      );
      if (file)
        openAFile(file, props2.plugin, false);
      return;
    }
    if (modifier == 2) {
      selectedRows.some((f4) => f4 == index) ? selectRows(
        null,
        selectedRows.filter((f4) => f4 != index)
      ) : selectRows(index, uniq([...selectedRows, index]));
    } else if (modifier == 1) {
      selectRows(
        index,
        uniq([
          ...selectedRows,
          ...selectRange(
            lastSelectedIndex,
            index,
            data2.map((f4) => f4._index)
          )
        ])
      );
    } else {
      selectRows(index, [index]);
    }
    setLastSelectedIndex(index);
  };
  const onKeyDown = (e4) => {
    const setCellValue = (value) => {
      var _a2;
      const columnTuple = selectedColumn.split("#");
      updateValue2(
        columnTuple[0],
        value,
        (_a2 = columnTuple[1]) != null ? _a2 : "",
        parseInt(lastSelectedIndex),
        ""
      );
    };
    const clearCell = () => {
      setCellValue("");
    };
    const copyCell = () => {
      navigator.clipboard.writeText(
        tableData.rows[parseInt(lastSelectedIndex)][selectedColumn]
      );
    };
    const nextRow = () => {
      const newIndex = selectNextIndex(
        lastSelectedIndex,
        data2.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    };
    const lastRow = () => {
      const newIndex = selectPrevIndex(
        lastSelectedIndex,
        data2.map((f4) => f4._index)
      );
      selectRows(newIndex, [newIndex]);
      setLastSelectedIndex(newIndex);
    };
    if (e4.key == "c" && e4.metaKey) {
      copyCell();
    }
    if (e4.key == "x" && e4.metaKey) {
      copyCell();
      clearCell();
    }
    if (e4.key == "v" && e4.metaKey) {
      navigator.clipboard.readText().then((f4) => setCellValue(f4));
    }
    if (e4.key == "Escape") {
      selectRows(null, []);
      setLastSelectedIndex(null);
    }
    if (e4.key == "Backspace" || e4.key == "Delete") {
      clearCell();
    }
    if (e4.key == "Enter") {
      if (selectedColumn && lastSelectedIndex) {
        if (e4.shiftKey) {
          newRow(parseInt(lastSelectedIndex) + 1);
          nextRow();
        } else {
          setCurrentEdit([selectedColumn, lastSelectedIndex]);
        }
      }
      return;
    }
    if (e4.key == "ArrowDown") {
      nextRow();
      e4.preventDefault();
    }
    if (e4.key == "ArrowUp") {
      lastRow();
      e4.preventDefault();
    }
    if (e4.key == "ArrowLeft") {
      const newIndex = selectPrevIndex(
        selectedColumn,
        columns.map((f4) => f4.accessorKey).filter((f4) => f4 != "+")
      );
      setSelectedColumn(newIndex);
    }
    if (e4.key == "ArrowRight") {
      const newIndex = selectNextIndex(
        selectedColumn,
        columns.map((f4) => f4.accessorKey).filter((f4) => f4 != "+")
      );
      setSelectedColumn(newIndex);
    }
  };
  const columns = F2(
    () => {
      var _a2;
      return [
        ...(_a2 = cols == null ? void 0 : cols.filter((f4) => f4.type != "preview").map((f4) => {
          return {
            header: f4.name,
            accessorKey: f4.name + f4.table,
            meta: {
              table: f4.table,
              editable: f4.primary != "true",
              schemaId: dbSchema == null ? void 0 : dbSchema.id
            },
            cell: ({
              getValue: getValue2,
              row: { index },
              column: { colId },
              cell,
              table: table2
            }) => {
              const initialValue = getValue2();
              const rowIndex = parseInt(
                data2[index]["_index" + f4.table]
              );
              const tableIndex = parseInt(data2[index]["_index"]);
              const saveValue = (value) => {
                var _a3;
                setCurrentEdit(null);
                if (initialValue != value)
                  (_a3 = table2.options.meta) == null ? void 0 : _a3.updateData(
                    f4.name,
                    value,
                    f4.table,
                    rowIndex
                  );
              };
              const saveFieldValue = (fieldValue, value) => {
                var _a3;
                (_a3 = table2.options.meta) == null ? void 0 : _a3.updateFieldValue(
                  f4.name,
                  fieldValue,
                  value,
                  f4.table,
                  rowIndex
                );
              };
              const editMode = readMode ? -1 /* EditModeReadOnly */ : !cell.getIsGrouped() ? platformIsMobile() ? 3 /* EditModeAlways */ : currentEdit && currentEdit[0] == f4.name + f4.table && currentEdit[1] == tableIndex.toString() ? 2 /* EditModeActive */ : 1 /* EditModeView */ : -1 /* EditModeReadOnly */;
              const cellProps = {
                initialValue,
                saveValue,
                plugin: props2.plugin,
                setEditMode: setCurrentEdit,
                editMode,
                propertyValue: f4.value
              };
              const fieldType = fieldTypeForType(f4.type);
              if (!fieldType) {
                return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, initialValue);
              }
              if (fieldType.type == "file") {
                return /* @__PURE__ */ Cn.createElement(FileCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  folder: spaceInfo.path,
                  isFolder: spaceInfo.uri.type == "folder",
                  openFlow: () => toggleFlow(initialValue),
                  deleteRow: () => deleteRow(index)
                });
              } else if (fieldType.type == "boolean") {
                return /* @__PURE__ */ Cn.createElement(BooleanCell, {
                  ...cellProps,
                  column: f4
                });
              } else if (fieldType.type == "option") {
                return /* @__PURE__ */ Cn.createElement(OptionCell, {
                  ...cellProps,
                  options: f4.value,
                  multi: fieldType.multiType == f4.type,
                  saveOptions: saveFieldValue
                });
              } else if (fieldType.type == "date") {
                return /* @__PURE__ */ Cn.createElement(DateCell, {
                  ...cellProps
                });
              } else if (fieldType.type == "context") {
                return /* @__PURE__ */ Cn.createElement(ContextCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  contextTable: contextTable[f4.value],
                  contextTag: f4.value
                });
              } else if (fieldType.type == "fileprop") {
                return /* @__PURE__ */ Cn.createElement(LookUpCell, {
                  ...cellProps,
                  file: data2[index][FilePropertyName]
                });
              } else if (fieldType.type == "tag") {
                return /* @__PURE__ */ Cn.createElement(TagCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type
                });
              } else if (fieldType.type == "number") {
                return /* @__PURE__ */ Cn.createElement(NumberCell, {
                  ...cellProps
                });
              } else if (fieldType.type == "link") {
                return /* @__PURE__ */ Cn.createElement(LinkCell, {
                  ...cellProps,
                  multi: fieldType.multiType == f4.type,
                  file: data2[index][FilePropertyName]
                });
              } else if (fieldType.type == "image") {
                return /* @__PURE__ */ Cn.createElement(ImageCell, {
                  ...cellProps
                });
              } else {
                return /* @__PURE__ */ Cn.createElement(TextCell, {
                  ...cellProps
                });
              }
            }
          };
        })) != null ? _a2 : [],
        ...readMode ? [] : [
          {
            header: "+",
            meta: { schemaId: dbSchema == null ? void 0 : dbSchema.id },
            accessorKey: "+",
            size: 20,
            cell: () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)
          }
        ]
      ];
    },
    [cols, currentEdit, predicate, contextTable, toggleFlow, openFlows]
  );
  const groupBy2 = F2(
    () => {
      var _a2;
      return ((_a2 = predicate.groupBy) == null ? void 0 : _a2.length) > 0 && cols.find((f4) => f4.name + f4.table == predicate.groupBy[0]) ? predicate.groupBy : [];
    },
    [predicate, cols]
  );
  const table = useReactTable({
    data: data2,
    columns,
    columnResizeMode: "onChange",
    state: {
      columnVisibility: predicate.colsHidden.reduce(
        (p3, c4) => ({ ...p3, [c4]: false }),
        {}
      ),
      columnOrder: predicate.colsOrder,
      columnSizing: {
        ...columns.reduce((p3, c4) => ({ ...p3, [c4.accessorKey]: 150 }), {}),
        ...colsSize
      },
      grouping: groupBy2,
      expanded: true
    },
    onColumnSizingChange: saveColsSize,
    getCoreRowModel: getCoreRowModel(),
    getExpandedRowModel: getExpandedRowModel(),
    getGroupedRowModel: getGroupedRowModel(),
    meta: {
      updateData: updateValue2,
      updateFieldValue
    }
  });
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    })
  );
  const measuring = {
    droppable: {
      strategy: MeasuringStrategy.Always
    }
  };
  function handleDragStart(event) {
    const {
      active: { id: activeId2 }
    } = event;
    setActiveId(activeId2);
    setOverId(overId);
    document.body.style.setProperty("cursor", "grabbing");
  }
  function handleDragOver({ over }) {
    var _a2;
    const overId2 = over == null ? void 0 : over.id;
    if (overId2) {
      setOverId((_a2 = over == null ? void 0 : over.id) != null ? _a2 : null);
    }
  }
  const saveFilter = (filter) => {
    savePredicate({
      ...predicate,
      filters: [
        ...predicate.filters.filter((s5) => s5.field != filter.field),
        filter
      ]
    });
  };
  const selectCell = (e4, index, column) => {
    if (platformIsMobile() || column == "+")
      return;
    selectItem(0, data2[index]["_index"]);
    setSelectedColumn(column);
    if (e4.detail === 1) {
    } else if (e4.detail === 2) {
      setCurrentEdit([column, data2[index]["_index"]]);
    }
  };
  const showContextMenu = (e4, index) => {
    e4.preventDefault();
    const menu = new import_obsidian39.Menu();
    menu.addItem((item) => {
      item.setIcon("trash");
      item.setTitle(i18n_default.menu.deleteRow);
      item.onClick(() => {
        deleteRow(index);
      });
    });
    if (isMouseEvent(e4)) {
      menu.showAtPosition({ x: e4.pageX, y: e4.pageY });
    } else {
      menu.showAtPosition({
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      });
    }
  };
  function handleDragEnd({ active, over }) {
    resetState();
    savePredicate({
      ...predicate,
      colsOrder: arrayMove(
        predicate.colsOrder,
        predicate.colsOrder.findIndex((f4) => f4 == activeId),
        predicate.colsOrder.findIndex((f4) => f4 == overId)
      )
    });
  }
  function handleDragCancel() {
    resetState();
  }
  function resetState() {
    setOverId(null);
    setActiveId(null);
    document.body.style.setProperty("cursor", "");
  }
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring,
    onDragStart: handleDragStart,
    onDragOver: handleDragOver,
    onDragEnd: handleDragEnd,
    onDragCancel: handleDragCancel
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-table",
    ref: ref2,
    tabIndex: 1,
    onKeyDown
  }, /* @__PURE__ */ Cn.createElement("table", {
    ...{}
  }, /* @__PURE__ */ Cn.createElement("thead", null, table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ Cn.createElement("tr", {
    key: headerGroup.id
  }, /* @__PURE__ */ Cn.createElement("th", null), headerGroup.headers.map((header) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement("th", {
      className: "mk-th",
      key: header.id,
      style: {
        minWidth: header.column.getIsGrouped() ? "0px" : (_a2 = colsSize[header.column.columnDef.accessorKey]) != null ? _a2 : "150px"
      }
    }, header.isPlaceholder ? null : header.column.columnDef.header != "+" ? header.column.getIsGrouped() ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null) : /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      plugin: props2.plugin,
      editable: header.column.columnDef.meta.editable,
      column: cols.find(
        (f4) => f4.name == header.column.columnDef.header && f4.table == header.column.columnDef.meta.table
      )
    }) : /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      plugin: props2.plugin,
      isNew: true,
      editable: true,
      column: {
        name: "",
        schemaId: header.column.columnDef.meta.schemaId,
        type: "text",
        table: ""
      }
    }), /* @__PURE__ */ Cn.createElement("div", {
      ...{
        onMouseDown: header.getResizeHandler(),
        onTouchStart: header.getResizeHandler(),
        className: `mk-resizer ${header.column.getIsResizing() ? "isResizing" : ""}`
      }
    }));
  })))), /* @__PURE__ */ Cn.createElement("tbody", null, table.getRowModel().rows.map((row) => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("tr", {
    className: (selectedRows == null ? void 0 : selectedRows.some(
      (f4) => f4 == data2[row.index]["_index"]
    )) && "mk-is-active",
    onContextMenu: (e4) => {
      const rowIndex = parseInt(
        data2[row.index]["_index"]
      );
      showContextMenu(e4, rowIndex);
    },
    key: row.id
  }, /* @__PURE__ */ Cn.createElement("td", null), row.getVisibleCells().map(
    (cell, i4) => {
      var _a2, _b2;
      return cell.getIsGrouped() ? /* @__PURE__ */ Cn.createElement("td", {
        key: i4,
        className: "mk-td-group",
        colSpan: cols.length + (readMode ? 0 : 1)
      }, /* @__PURE__ */ Cn.createElement("div", {
        ...{
          onClick: row.getToggleExpandedHandler(),
          style: {
            display: "flex",
            alignItems: "center",
            cursor: "normal"
          }
        }
      }, flexRender(
        cell.column.columnDef.cell,
        cell.getContext()
      ), " ", "(", row.subRows.length, ")")) : cell.getIsAggregated() ? flexRender(
        (_a2 = cell.column.columnDef.aggregatedCell) != null ? _a2 : cell.column.columnDef.cell,
        cell.getContext()
      ) : /* @__PURE__ */ Cn.createElement("td", {
        onClick: (e4) => selectCell(
          e4,
          cell.row.index,
          cell.column.columnDef.accessorKey
        ),
        className: `${cell.column.columnDef.accessorKey == selectedColumn ? "mk-selected-cell  " : ""} mk-td ${cell.getIsPlaceholder() ? "mk-td-empty" : ""}`,
        key: cell.id,
        style: {
          minWidth: cell.getIsPlaceholder() ? "0px" : (_b2 = colsSize[cell.column.columnDef.accessorKey]) != null ? _b2 : "50px"
        }
      }, cell.getIsPlaceholder() ? null : flexRender(
        cell.column.columnDef.cell,
        cell.getContext()
      ));
    }
  ))))), /* @__PURE__ */ Cn.createElement("tfoot", null, !readMode ? /* @__PURE__ */ Cn.createElement("tr", null, /* @__PURE__ */ Cn.createElement("th", {
    className: "mk-row-new",
    colSpan: cols.length + (readMode ? 1 : 2),
    onClick: () => {
      newRow();
    }
  }, "+ New")) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null))), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      zIndex: 1600
    }, activeId ? /* @__PURE__ */ Cn.createElement(ColumnHeader, {
      plugin: props2.plugin,
      editable: false,
      column: {
        name: activeId,
        schemaId: tableData.schema.id,
        type: "text",
        table: ""
      }
    }) : null),
    document.body
  )));
};

// src/components/Space/Contexts/DataTypeView/BooleanCell.tsx
var BooleanCell = (props2) => {
  const { initialValue, saveValue } = props2;
  const [value, setValue] = Cn.useState(initialValue == "true");
  const onChange = () => {
    if (props2.editMode == -1 /* EditModeReadOnly */) {
      return;
    }
    setValue(!value);
    saveValue(!value ? "true" : "false");
  };
  p2(() => {
    if (props2.editMode == 2 /* EditModeActive */) {
      setValue(!value);
      saveValue(!value ? "true" : "false");
      props2.setEditMode(null);
    }
  }, [props2.editMode]);
  Cn.useEffect(() => {
    setValue(initialValue == "true");
  }, [initialValue]);
  if (props2.editMode < 1 /* EditModeView */) {
    return /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-cell-boolean"
    }, /* @__PURE__ */ Cn.createElement("input", {
      type: "checkbox",
      checked: value,
      onChange
    }), /* @__PURE__ */ Cn.createElement("div", null, props2.column.name));
  }
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-text"
  }, /* @__PURE__ */ Cn.createElement("input", {
    type: "checkbox",
    checked: value,
    onChange
  }));
};

// src/components/ui/menus/colorPickerMenu.tsx
var import_obsidian40 = require("obsidian");
init_compat_module();

// node_modules/react-color/es/components/alpha/Alpha.js
init_compat_module();
var import_reactcss9 = __toESM(require_lib());

// node_modules/react-color/es/components/common/Alpha.js
init_compat_module();
var import_reactcss2 = __toESM(require_lib());

// node_modules/react-color/es/helpers/alpha.js
var calculateChange = function calculateChange2(e4, hsl, direction, initialA, container) {
  var containerWidth = container.clientWidth;
  var containerHeight = container.clientHeight;
  var x5 = typeof e4.pageX === "number" ? e4.pageX : e4.touches[0].pageX;
  var y5 = typeof e4.pageY === "number" ? e4.pageY : e4.touches[0].pageY;
  var left = x5 - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y5 - (container.getBoundingClientRect().top + window.pageYOffset);
  if (direction === "vertical") {
    var a5 = void 0;
    if (top < 0) {
      a5 = 0;
    } else if (top > containerHeight) {
      a5 = 1;
    } else {
      a5 = Math.round(top * 100 / containerHeight) / 100;
    }
    if (hsl.a !== a5) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: a5,
        source: "rgb"
      };
    }
  } else {
    var _a2 = void 0;
    if (left < 0) {
      _a2 = 0;
    } else if (left > containerWidth) {
      _a2 = 1;
    } else {
      _a2 = Math.round(left * 100 / containerWidth) / 100;
    }
    if (initialA !== _a2) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: _a2,
        source: "rgb"
      };
    }
  }
  return null;
};

// node_modules/react-color/es/components/common/Checkboard.js
init_compat_module();
var import_reactcss = __toESM(require_lib());

// node_modules/react-color/es/helpers/checkboard.js
var checkboardCache = {};
var render = function render2(c1, c22, size, serverCanvas) {
  if (typeof document === "undefined" && !serverCanvas) {
    return null;
  }
  var canvas = serverCanvas ? new serverCanvas() : document.createElement("canvas");
  canvas.width = size * 2;
  canvas.height = size * 2;
  var ctx = canvas.getContext("2d");
  if (!ctx) {
    return null;
  }
  ctx.fillStyle = c1;
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = c22;
  ctx.fillRect(0, 0, size, size);
  ctx.translate(size, size);
  ctx.fillRect(0, 0, size, size);
  return canvas.toDataURL();
};
var get = function get2(c1, c22, size, serverCanvas) {
  var key2 = c1 + "-" + c22 + "-" + size + (serverCanvas ? "-server" : "");
  if (checkboardCache[key2]) {
    return checkboardCache[key2];
  }
  var checkboard = render(c1, c22, size, serverCanvas);
  checkboardCache[key2] = checkboard;
  return checkboard;
};

// node_modules/react-color/es/components/common/Checkboard.js
var _extends = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var Checkboard = function Checkboard2(_ref) {
  var white = _ref.white, grey = _ref.grey, size = _ref.size, renderers = _ref.renderers, borderRadius = _ref.borderRadius, boxShadow = _ref.boxShadow, children = _ref.children;
  var styles2 = (0, import_reactcss.default)({
    "default": {
      grid: {
        borderRadius,
        boxShadow,
        absolute: "0px 0px 0px 0px",
        background: "url(" + get(white, grey, size, renderers.canvas) + ") center left"
      }
    }
  });
  return an(children) ? Cn.cloneElement(children, _extends({}, children.props, { style: _extends({}, children.props.style, styles2.grid) })) : Cn.createElement("div", { style: styles2.grid });
};
Checkboard.defaultProps = {
  size: 8,
  white: "transparent",
  grey: "rgba(0,0,0,.08)",
  renderers: {}
};
var Checkboard_default = Checkboard;

// node_modules/react-color/es/components/common/Alpha.js
var _extends2 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var _createClass = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Alpha = function(_ref) {
  _inherits(Alpha2, _ref);
  function Alpha2() {
    var _ref2;
    var _temp, _this, _ret;
    _classCallCheck(this, Alpha2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Alpha2.__proto__ || Object.getPrototypeOf(Alpha2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e4) {
      var change = calculateChange(e4, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
      change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e4);
    }, _this.handleMouseDown = function(e4) {
      _this.handleChange(e4);
      window.addEventListener("mousemove", _this.handleChange);
      window.addEventListener("mouseup", _this.handleMouseUp);
    }, _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    }, _this.unbindEventListeners = function() {
      window.removeEventListener("mousemove", _this.handleChange);
      window.removeEventListener("mouseup", _this.handleMouseUp);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }
  _createClass(Alpha2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var rgb = this.props.rgb;
      var styles2 = (0, import_reactcss2.default)({
        "default": {
          alpha: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius
          },
          checkboard: {
            absolute: "0px 0px 0px 0px",
            overflow: "hidden",
            borderRadius: this.props.radius
          },
          gradient: {
            absolute: "0px 0px 0px 0px",
            background: "linear-gradient(to right, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)",
            boxShadow: this.props.shadow,
            borderRadius: this.props.radius
          },
          container: {
            position: "relative",
            height: "100%",
            margin: "0 3px"
          },
          pointer: {
            position: "absolute",
            left: rgb.a * 100 + "%"
          },
          slider: {
            width: "4px",
            borderRadius: "1px",
            height: "8px",
            boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
            background: "#fff",
            marginTop: "1px",
            transform: "translateX(-2px)"
          }
        },
        "vertical": {
          gradient: {
            background: "linear-gradient(to bottom, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)"
          },
          pointer: {
            left: 0,
            top: rgb.a * 100 + "%"
          }
        },
        "overwrite": _extends2({}, this.props.style)
      }, {
        vertical: this.props.direction === "vertical",
        overwrite: true
      });
      return Cn.createElement(
        "div",
        { style: styles2.alpha },
        Cn.createElement(
          "div",
          { style: styles2.checkboard },
          Cn.createElement(Checkboard_default, { renderers: this.props.renderers })
        ),
        Cn.createElement("div", { style: styles2.gradient }),
        Cn.createElement(
          "div",
          {
            style: styles2.container,
            ref: function ref2(container) {
              return _this2.container = container;
            },
            onMouseDown: this.handleMouseDown,
            onTouchMove: this.handleChange,
            onTouchStart: this.handleChange
          },
          Cn.createElement(
            "div",
            { style: styles2.pointer },
            this.props.pointer ? Cn.createElement(this.props.pointer, this.props) : Cn.createElement("div", { style: styles2.slider })
          )
        )
      );
    }
  }]);
  return Alpha2;
}(w3 || k);
var Alpha_default = Alpha;

// node_modules/react-color/es/components/common/EditableInput.js
init_compat_module();
var import_reactcss3 = __toESM(require_lib());
var _createClass2 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn2(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var DEFAULT_ARROW_OFFSET = 1;
var UP_KEY_CODE = 38;
var DOWN_KEY_CODE = 40;
var VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];
var isValidKeyCode = function isValidKeyCode2(keyCode) {
  return VALID_KEY_CODES.indexOf(keyCode) > -1;
};
var getNumberValue = function getNumberValue2(value) {
  return Number(String(value).replace(/%/g, ""));
};
var idCounter = 1;
var EditableInput = function(_ref) {
  _inherits2(EditableInput2, _ref);
  function EditableInput2(props2) {
    _classCallCheck2(this, EditableInput2);
    var _this = _possibleConstructorReturn2(this, (EditableInput2.__proto__ || Object.getPrototypeOf(EditableInput2)).call(this));
    _this.handleBlur = function() {
      if (_this.state.blurValue) {
        _this.setState({ value: _this.state.blurValue, blurValue: null });
      }
    };
    _this.handleChange = function(e4) {
      _this.setUpdatedValue(e4.target.value, e4);
    };
    _this.handleKeyDown = function(e4) {
      var value = getNumberValue(e4.target.value);
      if (!isNaN(value) && isValidKeyCode(e4.keyCode)) {
        var offset2 = _this.getArrowOffset();
        var updatedValue = e4.keyCode === UP_KEY_CODE ? value + offset2 : value - offset2;
        _this.setUpdatedValue(updatedValue, e4);
      }
    };
    _this.handleDrag = function(e4) {
      if (_this.props.dragLabel) {
        var newValue = Math.round(_this.props.value + e4.movementX);
        if (newValue >= 0 && newValue <= _this.props.dragMax) {
          _this.props.onChange && _this.props.onChange(_this.getValueObjectWithLabel(newValue), e4);
        }
      }
    };
    _this.handleMouseDown = function(e4) {
      if (_this.props.dragLabel) {
        e4.preventDefault();
        _this.handleDrag(e4);
        window.addEventListener("mousemove", _this.handleDrag);
        window.addEventListener("mouseup", _this.handleMouseUp);
      }
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    _this.unbindEventListeners = function() {
      window.removeEventListener("mousemove", _this.handleDrag);
      window.removeEventListener("mouseup", _this.handleMouseUp);
    };
    _this.state = {
      value: String(props2.value).toUpperCase(),
      blurValue: String(props2.value).toUpperCase()
    };
    _this.inputId = "rc-editable-input-" + idCounter++;
    return _this;
  }
  _createClass2(EditableInput2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
        if (this.input === document.activeElement) {
          this.setState({ blurValue: String(this.props.value).toUpperCase() });
        } else {
          this.setState({ value: String(this.props.value).toUpperCase(), blurValue: !this.state.blurValue && String(this.props.value).toUpperCase() });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "getValueObjectWithLabel",
    value: function getValueObjectWithLabel(value) {
      return _defineProperty({}, this.props.label, value);
    }
  }, {
    key: "getArrowOffset",
    value: function getArrowOffset() {
      return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
    }
  }, {
    key: "setUpdatedValue",
    value: function setUpdatedValue(value, e4) {
      var onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value;
      this.props.onChange && this.props.onChange(onChangeValue, e4);
      this.setState({ value });
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var styles2 = (0, import_reactcss3.default)({
        "default": {
          wrap: {
            position: "relative"
          }
        },
        "user-override": {
          wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
          input: this.props.style && this.props.style.input ? this.props.style.input : {},
          label: this.props.style && this.props.style.label ? this.props.style.label : {}
        },
        "dragLabel-true": {
          label: {
            cursor: "ew-resize"
          }
        }
      }, {
        "user-override": true
      }, this.props);
      return Cn.createElement(
        "div",
        { style: styles2.wrap },
        Cn.createElement("input", {
          id: this.inputId,
          style: styles2.input,
          ref: function ref2(input) {
            return _this2.input = input;
          },
          value: this.state.value,
          onKeyDown: this.handleKeyDown,
          onChange: this.handleChange,
          onBlur: this.handleBlur,
          placeholder: this.props.placeholder,
          spellCheck: "false"
        }),
        this.props.label && !this.props.hideLabel ? Cn.createElement(
          "label",
          {
            htmlFor: this.inputId,
            style: styles2.label,
            onMouseDown: this.handleMouseDown
          },
          this.props.label
        ) : null
      );
    }
  }]);
  return EditableInput2;
}(w3 || k);
var EditableInput_default = EditableInput;

// node_modules/react-color/es/components/common/Hue.js
init_compat_module();
var import_reactcss4 = __toESM(require_lib());

// node_modules/react-color/es/helpers/hue.js
var calculateChange3 = function calculateChange4(e4, direction, hsl, container) {
  var containerWidth = container.clientWidth;
  var containerHeight = container.clientHeight;
  var x5 = typeof e4.pageX === "number" ? e4.pageX : e4.touches[0].pageX;
  var y5 = typeof e4.pageY === "number" ? e4.pageY : e4.touches[0].pageY;
  var left = x5 - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y5 - (container.getBoundingClientRect().top + window.pageYOffset);
  if (direction === "vertical") {
    var h5 = void 0;
    if (top < 0) {
      h5 = 359;
    } else if (top > containerHeight) {
      h5 = 0;
    } else {
      var percent = -(top * 100 / containerHeight) + 100;
      h5 = 360 * percent / 100;
    }
    if (hsl.h !== h5) {
      return {
        h: h5,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: "hsl"
      };
    }
  } else {
    var _h = void 0;
    if (left < 0) {
      _h = 0;
    } else if (left > containerWidth) {
      _h = 359;
    } else {
      var _percent = left * 100 / containerWidth;
      _h = 360 * _percent / 100;
    }
    if (hsl.h !== _h) {
      return {
        h: _h,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: "hsl"
      };
    }
  }
  return null;
};

// node_modules/react-color/es/components/common/Hue.js
var _createClass3 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn3(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Hue = function(_ref) {
  _inherits3(Hue2, _ref);
  function Hue2() {
    var _ref2;
    var _temp, _this, _ret;
    _classCallCheck3(this, Hue2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn3(this, (_ref2 = Hue2.__proto__ || Object.getPrototypeOf(Hue2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e4) {
      var change = calculateChange3(e4, _this.props.direction, _this.props.hsl, _this.container);
      change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e4);
    }, _this.handleMouseDown = function(e4) {
      _this.handleChange(e4);
      window.addEventListener("mousemove", _this.handleChange);
      window.addEventListener("mouseup", _this.handleMouseUp);
    }, _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    }, _temp), _possibleConstructorReturn3(_this, _ret);
  }
  _createClass3(Hue2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "unbindEventListeners",
    value: function unbindEventListeners() {
      window.removeEventListener("mousemove", this.handleChange);
      window.removeEventListener("mouseup", this.handleMouseUp);
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var _props$direction = this.props.direction, direction = _props$direction === void 0 ? "horizontal" : _props$direction;
      var styles2 = (0, import_reactcss4.default)({
        "default": {
          hue: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius,
            boxShadow: this.props.shadow
          },
          container: {
            padding: "0 2px",
            position: "relative",
            height: "100%",
            borderRadius: this.props.radius
          },
          pointer: {
            position: "absolute",
            left: this.props.hsl.h * 100 / 360 + "%"
          },
          slider: {
            marginTop: "1px",
            width: "4px",
            borderRadius: "1px",
            height: "8px",
            boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
            background: "#fff",
            transform: "translateX(-2px)"
          }
        },
        "vertical": {
          pointer: {
            left: "0px",
            top: -(this.props.hsl.h * 100 / 360) + 100 + "%"
          }
        }
      }, { vertical: direction === "vertical" });
      return Cn.createElement(
        "div",
        { style: styles2.hue },
        Cn.createElement(
          "div",
          {
            className: "hue-" + direction,
            style: styles2.container,
            ref: function ref2(container) {
              return _this2.container = container;
            },
            onMouseDown: this.handleMouseDown,
            onTouchMove: this.handleChange,
            onTouchStart: this.handleChange
          },
          Cn.createElement(
            "style",
            null,
            "\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          "
          ),
          Cn.createElement(
            "div",
            { style: styles2.pointer },
            this.props.pointer ? Cn.createElement(this.props.pointer, this.props) : Cn.createElement("div", { style: styles2.slider })
          )
        )
      );
    }
  }]);
  return Hue2;
}(w3 || k);
var Hue_default = Hue;

// node_modules/react-color/es/components/common/Raised.js
init_compat_module();
var import_prop_types = __toESM(require_prop_types());
var import_reactcss5 = __toESM(require_lib());

// node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// node_modules/lodash-es/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array, key2) {
  var length = array.length;
  while (length--) {
    if (eq_default(array[length][0], key2)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key2) {
  var data2 = this.__data__, index = assocIndexOf_default(data2, key2);
  if (index < 0) {
    return false;
  }
  var lastIndex = data2.length - 1;
  if (index == lastIndex) {
    data2.pop();
  } else {
    splice.call(data2, index, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key2) {
  var data2 = this.__data__, index = assocIndexOf_default(data2, key2);
  return index < 0 ? void 0 : data2[index][1];
}
var listCacheGet_default = listCacheGet;

// node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key2) {
  return assocIndexOf_default(this.__data__, key2) > -1;
}
var listCacheHas_default = listCacheHas;

// node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key2, value) {
  var data2 = this.__data__, index = assocIndexOf_default(data2, key2);
  if (index < 0) {
    ++this.size;
    data2.push([key2, value]);
  } else {
    data2[index][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// node_modules/lodash-es/_stackDelete.js
function stackDelete(key2) {
  var data2 = this.__data__, result = data2["delete"](key2);
  this.size = data2.size;
  return result;
}
var stackDelete_default = stackDelete;

// node_modules/lodash-es/_stackGet.js
function stackGet(key2) {
  return this.__data__.get(key2);
}
var stackGet_default = stackGet;

// node_modules/lodash-es/_stackHas.js
function stackHas(key2) {
  return this.__data__.has(key2);
}
var stackHas_default = stackHas;

// node_modules/lodash-es/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// node_modules/lodash-es/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty2 = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e4) {
  }
  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}
var getRawTag_default = getRawTag;

// node_modules/lodash-es/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// node_modules/lodash-es/isObject.js
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_default = isObject;

// node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction2(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction2;

// node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e4) {
    }
    try {
      return func + "";
    } catch (e4) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty3 = objectProto3.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty3).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// node_modules/lodash-es/_getValue.js
function getValue(object, key2) {
  return object == null ? void 0 : object[key2];
}
var getValue_default = getValue;

// node_modules/lodash-es/_getNative.js
function getNative(object, key2) {
  var value = getValue_default(object, key2);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// node_modules/lodash-es/_hashDelete.js
function hashDelete(key2) {
  var result = this.has(key2) && delete this.__data__[key2];
  this.size -= result ? 1 : 0;
  return result;
}
var hashDelete_default = hashDelete;

// node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto4 = Object.prototype;
var hasOwnProperty4 = objectProto4.hasOwnProperty;
function hashGet(key2) {
  var data2 = this.__data__;
  if (nativeCreate_default) {
    var result = data2[key2];
    return result === HASH_UNDEFINED ? void 0 : result;
  }
  return hasOwnProperty4.call(data2, key2) ? data2[key2] : void 0;
}
var hashGet_default = hashGet;

// node_modules/lodash-es/_hashHas.js
var objectProto5 = Object.prototype;
var hasOwnProperty5 = objectProto5.hasOwnProperty;
function hashHas(key2) {
  var data2 = this.__data__;
  return nativeCreate_default ? data2[key2] !== void 0 : hasOwnProperty5.call(data2, key2);
}
var hashHas_default = hashHas;

// node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key2, value) {
  var data2 = this.__data__;
  this.size += this.has(key2) ? 0 : 1;
  data2[key2] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// node_modules/lodash-es/_isKeyable.js
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// node_modules/lodash-es/_getMapData.js
function getMapData(map2, key2) {
  var data2 = map2.__data__;
  return isKeyable_default(key2) ? data2[typeof key2 == "string" ? "string" : "hash"] : data2.map;
}
var getMapData_default = getMapData;

// node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key2) {
  var result = getMapData_default(this, key2)["delete"](key2);
  this.size -= result ? 1 : 0;
  return result;
}
var mapCacheDelete_default = mapCacheDelete;

// node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key2) {
  return getMapData_default(this, key2).get(key2);
}
var mapCacheGet_default = mapCacheGet;

// node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key2) {
  return getMapData_default(this, key2).has(key2);
}
var mapCacheHas_default = mapCacheHas;

// node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key2, value) {
  var data2 = getMapData_default(this, key2), size = data2.size;
  data2.set(key2, value);
  this.size += data2.size == size ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key2, value) {
  var data2 = this.__data__;
  if (data2 instanceof ListCache_default) {
    var pairs = data2.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key2, value]);
      this.size = ++data2.size;
      return this;
    }
    data2 = this.__data__ = new MapCache_default(pairs);
  }
  data2.set(key2, value);
  this.size = data2.size;
  return this;
}
var stackSet_default = stackSet;

// node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data2 = this.__data__ = new ListCache_default(entries);
  this.size = data2.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e4) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/lodash-es/_baseAssignValue.js
function baseAssignValue(object, key2, value) {
  if (key2 == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key2, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key2] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// node_modules/lodash-es/_assignMergeValue.js
function assignMergeValue(object, key2, value) {
  if (value !== void 0 && !eq_default(object[key2], value) || value === void 0 && !(key2 in object)) {
    baseAssignValue_default(object, key2, value);
  }
}
var assignMergeValue_default = assignMergeValue;

// node_modules/lodash-es/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1, iterable = Object(object), props2 = keysFunc(object), length = props2.length;
    while (length--) {
      var key2 = props2[fromRight ? length : ++index];
      if (iteratee(iterable[key2], key2, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var createBaseFor_default = createBaseFor;

// node_modules/lodash-es/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// node_modules/lodash-es/_cloneBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result);
  return result;
}
var cloneBuffer_default = cloneBuffer;

// node_modules/lodash-es/_Uint8Array.js
var Uint8Array2 = root_default.Uint8Array;
var Uint8Array_default = Uint8Array2;

// node_modules/lodash-es/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result).set(new Uint8Array_default(arrayBuffer));
  return result;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// node_modules/lodash-es/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// node_modules/lodash-es/_copyArray.js
function copyArray(source, array) {
  var index = -1, length = source.length;
  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}
var copyArray_default = copyArray;

// node_modules/lodash-es/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = function() {
  function object() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = void 0;
    return result;
  };
}();
var baseCreate_default = baseCreate;

// node_modules/lodash-es/_overArg.js
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var overArg_default = overArg;

// node_modules/lodash-es/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// node_modules/lodash-es/_isPrototype.js
var objectProto6 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto6;
  return value === proto;
}
var isPrototype_default = isPrototype;

// node_modules/lodash-es/_initCloneObject.js
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype_default(object) ? baseCreate_default(getPrototype_default(object)) : {};
}
var initCloneObject_default = initCloneObject;

// node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/lodash-es/isArguments.js
var objectProto7 = Object.prototype;
var hasOwnProperty6 = objectProto7.hasOwnProperty;
var propertyIsEnumerable = objectProto7.propertyIsEnumerable;
var isArguments = baseIsArguments_default(function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// node_modules/lodash-es/isArray.js
var isArray2 = Array.isArray;
var isArray_default = isArray2;

// node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
var isLength_default = isLength;

// node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/lodash-es/isBuffer.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var Buffer3 = moduleExports2 ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer3 ? Buffer3.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/lodash-es/isPlainObject.js
var objectTag = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto8 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty7 = objectProto8.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag) {
    return false;
  }
  var proto = getPrototype_default(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty7.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag2 = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag2] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// node_modules/lodash-es/_nodeUtil.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var freeProcess = moduleExports3 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types2 = freeModule3 && freeModule3.require && freeModule3.require("util").types;
    if (types2) {
      return types2;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e4) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/lodash-es/_safeGet.js
function safeGet(object, key2) {
  if (key2 === "constructor" && typeof object[key2] === "function") {
    return;
  }
  if (key2 == "__proto__") {
    return;
  }
  return object[key2];
}
var safeGet_default = safeGet;

// node_modules/lodash-es/_assignValue.js
var objectProto9 = Object.prototype;
var hasOwnProperty8 = objectProto9.hasOwnProperty;
function assignValue(object, key2, value) {
  var objValue = object[key2];
  if (!(hasOwnProperty8.call(object, key2) && eq_default(objValue, value)) || value === void 0 && !(key2 in object)) {
    baseAssignValue_default(object, key2, value);
  }
}
var assignValue_default = assignValue;

// node_modules/lodash-es/_copyObject.js
function copyObject(source, props2, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1, length = props2.length;
  while (++index < length) {
    var key2 = props2[index];
    var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key2];
    }
    if (isNew) {
      baseAssignValue_default(object, key2, newValue);
    } else {
      assignValue_default(object, key2, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// node_modules/lodash-es/_baseTimes.js
function baseTimes(n2, iteratee) {
  var index = -1, result = Array(n2);
  while (++index < n2) {
    result[index] = iteratee(index);
  }
  return result;
}
var baseTimes_default = baseTimes;

// node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER2 : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// node_modules/lodash-es/_arrayLikeKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty9 = objectProto10.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes_default(value.length, String) : [], length = result.length;
  for (var key2 in value) {
    if ((inherited || hasOwnProperty9.call(value, key2)) && !(skipIndexes && (key2 == "length" || isBuff && (key2 == "offset" || key2 == "parent") || isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || isIndex_default(key2, length)))) {
      result.push(key2);
    }
  }
  return result;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/lodash-es/_nativeKeysIn.js
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key2 in Object(object)) {
      result.push(key2);
    }
  }
  return result;
}
var nativeKeysIn_default = nativeKeysIn;

// node_modules/lodash-es/_baseKeysIn.js
var objectProto11 = Object.prototype;
var hasOwnProperty10 = objectProto11.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result = [];
  for (var key2 in object) {
    if (!(key2 == "constructor" && (isProto || !hasOwnProperty10.call(object, key2)))) {
      result.push(key2);
    }
  }
  return result;
}
var baseKeysIn_default = baseKeysIn;

// node_modules/lodash-es/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// node_modules/lodash-es/toPlainObject.js
function toPlainObject(value) {
  return copyObject_default(value, keysIn_default(value));
}
var toPlainObject_default = toPlainObject;

// node_modules/lodash-es/_baseMergeDeep.js
function baseMergeDeep(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object, key2), srcValue = safeGet_default(source, key2), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object, key2, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object, key2, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// node_modules/lodash-es/_baseMerge.js
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key2) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object, source, key2, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object, key2), srcValue, key2 + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object, key2, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// node_modules/lodash-es/identity.js
function identity(value) {
  return value;
}
var identity_default = identity;

// node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/lodash-es/_overRest.js
var nativeMax = Math.max;
function overRest(func, start, transform) {
  start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/lodash-es/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count2 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count2 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count2 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index, object.length) : type == "string" && index in object) {
    return eq_default(object[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// node_modules/lodash-es/merge.js
var merge = createAssigner_default(function(object, source, srcIndex) {
  baseMerge_default(object, source, srcIndex);
});
var merge_default = merge;

// node_modules/react-color/es/components/common/Raised.js
var Raised = function Raised2(_ref) {
  var zDepth = _ref.zDepth, radius = _ref.radius, background = _ref.background, children = _ref.children, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles;
  var styles2 = (0, import_reactcss5.default)(merge_default({
    "default": {
      wrap: {
        position: "relative",
        display: "inline-block"
      },
      content: {
        position: "relative"
      },
      bg: {
        absolute: "0px 0px 0px 0px",
        boxShadow: "0 " + zDepth + "px " + zDepth * 4 + "px rgba(0,0,0,.24)",
        borderRadius: radius,
        background
      }
    },
    "zDepth-0": {
      bg: {
        boxShadow: "none"
      }
    },
    "zDepth-1": {
      bg: {
        boxShadow: "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)"
      }
    },
    "zDepth-2": {
      bg: {
        boxShadow: "0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2)"
      }
    },
    "zDepth-3": {
      bg: {
        boxShadow: "0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24)"
      }
    },
    "zDepth-4": {
      bg: {
        boxShadow: "0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22)"
      }
    },
    "zDepth-5": {
      bg: {
        boxShadow: "0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2)"
      }
    },
    "square": {
      bg: {
        borderRadius: "0"
      }
    },
    "circle": {
      bg: {
        borderRadius: "50%"
      }
    }
  }, passedStyles), { "zDepth-1": zDepth === 1 });
  return Cn.createElement(
    "div",
    { style: styles2.wrap },
    Cn.createElement("div", { style: styles2.bg }),
    Cn.createElement(
      "div",
      { style: styles2.content },
      children
    )
  );
};
Raised.propTypes = {
  background: import_prop_types.default.string,
  zDepth: import_prop_types.default.oneOf([0, 1, 2, 3, 4, 5]),
  radius: import_prop_types.default.number,
  styles: import_prop_types.default.object
};
Raised.defaultProps = {
  background: "#fff",
  zDepth: 1,
  radius: 2,
  styles: {}
};
var Raised_default = Raised;

// node_modules/react-color/es/components/common/Saturation.js
init_compat_module();
var import_reactcss6 = __toESM(require_lib());

// node_modules/lodash-es/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// node_modules/lodash-es/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index = string.length;
  while (index-- && reWhitespace.test(string.charAt(index))) {
  }
  return index;
}
var trimmedEndIndex_default = trimmedEndIndex;

// node_modules/lodash-es/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, "") : string;
}
var baseTrim_default = baseTrim;

// node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// node_modules/lodash-es/toNumber.js
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN;
  }
  if (isObject_default(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject_default(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim_default(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
var toNumber_default = toNumber;

// node_modules/lodash-es/debounce.js
var FUNC_ERROR_TEXT = "Expected a function";
var nativeMax2 = Math.max;
var nativeMin = Math.min;
function debounce3(func, wait, options) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax2(toNumber_default(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now_default();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now_default());
  }
  function debounced() {
    var time = now_default(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce3;

// node_modules/lodash-es/throttle.js
var FUNC_ERROR_TEXT2 = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  if (isObject_default(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// node_modules/react-color/es/helpers/saturation.js
var calculateChange5 = function calculateChange6(e4, hsl, container) {
  var _container$getBoundin = container.getBoundingClientRect(), containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
  var x5 = typeof e4.pageX === "number" ? e4.pageX : e4.touches[0].pageX;
  var y5 = typeof e4.pageY === "number" ? e4.pageY : e4.touches[0].pageY;
  var left = x5 - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y5 - (container.getBoundingClientRect().top + window.pageYOffset);
  if (left < 0) {
    left = 0;
  } else if (left > containerWidth) {
    left = containerWidth;
  }
  if (top < 0) {
    top = 0;
  } else if (top > containerHeight) {
    top = containerHeight;
  }
  var saturation = left / containerWidth;
  var bright = 1 - top / containerHeight;
  return {
    h: hsl.h,
    s: saturation,
    v: bright,
    a: hsl.a,
    source: "hsv"
  };
};

// node_modules/react-color/es/components/common/Saturation.js
var _createClass4 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn4(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Saturation = function(_ref) {
  _inherits4(Saturation2, _ref);
  function Saturation2(props2) {
    _classCallCheck4(this, Saturation2);
    var _this = _possibleConstructorReturn4(this, (Saturation2.__proto__ || Object.getPrototypeOf(Saturation2)).call(this, props2));
    _this.handleChange = function(e4) {
      typeof _this.props.onChange === "function" && _this.throttle(_this.props.onChange, calculateChange5(e4, _this.props.hsl, _this.container), e4);
    };
    _this.handleMouseDown = function(e4) {
      _this.handleChange(e4);
      var renderWindow = _this.getContainerRenderWindow();
      renderWindow.addEventListener("mousemove", _this.handleChange);
      renderWindow.addEventListener("mouseup", _this.handleMouseUp);
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    _this.throttle = throttle_default(function(fn2, data2, e4) {
      fn2(data2, e4);
    }, 50);
    return _this;
  }
  _createClass4(Saturation2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.throttle.cancel();
      this.unbindEventListeners();
    }
  }, {
    key: "getContainerRenderWindow",
    value: function getContainerRenderWindow() {
      var container = this.container;
      var renderWindow = window;
      while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {
        renderWindow = renderWindow.parent;
      }
      return renderWindow;
    }
  }, {
    key: "unbindEventListeners",
    value: function unbindEventListeners() {
      var renderWindow = this.getContainerRenderWindow();
      renderWindow.removeEventListener("mousemove", this.handleChange);
      renderWindow.removeEventListener("mouseup", this.handleMouseUp);
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var _ref2 = this.props.style || {}, color = _ref2.color, white = _ref2.white, black = _ref2.black, pointer = _ref2.pointer, circle = _ref2.circle;
      var styles2 = (0, import_reactcss6.default)({
        "default": {
          color: {
            absolute: "0px 0px 0px 0px",
            background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
            borderRadius: this.props.radius
          },
          white: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius
          },
          black: {
            absolute: "0px 0px 0px 0px",
            boxShadow: this.props.shadow,
            borderRadius: this.props.radius
          },
          pointer: {
            position: "absolute",
            top: -(this.props.hsv.v * 100) + 100 + "%",
            left: this.props.hsv.s * 100 + "%",
            cursor: "default"
          },
          circle: {
            width: "4px",
            height: "4px",
            boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
            borderRadius: "50%",
            cursor: "hand",
            transform: "translate(-2px, -2px)"
          }
        },
        "custom": {
          color,
          white,
          black,
          pointer,
          circle
        }
      }, { "custom": !!this.props.style });
      return Cn.createElement(
        "div",
        {
          style: styles2.color,
          ref: function ref2(container) {
            return _this2.container = container;
          },
          onMouseDown: this.handleMouseDown,
          onTouchMove: this.handleChange,
          onTouchStart: this.handleChange
        },
        Cn.createElement(
          "style",
          null,
          "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        "
        ),
        Cn.createElement(
          "div",
          { style: styles2.white, className: "saturation-white" },
          Cn.createElement("div", { style: styles2.black, className: "saturation-black" }),
          Cn.createElement(
            "div",
            { style: styles2.pointer },
            this.props.pointer ? Cn.createElement(this.props.pointer, this.props) : Cn.createElement("div", { style: styles2.circle })
          )
        )
      );
    }
  }]);
  return Saturation2;
}(w3 || k);
var Saturation_default = Saturation;

// node_modules/react-color/es/components/common/ColorWrap.js
init_compat_module();

// node_modules/lodash-es/_arrayEach.js
function arrayEach(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEach_default = arrayEach;

// node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/lodash-es/_baseKeys.js
var objectProto12 = Object.prototype;
var hasOwnProperty11 = objectProto12.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result = [];
  for (var key2 in Object(object)) {
    if (hasOwnProperty11.call(object, key2) && key2 != "constructor") {
      result.push(key2);
    }
  }
  return result;
}
var baseKeys_default = baseKeys;

// node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/lodash-es/_baseForOwn.js
function baseForOwn(object, iteratee) {
  return object && baseFor_default(object, iteratee, keys_default);
}
var baseForOwn_default = baseForOwn;

// node_modules/lodash-es/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index-- : ++index < length) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// node_modules/lodash-es/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// node_modules/lodash-es/_castFunction.js
function castFunction(value) {
  return typeof value == "function" ? value : identity_default;
}
var castFunction_default = castFunction;

// node_modules/lodash-es/forEach.js
function forEach(collection, iteratee) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee));
}
var forEach_default = forEach;

// node_modules/tinycolor2/esm/tinycolor.js
function _typeof5(obj) {
  "@babel/helpers - typeof";
  return _typeof5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof5(obj);
}
var trimLeft = /^\s+/;
var trimRight = /\s+$/;
function tinycolor(color, opts) {
  color = color ? color : "";
  opts = opts || {};
  if (color instanceof tinycolor) {
    return color;
  }
  if (!(this instanceof tinycolor)) {
    return new tinycolor(color, opts);
  }
  var rgb = inputToRGB(color);
  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
  this._gradientType = opts.gradientType;
  if (this._r < 1)
    this._r = Math.round(this._r);
  if (this._g < 1)
    this._g = Math.round(this._g);
  if (this._b < 1)
    this._b = Math.round(this._b);
  this._ok = rgb.ok;
}
tinycolor.prototype = {
  isDark: function isDark() {
    return this.getBrightness() < 128;
  },
  isLight: function isLight() {
    return !this.isDark();
  },
  isValid: function isValid2() {
    return this._ok;
  },
  getOriginalInput: function getOriginalInput() {
    return this._originalInput;
  },
  getFormat: function getFormat() {
    return this._format;
  },
  getAlpha: function getAlpha() {
    return this._a;
  },
  getBrightness: function getBrightness() {
    var rgb = this.toRgb();
    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
  },
  getLuminance: function getLuminance() {
    var rgb = this.toRgb();
    var RsRGB, GsRGB, BsRGB, R3, G3, B5;
    RsRGB = rgb.r / 255;
    GsRGB = rgb.g / 255;
    BsRGB = rgb.b / 255;
    if (RsRGB <= 0.03928)
      R3 = RsRGB / 12.92;
    else
      R3 = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
    if (GsRGB <= 0.03928)
      G3 = GsRGB / 12.92;
    else
      G3 = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
    if (BsRGB <= 0.03928)
      B5 = BsRGB / 12.92;
    else
      B5 = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
    return 0.2126 * R3 + 0.7152 * G3 + 0.0722 * B5;
  },
  setAlpha: function setAlpha(value) {
    this._a = boundAlpha(value);
    this._roundA = Math.round(100 * this._a) / 100;
    return this;
  },
  toHsv: function toHsv() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    return {
      h: hsv.h * 360,
      s: hsv.s,
      v: hsv.v,
      a: this._a
    };
  },
  toHsvString: function toHsvString() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    var h5 = Math.round(hsv.h * 360), s5 = Math.round(hsv.s * 100), v3 = Math.round(hsv.v * 100);
    return this._a == 1 ? "hsv(" + h5 + ", " + s5 + "%, " + v3 + "%)" : "hsva(" + h5 + ", " + s5 + "%, " + v3 + "%, " + this._roundA + ")";
  },
  toHsl: function toHsl() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    return {
      h: hsl.h * 360,
      s: hsl.s,
      l: hsl.l,
      a: this._a
    };
  },
  toHslString: function toHslString() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    var h5 = Math.round(hsl.h * 360), s5 = Math.round(hsl.s * 100), l3 = Math.round(hsl.l * 100);
    return this._a == 1 ? "hsl(" + h5 + ", " + s5 + "%, " + l3 + "%)" : "hsla(" + h5 + ", " + s5 + "%, " + l3 + "%, " + this._roundA + ")";
  },
  toHex: function toHex(allow3Char) {
    return rgbToHex(this._r, this._g, this._b, allow3Char);
  },
  toHexString: function toHexString(allow3Char) {
    return "#" + this.toHex(allow3Char);
  },
  toHex8: function toHex8(allow4Char) {
    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
  },
  toHex8String: function toHex8String(allow4Char) {
    return "#" + this.toHex8(allow4Char);
  },
  toRgb: function toRgb() {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a
    };
  },
  toRgbString: function toRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
  },
  toPercentageRgb: function toPercentageRgb() {
    return {
      r: Math.round(bound01(this._r, 255) * 100) + "%",
      g: Math.round(bound01(this._g, 255) * 100) + "%",
      b: Math.round(bound01(this._b, 255) * 100) + "%",
      a: this._a
    };
  },
  toPercentageRgbString: function toPercentageRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
  },
  toName: function toName() {
    if (this._a === 0) {
      return "transparent";
    }
    if (this._a < 1) {
      return false;
    }
    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
  },
  toFilter: function toFilter(secondColor) {
    var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
    var secondHex8String = hex8String;
    var gradientType = this._gradientType ? "GradientType = 1, " : "";
    if (secondColor) {
      var s5 = tinycolor(secondColor);
      secondHex8String = "#" + rgbaToArgbHex(s5._r, s5._g, s5._b, s5._a);
    }
    return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
  },
  toString: function toString3(format2) {
    var formatSet = !!format2;
    format2 = format2 || this._format;
    var formattedString = false;
    var hasAlpha = this._a < 1 && this._a >= 0;
    var needsAlphaFormat = !formatSet && hasAlpha && (format2 === "hex" || format2 === "hex6" || format2 === "hex3" || format2 === "hex4" || format2 === "hex8" || format2 === "name");
    if (needsAlphaFormat) {
      if (format2 === "name" && this._a === 0) {
        return this.toName();
      }
      return this.toRgbString();
    }
    if (format2 === "rgb") {
      formattedString = this.toRgbString();
    }
    if (format2 === "prgb") {
      formattedString = this.toPercentageRgbString();
    }
    if (format2 === "hex" || format2 === "hex6") {
      formattedString = this.toHexString();
    }
    if (format2 === "hex3") {
      formattedString = this.toHexString(true);
    }
    if (format2 === "hex4") {
      formattedString = this.toHex8String(true);
    }
    if (format2 === "hex8") {
      formattedString = this.toHex8String();
    }
    if (format2 === "name") {
      formattedString = this.toName();
    }
    if (format2 === "hsl") {
      formattedString = this.toHslString();
    }
    if (format2 === "hsv") {
      formattedString = this.toHsvString();
    }
    return formattedString || this.toHexString();
  },
  clone: function clone() {
    return tinycolor(this.toString());
  },
  _applyModification: function _applyModification(fn2, args) {
    var color = fn2.apply(null, [this].concat([].slice.call(args)));
    this._r = color._r;
    this._g = color._g;
    this._b = color._b;
    this.setAlpha(color._a);
    return this;
  },
  lighten: function lighten() {
    return this._applyModification(_lighten, arguments);
  },
  brighten: function brighten() {
    return this._applyModification(_brighten, arguments);
  },
  darken: function darken() {
    return this._applyModification(_darken, arguments);
  },
  desaturate: function desaturate() {
    return this._applyModification(_desaturate, arguments);
  },
  saturate: function saturate() {
    return this._applyModification(_saturate, arguments);
  },
  greyscale: function greyscale() {
    return this._applyModification(_greyscale, arguments);
  },
  spin: function spin() {
    return this._applyModification(_spin, arguments);
  },
  _applyCombination: function _applyCombination(fn2, args) {
    return fn2.apply(null, [this].concat([].slice.call(args)));
  },
  analogous: function analogous() {
    return this._applyCombination(_analogous, arguments);
  },
  complement: function complement() {
    return this._applyCombination(_complement, arguments);
  },
  monochromatic: function monochromatic() {
    return this._applyCombination(_monochromatic, arguments);
  },
  splitcomplement: function splitcomplement() {
    return this._applyCombination(_splitcomplement, arguments);
  },
  triad: function triad() {
    return this._applyCombination(polyad, [3]);
  },
  tetrad: function tetrad() {
    return this._applyCombination(polyad, [4]);
  }
};
tinycolor.fromRatio = function(color, opts) {
  if (_typeof5(color) == "object") {
    var newColor = {};
    for (var i4 in color) {
      if (color.hasOwnProperty(i4)) {
        if (i4 === "a") {
          newColor[i4] = color[i4];
        } else {
          newColor[i4] = convertToPercentage(color[i4]);
        }
      }
    }
    color = newColor;
  }
  return tinycolor(color, opts);
};
function inputToRGB(color) {
  var rgb = {
    r: 0,
    g: 0,
    b: 0
  };
  var a5 = 1;
  var s5 = null;
  var v3 = null;
  var l3 = null;
  var ok = false;
  var format2 = false;
  if (typeof color == "string") {
    color = stringInputToObject(color);
  }
  if (_typeof5(color) == "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format2 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s5 = convertToPercentage(color.s);
      v3 = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s5, v3);
      ok = true;
      format2 = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s5 = convertToPercentage(color.s);
      l3 = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s5, l3);
      ok = true;
      format2 = "hsl";
    }
    if (color.hasOwnProperty("a")) {
      a5 = color.a;
    }
  }
  a5 = boundAlpha(a5);
  return {
    ok,
    format: color.format || format2,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a: a5
  };
}
function rgbToRgb(r3, g4, b4) {
  return {
    r: bound01(r3, 255) * 255,
    g: bound01(g4, 255) * 255,
    b: bound01(b4, 255) * 255
  };
}
function rgbToHsl(r3, g4, b4) {
  r3 = bound01(r3, 255);
  g4 = bound01(g4, 255);
  b4 = bound01(b4, 255);
  var max3 = Math.max(r3, g4, b4), min3 = Math.min(r3, g4, b4);
  var h5, s5, l3 = (max3 + min3) / 2;
  if (max3 == min3) {
    h5 = s5 = 0;
  } else {
    var d5 = max3 - min3;
    s5 = l3 > 0.5 ? d5 / (2 - max3 - min3) : d5 / (max3 + min3);
    switch (max3) {
      case r3:
        h5 = (g4 - b4) / d5 + (g4 < b4 ? 6 : 0);
        break;
      case g4:
        h5 = (b4 - r3) / d5 + 2;
        break;
      case b4:
        h5 = (r3 - g4) / d5 + 4;
        break;
    }
    h5 /= 6;
  }
  return {
    h: h5,
    s: s5,
    l: l3
  };
}
function hslToRgb(h5, s5, l3) {
  var r3, g4, b4;
  h5 = bound01(h5, 360);
  s5 = bound01(s5, 100);
  l3 = bound01(l3, 100);
  function hue2rgb(p4, q6, t4) {
    if (t4 < 0)
      t4 += 1;
    if (t4 > 1)
      t4 -= 1;
    if (t4 < 1 / 6)
      return p4 + (q6 - p4) * 6 * t4;
    if (t4 < 1 / 2)
      return q6;
    if (t4 < 2 / 3)
      return p4 + (q6 - p4) * (2 / 3 - t4) * 6;
    return p4;
  }
  if (s5 === 0) {
    r3 = g4 = b4 = l3;
  } else {
    var q5 = l3 < 0.5 ? l3 * (1 + s5) : l3 + s5 - l3 * s5;
    var p3 = 2 * l3 - q5;
    r3 = hue2rgb(p3, q5, h5 + 1 / 3);
    g4 = hue2rgb(p3, q5, h5);
    b4 = hue2rgb(p3, q5, h5 - 1 / 3);
  }
  return {
    r: r3 * 255,
    g: g4 * 255,
    b: b4 * 255
  };
}
function rgbToHsv(r3, g4, b4) {
  r3 = bound01(r3, 255);
  g4 = bound01(g4, 255);
  b4 = bound01(b4, 255);
  var max3 = Math.max(r3, g4, b4), min3 = Math.min(r3, g4, b4);
  var h5, s5, v3 = max3;
  var d5 = max3 - min3;
  s5 = max3 === 0 ? 0 : d5 / max3;
  if (max3 == min3) {
    h5 = 0;
  } else {
    switch (max3) {
      case r3:
        h5 = (g4 - b4) / d5 + (g4 < b4 ? 6 : 0);
        break;
      case g4:
        h5 = (b4 - r3) / d5 + 2;
        break;
      case b4:
        h5 = (r3 - g4) / d5 + 4;
        break;
    }
    h5 /= 6;
  }
  return {
    h: h5,
    s: s5,
    v: v3
  };
}
function hsvToRgb(h5, s5, v3) {
  h5 = bound01(h5, 360) * 6;
  s5 = bound01(s5, 100);
  v3 = bound01(v3, 100);
  var i4 = Math.floor(h5), f4 = h5 - i4, p3 = v3 * (1 - s5), q5 = v3 * (1 - f4 * s5), t4 = v3 * (1 - (1 - f4) * s5), mod = i4 % 6, r3 = [v3, q5, p3, p3, t4, v3][mod], g4 = [t4, v3, v3, q5, p3, p3][mod], b4 = [p3, p3, t4, v3, v3, q5][mod];
  return {
    r: r3 * 255,
    g: g4 * 255,
    b: b4 * 255
  };
}
function rgbToHex(r3, g4, b4, allow3Char) {
  var hex = [pad2(Math.round(r3).toString(16)), pad2(Math.round(g4).toString(16)), pad2(Math.round(b4).toString(16))];
  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
  }
  return hex.join("");
}
function rgbaToHex(r3, g4, b4, a5, allow4Char) {
  var hex = [pad2(Math.round(r3).toString(16)), pad2(Math.round(g4).toString(16)), pad2(Math.round(b4).toString(16)), pad2(convertDecimalToHex(a5))];
  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
  }
  return hex.join("");
}
function rgbaToArgbHex(r3, g4, b4, a5) {
  var hex = [pad2(convertDecimalToHex(a5)), pad2(Math.round(r3).toString(16)), pad2(Math.round(g4).toString(16)), pad2(Math.round(b4).toString(16))];
  return hex.join("");
}
tinycolor.equals = function(color1, color2) {
  if (!color1 || !color2)
    return false;
  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};
tinycolor.random = function() {
  return tinycolor.fromRatio({
    r: Math.random(),
    g: Math.random(),
    b: Math.random()
  });
};
function _desaturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s -= amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _saturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s += amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _greyscale(color) {
  return tinycolor(color).desaturate(100);
}
function _lighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l += amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _brighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var rgb = tinycolor(color).toRgb();
  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
  return tinycolor(rgb);
}
function _darken(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l -= amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _spin(color, amount) {
  var hsl = tinycolor(color).toHsl();
  var hue = (hsl.h + amount) % 360;
  hsl.h = hue < 0 ? 360 + hue : hue;
  return tinycolor(hsl);
}
function _complement(color) {
  var hsl = tinycolor(color).toHsl();
  hsl.h = (hsl.h + 180) % 360;
  return tinycolor(hsl);
}
function polyad(color, number) {
  if (isNaN(number) || number <= 0) {
    throw new Error("Argument to polyad must be a positive number");
  }
  var hsl = tinycolor(color).toHsl();
  var result = [tinycolor(color)];
  var step = 360 / number;
  for (var i4 = 1; i4 < number; i4++) {
    result.push(tinycolor({
      h: (hsl.h + i4 * step) % 360,
      s: hsl.s,
      l: hsl.l
    }));
  }
  return result;
}
function _splitcomplement(color) {
  var hsl = tinycolor(color).toHsl();
  var h5 = hsl.h;
  return [tinycolor(color), tinycolor({
    h: (h5 + 72) % 360,
    s: hsl.s,
    l: hsl.l
  }), tinycolor({
    h: (h5 + 216) % 360,
    s: hsl.s,
    l: hsl.l
  })];
}
function _analogous(color, results, slices) {
  results = results || 6;
  slices = slices || 30;
  var hsl = tinycolor(color).toHsl();
  var part = 360 / slices;
  var ret = [tinycolor(color)];
  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
    hsl.h = (hsl.h + part) % 360;
    ret.push(tinycolor(hsl));
  }
  return ret;
}
function _monochromatic(color, results) {
  results = results || 6;
  var hsv = tinycolor(color).toHsv();
  var h5 = hsv.h, s5 = hsv.s, v3 = hsv.v;
  var ret = [];
  var modification = 1 / results;
  while (results--) {
    ret.push(tinycolor({
      h: h5,
      s: s5,
      v: v3
    }));
    v3 = (v3 + modification) % 1;
  }
  return ret;
}
tinycolor.mix = function(color1, color2, amount) {
  amount = amount === 0 ? 0 : amount || 50;
  var rgb1 = tinycolor(color1).toRgb();
  var rgb2 = tinycolor(color2).toRgb();
  var p3 = amount / 100;
  var rgba = {
    r: (rgb2.r - rgb1.r) * p3 + rgb1.r,
    g: (rgb2.g - rgb1.g) * p3 + rgb1.g,
    b: (rgb2.b - rgb1.b) * p3 + rgb1.b,
    a: (rgb2.a - rgb1.a) * p3 + rgb1.a
  };
  return tinycolor(rgba);
};
tinycolor.readability = function(color1, color2) {
  var c1 = tinycolor(color1);
  var c22 = tinycolor(color2);
  return (Math.max(c1.getLuminance(), c22.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c22.getLuminance()) + 0.05);
};
tinycolor.isReadable = function(color1, color2, wcag2) {
  var readability = tinycolor.readability(color1, color2);
  var wcag2Parms, out;
  out = false;
  wcag2Parms = validateWCAG2Parms(wcag2);
  switch (wcag2Parms.level + wcag2Parms.size) {
    case "AAsmall":
    case "AAAlarge":
      out = readability >= 4.5;
      break;
    case "AAlarge":
      out = readability >= 3;
      break;
    case "AAAsmall":
      out = readability >= 7;
      break;
  }
  return out;
};
tinycolor.mostReadable = function(baseColor, colorList, args) {
  var bestColor = null;
  var bestScore = 0;
  var readability;
  var includeFallbackColors, level, size;
  args = args || {};
  includeFallbackColors = args.includeFallbackColors;
  level = args.level;
  size = args.size;
  for (var i4 = 0; i4 < colorList.length; i4++) {
    readability = tinycolor.readability(baseColor, colorList[i4]);
    if (readability > bestScore) {
      bestScore = readability;
      bestColor = tinycolor(colorList[i4]);
    }
  }
  if (tinycolor.isReadable(baseColor, bestColor, {
    level,
    size
  }) || !includeFallbackColors) {
    return bestColor;
  } else {
    args.includeFallbackColors = false;
    return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
  }
};
var names = tinycolor.names = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  burntsienna: "ea7e5d",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
var hexNames = tinycolor.hexNames = flip(names);
function flip(o3) {
  var flipped = {};
  for (var i4 in o3) {
    if (o3.hasOwnProperty(i4)) {
      flipped[o3[i4]] = i4;
    }
  }
  return flipped;
}
function boundAlpha(a5) {
  a5 = parseFloat(a5);
  if (isNaN(a5) || a5 < 0 || a5 > 1) {
    a5 = 1;
  }
  return a5;
}
function bound01(n2, max3) {
  if (isOnePointZero(n2))
    n2 = "100%";
  var processPercent = isPercentage(n2);
  n2 = Math.min(max3, Math.max(0, parseFloat(n2)));
  if (processPercent) {
    n2 = parseInt(n2 * max3, 10) / 100;
  }
  if (Math.abs(n2 - max3) < 1e-6) {
    return 1;
  }
  return n2 % max3 / parseFloat(max3);
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function isOnePointZero(n2) {
  return typeof n2 == "string" && n2.indexOf(".") != -1 && parseFloat(n2) === 1;
}
function isPercentage(n2) {
  return typeof n2 === "string" && n2.indexOf("%") != -1;
}
function pad2(c4) {
  return c4.length == 1 ? "0" + c4 : "" + c4;
}
function convertToPercentage(n2) {
  if (n2 <= 1) {
    n2 = n2 * 100 + "%";
  }
  return n2;
}
function convertDecimalToHex(d5) {
  return Math.round(parseFloat(d5) * 255).toString(16);
}
function convertHexToDecimal(h5) {
  return parseIntFromHex(h5) / 255;
}
var matchers = function() {
  var CSS_INTEGER = "[-\\+]?\\d+%?";
  var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
  var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
  var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
  };
}();
function isValidCSSUnit(color) {
  return !!matchers.CSS_UNIT.exec(color);
}
function stringInputToObject(color) {
  color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color == "transparent") {
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 0,
      format: "name"
    };
  }
  var match2;
  if (match2 = matchers.rgb.exec(color)) {
    return {
      r: match2[1],
      g: match2[2],
      b: match2[3]
    };
  }
  if (match2 = matchers.rgba.exec(color)) {
    return {
      r: match2[1],
      g: match2[2],
      b: match2[3],
      a: match2[4]
    };
  }
  if (match2 = matchers.hsl.exec(color)) {
    return {
      h: match2[1],
      s: match2[2],
      l: match2[3]
    };
  }
  if (match2 = matchers.hsla.exec(color)) {
    return {
      h: match2[1],
      s: match2[2],
      l: match2[3],
      a: match2[4]
    };
  }
  if (match2 = matchers.hsv.exec(color)) {
    return {
      h: match2[1],
      s: match2[2],
      v: match2[3]
    };
  }
  if (match2 = matchers.hsva.exec(color)) {
    return {
      h: match2[1],
      s: match2[2],
      v: match2[3],
      a: match2[4]
    };
  }
  if (match2 = matchers.hex8.exec(color)) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      a: convertHexToDecimal(match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match2 = matchers.hex6.exec(color)) {
    return {
      r: parseIntFromHex(match2[1]),
      g: parseIntFromHex(match2[2]),
      b: parseIntFromHex(match2[3]),
      format: named ? "name" : "hex"
    };
  }
  if (match2 = matchers.hex4.exec(color)) {
    return {
      r: parseIntFromHex(match2[1] + "" + match2[1]),
      g: parseIntFromHex(match2[2] + "" + match2[2]),
      b: parseIntFromHex(match2[3] + "" + match2[3]),
      a: convertHexToDecimal(match2[4] + "" + match2[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match2 = matchers.hex3.exec(color)) {
    return {
      r: parseIntFromHex(match2[1] + "" + match2[1]),
      g: parseIntFromHex(match2[2] + "" + match2[2]),
      b: parseIntFromHex(match2[3] + "" + match2[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function validateWCAG2Parms(parms) {
  var level, size;
  parms = parms || {
    level: "AA",
    size: "small"
  };
  level = (parms.level || "AA").toUpperCase();
  size = (parms.size || "small").toLowerCase();
  if (level !== "AA" && level !== "AAA") {
    level = "AA";
  }
  if (size !== "small" && size !== "large") {
    size = "small";
  }
  return {
    level,
    size
  };
}

// node_modules/react-color/es/helpers/color.js
var simpleCheckForValidColor = function simpleCheckForValidColor2(data2) {
  var keysToCheck = ["r", "g", "b", "a", "h", "s", "l", "v"];
  var checked = 0;
  var passed = 0;
  forEach_default(keysToCheck, function(letter) {
    if (data2[letter]) {
      checked += 1;
      if (!isNaN(data2[letter])) {
        passed += 1;
      }
      if (letter === "s" || letter === "l") {
        var percentPatt = /^\d+%$/;
        if (percentPatt.test(data2[letter])) {
          passed += 1;
        }
      }
    }
  });
  return checked === passed ? data2 : false;
};
var toState = function toState2(data2, oldHue) {
  var color = data2.hex ? tinycolor(data2.hex) : tinycolor(data2);
  var hsl = color.toHsl();
  var hsv = color.toHsv();
  var rgb = color.toRgb();
  var hex = color.toHex();
  if (hsl.s === 0) {
    hsl.h = oldHue || 0;
    hsv.h = oldHue || 0;
  }
  var transparent = hex === "000000" && rgb.a === 0;
  return {
    hsl,
    hex: transparent ? "transparent" : "#" + hex,
    rgb,
    hsv,
    oldHue: data2.h || oldHue || hsl.h,
    source: data2.source
  };
};
var isValidHex = function isValidHex2(hex) {
  if (hex === "transparent") {
    return true;
  }
  var lh = String(hex).charAt(0) === "#" ? 1 : 0;
  return hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor(hex).isValid();
};
var getContrastingColor = function getContrastingColor2(data2) {
  if (!data2) {
    return "#fff";
  }
  var col = toState(data2);
  if (col.hex === "transparent") {
    return "rgba(0,0,0,0.4)";
  }
  var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1e3;
  return yiq >= 128 ? "#000" : "#fff";
};
var isvalidColorString = function isvalidColorString2(string, type) {
  var stringWithoutDegree = string.replace("\xB0", "");
  return tinycolor(type + " (" + stringWithoutDegree + ")")._ok;
};

// node_modules/react-color/es/components/common/ColorWrap.js
var _extends3 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var _createClass5 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn5(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ColorWrap = function ColorWrap2(Picker) {
  var ColorPicker3 = function(_ref) {
    _inherits5(ColorPicker4, _ref);
    function ColorPicker4(props2) {
      _classCallCheck5(this, ColorPicker4);
      var _this = _possibleConstructorReturn5(this, (ColorPicker4.__proto__ || Object.getPrototypeOf(ColorPicker4)).call(this));
      _this.handleChange = function(data2, event) {
        var isValidColor = simpleCheckForValidColor(data2);
        if (isValidColor) {
          var colors2 = toState(data2, data2.h || _this.state.oldHue);
          _this.setState(colors2);
          _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors2, event);
          _this.props.onChange && _this.props.onChange(colors2, event);
        }
      };
      _this.handleSwatchHover = function(data2, event) {
        var isValidColor = simpleCheckForValidColor(data2);
        if (isValidColor) {
          var colors2 = toState(data2, data2.h || _this.state.oldHue);
          _this.props.onSwatchHover && _this.props.onSwatchHover(colors2, event);
        }
      };
      _this.state = _extends3({}, toState(props2.color, 0));
      _this.debounce = debounce_default(function(fn2, data2, event) {
        fn2(data2, event);
      }, 100);
      return _this;
    }
    _createClass5(ColorPicker4, [{
      key: "render",
      value: function render3() {
        var optionalEvents = {};
        if (this.props.onSwatchHover) {
          optionalEvents.onSwatchHover = this.handleSwatchHover;
        }
        return Cn.createElement(Picker, _extends3({}, this.props, this.state, {
          onChange: this.handleChange
        }, optionalEvents));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, state) {
        return _extends3({}, toState(nextProps.color, state.oldHue));
      }
    }]);
    return ColorPicker4;
  }(w3 || k);
  ColorPicker3.propTypes = _extends3({}, Picker.propTypes);
  ColorPicker3.defaultProps = _extends3({}, Picker.defaultProps, {
    color: {
      h: 250,
      s: 0.5,
      l: 0.2,
      a: 1
    }
  });
  return ColorPicker3;
};
var ColorWrap_default = ColorWrap;

// node_modules/react-color/es/components/common/Swatch.js
init_compat_module();
var import_reactcss7 = __toESM(require_lib());

// node_modules/react-color/es/helpers/interaction.js
init_compat_module();
var _extends4 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var _createClass6 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn6(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var handleFocus = function handleFocus2(Component4) {
  var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
  return function(_React$Component) {
    _inherits6(Focus, _React$Component);
    function Focus() {
      var _ref;
      var _temp, _this, _ret;
      _classCallCheck6(this, Focus);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn6(this, (_ref = Focus.__proto__ || Object.getPrototypeOf(Focus)).call.apply(_ref, [this].concat(args))), _this), _this.state = { focus: false }, _this.handleFocus = function() {
        return _this.setState({ focus: true });
      }, _this.handleBlur = function() {
        return _this.setState({ focus: false });
      }, _temp), _possibleConstructorReturn6(_this, _ret);
    }
    _createClass6(Focus, [{
      key: "render",
      value: function render3() {
        return Cn.createElement(
          Span,
          { onFocus: this.handleFocus, onBlur: this.handleBlur },
          Cn.createElement(Component4, _extends4({}, this.props, this.state))
        );
      }
    }]);
    return Focus;
  }(Cn.Component);
};

// node_modules/react-color/es/components/common/Swatch.js
var _extends5 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var ENTER = 13;
var Swatch = function Swatch2(_ref) {
  var color = _ref.color, style = _ref.style, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onHover = _ref.onHover, _ref$title = _ref.title, title = _ref$title === void 0 ? color : _ref$title, children = _ref.children, focus = _ref.focus, _ref$focusStyle = _ref.focusStyle, focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
  var transparent = color === "transparent";
  var styles2 = (0, import_reactcss7.default)({
    default: {
      swatch: _extends5({
        background: color,
        height: "100%",
        width: "100%",
        cursor: "pointer",
        position: "relative",
        outline: "none"
      }, style, focus ? focusStyle : {})
    }
  });
  var handleClick = function handleClick2(e4) {
    return onClick(color, e4);
  };
  var handleKeyDown = function handleKeyDown2(e4) {
    return e4.keyCode === ENTER && onClick(color, e4);
  };
  var handleHover3 = function handleHover4(e4) {
    return onHover(color, e4);
  };
  var optionalEvents = {};
  if (onHover) {
    optionalEvents.onMouseOver = handleHover3;
  }
  return Cn.createElement(
    "div",
    _extends5({
      style: styles2.swatch,
      onClick: handleClick,
      title,
      tabIndex: 0,
      onKeyDown: handleKeyDown
    }, optionalEvents),
    children,
    transparent && Cn.createElement(Checkboard_default, {
      borderRadius: styles2.swatch.borderRadius,
      boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
    })
  );
};
var Swatch_default = handleFocus(Swatch);

// node_modules/react-color/es/components/alpha/AlphaPointer.js
init_compat_module();
var import_reactcss8 = __toESM(require_lib());
var AlphaPointer = function AlphaPointer2(_ref) {
  var direction = _ref.direction;
  var styles2 = (0, import_reactcss8.default)({
    "default": {
      picker: {
        width: "18px",
        height: "18px",
        borderRadius: "50%",
        transform: "translate(-9px, -1px)",
        backgroundColor: "rgb(248, 248, 248)",
        boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
      }
    },
    "vertical": {
      picker: {
        transform: "translate(-3px, -9px)"
      }
    }
  }, { vertical: direction === "vertical" });
  return Cn.createElement("div", { style: styles2.picker });
};
var AlphaPointer_default = AlphaPointer;

// node_modules/react-color/es/components/alpha/Alpha.js
var _extends6 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var AlphaPicker = function AlphaPicker2(_ref) {
  var rgb = _ref.rgb, hsl = _ref.hsl, width = _ref.width, height = _ref.height, onChange = _ref.onChange, direction = _ref.direction, style = _ref.style, renderers = _ref.renderers, pointer = _ref.pointer, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss9.default)({
    "default": {
      picker: {
        position: "relative",
        width,
        height
      },
      alpha: {
        radius: "2px",
        style
      }
    }
  });
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "alpha-picker " + className },
    Cn.createElement(Alpha_default, _extends6({}, styles2.alpha, {
      rgb,
      hsl,
      pointer,
      renderers,
      onChange,
      direction
    }))
  );
};
AlphaPicker.defaultProps = {
  width: "316px",
  height: "16px",
  direction: "horizontal",
  pointer: AlphaPointer_default
};
var Alpha_default2 = ColorWrap_default(AlphaPicker);

// node_modules/react-color/es/components/block/Block.js
init_compat_module();
var import_prop_types2 = __toESM(require_prop_types());
var import_reactcss11 = __toESM(require_lib());

// node_modules/react-color/es/components/block/BlockSwatches.js
init_compat_module();
var import_reactcss10 = __toESM(require_lib());

// node_modules/lodash-es/_arrayMap.js
function arrayMap(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var arrayMap_default = arrayMap;

// node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// node_modules/lodash-es/_SetCache.js
function SetCache(values) {
  var index = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache_default();
  while (++index < length) {
    this.add(values[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// node_modules/lodash-es/_arraySome.js
function arraySome(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// node_modules/lodash-es/_cacheHas.js
function cacheHas(cache, key2) {
  return cache.has(key2);
}
var cacheHas_default = cacheHas;

// node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result;
}
var equalArrays_default = equalArrays;

// node_modules/lodash-es/_mapToArray.js
function mapToArray(map2) {
  var index = -1, result = Array(map2.size);
  map2.forEach(function(value, key2) {
    result[++index] = [key2, value];
  });
  return result;
}
var mapToArray_default = mapToArray;

// node_modules/lodash-es/_setToArray.js
function setToArray(set) {
  var index = -1, result = Array(set.size);
  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}
var setToArray_default = setToArray;

// node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var errorTag2 = "[object Error]";
var mapTag2 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag2 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag2 = "[object DataView]";
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag2:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag2:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag2:
    case dateTag2:
    case numberTag2:
      return eq_default(+object, +other);
    case errorTag2:
      return object.name == other.name && object.message == other.message;
    case regexpTag2:
    case stringTag2:
      return object == other + "";
    case mapTag2:
      var convert = mapToArray_default;
    case setTag2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result;
    case symbolTag2:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// node_modules/lodash-es/_arrayPush.js
function arrayPush(array, values) {
  var index = -1, length = values.length, offset2 = array.length;
  while (++index < length) {
    array[offset2 + index] = values[index];
  }
  return array;
}
var arrayPush_default = arrayPush;

// node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray_default(object) ? result : arrayPush_default(result, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}
var arrayFilter_default = arrayFilter;

// node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// node_modules/lodash-es/_getSymbols.js
var objectProto13 = Object.prototype;
var propertyIsEnumerable2 = objectProto13.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key2 = objProps[index];
    if (!(isPartial ? key2 in other : hasOwnProperty12.call(other, key2))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key2 = objProps[index];
    var objValue = object[key2], othValue = other[key2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key2 == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result;
}
var equalObjects_default = equalObjects;

// node_modules/lodash-es/_DataView.js
var DataView = getNative_default(root_default, "DataView");
var DataView_default = DataView;

// node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// node_modules/lodash-es/_WeakMap.js
var WeakMap2 = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap2;

// node_modules/lodash-es/_getTag.js
var mapTag3 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag3 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag3 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag3 || Map_default && getTag(new Map_default()) != mapTag3 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag3 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result = baseGetTag_default(value), Ctor = result == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag3;
        case mapCtorString:
          return mapTag3;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag3;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result;
  };
}
var getTag_default = getTag;

// node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var objectTag4 = "[object Object]";
var objectProto15 = Object.prototype;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag2 : getTag_default(object), othTag = othIsArr ? arrayTag2 : getTag_default(other);
  objTag = objTag == argsTag3 ? objectTag4 : objTag;
  othTag = othTag == argsTag3 ? objectTag4 : othTag;
  var objIsObj = objTag == objectTag4, othIsObj = othTag == objectTag4, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty13.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty13.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length, length = index, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data2 = matchData[index];
    if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data2 = matchData[index];
    var key2 = data2[0], objValue = object[key2], srcValue = data2[1];
    if (noCustomizer && data2[2]) {
      if (objValue === void 0 && !(key2 in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result = customizer(objValue, srcValue, key2, object, source, stack);
      }
      if (!(result === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// node_modules/lodash-es/_getMatchData.js
function getMatchData(object) {
  var result = keys_default(object), length = result.length;
  while (length--) {
    var key2 = result[length], value = object[key2];
    result[length] = [key2, value, isStrictComparable_default(value)];
  }
  return result;
}
var getMatchData_default = getMatchData;

// node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key2, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_default(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var isKey_default = isKey;

// node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key2)) {
      return cache.get(key2);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key2, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize_default(func, function(key2) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key2;
  });
  var cache = result.cache;
  return result;
}
var memoizeCapped_default = memoizeCapped;

// node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
    result.push("");
  }
  string.replace(rePropName, function(match2, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
  });
  return result;
});
var stringToPath_default = stringToPath;

// node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto2 ? symbolProto2.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
var baseToString_default = baseToString;

// node_modules/lodash-es/toString.js
function toString4(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString4;

// node_modules/lodash-es/_castPath.js
function castPath(value, object) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// node_modules/lodash-es/_toKey.js
var INFINITY2 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY2 ? "-0" : result;
}
var toKey_default = toKey;

// node_modules/lodash-es/_baseGet.js
function baseGet(object, path) {
  path = castPath_default(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey_default(path[index++])];
  }
  return index && index == length ? object : void 0;
}
var baseGet_default = baseGet;

// node_modules/lodash-es/get.js
function get3(object, path, defaultValue2) {
  var result = object == null ? void 0 : baseGet_default(object, path);
  return result === void 0 ? defaultValue2 : result;
}
var get_default = get3;

// node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object, key2) {
  return object != null && key2 in Object(object);
}
var baseHasIn_default = baseHasIn;

// node_modules/lodash-es/_hasPath.js
function hasPath(object, path, hasFunc) {
  path = castPath_default(path, object);
  var index = -1, length = path.length, result = false;
  while (++index < length) {
    var key2 = toKey_default(path[index]);
    if (!(result = object != null && hasFunc(object, key2))) {
      break;
    }
    object = object[key2];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key2, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// node_modules/lodash-es/hasIn.js
function hasIn(object, path) {
  return object != null && hasPath_default(object, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// node_modules/lodash-es/_baseProperty.js
function baseProperty(key2) {
  return function(object) {
    return object == null ? void 0 : object[key2];
  };
}
var baseProperty_default = baseProperty;

// node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object) {
    return baseGet_default(object, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// node_modules/lodash-es/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// node_modules/lodash-es/_baseMap.js
function baseMap(collection, iteratee) {
  var index = -1, result = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value, key2, collection2) {
    result[++index] = iteratee(value, key2, collection2);
  });
  return result;
}
var baseMap_default = baseMap;

// node_modules/lodash-es/map.js
function map(collection, iteratee) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee, 3));
}
var map_default = map;

// node_modules/react-color/es/components/block/BlockSwatches.js
var BlockSwatches = function BlockSwatches2(_ref) {
  var colors2 = _ref.colors, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover;
  var styles2 = (0, import_reactcss10.default)({
    "default": {
      swatches: {
        marginRight: "-10px"
      },
      swatch: {
        width: "22px",
        height: "22px",
        float: "left",
        marginRight: "10px",
        marginBottom: "10px",
        borderRadius: "4px"
      },
      clear: {
        clear: "both"
      }
    }
  });
  return Cn.createElement(
    "div",
    { style: styles2.swatches },
    map_default(colors2, function(c4) {
      return Cn.createElement(Swatch_default, {
        key: c4,
        color: c4,
        style: styles2.swatch,
        onClick,
        onHover: onSwatchHover,
        focusStyle: {
          boxShadow: "0 0 4px " + c4
        }
      });
    }),
    Cn.createElement("div", { style: styles2.clear })
  );
};
var BlockSwatches_default = BlockSwatches;

// node_modules/react-color/es/components/block/Block.js
var Block = function Block2(_ref) {
  var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, hex = _ref.hex, colors2 = _ref.colors, width = _ref.width, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var transparent = hex === "transparent";
  var handleChange = function handleChange2(hexCode, e4) {
    isValidHex(hexCode) && onChange({
      hex: hexCode,
      source: "hex"
    }, e4);
  };
  var styles2 = (0, import_reactcss11.default)(merge_default({
    "default": {
      card: {
        width,
        background: "#fff",
        boxShadow: "0 1px rgba(0,0,0,.1)",
        borderRadius: "6px",
        position: "relative"
      },
      head: {
        height: "110px",
        background: hex,
        borderRadius: "6px 6px 0 0",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        position: "relative"
      },
      body: {
        padding: "10px"
      },
      label: {
        fontSize: "18px",
        color: getContrastingColor(hex),
        position: "relative"
      },
      triangle: {
        width: "0px",
        height: "0px",
        borderStyle: "solid",
        borderWidth: "0 10px 10px 10px",
        borderColor: "transparent transparent " + hex + " transparent",
        position: "absolute",
        top: "-10px",
        left: "50%",
        marginLeft: "-10px"
      },
      input: {
        width: "100%",
        fontSize: "12px",
        color: "#666",
        border: "0px",
        outline: "none",
        height: "22px",
        boxShadow: "inset 0 0 0 1px #ddd",
        borderRadius: "4px",
        padding: "0 7px",
        boxSizing: "border-box"
      }
    },
    "hide-triangle": {
      triangle: {
        display: "none"
      }
    }
  }, passedStyles), { "hide-triangle": triangle === "hide" });
  return Cn.createElement(
    "div",
    { style: styles2.card, className: "block-picker " + className },
    Cn.createElement("div", { style: styles2.triangle }),
    Cn.createElement(
      "div",
      { style: styles2.head },
      transparent && Cn.createElement(Checkboard_default, { borderRadius: "6px 6px 0 0" }),
      Cn.createElement(
        "div",
        { style: styles2.label },
        hex
      )
    ),
    Cn.createElement(
      "div",
      { style: styles2.body },
      Cn.createElement(BlockSwatches_default, { colors: colors2, onClick: handleChange, onSwatchHover }),
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input },
        value: hex,
        onChange: handleChange
      })
    )
  );
};
Block.propTypes = {
  width: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.number]),
  colors: import_prop_types2.default.arrayOf(import_prop_types2.default.string),
  triangle: import_prop_types2.default.oneOf(["top", "hide"]),
  styles: import_prop_types2.default.object
};
Block.defaultProps = {
  width: 170,
  colors: ["#D9E3F0", "#F47373", "#697689", "#37D67A", "#2CCCE4", "#555555", "#dce775", "#ff8a65", "#ba68c8"],
  triangle: "top",
  styles: {}
};
var Block_default = ColorWrap_default(Block);

// node_modules/react-color/es/components/circle/Circle.js
init_compat_module();
var import_prop_types3 = __toESM(require_prop_types());
var import_reactcss13 = __toESM(require_lib());

// node_modules/material-colors/dist/colors.es2015.js
var red = { "50": "#ffebee", "100": "#ffcdd2", "200": "#ef9a9a", "300": "#e57373", "400": "#ef5350", "500": "#f44336", "600": "#e53935", "700": "#d32f2f", "800": "#c62828", "900": "#b71c1c", "a100": "#ff8a80", "a200": "#ff5252", "a400": "#ff1744", "a700": "#d50000" };
var pink = { "50": "#fce4ec", "100": "#f8bbd0", "200": "#f48fb1", "300": "#f06292", "400": "#ec407a", "500": "#e91e63", "600": "#d81b60", "700": "#c2185b", "800": "#ad1457", "900": "#880e4f", "a100": "#ff80ab", "a200": "#ff4081", "a400": "#f50057", "a700": "#c51162" };
var purple = { "50": "#f3e5f5", "100": "#e1bee7", "200": "#ce93d8", "300": "#ba68c8", "400": "#ab47bc", "500": "#9c27b0", "600": "#8e24aa", "700": "#7b1fa2", "800": "#6a1b9a", "900": "#4a148c", "a100": "#ea80fc", "a200": "#e040fb", "a400": "#d500f9", "a700": "#aa00ff" };
var deepPurple = { "50": "#ede7f6", "100": "#d1c4e9", "200": "#b39ddb", "300": "#9575cd", "400": "#7e57c2", "500": "#673ab7", "600": "#5e35b1", "700": "#512da8", "800": "#4527a0", "900": "#311b92", "a100": "#b388ff", "a200": "#7c4dff", "a400": "#651fff", "a700": "#6200ea" };
var indigo = { "50": "#e8eaf6", "100": "#c5cae9", "200": "#9fa8da", "300": "#7986cb", "400": "#5c6bc0", "500": "#3f51b5", "600": "#3949ab", "700": "#303f9f", "800": "#283593", "900": "#1a237e", "a100": "#8c9eff", "a200": "#536dfe", "a400": "#3d5afe", "a700": "#304ffe" };
var blue = { "50": "#e3f2fd", "100": "#bbdefb", "200": "#90caf9", "300": "#64b5f6", "400": "#42a5f5", "500": "#2196f3", "600": "#1e88e5", "700": "#1976d2", "800": "#1565c0", "900": "#0d47a1", "a100": "#82b1ff", "a200": "#448aff", "a400": "#2979ff", "a700": "#2962ff" };
var lightBlue = { "50": "#e1f5fe", "100": "#b3e5fc", "200": "#81d4fa", "300": "#4fc3f7", "400": "#29b6f6", "500": "#03a9f4", "600": "#039be5", "700": "#0288d1", "800": "#0277bd", "900": "#01579b", "a100": "#80d8ff", "a200": "#40c4ff", "a400": "#00b0ff", "a700": "#0091ea" };
var cyan = { "50": "#e0f7fa", "100": "#b2ebf2", "200": "#80deea", "300": "#4dd0e1", "400": "#26c6da", "500": "#00bcd4", "600": "#00acc1", "700": "#0097a7", "800": "#00838f", "900": "#006064", "a100": "#84ffff", "a200": "#18ffff", "a400": "#00e5ff", "a700": "#00b8d4" };
var teal = { "50": "#e0f2f1", "100": "#b2dfdb", "200": "#80cbc4", "300": "#4db6ac", "400": "#26a69a", "500": "#009688", "600": "#00897b", "700": "#00796b", "800": "#00695c", "900": "#004d40", "a100": "#a7ffeb", "a200": "#64ffda", "a400": "#1de9b6", "a700": "#00bfa5" };
var green = { "50": "#e8f5e9", "100": "#c8e6c9", "200": "#a5d6a7", "300": "#81c784", "400": "#66bb6a", "500": "#4caf50", "600": "#43a047", "700": "#388e3c", "800": "#2e7d32", "900": "#1b5e20", "a100": "#b9f6ca", "a200": "#69f0ae", "a400": "#00e676", "a700": "#00c853" };
var lightGreen = { "50": "#f1f8e9", "100": "#dcedc8", "200": "#c5e1a5", "300": "#aed581", "400": "#9ccc65", "500": "#8bc34a", "600": "#7cb342", "700": "#689f38", "800": "#558b2f", "900": "#33691e", "a100": "#ccff90", "a200": "#b2ff59", "a400": "#76ff03", "a700": "#64dd17" };
var lime = { "50": "#f9fbe7", "100": "#f0f4c3", "200": "#e6ee9c", "300": "#dce775", "400": "#d4e157", "500": "#cddc39", "600": "#c0ca33", "700": "#afb42b", "800": "#9e9d24", "900": "#827717", "a100": "#f4ff81", "a200": "#eeff41", "a400": "#c6ff00", "a700": "#aeea00" };
var yellow = { "50": "#fffde7", "100": "#fff9c4", "200": "#fff59d", "300": "#fff176", "400": "#ffee58", "500": "#ffeb3b", "600": "#fdd835", "700": "#fbc02d", "800": "#f9a825", "900": "#f57f17", "a100": "#ffff8d", "a200": "#ffff00", "a400": "#ffea00", "a700": "#ffd600" };
var amber = { "50": "#fff8e1", "100": "#ffecb3", "200": "#ffe082", "300": "#ffd54f", "400": "#ffca28", "500": "#ffc107", "600": "#ffb300", "700": "#ffa000", "800": "#ff8f00", "900": "#ff6f00", "a100": "#ffe57f", "a200": "#ffd740", "a400": "#ffc400", "a700": "#ffab00" };
var orange = { "50": "#fff3e0", "100": "#ffe0b2", "200": "#ffcc80", "300": "#ffb74d", "400": "#ffa726", "500": "#ff9800", "600": "#fb8c00", "700": "#f57c00", "800": "#ef6c00", "900": "#e65100", "a100": "#ffd180", "a200": "#ffab40", "a400": "#ff9100", "a700": "#ff6d00" };
var deepOrange = { "50": "#fbe9e7", "100": "#ffccbc", "200": "#ffab91", "300": "#ff8a65", "400": "#ff7043", "500": "#ff5722", "600": "#f4511e", "700": "#e64a19", "800": "#d84315", "900": "#bf360c", "a100": "#ff9e80", "a200": "#ff6e40", "a400": "#ff3d00", "a700": "#dd2c00" };
var brown = { "50": "#efebe9", "100": "#d7ccc8", "200": "#bcaaa4", "300": "#a1887f", "400": "#8d6e63", "500": "#795548", "600": "#6d4c41", "700": "#5d4037", "800": "#4e342e", "900": "#3e2723" };
var blueGrey = { "50": "#eceff1", "100": "#cfd8dc", "200": "#b0bec5", "300": "#90a4ae", "400": "#78909c", "500": "#607d8b", "600": "#546e7a", "700": "#455a64", "800": "#37474f", "900": "#263238" };

// node_modules/react-color/es/components/circle/CircleSwatch.js
init_compat_module();
var import_reactcss12 = __toESM(require_lib());
var CircleSwatch = function CircleSwatch2(_ref) {
  var color = _ref.color, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover, hover = _ref.hover, active = _ref.active, circleSize = _ref.circleSize, circleSpacing = _ref.circleSpacing;
  var styles2 = (0, import_reactcss12.default)({
    "default": {
      swatch: {
        width: circleSize,
        height: circleSize,
        marginRight: circleSpacing,
        marginBottom: circleSpacing,
        transform: "scale(1)",
        transition: "100ms transform ease"
      },
      Swatch: {
        borderRadius: "50%",
        background: "transparent",
        boxShadow: "inset 0 0 0 " + (circleSize / 2 + 1) + "px " + color,
        transition: "100ms box-shadow ease"
      }
    },
    "hover": {
      swatch: {
        transform: "scale(1.2)"
      }
    },
    "active": {
      Swatch: {
        boxShadow: "inset 0 0 0 3px " + color
      }
    }
  }, { hover, active });
  return Cn.createElement(
    "div",
    { style: styles2.swatch },
    Cn.createElement(Swatch_default, {
      style: styles2.Swatch,
      color,
      onClick,
      onHover: onSwatchHover,
      focusStyle: { boxShadow: styles2.Swatch.boxShadow + ", 0 0 5px " + color }
    })
  );
};
CircleSwatch.defaultProps = {
  circleSize: 28,
  circleSpacing: 14
};
var CircleSwatch_default = (0, import_reactcss12.handleHover)(CircleSwatch);

// node_modules/react-color/es/components/circle/Circle.js
var Circle = function Circle2(_ref) {
  var width = _ref.width, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors2 = _ref.colors, hex = _ref.hex, circleSize = _ref.circleSize, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, circleSpacing = _ref.circleSpacing, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss13.default)(merge_default({
    "default": {
      card: {
        width,
        display: "flex",
        flexWrap: "wrap",
        marginRight: -circleSpacing,
        marginBottom: -circleSpacing
      }
    }
  }, passedStyles));
  var handleChange = function handleChange2(hexCode, e4) {
    return onChange({ hex: hexCode, source: "hex" }, e4);
  };
  return Cn.createElement(
    "div",
    { style: styles2.card, className: "circle-picker " + className },
    map_default(colors2, function(c4) {
      return Cn.createElement(CircleSwatch_default, {
        key: c4,
        color: c4,
        onClick: handleChange,
        onSwatchHover,
        active: hex === c4.toLowerCase(),
        circleSize,
        circleSpacing
      });
    })
  );
};
Circle.propTypes = {
  width: import_prop_types3.default.oneOfType([import_prop_types3.default.string, import_prop_types3.default.number]),
  circleSize: import_prop_types3.default.number,
  circleSpacing: import_prop_types3.default.number,
  styles: import_prop_types3.default.object
};
Circle.defaultProps = {
  width: 252,
  circleSize: 28,
  circleSpacing: 14,
  colors: [red["500"], pink["500"], purple["500"], deepPurple["500"], indigo["500"], blue["500"], lightBlue["500"], cyan["500"], teal["500"], green["500"], lightGreen["500"], lime["500"], yellow["500"], amber["500"], orange["500"], deepOrange["500"], brown["500"], blueGrey["500"]],
  styles: {}
};
var Circle_default = ColorWrap_default(Circle);

// node_modules/react-color/es/components/chrome/Chrome.js
init_compat_module();
var import_prop_types4 = __toESM(require_prop_types());
var import_reactcss17 = __toESM(require_lib());

// node_modules/react-color/es/components/chrome/ChromeFields.js
init_compat_module();
var import_reactcss14 = __toESM(require_lib());

// node_modules/lodash-es/isUndefined.js
function isUndefined(value) {
  return value === void 0;
}
var isUndefined_default = isUndefined;

// node_modules/react-color/es/components/chrome/ChromeFields.js
var import_UnfoldMoreHorizontalIcon = __toESM(require_UnfoldMoreHorizontalIcon());
var _createClass7 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn7(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ChromeFields = function(_React$Component) {
  _inherits7(ChromeFields2, _React$Component);
  function ChromeFields2(props2) {
    _classCallCheck7(this, ChromeFields2);
    var _this = _possibleConstructorReturn7(this, (ChromeFields2.__proto__ || Object.getPrototypeOf(ChromeFields2)).call(this));
    _this.toggleViews = function() {
      if (_this.state.view === "hex") {
        _this.setState({ view: "rgb" });
      } else if (_this.state.view === "rgb") {
        _this.setState({ view: "hsl" });
      } else if (_this.state.view === "hsl") {
        if (_this.props.hsl.a === 1) {
          _this.setState({ view: "hex" });
        } else {
          _this.setState({ view: "rgb" });
        }
      }
    };
    _this.handleChange = function(data2, e4) {
      if (data2.hex) {
        isValidHex(data2.hex) && _this.props.onChange({
          hex: data2.hex,
          source: "hex"
        }, e4);
      } else if (data2.r || data2.g || data2.b) {
        _this.props.onChange({
          r: data2.r || _this.props.rgb.r,
          g: data2.g || _this.props.rgb.g,
          b: data2.b || _this.props.rgb.b,
          source: "rgb"
        }, e4);
      } else if (data2.a) {
        if (data2.a < 0) {
          data2.a = 0;
        } else if (data2.a > 1) {
          data2.a = 1;
        }
        _this.props.onChange({
          h: _this.props.hsl.h,
          s: _this.props.hsl.s,
          l: _this.props.hsl.l,
          a: Math.round(data2.a * 100) / 100,
          source: "rgb"
        }, e4);
      } else if (data2.h || data2.s || data2.l) {
        if (typeof data2.s === "string" && data2.s.includes("%")) {
          data2.s = data2.s.replace("%", "");
        }
        if (typeof data2.l === "string" && data2.l.includes("%")) {
          data2.l = data2.l.replace("%", "");
        }
        if (data2.s == 1) {
          data2.s = 0.01;
        } else if (data2.l == 1) {
          data2.l = 0.01;
        }
        _this.props.onChange({
          h: data2.h || _this.props.hsl.h,
          s: Number(!isUndefined_default(data2.s) ? data2.s : _this.props.hsl.s),
          l: Number(!isUndefined_default(data2.l) ? data2.l : _this.props.hsl.l),
          source: "hsl"
        }, e4);
      }
    };
    _this.showHighlight = function(e4) {
      e4.currentTarget.style.background = "#eee";
    };
    _this.hideHighlight = function(e4) {
      e4.currentTarget.style.background = "transparent";
    };
    if (props2.hsl.a !== 1 && props2.view === "hex") {
      _this.state = {
        view: "rgb"
      };
    } else {
      _this.state = {
        view: props2.view
      };
    }
    return _this;
  }
  _createClass7(ChromeFields2, [{
    key: "render",
    value: function render3() {
      var _this2 = this;
      var styles2 = (0, import_reactcss14.default)({
        "default": {
          wrap: {
            paddingTop: "16px",
            display: "flex"
          },
          fields: {
            flex: "1",
            display: "flex",
            marginLeft: "-6px"
          },
          field: {
            paddingLeft: "6px",
            width: "100%"
          },
          alpha: {
            paddingLeft: "6px",
            width: "100%"
          },
          toggle: {
            width: "32px",
            textAlign: "right",
            position: "relative"
          },
          icon: {
            marginRight: "-4px",
            marginTop: "12px",
            cursor: "pointer",
            position: "relative"
          },
          iconHighlight: {
            position: "absolute",
            width: "24px",
            height: "28px",
            background: "#eee",
            borderRadius: "4px",
            top: "10px",
            left: "12px",
            display: "none"
          },
          input: {
            fontSize: "11px",
            color: "#333",
            width: "100%",
            borderRadius: "2px",
            border: "none",
            boxShadow: "inset 0 0 0 1px #dadada",
            height: "21px",
            textAlign: "center"
          },
          label: {
            textTransform: "uppercase",
            fontSize: "11px",
            lineHeight: "11px",
            color: "#969696",
            textAlign: "center",
            display: "block",
            marginTop: "12px"
          },
          svg: {
            fill: "#333",
            width: "24px",
            height: "24px",
            border: "1px transparent solid",
            borderRadius: "5px"
          }
        },
        "disableAlpha": {
          alpha: {
            display: "none"
          }
        }
      }, this.props, this.state);
      var fields = void 0;
      if (this.state.view === "hex") {
        fields = Cn.createElement(
          "div",
          { style: styles2.fields, className: "flexbox-fix" },
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "hex",
              value: this.props.hex,
              onChange: this.handleChange
            })
          )
        );
      } else if (this.state.view === "rgb") {
        fields = Cn.createElement(
          "div",
          { style: styles2.fields, className: "flexbox-fix" },
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "r",
              value: this.props.rgb.r,
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "g",
              value: this.props.rgb.g,
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "b",
              value: this.props.rgb.b,
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.alpha },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "a",
              value: this.props.rgb.a,
              arrowOffset: 0.01,
              onChange: this.handleChange
            })
          )
        );
      } else if (this.state.view === "hsl") {
        fields = Cn.createElement(
          "div",
          { style: styles2.fields, className: "flexbox-fix" },
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "h",
              value: Math.round(this.props.hsl.h),
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "s",
              value: Math.round(this.props.hsl.s * 100) + "%",
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.field },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "l",
              value: Math.round(this.props.hsl.l * 100) + "%",
              onChange: this.handleChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.alpha },
            Cn.createElement(EditableInput_default, {
              style: { input: styles2.input, label: styles2.label },
              label: "a",
              value: this.props.hsl.a,
              arrowOffset: 0.01,
              onChange: this.handleChange
            })
          )
        );
      }
      return Cn.createElement(
        "div",
        { style: styles2.wrap, className: "flexbox-fix" },
        fields,
        Cn.createElement(
          "div",
          { style: styles2.toggle },
          Cn.createElement(
            "div",
            { style: styles2.icon, onClick: this.toggleViews, ref: function ref2(icon) {
              return _this2.icon = icon;
            } },
            Cn.createElement(import_UnfoldMoreHorizontalIcon.default, {
              style: styles2.svg,
              onMouseOver: this.showHighlight,
              onMouseEnter: this.showHighlight,
              onMouseOut: this.hideHighlight
            })
          )
        )
      );
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if (nextProps.hsl.a !== 1 && state.view === "hex") {
        return { view: "rgb" };
      }
      return null;
    }
  }]);
  return ChromeFields2;
}(Cn.Component);
ChromeFields.defaultProps = {
  view: "hex"
};
var ChromeFields_default = ChromeFields;

// node_modules/react-color/es/components/chrome/ChromePointer.js
init_compat_module();
var import_reactcss15 = __toESM(require_lib());
var ChromePointer = function ChromePointer2() {
  var styles2 = (0, import_reactcss15.default)({
    "default": {
      picker: {
        width: "12px",
        height: "12px",
        borderRadius: "6px",
        transform: "translate(-6px, -1px)",
        backgroundColor: "rgb(248, 248, 248)",
        boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
      }
    }
  });
  return Cn.createElement("div", { style: styles2.picker });
};
var ChromePointer_default = ChromePointer;

// node_modules/react-color/es/components/chrome/ChromePointerCircle.js
init_compat_module();
var import_reactcss16 = __toESM(require_lib());
var ChromePointerCircle = function ChromePointerCircle2() {
  var styles2 = (0, import_reactcss16.default)({
    "default": {
      picker: {
        width: "12px",
        height: "12px",
        borderRadius: "6px",
        boxShadow: "inset 0 0 0 1px #fff",
        transform: "translate(-6px, -6px)"
      }
    }
  });
  return Cn.createElement("div", { style: styles2.picker });
};
var ChromePointerCircle_default = ChromePointerCircle;

// node_modules/react-color/es/components/chrome/Chrome.js
var Chrome = function Chrome2(_ref) {
  var width = _ref.width, onChange = _ref.onChange, disableAlpha = _ref.disableAlpha, rgb = _ref.rgb, hsl = _ref.hsl, hsv = _ref.hsv, hex = _ref.hex, renderers = _ref.renderers, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, defaultView = _ref.defaultView;
  var styles2 = (0, import_reactcss17.default)(merge_default({
    "default": {
      picker: {
        width,
        background: "#fff",
        borderRadius: "2px",
        boxShadow: "0 0 2px rgba(0,0,0,.3), 0 4px 8px rgba(0,0,0,.3)",
        boxSizing: "initial",
        fontFamily: "Menlo"
      },
      saturation: {
        width: "100%",
        paddingBottom: "55%",
        position: "relative",
        borderRadius: "2px 2px 0 0",
        overflow: "hidden"
      },
      Saturation: {
        radius: "2px 2px 0 0"
      },
      body: {
        padding: "16px 16px 12px"
      },
      controls: {
        display: "flex"
      },
      color: {
        width: "32px"
      },
      swatch: {
        marginTop: "6px",
        width: "16px",
        height: "16px",
        borderRadius: "8px",
        position: "relative",
        overflow: "hidden"
      },
      active: {
        absolute: "0px 0px 0px 0px",
        borderRadius: "8px",
        boxShadow: "inset 0 0 0 1px rgba(0,0,0,.1)",
        background: "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", " + rgb.a + ")",
        zIndex: "2"
      },
      toggles: {
        flex: "1"
      },
      hue: {
        height: "10px",
        position: "relative",
        marginBottom: "8px"
      },
      Hue: {
        radius: "2px"
      },
      alpha: {
        height: "10px",
        position: "relative"
      },
      Alpha: {
        radius: "2px"
      }
    },
    "disableAlpha": {
      color: {
        width: "22px"
      },
      alpha: {
        display: "none"
      },
      hue: {
        marginBottom: "0px"
      },
      swatch: {
        width: "10px",
        height: "10px",
        marginTop: "0px"
      }
    }
  }, passedStyles), { disableAlpha });
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "chrome-picker " + className },
    Cn.createElement(
      "div",
      { style: styles2.saturation },
      Cn.createElement(Saturation_default, {
        style: styles2.Saturation,
        hsl,
        hsv,
        pointer: ChromePointerCircle_default,
        onChange
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.body },
      Cn.createElement(
        "div",
        { style: styles2.controls, className: "flexbox-fix" },
        Cn.createElement(
          "div",
          { style: styles2.color },
          Cn.createElement(
            "div",
            { style: styles2.swatch },
            Cn.createElement("div", { style: styles2.active }),
            Cn.createElement(Checkboard_default, { renderers })
          )
        ),
        Cn.createElement(
          "div",
          { style: styles2.toggles },
          Cn.createElement(
            "div",
            { style: styles2.hue },
            Cn.createElement(Hue_default, {
              style: styles2.Hue,
              hsl,
              pointer: ChromePointer_default,
              onChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.alpha },
            Cn.createElement(Alpha_default, {
              style: styles2.Alpha,
              rgb,
              hsl,
              pointer: ChromePointer_default,
              renderers,
              onChange
            })
          )
        )
      ),
      Cn.createElement(ChromeFields_default, {
        rgb,
        hsl,
        hex,
        view: defaultView,
        onChange,
        disableAlpha
      })
    )
  );
};
Chrome.propTypes = {
  width: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.number]),
  disableAlpha: import_prop_types4.default.bool,
  styles: import_prop_types4.default.object,
  defaultView: import_prop_types4.default.oneOf(["hex", "rgb", "hsl"])
};
Chrome.defaultProps = {
  width: 225,
  disableAlpha: false,
  styles: {}
};
var Chrome_default = ColorWrap_default(Chrome);

// node_modules/react-color/es/components/compact/Compact.js
init_compat_module();
var import_prop_types5 = __toESM(require_prop_types());
var import_reactcss20 = __toESM(require_lib());

// node_modules/react-color/es/components/compact/CompactColor.js
init_compat_module();
var import_reactcss18 = __toESM(require_lib());
var CompactColor = function CompactColor2(_ref) {
  var color = _ref.color, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onSwatchHover = _ref.onSwatchHover, active = _ref.active;
  var styles2 = (0, import_reactcss18.default)({
    "default": {
      color: {
        background: color,
        width: "15px",
        height: "15px",
        float: "left",
        marginRight: "5px",
        marginBottom: "5px",
        position: "relative",
        cursor: "pointer"
      },
      dot: {
        absolute: "5px 5px 5px 5px",
        background: getContrastingColor(color),
        borderRadius: "50%",
        opacity: "0"
      }
    },
    "active": {
      dot: {
        opacity: "1"
      }
    },
    "color-#FFFFFF": {
      color: {
        boxShadow: "inset 0 0 0 1px #ddd"
      },
      dot: {
        background: "#000"
      }
    },
    "transparent": {
      dot: {
        background: "#000"
      }
    }
  }, { active, "color-#FFFFFF": color === "#FFFFFF", "transparent": color === "transparent" });
  return Cn.createElement(
    Swatch_default,
    {
      style: styles2.color,
      color,
      onClick,
      onHover: onSwatchHover,
      focusStyle: { boxShadow: "0 0 4px " + color }
    },
    Cn.createElement("div", { style: styles2.dot })
  );
};
var CompactColor_default = CompactColor;

// node_modules/react-color/es/components/compact/CompactFields.js
init_compat_module();
var import_reactcss19 = __toESM(require_lib());
var CompactFields = function CompactFields2(_ref) {
  var hex = _ref.hex, rgb = _ref.rgb, onChange = _ref.onChange;
  var styles2 = (0, import_reactcss19.default)({
    "default": {
      fields: {
        display: "flex",
        paddingBottom: "6px",
        paddingRight: "5px",
        position: "relative"
      },
      active: {
        position: "absolute",
        top: "6px",
        left: "5px",
        height: "9px",
        width: "9px",
        background: hex
      },
      HEXwrap: {
        flex: "6",
        position: "relative"
      },
      HEXinput: {
        width: "80%",
        padding: "0px",
        paddingLeft: "20%",
        border: "none",
        outline: "none",
        background: "none",
        fontSize: "12px",
        color: "#333",
        height: "16px"
      },
      HEXlabel: {
        display: "none"
      },
      RGBwrap: {
        flex: "3",
        position: "relative"
      },
      RGBinput: {
        width: "70%",
        padding: "0px",
        paddingLeft: "30%",
        border: "none",
        outline: "none",
        background: "none",
        fontSize: "12px",
        color: "#333",
        height: "16px"
      },
      RGBlabel: {
        position: "absolute",
        top: "3px",
        left: "0px",
        lineHeight: "16px",
        textTransform: "uppercase",
        fontSize: "12px",
        color: "#999"
      }
    }
  });
  var handleChange = function handleChange2(data2, e4) {
    if (data2.r || data2.g || data2.b) {
      onChange({
        r: data2.r || rgb.r,
        g: data2.g || rgb.g,
        b: data2.b || rgb.b,
        source: "rgb"
      }, e4);
    } else {
      onChange({
        hex: data2.hex,
        source: "hex"
      }, e4);
    }
  };
  return Cn.createElement(
    "div",
    { style: styles2.fields, className: "flexbox-fix" },
    Cn.createElement("div", { style: styles2.active }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
      label: "hex",
      value: hex,
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "r",
      value: rgb.r,
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "g",
      value: rgb.g,
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "b",
      value: rgb.b,
      onChange: handleChange
    })
  );
};
var CompactFields_default = CompactFields;

// node_modules/react-color/es/components/compact/Compact.js
var Compact = function Compact2(_ref) {
  var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors2 = _ref.colors, hex = _ref.hex, rgb = _ref.rgb, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss20.default)(merge_default({
    "default": {
      Compact: {
        background: "#f6f6f6",
        radius: "4px"
      },
      compact: {
        paddingTop: "5px",
        paddingLeft: "5px",
        boxSizing: "initial",
        width: "240px"
      },
      clear: {
        clear: "both"
      }
    }
  }, passedStyles));
  var handleChange = function handleChange2(data2, e4) {
    if (data2.hex) {
      isValidHex(data2.hex) && onChange({
        hex: data2.hex,
        source: "hex"
      }, e4);
    } else {
      onChange(data2, e4);
    }
  };
  return Cn.createElement(
    Raised_default,
    { style: styles2.Compact, styles: passedStyles },
    Cn.createElement(
      "div",
      { style: styles2.compact, className: "compact-picker " + className },
      Cn.createElement(
        "div",
        null,
        map_default(colors2, function(c4) {
          return Cn.createElement(CompactColor_default, {
            key: c4,
            color: c4,
            active: c4.toLowerCase() === hex,
            onClick: handleChange,
            onSwatchHover
          });
        }),
        Cn.createElement("div", { style: styles2.clear })
      ),
      Cn.createElement(CompactFields_default, { hex, rgb, onChange: handleChange })
    )
  );
};
Compact.propTypes = {
  colors: import_prop_types5.default.arrayOf(import_prop_types5.default.string),
  styles: import_prop_types5.default.object
};
Compact.defaultProps = {
  colors: ["#4D4D4D", "#999999", "#FFFFFF", "#F44E3B", "#FE9200", "#FCDC00", "#DBDF00", "#A4DD00", "#68CCCA", "#73D8FF", "#AEA1FF", "#FDA1FF", "#333333", "#808080", "#cccccc", "#D33115", "#E27300", "#FCC400", "#B0BC00", "#68BC00", "#16A5A5", "#009CE0", "#7B64FF", "#FA28FF", "#000000", "#666666", "#B3B3B3", "#9F0500", "#C45100", "#FB9E00", "#808900", "#194D33", "#0C797D", "#0062B1", "#653294", "#AB149E"],
  styles: {}
};
var Compact_default = ColorWrap_default(Compact);

// node_modules/react-color/es/components/github/Github.js
init_compat_module();
var import_prop_types6 = __toESM(require_prop_types());
var import_reactcss22 = __toESM(require_lib());

// node_modules/react-color/es/components/github/GithubSwatch.js
init_compat_module();
var import_reactcss21 = __toESM(require_lib());
var GithubSwatch = function GithubSwatch2(_ref) {
  var hover = _ref.hover, color = _ref.color, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover;
  var hoverSwatch = {
    position: "relative",
    zIndex: "2",
    outline: "2px solid #fff",
    boxShadow: "0 0 5px 2px rgba(0,0,0,0.25)"
  };
  var styles2 = (0, import_reactcss21.default)({
    "default": {
      swatch: {
        width: "25px",
        height: "25px",
        fontSize: "0"
      }
    },
    "hover": {
      swatch: hoverSwatch
    }
  }, { hover });
  return Cn.createElement(
    "div",
    { style: styles2.swatch },
    Cn.createElement(Swatch_default, {
      color,
      onClick,
      onHover: onSwatchHover,
      focusStyle: hoverSwatch
    })
  );
};
var GithubSwatch_default = (0, import_reactcss21.handleHover)(GithubSwatch);

// node_modules/react-color/es/components/github/Github.js
var Github = function Github2(_ref) {
  var width = _ref.width, colors2 = _ref.colors, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss22.default)(merge_default({
    "default": {
      card: {
        width,
        background: "#fff",
        border: "1px solid rgba(0,0,0,0.2)",
        boxShadow: "0 3px 12px rgba(0,0,0,0.15)",
        borderRadius: "4px",
        position: "relative",
        padding: "5px",
        display: "flex",
        flexWrap: "wrap"
      },
      triangle: {
        position: "absolute",
        border: "7px solid transparent",
        borderBottomColor: "#fff"
      },
      triangleShadow: {
        position: "absolute",
        border: "8px solid transparent",
        borderBottomColor: "rgba(0,0,0,0.15)"
      }
    },
    "hide-triangle": {
      triangle: {
        display: "none"
      },
      triangleShadow: {
        display: "none"
      }
    },
    "top-left-triangle": {
      triangle: {
        top: "-14px",
        left: "10px"
      },
      triangleShadow: {
        top: "-16px",
        left: "9px"
      }
    },
    "top-right-triangle": {
      triangle: {
        top: "-14px",
        right: "10px"
      },
      triangleShadow: {
        top: "-16px",
        right: "9px"
      }
    },
    "bottom-left-triangle": {
      triangle: {
        top: "35px",
        left: "10px",
        transform: "rotate(180deg)"
      },
      triangleShadow: {
        top: "37px",
        left: "9px",
        transform: "rotate(180deg)"
      }
    },
    "bottom-right-triangle": {
      triangle: {
        top: "35px",
        right: "10px",
        transform: "rotate(180deg)"
      },
      triangleShadow: {
        top: "37px",
        right: "9px",
        transform: "rotate(180deg)"
      }
    }
  }, passedStyles), {
    "hide-triangle": triangle === "hide",
    "top-left-triangle": triangle === "top-left",
    "top-right-triangle": triangle === "top-right",
    "bottom-left-triangle": triangle === "bottom-left",
    "bottom-right-triangle": triangle === "bottom-right"
  });
  var handleChange = function handleChange2(hex, e4) {
    return onChange({ hex, source: "hex" }, e4);
  };
  return Cn.createElement(
    "div",
    { style: styles2.card, className: "github-picker " + className },
    Cn.createElement("div", { style: styles2.triangleShadow }),
    Cn.createElement("div", { style: styles2.triangle }),
    map_default(colors2, function(c4) {
      return Cn.createElement(GithubSwatch_default, {
        color: c4,
        key: c4,
        onClick: handleChange,
        onSwatchHover
      });
    })
  );
};
Github.propTypes = {
  width: import_prop_types6.default.oneOfType([import_prop_types6.default.string, import_prop_types6.default.number]),
  colors: import_prop_types6.default.arrayOf(import_prop_types6.default.string),
  triangle: import_prop_types6.default.oneOf(["hide", "top-left", "top-right", "bottom-left", "bottom-right"]),
  styles: import_prop_types6.default.object
};
Github.defaultProps = {
  width: 200,
  colors: ["#B80000", "#DB3E00", "#FCCB00", "#008B02", "#006B76", "#1273DE", "#004DCF", "#5300EB", "#EB9694", "#FAD0C3", "#FEF3BD", "#C1E1C5", "#BEDADC", "#C4DEF6", "#BED3F3", "#D4C4FB"],
  triangle: "top-left",
  styles: {}
};
var Github_default = ColorWrap_default(Github);

// node_modules/react-color/es/components/hue/Hue.js
init_compat_module();
var import_prop_types7 = __toESM(require_prop_types());
var import_reactcss24 = __toESM(require_lib());

// node_modules/react-color/es/components/hue/HuePointer.js
init_compat_module();
var import_reactcss23 = __toESM(require_lib());
var SliderPointer = function SliderPointer2(_ref) {
  var direction = _ref.direction;
  var styles2 = (0, import_reactcss23.default)({
    "default": {
      picker: {
        width: "18px",
        height: "18px",
        borderRadius: "50%",
        transform: "translate(-9px, -1px)",
        backgroundColor: "rgb(248, 248, 248)",
        boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
      }
    },
    "vertical": {
      picker: {
        transform: "translate(-3px, -9px)"
      }
    }
  }, { vertical: direction === "vertical" });
  return Cn.createElement("div", { style: styles2.picker });
};
var HuePointer_default = SliderPointer;

// node_modules/react-color/es/components/hue/Hue.js
var _extends7 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var HuePicker = function HuePicker2(_ref) {
  var width = _ref.width, height = _ref.height, onChange = _ref.onChange, hsl = _ref.hsl, direction = _ref.direction, pointer = _ref.pointer, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss24.default)(merge_default({
    "default": {
      picker: {
        position: "relative",
        width,
        height
      },
      hue: {
        radius: "2px"
      }
    }
  }, passedStyles));
  var handleChange = function handleChange2(data2) {
    return onChange({ a: 1, h: data2.h, l: 0.5, s: 1 });
  };
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "hue-picker " + className },
    Cn.createElement(Hue_default, _extends7({}, styles2.hue, {
      hsl,
      pointer,
      onChange: handleChange,
      direction
    }))
  );
};
HuePicker.propTypes = {
  styles: import_prop_types7.default.object
};
HuePicker.defaultProps = {
  width: "316px",
  height: "16px",
  direction: "horizontal",
  pointer: HuePointer_default,
  styles: {}
};
var Hue_default2 = ColorWrap_default(HuePicker);

// node_modules/react-color/es/components/material/Material.js
init_compat_module();
var import_reactcss25 = __toESM(require_lib());
var Material = function Material2(_ref) {
  var onChange = _ref.onChange, hex = _ref.hex, rgb = _ref.rgb, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss25.default)(merge_default({
    "default": {
      material: {
        width: "98px",
        height: "98px",
        padding: "16px",
        fontFamily: "Roboto"
      },
      HEXwrap: {
        position: "relative"
      },
      HEXinput: {
        width: "100%",
        marginTop: "12px",
        fontSize: "15px",
        color: "#333",
        padding: "0px",
        border: "0px",
        borderBottom: "2px solid " + hex,
        outline: "none",
        height: "30px"
      },
      HEXlabel: {
        position: "absolute",
        top: "0px",
        left: "0px",
        fontSize: "11px",
        color: "#999999",
        textTransform: "capitalize"
      },
      Hex: {
        style: {}
      },
      RGBwrap: {
        position: "relative"
      },
      RGBinput: {
        width: "100%",
        marginTop: "12px",
        fontSize: "15px",
        color: "#333",
        padding: "0px",
        border: "0px",
        borderBottom: "1px solid #eee",
        outline: "none",
        height: "30px"
      },
      RGBlabel: {
        position: "absolute",
        top: "0px",
        left: "0px",
        fontSize: "11px",
        color: "#999999",
        textTransform: "capitalize"
      },
      split: {
        display: "flex",
        marginRight: "-10px",
        paddingTop: "11px"
      },
      third: {
        flex: "1",
        paddingRight: "10px"
      }
    }
  }, passedStyles));
  var handleChange = function handleChange2(data2, e4) {
    if (data2.hex) {
      isValidHex(data2.hex) && onChange({
        hex: data2.hex,
        source: "hex"
      }, e4);
    } else if (data2.r || data2.g || data2.b) {
      onChange({
        r: data2.r || rgb.r,
        g: data2.g || rgb.g,
        b: data2.b || rgb.b,
        source: "rgb"
      }, e4);
    }
  };
  return Cn.createElement(
    Raised_default,
    { styles: passedStyles },
    Cn.createElement(
      "div",
      { style: styles2.material, className: "material-picker " + className },
      Cn.createElement(EditableInput_default, {
        style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
        label: "hex",
        value: hex,
        onChange: handleChange
      }),
      Cn.createElement(
        "div",
        { style: styles2.split, className: "flexbox-fix" },
        Cn.createElement(
          "div",
          { style: styles2.third },
          Cn.createElement(EditableInput_default, {
            style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
            label: "r",
            value: rgb.r,
            onChange: handleChange
          })
        ),
        Cn.createElement(
          "div",
          { style: styles2.third },
          Cn.createElement(EditableInput_default, {
            style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
            label: "g",
            value: rgb.g,
            onChange: handleChange
          })
        ),
        Cn.createElement(
          "div",
          { style: styles2.third },
          Cn.createElement(EditableInput_default, {
            style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
            label: "b",
            value: rgb.b,
            onChange: handleChange
          })
        )
      )
    )
  );
};
var Material_default = ColorWrap_default(Material);

// node_modules/react-color/es/components/photoshop/Photoshop.js
init_compat_module();
var import_prop_types8 = __toESM(require_prop_types());
var import_reactcss31 = __toESM(require_lib());

// node_modules/react-color/es/components/photoshop/PhotoshopFields.js
init_compat_module();
var import_reactcss26 = __toESM(require_lib());
var PhotoshopPicker = function PhotoshopPicker2(_ref) {
  var onChange = _ref.onChange, rgb = _ref.rgb, hsv = _ref.hsv, hex = _ref.hex;
  var styles2 = (0, import_reactcss26.default)({
    "default": {
      fields: {
        paddingTop: "5px",
        paddingBottom: "9px",
        width: "80px",
        position: "relative"
      },
      divider: {
        height: "5px"
      },
      RGBwrap: {
        position: "relative"
      },
      RGBinput: {
        marginLeft: "40%",
        width: "40%",
        height: "18px",
        border: "1px solid #888888",
        boxShadow: "inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC",
        marginBottom: "5px",
        fontSize: "13px",
        paddingLeft: "3px",
        marginRight: "10px"
      },
      RGBlabel: {
        left: "0px",
        top: "0px",
        width: "34px",
        textTransform: "uppercase",
        fontSize: "13px",
        height: "18px",
        lineHeight: "22px",
        position: "absolute"
      },
      HEXwrap: {
        position: "relative"
      },
      HEXinput: {
        marginLeft: "20%",
        width: "80%",
        height: "18px",
        border: "1px solid #888888",
        boxShadow: "inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC",
        marginBottom: "6px",
        fontSize: "13px",
        paddingLeft: "3px"
      },
      HEXlabel: {
        position: "absolute",
        top: "0px",
        left: "0px",
        width: "14px",
        textTransform: "uppercase",
        fontSize: "13px",
        height: "18px",
        lineHeight: "22px"
      },
      fieldSymbols: {
        position: "absolute",
        top: "5px",
        right: "-7px",
        fontSize: "13px"
      },
      symbol: {
        height: "20px",
        lineHeight: "22px",
        paddingBottom: "7px"
      }
    }
  });
  var handleChange = function handleChange2(data2, e4) {
    if (data2["#"]) {
      isValidHex(data2["#"]) && onChange({
        hex: data2["#"],
        source: "hex"
      }, e4);
    } else if (data2.r || data2.g || data2.b) {
      onChange({
        r: data2.r || rgb.r,
        g: data2.g || rgb.g,
        b: data2.b || rgb.b,
        source: "rgb"
      }, e4);
    } else if (data2.h || data2.s || data2.v) {
      onChange({
        h: data2.h || hsv.h,
        s: data2.s || hsv.s,
        v: data2.v || hsv.v,
        source: "hsv"
      }, e4);
    }
  };
  return Cn.createElement(
    "div",
    { style: styles2.fields },
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "h",
      value: Math.round(hsv.h),
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "s",
      value: Math.round(hsv.s * 100),
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "v",
      value: Math.round(hsv.v * 100),
      onChange: handleChange
    }),
    Cn.createElement("div", { style: styles2.divider }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "r",
      value: rgb.r,
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "g",
      value: rgb.g,
      onChange: handleChange
    }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
      label: "b",
      value: rgb.b,
      onChange: handleChange
    }),
    Cn.createElement("div", { style: styles2.divider }),
    Cn.createElement(EditableInput_default, {
      style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
      label: "#",
      value: hex.replace("#", ""),
      onChange: handleChange
    }),
    Cn.createElement(
      "div",
      { style: styles2.fieldSymbols },
      Cn.createElement(
        "div",
        { style: styles2.symbol },
        "\xB0"
      ),
      Cn.createElement(
        "div",
        { style: styles2.symbol },
        "%"
      ),
      Cn.createElement(
        "div",
        { style: styles2.symbol },
        "%"
      )
    )
  );
};
var PhotoshopFields_default = PhotoshopPicker;

// node_modules/react-color/es/components/photoshop/PhotoshopPointerCircle.js
init_compat_module();
var import_reactcss27 = __toESM(require_lib());
var PhotoshopPointerCircle = function PhotoshopPointerCircle2(_ref) {
  var hsl = _ref.hsl;
  var styles2 = (0, import_reactcss27.default)({
    "default": {
      picker: {
        width: "12px",
        height: "12px",
        borderRadius: "6px",
        boxShadow: "inset 0 0 0 1px #fff",
        transform: "translate(-6px, -6px)"
      }
    },
    "black-outline": {
      picker: {
        boxShadow: "inset 0 0 0 1px #000"
      }
    }
  }, { "black-outline": hsl.l > 0.5 });
  return Cn.createElement("div", { style: styles2.picker });
};
var PhotoshopPointerCircle_default = PhotoshopPointerCircle;

// node_modules/react-color/es/components/photoshop/PhotoshopPointer.js
init_compat_module();
var import_reactcss28 = __toESM(require_lib());
var PhotoshopPointerCircle3 = function PhotoshopPointerCircle4() {
  var styles2 = (0, import_reactcss28.default)({
    "default": {
      triangle: {
        width: 0,
        height: 0,
        borderStyle: "solid",
        borderWidth: "4px 0 4px 6px",
        borderColor: "transparent transparent transparent #fff",
        position: "absolute",
        top: "1px",
        left: "1px"
      },
      triangleBorder: {
        width: 0,
        height: 0,
        borderStyle: "solid",
        borderWidth: "5px 0 5px 8px",
        borderColor: "transparent transparent transparent #555"
      },
      left: {
        Extend: "triangleBorder",
        transform: "translate(-13px, -4px)"
      },
      leftInside: {
        Extend: "triangle",
        transform: "translate(-8px, -5px)"
      },
      right: {
        Extend: "triangleBorder",
        transform: "translate(20px, -14px) rotate(180deg)"
      },
      rightInside: {
        Extend: "triangle",
        transform: "translate(-8px, -5px)"
      }
    }
  });
  return Cn.createElement(
    "div",
    { style: styles2.pointer },
    Cn.createElement(
      "div",
      { style: styles2.left },
      Cn.createElement("div", { style: styles2.leftInside })
    ),
    Cn.createElement(
      "div",
      { style: styles2.right },
      Cn.createElement("div", { style: styles2.rightInside })
    )
  );
};
var PhotoshopPointer_default = PhotoshopPointerCircle3;

// node_modules/react-color/es/components/photoshop/PhotoshopButton.js
init_compat_module();
var import_reactcss29 = __toESM(require_lib());
var PhotoshopButton = function PhotoshopButton2(_ref) {
  var onClick = _ref.onClick, label = _ref.label, children = _ref.children, active = _ref.active;
  var styles2 = (0, import_reactcss29.default)({
    "default": {
      button: {
        backgroundImage: "linear-gradient(-180deg, #FFFFFF 0%, #E6E6E6 100%)",
        border: "1px solid #878787",
        borderRadius: "2px",
        height: "20px",
        boxShadow: "0 1px 0 0 #EAEAEA",
        fontSize: "14px",
        color: "#000",
        lineHeight: "20px",
        textAlign: "center",
        marginBottom: "10px",
        cursor: "pointer"
      }
    },
    "active": {
      button: {
        boxShadow: "0 0 0 1px #878787"
      }
    }
  }, { active });
  return Cn.createElement(
    "div",
    { style: styles2.button, onClick },
    label || children
  );
};
var PhotoshopButton_default = PhotoshopButton;

// node_modules/react-color/es/components/photoshop/PhotoshopPreviews.js
init_compat_module();
var import_reactcss30 = __toESM(require_lib());
var PhotoshopPreviews = function PhotoshopPreviews2(_ref) {
  var rgb = _ref.rgb, currentColor = _ref.currentColor;
  var styles2 = (0, import_reactcss30.default)({
    "default": {
      swatches: {
        border: "1px solid #B3B3B3",
        borderBottom: "1px solid #F0F0F0",
        marginBottom: "2px",
        marginTop: "1px"
      },
      new: {
        height: "34px",
        background: "rgb(" + rgb.r + "," + rgb.g + ", " + rgb.b + ")",
        boxShadow: "inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000"
      },
      current: {
        height: "34px",
        background: currentColor,
        boxShadow: "inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 -1px 0 #000"
      },
      label: {
        fontSize: "14px",
        color: "#000",
        textAlign: "center"
      }
    }
  });
  return Cn.createElement(
    "div",
    null,
    Cn.createElement(
      "div",
      { style: styles2.label },
      "new"
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatches },
      Cn.createElement("div", { style: styles2.new }),
      Cn.createElement("div", { style: styles2.current })
    ),
    Cn.createElement(
      "div",
      { style: styles2.label },
      "current"
    )
  );
};
var PhotoshopPreviews_default = PhotoshopPreviews;

// node_modules/react-color/es/components/photoshop/Photoshop.js
var _createClass8 = function() {
  function defineProperties(target, props2) {
    for (var i4 = 0; i4 < props2.length; i4++) {
      var descriptor = props2[i4];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn8(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Photoshop = function(_React$Component) {
  _inherits8(Photoshop2, _React$Component);
  function Photoshop2(props2) {
    _classCallCheck8(this, Photoshop2);
    var _this = _possibleConstructorReturn8(this, (Photoshop2.__proto__ || Object.getPrototypeOf(Photoshop2)).call(this));
    _this.state = {
      currentColor: props2.hex
    };
    return _this;
  }
  _createClass8(Photoshop2, [{
    key: "render",
    value: function render3() {
      var _props = this.props, _props$styles = _props.styles, passedStyles = _props$styles === void 0 ? {} : _props$styles, _props$className = _props.className, className = _props$className === void 0 ? "" : _props$className;
      var styles2 = (0, import_reactcss31.default)(merge_default({
        "default": {
          picker: {
            background: "#DCDCDC",
            borderRadius: "4px",
            boxShadow: "0 0 0 1px rgba(0,0,0,.25), 0 8px 16px rgba(0,0,0,.15)",
            boxSizing: "initial",
            width: "513px"
          },
          head: {
            backgroundImage: "linear-gradient(-180deg, #F0F0F0 0%, #D4D4D4 100%)",
            borderBottom: "1px solid #B1B1B1",
            boxShadow: "inset 0 1px 0 0 rgba(255,255,255,.2), inset 0 -1px 0 0 rgba(0,0,0,.02)",
            height: "23px",
            lineHeight: "24px",
            borderRadius: "4px 4px 0 0",
            fontSize: "13px",
            color: "#4D4D4D",
            textAlign: "center"
          },
          body: {
            padding: "15px 15px 0",
            display: "flex"
          },
          saturation: {
            width: "256px",
            height: "256px",
            position: "relative",
            border: "2px solid #B3B3B3",
            borderBottom: "2px solid #F0F0F0",
            overflow: "hidden"
          },
          hue: {
            position: "relative",
            height: "256px",
            width: "19px",
            marginLeft: "10px",
            border: "2px solid #B3B3B3",
            borderBottom: "2px solid #F0F0F0"
          },
          controls: {
            width: "180px",
            marginLeft: "10px"
          },
          top: {
            display: "flex"
          },
          previews: {
            width: "60px"
          },
          actions: {
            flex: "1",
            marginLeft: "20px"
          }
        }
      }, passedStyles));
      return Cn.createElement(
        "div",
        { style: styles2.picker, className: "photoshop-picker " + className },
        Cn.createElement(
          "div",
          { style: styles2.head },
          this.props.header
        ),
        Cn.createElement(
          "div",
          { style: styles2.body, className: "flexbox-fix" },
          Cn.createElement(
            "div",
            { style: styles2.saturation },
            Cn.createElement(Saturation_default, {
              hsl: this.props.hsl,
              hsv: this.props.hsv,
              pointer: PhotoshopPointerCircle_default,
              onChange: this.props.onChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.hue },
            Cn.createElement(Hue_default, {
              direction: "vertical",
              hsl: this.props.hsl,
              pointer: PhotoshopPointer_default,
              onChange: this.props.onChange
            })
          ),
          Cn.createElement(
            "div",
            { style: styles2.controls },
            Cn.createElement(
              "div",
              { style: styles2.top, className: "flexbox-fix" },
              Cn.createElement(
                "div",
                { style: styles2.previews },
                Cn.createElement(PhotoshopPreviews_default, {
                  rgb: this.props.rgb,
                  currentColor: this.state.currentColor
                })
              ),
              Cn.createElement(
                "div",
                { style: styles2.actions },
                Cn.createElement(PhotoshopButton_default, { label: "OK", onClick: this.props.onAccept, active: true }),
                Cn.createElement(PhotoshopButton_default, { label: "Cancel", onClick: this.props.onCancel }),
                Cn.createElement(PhotoshopFields_default, {
                  onChange: this.props.onChange,
                  rgb: this.props.rgb,
                  hsv: this.props.hsv,
                  hex: this.props.hex
                })
              )
            )
          )
        )
      );
    }
  }]);
  return Photoshop2;
}(Cn.Component);
Photoshop.propTypes = {
  header: import_prop_types8.default.string,
  styles: import_prop_types8.default.object
};
Photoshop.defaultProps = {
  header: "Color Picker",
  styles: {}
};
var Photoshop_default = ColorWrap_default(Photoshop);

// node_modules/react-color/es/components/sketch/Sketch.js
init_compat_module();
var import_prop_types10 = __toESM(require_prop_types());
var import_reactcss34 = __toESM(require_lib());

// node_modules/react-color/es/components/sketch/SketchFields.js
init_compat_module();
var import_reactcss32 = __toESM(require_lib());
var SketchFields = function SketchFields2(_ref) {
  var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, disableAlpha = _ref.disableAlpha;
  var styles2 = (0, import_reactcss32.default)({
    "default": {
      fields: {
        display: "flex",
        paddingTop: "4px"
      },
      single: {
        flex: "1",
        paddingLeft: "6px"
      },
      alpha: {
        flex: "1",
        paddingLeft: "6px"
      },
      double: {
        flex: "2"
      },
      input: {
        width: "80%",
        padding: "4px 10% 3px",
        border: "none",
        boxShadow: "inset 0 0 0 1px #ccc",
        fontSize: "11px"
      },
      label: {
        display: "block",
        textAlign: "center",
        fontSize: "11px",
        color: "#222",
        paddingTop: "3px",
        paddingBottom: "4px",
        textTransform: "capitalize"
      }
    },
    "disableAlpha": {
      alpha: {
        display: "none"
      }
    }
  }, { disableAlpha });
  var handleChange = function handleChange2(data2, e4) {
    if (data2.hex) {
      isValidHex(data2.hex) && onChange({
        hex: data2.hex,
        source: "hex"
      }, e4);
    } else if (data2.r || data2.g || data2.b) {
      onChange({
        r: data2.r || rgb.r,
        g: data2.g || rgb.g,
        b: data2.b || rgb.b,
        a: rgb.a,
        source: "rgb"
      }, e4);
    } else if (data2.a) {
      if (data2.a < 0) {
        data2.a = 0;
      } else if (data2.a > 100) {
        data2.a = 100;
      }
      data2.a /= 100;
      onChange({
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: data2.a,
        source: "rgb"
      }, e4);
    }
  };
  return Cn.createElement(
    "div",
    { style: styles2.fields, className: "flexbox-fix" },
    Cn.createElement(
      "div",
      { style: styles2.double },
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input, label: styles2.label },
        label: "hex",
        value: hex.replace("#", ""),
        onChange: handleChange
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.single },
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input, label: styles2.label },
        label: "r",
        value: rgb.r,
        onChange: handleChange,
        dragLabel: "true",
        dragMax: "255"
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.single },
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input, label: styles2.label },
        label: "g",
        value: rgb.g,
        onChange: handleChange,
        dragLabel: "true",
        dragMax: "255"
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.single },
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input, label: styles2.label },
        label: "b",
        value: rgb.b,
        onChange: handleChange,
        dragLabel: "true",
        dragMax: "255"
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.alpha },
      Cn.createElement(EditableInput_default, {
        style: { input: styles2.input, label: styles2.label },
        label: "a",
        value: Math.round(rgb.a * 100),
        onChange: handleChange,
        dragLabel: "true",
        dragMax: "100"
      })
    )
  );
};
var SketchFields_default = SketchFields;

// node_modules/react-color/es/components/sketch/SketchPresetColors.js
init_compat_module();
var import_prop_types9 = __toESM(require_prop_types());
var import_reactcss33 = __toESM(require_lib());
var _extends8 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var SketchPresetColors = function SketchPresetColors2(_ref) {
  var colors2 = _ref.colors, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onSwatchHover = _ref.onSwatchHover;
  var styles2 = (0, import_reactcss33.default)({
    "default": {
      colors: {
        margin: "0 -10px",
        padding: "10px 0 0 10px",
        borderTop: "1px solid #eee",
        display: "flex",
        flexWrap: "wrap",
        position: "relative"
      },
      swatchWrap: {
        width: "16px",
        height: "16px",
        margin: "0 10px 10px 0"
      },
      swatch: {
        borderRadius: "3px",
        boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)"
      }
    },
    "no-presets": {
      colors: {
        display: "none"
      }
    }
  }, {
    "no-presets": !colors2 || !colors2.length
  });
  var handleClick = function handleClick2(hex, e4) {
    onClick({
      hex,
      source: "hex"
    }, e4);
  };
  return Cn.createElement(
    "div",
    { style: styles2.colors, className: "flexbox-fix" },
    colors2.map(function(colorObjOrString) {
      var c4 = typeof colorObjOrString === "string" ? { color: colorObjOrString } : colorObjOrString;
      var key2 = "" + c4.color + (c4.title || "");
      return Cn.createElement(
        "div",
        { key: key2, style: styles2.swatchWrap },
        Cn.createElement(Swatch_default, _extends8({}, c4, {
          style: styles2.swatch,
          onClick: handleClick,
          onHover: onSwatchHover,
          focusStyle: {
            boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px " + c4.color
          }
        }))
      );
    })
  );
};
SketchPresetColors.propTypes = {
  colors: import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.string, import_prop_types9.default.shape({
    color: import_prop_types9.default.string,
    title: import_prop_types9.default.string
  })])).isRequired
};
var SketchPresetColors_default = SketchPresetColors;

// node_modules/react-color/es/components/sketch/Sketch.js
var _extends9 = Object.assign || function(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = arguments[i4];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var Sketch = function Sketch2(_ref) {
  var width = _ref.width, rgb = _ref.rgb, hex = _ref.hex, hsv = _ref.hsv, hsl = _ref.hsl, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, disableAlpha = _ref.disableAlpha, presetColors = _ref.presetColors, renderers = _ref.renderers, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss34.default)(merge_default({
    "default": _extends9({
      picker: {
        width,
        padding: "10px 10px 0",
        boxSizing: "initial",
        background: "#fff",
        borderRadius: "4px",
        boxShadow: "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)"
      },
      saturation: {
        width: "100%",
        paddingBottom: "75%",
        position: "relative",
        overflow: "hidden"
      },
      Saturation: {
        radius: "3px",
        shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
      },
      controls: {
        display: "flex"
      },
      sliders: {
        padding: "4px 0",
        flex: "1"
      },
      color: {
        width: "24px",
        height: "24px",
        position: "relative",
        marginTop: "4px",
        marginLeft: "4px",
        borderRadius: "3px"
      },
      activeColor: {
        absolute: "0px 0px 0px 0px",
        borderRadius: "2px",
        background: "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + "," + rgb.a + ")",
        boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
      },
      hue: {
        position: "relative",
        height: "10px",
        overflow: "hidden"
      },
      Hue: {
        radius: "2px",
        shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
      },
      alpha: {
        position: "relative",
        height: "10px",
        marginTop: "4px",
        overflow: "hidden"
      },
      Alpha: {
        radius: "2px",
        shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
      }
    }, passedStyles),
    "disableAlpha": {
      color: {
        height: "10px"
      },
      hue: {
        height: "10px"
      },
      alpha: {
        display: "none"
      }
    }
  }, passedStyles), { disableAlpha });
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "sketch-picker " + className },
    Cn.createElement(
      "div",
      { style: styles2.saturation },
      Cn.createElement(Saturation_default, {
        style: styles2.Saturation,
        hsl,
        hsv,
        onChange
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.controls, className: "flexbox-fix" },
      Cn.createElement(
        "div",
        { style: styles2.sliders },
        Cn.createElement(
          "div",
          { style: styles2.hue },
          Cn.createElement(Hue_default, {
            style: styles2.Hue,
            hsl,
            onChange
          })
        ),
        Cn.createElement(
          "div",
          { style: styles2.alpha },
          Cn.createElement(Alpha_default, {
            style: styles2.Alpha,
            rgb,
            hsl,
            renderers,
            onChange
          })
        )
      ),
      Cn.createElement(
        "div",
        { style: styles2.color },
        Cn.createElement(Checkboard_default, null),
        Cn.createElement("div", { style: styles2.activeColor })
      )
    ),
    Cn.createElement(SketchFields_default, {
      rgb,
      hsl,
      hex,
      onChange,
      disableAlpha
    }),
    Cn.createElement(SketchPresetColors_default, {
      colors: presetColors,
      onClick: onChange,
      onSwatchHover
    })
  );
};
Sketch.propTypes = {
  disableAlpha: import_prop_types10.default.bool,
  width: import_prop_types10.default.oneOfType([import_prop_types10.default.string, import_prop_types10.default.number]),
  styles: import_prop_types10.default.object
};
Sketch.defaultProps = {
  disableAlpha: false,
  width: 200,
  styles: {},
  presetColors: ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF"]
};
var Sketch_default = ColorWrap_default(Sketch);

// node_modules/react-color/es/components/slider/Slider.js
init_compat_module();
var import_prop_types11 = __toESM(require_prop_types());
var import_reactcss38 = __toESM(require_lib());

// node_modules/react-color/es/components/slider/SliderSwatches.js
init_compat_module();
var import_reactcss36 = __toESM(require_lib());

// node_modules/react-color/es/components/slider/SliderSwatch.js
init_compat_module();
var import_reactcss35 = __toESM(require_lib());
var SliderSwatch = function SliderSwatch2(_ref) {
  var hsl = _ref.hsl, offset2 = _ref.offset, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, active = _ref.active, first = _ref.first, last = _ref.last;
  var styles2 = (0, import_reactcss35.default)({
    "default": {
      swatch: {
        height: "12px",
        background: "hsl(" + hsl.h + ", 50%, " + offset2 * 100 + "%)",
        cursor: "pointer"
      }
    },
    "first": {
      swatch: {
        borderRadius: "2px 0 0 2px"
      }
    },
    "last": {
      swatch: {
        borderRadius: "0 2px 2px 0"
      }
    },
    "active": {
      swatch: {
        transform: "scaleY(1.8)",
        borderRadius: "3.6px/2px"
      }
    }
  }, { active, first, last });
  var handleClick = function handleClick2(e4) {
    return onClick({
      h: hsl.h,
      s: 0.5,
      l: offset2,
      source: "hsl"
    }, e4);
  };
  return Cn.createElement("div", { style: styles2.swatch, onClick: handleClick });
};
var SliderSwatch_default = SliderSwatch;

// node_modules/react-color/es/components/slider/SliderSwatches.js
var SliderSwatches = function SliderSwatches2(_ref) {
  var onClick = _ref.onClick, hsl = _ref.hsl;
  var styles2 = (0, import_reactcss36.default)({
    "default": {
      swatches: {
        marginTop: "20px"
      },
      swatch: {
        boxSizing: "border-box",
        width: "20%",
        paddingRight: "1px",
        float: "left"
      },
      clear: {
        clear: "both"
      }
    }
  });
  var epsilon = 0.1;
  return Cn.createElement(
    "div",
    { style: styles2.swatches },
    Cn.createElement(
      "div",
      { style: styles2.swatch },
      Cn.createElement(SliderSwatch_default, {
        hsl,
        offset: ".80",
        active: Math.abs(hsl.l - 0.8) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
        onClick,
        first: true
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatch },
      Cn.createElement(SliderSwatch_default, {
        hsl,
        offset: ".65",
        active: Math.abs(hsl.l - 0.65) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
        onClick
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatch },
      Cn.createElement(SliderSwatch_default, {
        hsl,
        offset: ".50",
        active: Math.abs(hsl.l - 0.5) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
        onClick
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatch },
      Cn.createElement(SliderSwatch_default, {
        hsl,
        offset: ".35",
        active: Math.abs(hsl.l - 0.35) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
        onClick
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatch },
      Cn.createElement(SliderSwatch_default, {
        hsl,
        offset: ".20",
        active: Math.abs(hsl.l - 0.2) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
        onClick,
        last: true
      })
    ),
    Cn.createElement("div", { style: styles2.clear })
  );
};
var SliderSwatches_default = SliderSwatches;

// node_modules/react-color/es/components/slider/SliderPointer.js
init_compat_module();
var import_reactcss37 = __toESM(require_lib());
var SliderPointer3 = function SliderPointer4() {
  var styles2 = (0, import_reactcss37.default)({
    "default": {
      picker: {
        width: "14px",
        height: "14px",
        borderRadius: "6px",
        transform: "translate(-7px, -1px)",
        backgroundColor: "rgb(248, 248, 248)",
        boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
      }
    }
  });
  return Cn.createElement("div", { style: styles2.picker });
};
var SliderPointer_default = SliderPointer3;

// node_modules/react-color/es/components/slider/Slider.js
var Slider = function Slider2(_ref) {
  var hsl = _ref.hsl, onChange = _ref.onChange, pointer = _ref.pointer, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss38.default)(merge_default({
    "default": {
      hue: {
        height: "12px",
        position: "relative"
      },
      Hue: {
        radius: "2px"
      }
    }
  }, passedStyles));
  return Cn.createElement(
    "div",
    { style: styles2.wrap || {}, className: "slider-picker " + className },
    Cn.createElement(
      "div",
      { style: styles2.hue },
      Cn.createElement(Hue_default, {
        style: styles2.Hue,
        hsl,
        pointer,
        onChange
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.swatches },
      Cn.createElement(SliderSwatches_default, { hsl, onClick: onChange })
    )
  );
};
Slider.propTypes = {
  styles: import_prop_types11.default.object
};
Slider.defaultProps = {
  pointer: SliderPointer_default,
  styles: {}
};
var Slider_default = ColorWrap_default(Slider);

// node_modules/react-color/es/components/swatches/Swatches.js
init_compat_module();
var import_prop_types12 = __toESM(require_prop_types());
var import_reactcss41 = __toESM(require_lib());

// node_modules/react-color/es/components/swatches/SwatchesGroup.js
init_compat_module();
var import_reactcss40 = __toESM(require_lib());

// node_modules/react-color/es/components/swatches/SwatchesColor.js
init_compat_module();
var import_reactcss39 = __toESM(require_lib());
var import_CheckIcon = __toESM(require_CheckIcon());
var SwatchesColor = function SwatchesColor2(_ref) {
  var color = _ref.color, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onSwatchHover = _ref.onSwatchHover, first = _ref.first, last = _ref.last, active = _ref.active;
  var styles2 = (0, import_reactcss39.default)({
    "default": {
      color: {
        width: "40px",
        height: "24px",
        cursor: "pointer",
        background: color,
        marginBottom: "1px"
      },
      check: {
        color: getContrastingColor(color),
        marginLeft: "8px",
        display: "none"
      }
    },
    "first": {
      color: {
        overflow: "hidden",
        borderRadius: "2px 2px 0 0"
      }
    },
    "last": {
      color: {
        overflow: "hidden",
        borderRadius: "0 0 2px 2px"
      }
    },
    "active": {
      check: {
        display: "block"
      }
    },
    "color-#FFFFFF": {
      color: {
        boxShadow: "inset 0 0 0 1px #ddd"
      },
      check: {
        color: "#333"
      }
    },
    "transparent": {
      check: {
        color: "#333"
      }
    }
  }, {
    first,
    last,
    active,
    "color-#FFFFFF": color === "#FFFFFF",
    "transparent": color === "transparent"
  });
  return Cn.createElement(
    Swatch_default,
    {
      color,
      style: styles2.color,
      onClick,
      onHover: onSwatchHover,
      focusStyle: { boxShadow: "0 0 4px " + color }
    },
    Cn.createElement(
      "div",
      { style: styles2.check },
      Cn.createElement(import_CheckIcon.default, null)
    )
  );
};
var SwatchesColor_default = SwatchesColor;

// node_modules/react-color/es/components/swatches/SwatchesGroup.js
var SwatchesGroup = function SwatchesGroup2(_ref) {
  var onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover, group = _ref.group, active = _ref.active;
  var styles2 = (0, import_reactcss40.default)({
    "default": {
      group: {
        paddingBottom: "10px",
        width: "40px",
        float: "left",
        marginRight: "10px"
      }
    }
  });
  return Cn.createElement(
    "div",
    { style: styles2.group },
    map_default(group, function(color, i4) {
      return Cn.createElement(SwatchesColor_default, {
        key: color,
        color,
        active: color.toLowerCase() === active,
        first: i4 === 0,
        last: i4 === group.length - 1,
        onClick,
        onSwatchHover
      });
    })
  );
};
var SwatchesGroup_default = SwatchesGroup;

// node_modules/react-color/es/components/swatches/Swatches.js
var Swatches = function Swatches2(_ref) {
  var width = _ref.width, height = _ref.height, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors2 = _ref.colors, hex = _ref.hex, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss41.default)(merge_default({
    "default": {
      picker: {
        width,
        height
      },
      overflow: {
        height,
        overflowY: "scroll"
      },
      body: {
        padding: "16px 0 6px 16px"
      },
      clear: {
        clear: "both"
      }
    }
  }, passedStyles));
  var handleChange = function handleChange2(data2, e4) {
    return onChange({ hex: data2, source: "hex" }, e4);
  };
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "swatches-picker " + className },
    Cn.createElement(
      Raised_default,
      null,
      Cn.createElement(
        "div",
        { style: styles2.overflow },
        Cn.createElement(
          "div",
          { style: styles2.body },
          map_default(colors2, function(group) {
            return Cn.createElement(SwatchesGroup_default, {
              key: group.toString(),
              group,
              active: hex,
              onClick: handleChange,
              onSwatchHover
            });
          }),
          Cn.createElement("div", { style: styles2.clear })
        )
      )
    )
  );
};
Swatches.propTypes = {
  width: import_prop_types12.default.oneOfType([import_prop_types12.default.string, import_prop_types12.default.number]),
  height: import_prop_types12.default.oneOfType([import_prop_types12.default.string, import_prop_types12.default.number]),
  colors: import_prop_types12.default.arrayOf(import_prop_types12.default.arrayOf(import_prop_types12.default.string)),
  styles: import_prop_types12.default.object
};
Swatches.defaultProps = {
  width: 320,
  height: 240,
  colors: [[red["900"], red["700"], red["500"], red["300"], red["100"]], [pink["900"], pink["700"], pink["500"], pink["300"], pink["100"]], [purple["900"], purple["700"], purple["500"], purple["300"], purple["100"]], [deepPurple["900"], deepPurple["700"], deepPurple["500"], deepPurple["300"], deepPurple["100"]], [indigo["900"], indigo["700"], indigo["500"], indigo["300"], indigo["100"]], [blue["900"], blue["700"], blue["500"], blue["300"], blue["100"]], [lightBlue["900"], lightBlue["700"], lightBlue["500"], lightBlue["300"], lightBlue["100"]], [cyan["900"], cyan["700"], cyan["500"], cyan["300"], cyan["100"]], [teal["900"], teal["700"], teal["500"], teal["300"], teal["100"]], ["#194D33", green["700"], green["500"], green["300"], green["100"]], [lightGreen["900"], lightGreen["700"], lightGreen["500"], lightGreen["300"], lightGreen["100"]], [lime["900"], lime["700"], lime["500"], lime["300"], lime["100"]], [yellow["900"], yellow["700"], yellow["500"], yellow["300"], yellow["100"]], [amber["900"], amber["700"], amber["500"], amber["300"], amber["100"]], [orange["900"], orange["700"], orange["500"], orange["300"], orange["100"]], [deepOrange["900"], deepOrange["700"], deepOrange["500"], deepOrange["300"], deepOrange["100"]], [brown["900"], brown["700"], brown["500"], brown["300"], brown["100"]], [blueGrey["900"], blueGrey["700"], blueGrey["500"], blueGrey["300"], blueGrey["100"]], ["#000000", "#525252", "#969696", "#D9D9D9", "#FFFFFF"]],
  styles: {}
};
var Swatches_default = ColorWrap_default(Swatches);

// node_modules/react-color/es/components/twitter/Twitter.js
init_compat_module();
var import_prop_types13 = __toESM(require_prop_types());
var import_reactcss42 = __toESM(require_lib());
var Twitter = function Twitter2(_ref) {
  var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, hex = _ref.hex, colors2 = _ref.colors, width = _ref.width, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss42.default)(merge_default({
    "default": {
      card: {
        width,
        background: "#fff",
        border: "0 solid rgba(0,0,0,0.25)",
        boxShadow: "0 1px 4px rgba(0,0,0,0.25)",
        borderRadius: "4px",
        position: "relative"
      },
      body: {
        padding: "15px 9px 9px 15px"
      },
      label: {
        fontSize: "18px",
        color: "#fff"
      },
      triangle: {
        width: "0px",
        height: "0px",
        borderStyle: "solid",
        borderWidth: "0 9px 10px 9px",
        borderColor: "transparent transparent #fff transparent",
        position: "absolute"
      },
      triangleShadow: {
        width: "0px",
        height: "0px",
        borderStyle: "solid",
        borderWidth: "0 9px 10px 9px",
        borderColor: "transparent transparent rgba(0,0,0,.1) transparent",
        position: "absolute"
      },
      hash: {
        background: "#F0F0F0",
        height: "30px",
        width: "30px",
        borderRadius: "4px 0 0 4px",
        float: "left",
        color: "#98A1A4",
        display: "flex",
        alignItems: "center",
        justifyContent: "center"
      },
      input: {
        width: "100px",
        fontSize: "14px",
        color: "#666",
        border: "0px",
        outline: "none",
        height: "28px",
        boxShadow: "inset 0 0 0 1px #F0F0F0",
        boxSizing: "content-box",
        borderRadius: "0 4px 4px 0",
        float: "left",
        paddingLeft: "8px"
      },
      swatch: {
        width: "30px",
        height: "30px",
        float: "left",
        borderRadius: "4px",
        margin: "0 6px 6px 0"
      },
      clear: {
        clear: "both"
      }
    },
    "hide-triangle": {
      triangle: {
        display: "none"
      },
      triangleShadow: {
        display: "none"
      }
    },
    "top-left-triangle": {
      triangle: {
        top: "-10px",
        left: "12px"
      },
      triangleShadow: {
        top: "-11px",
        left: "12px"
      }
    },
    "top-right-triangle": {
      triangle: {
        top: "-10px",
        right: "12px"
      },
      triangleShadow: {
        top: "-11px",
        right: "12px"
      }
    }
  }, passedStyles), {
    "hide-triangle": triangle === "hide",
    "top-left-triangle": triangle === "top-left",
    "top-right-triangle": triangle === "top-right"
  });
  var handleChange = function handleChange2(hexcode, e4) {
    isValidHex(hexcode) && onChange({
      hex: hexcode,
      source: "hex"
    }, e4);
  };
  return Cn.createElement(
    "div",
    { style: styles2.card, className: "twitter-picker " + className },
    Cn.createElement("div", { style: styles2.triangleShadow }),
    Cn.createElement("div", { style: styles2.triangle }),
    Cn.createElement(
      "div",
      { style: styles2.body },
      map_default(colors2, function(c4, i4) {
        return Cn.createElement(Swatch_default, {
          key: i4,
          color: c4,
          hex: c4,
          style: styles2.swatch,
          onClick: handleChange,
          onHover: onSwatchHover,
          focusStyle: {
            boxShadow: "0 0 4px " + c4
          }
        });
      }),
      Cn.createElement(
        "div",
        { style: styles2.hash },
        "#"
      ),
      Cn.createElement(EditableInput_default, {
        label: null,
        style: { input: styles2.input },
        value: hex.replace("#", ""),
        onChange: handleChange
      }),
      Cn.createElement("div", { style: styles2.clear })
    )
  );
};
Twitter.propTypes = {
  width: import_prop_types13.default.oneOfType([import_prop_types13.default.string, import_prop_types13.default.number]),
  triangle: import_prop_types13.default.oneOf(["hide", "top-left", "top-right"]),
  colors: import_prop_types13.default.arrayOf(import_prop_types13.default.string),
  styles: import_prop_types13.default.object
};
Twitter.defaultProps = {
  width: 276,
  colors: ["#FF6900", "#FCB900", "#7BDCB5", "#00D084", "#8ED1FC", "#0693E3", "#ABB8C3", "#EB144C", "#F78DA7", "#9900EF"],
  triangle: "top-left",
  styles: {}
};
var Twitter_default = ColorWrap_default(Twitter);

// node_modules/react-color/es/components/google/Google.js
init_compat_module();
var import_prop_types16 = __toESM(require_prop_types());
var import_reactcss46 = __toESM(require_lib());

// node_modules/react-color/es/components/google/GooglePointerCircle.js
init_compat_module();
var import_reactcss43 = __toESM(require_lib());
var import_prop_types14 = __toESM(require_prop_types());
var GooglePointerCircle = function GooglePointerCircle2(props2) {
  var styles2 = (0, import_reactcss43.default)({
    "default": {
      picker: {
        width: "20px",
        height: "20px",
        borderRadius: "22px",
        border: "2px #fff solid",
        transform: "translate(-12px, -13px)",
        background: "hsl(" + Math.round(props2.hsl.h) + ", " + Math.round(props2.hsl.s * 100) + "%, " + Math.round(props2.hsl.l * 100) + "%)"
      }
    }
  });
  return Cn.createElement("div", { style: styles2.picker });
};
GooglePointerCircle.propTypes = {
  hsl: import_prop_types14.default.shape({
    h: import_prop_types14.default.number,
    s: import_prop_types14.default.number,
    l: import_prop_types14.default.number,
    a: import_prop_types14.default.number
  })
};
GooglePointerCircle.defaultProps = {
  hsl: { a: 1, h: 249.94, l: 0.2, s: 0.5 }
};
var GooglePointerCircle_default = GooglePointerCircle;

// node_modules/react-color/es/components/google/GooglePointer.js
init_compat_module();
var import_reactcss44 = __toESM(require_lib());
var import_prop_types15 = __toESM(require_prop_types());
var GooglePointer = function GooglePointer2(props2) {
  var styles2 = (0, import_reactcss44.default)({
    "default": {
      picker: {
        width: "20px",
        height: "20px",
        borderRadius: "22px",
        transform: "translate(-10px, -7px)",
        background: "hsl(" + Math.round(props2.hsl.h) + ", 100%, 50%)",
        border: "2px white solid"
      }
    }
  });
  return Cn.createElement("div", { style: styles2.picker });
};
GooglePointer.propTypes = {
  hsl: import_prop_types15.default.shape({
    h: import_prop_types15.default.number,
    s: import_prop_types15.default.number,
    l: import_prop_types15.default.number,
    a: import_prop_types15.default.number
  })
};
GooglePointer.defaultProps = {
  hsl: { a: 1, h: 249.94, l: 0.2, s: 0.5 }
};
var GooglePointer_default = GooglePointer;

// node_modules/react-color/es/components/google/GoogleFields.js
init_compat_module();
var import_reactcss45 = __toESM(require_lib());
var GoogleFields = function GoogleFields2(_ref) {
  var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, hsv = _ref.hsv;
  var handleChange = function handleChange2(data2, e4) {
    if (data2.hex) {
      isValidHex(data2.hex) && onChange({
        hex: data2.hex,
        source: "hex"
      }, e4);
    } else if (data2.rgb) {
      var values = data2.rgb.split(",");
      isvalidColorString(data2.rgb, "rgb") && onChange({
        r: values[0],
        g: values[1],
        b: values[2],
        a: 1,
        source: "rgb"
      }, e4);
    } else if (data2.hsv) {
      var _values = data2.hsv.split(",");
      if (isvalidColorString(data2.hsv, "hsv")) {
        _values[2] = _values[2].replace("%", "");
        _values[1] = _values[1].replace("%", "");
        _values[0] = _values[0].replace("\xB0", "");
        if (_values[1] == 1) {
          _values[1] = 0.01;
        } else if (_values[2] == 1) {
          _values[2] = 0.01;
        }
        onChange({
          h: Number(_values[0]),
          s: Number(_values[1]),
          v: Number(_values[2]),
          source: "hsv"
        }, e4);
      }
    } else if (data2.hsl) {
      var _values2 = data2.hsl.split(",");
      if (isvalidColorString(data2.hsl, "hsl")) {
        _values2[2] = _values2[2].replace("%", "");
        _values2[1] = _values2[1].replace("%", "");
        _values2[0] = _values2[0].replace("\xB0", "");
        if (hsvValue[1] == 1) {
          hsvValue[1] = 0.01;
        } else if (hsvValue[2] == 1) {
          hsvValue[2] = 0.01;
        }
        onChange({
          h: Number(_values2[0]),
          s: Number(_values2[1]),
          v: Number(_values2[2]),
          source: "hsl"
        }, e4);
      }
    }
  };
  var styles2 = (0, import_reactcss45.default)({
    "default": {
      wrap: {
        display: "flex",
        height: "100px",
        marginTop: "4px"
      },
      fields: {
        width: "100%"
      },
      column: {
        paddingTop: "10px",
        display: "flex",
        justifyContent: "space-between"
      },
      double: {
        padding: "0px 4.4px",
        boxSizing: "border-box"
      },
      input: {
        width: "100%",
        height: "38px",
        boxSizing: "border-box",
        padding: "4px 10% 3px",
        textAlign: "center",
        border: "1px solid #dadce0",
        fontSize: "11px",
        textTransform: "lowercase",
        borderRadius: "5px",
        outline: "none",
        fontFamily: "Roboto,Arial,sans-serif"
      },
      input2: {
        height: "38px",
        width: "100%",
        border: "1px solid #dadce0",
        boxSizing: "border-box",
        fontSize: "11px",
        textTransform: "lowercase",
        borderRadius: "5px",
        outline: "none",
        paddingLeft: "10px",
        fontFamily: "Roboto,Arial,sans-serif"
      },
      label: {
        textAlign: "center",
        fontSize: "12px",
        background: "#fff",
        position: "absolute",
        textTransform: "uppercase",
        color: "#3c4043",
        width: "35px",
        top: "-6px",
        left: "0",
        right: "0",
        marginLeft: "auto",
        marginRight: "auto",
        fontFamily: "Roboto,Arial,sans-serif"
      },
      label2: {
        left: "10px",
        textAlign: "center",
        fontSize: "12px",
        background: "#fff",
        position: "absolute",
        textTransform: "uppercase",
        color: "#3c4043",
        width: "32px",
        top: "-6px",
        fontFamily: "Roboto,Arial,sans-serif"
      },
      single: {
        flexGrow: "1",
        margin: "0px 4.4px"
      }
    }
  });
  var rgbValue = rgb.r + ", " + rgb.g + ", " + rgb.b;
  var hslValue = Math.round(hsl.h) + "\xB0, " + Math.round(hsl.s * 100) + "%, " + Math.round(hsl.l * 100) + "%";
  var hsvValue = Math.round(hsv.h) + "\xB0, " + Math.round(hsv.s * 100) + "%, " + Math.round(hsv.v * 100) + "%";
  return Cn.createElement(
    "div",
    { style: styles2.wrap, className: "flexbox-fix" },
    Cn.createElement(
      "div",
      { style: styles2.fields },
      Cn.createElement(
        "div",
        { style: styles2.double },
        Cn.createElement(EditableInput_default, {
          style: { input: styles2.input, label: styles2.label },
          label: "hex",
          value: hex,
          onChange: handleChange
        })
      ),
      Cn.createElement(
        "div",
        { style: styles2.column },
        Cn.createElement(
          "div",
          { style: styles2.single },
          Cn.createElement(EditableInput_default, {
            style: { input: styles2.input2, label: styles2.label2 },
            label: "rgb",
            value: rgbValue,
            onChange: handleChange
          })
        ),
        Cn.createElement(
          "div",
          { style: styles2.single },
          Cn.createElement(EditableInput_default, {
            style: { input: styles2.input2, label: styles2.label2 },
            label: "hsv",
            value: hsvValue,
            onChange: handleChange
          })
        ),
        Cn.createElement(
          "div",
          { style: styles2.single },
          Cn.createElement(EditableInput_default, {
            style: { input: styles2.input2, label: styles2.label2 },
            label: "hsl",
            value: hslValue,
            onChange: handleChange
          })
        )
      )
    )
  );
};
var GoogleFields_default = GoogleFields;

// node_modules/react-color/es/components/google/Google.js
var Google = function Google2(_ref) {
  var width = _ref.width, onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hsv = _ref.hsv, hex = _ref.hex, header = _ref.header, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles2 = (0, import_reactcss46.default)(merge_default({
    "default": {
      picker: {
        width,
        background: "#fff",
        border: "1px solid #dfe1e5",
        boxSizing: "initial",
        display: "flex",
        flexWrap: "wrap",
        borderRadius: "8px 8px 0px 0px"
      },
      head: {
        height: "57px",
        width: "100%",
        paddingTop: "16px",
        paddingBottom: "16px",
        paddingLeft: "16px",
        fontSize: "20px",
        boxSizing: "border-box",
        fontFamily: "Roboto-Regular,HelveticaNeue,Arial,sans-serif"
      },
      saturation: {
        width: "70%",
        padding: "0px",
        position: "relative",
        overflow: "hidden"
      },
      swatch: {
        width: "30%",
        height: "228px",
        padding: "0px",
        background: "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", 1)",
        position: "relative",
        overflow: "hidden"
      },
      body: {
        margin: "auto",
        width: "95%"
      },
      controls: {
        display: "flex",
        boxSizing: "border-box",
        height: "52px",
        paddingTop: "22px"
      },
      color: {
        width: "32px"
      },
      hue: {
        height: "8px",
        position: "relative",
        margin: "0px 16px 0px 16px",
        width: "100%"
      },
      Hue: {
        radius: "2px"
      }
    }
  }, passedStyles));
  return Cn.createElement(
    "div",
    { style: styles2.picker, className: "google-picker " + className },
    Cn.createElement(
      "div",
      { style: styles2.head },
      header
    ),
    Cn.createElement("div", { style: styles2.swatch }),
    Cn.createElement(
      "div",
      { style: styles2.saturation },
      Cn.createElement(Saturation_default, {
        hsl,
        hsv,
        pointer: GooglePointerCircle_default,
        onChange
      })
    ),
    Cn.createElement(
      "div",
      { style: styles2.body },
      Cn.createElement(
        "div",
        { style: styles2.controls, className: "flexbox-fix" },
        Cn.createElement(
          "div",
          { style: styles2.hue },
          Cn.createElement(Hue_default, {
            style: styles2.Hue,
            hsl,
            radius: "4px",
            pointer: GooglePointer_default,
            onChange
          })
        )
      ),
      Cn.createElement(GoogleFields_default, {
        rgb,
        hsl,
        hex,
        hsv,
        onChange
      })
    )
  );
};
Google.propTypes = {
  width: import_prop_types16.default.oneOfType([import_prop_types16.default.string, import_prop_types16.default.number]),
  styles: import_prop_types16.default.object,
  header: import_prop_types16.default.string
};
Google.defaultProps = {
  width: 652,
  styles: {},
  header: "Color picker"
};
var Google_default = ColorWrap_default(Google);

// src/components/ui/menus/colorPickerMenu.tsx
var ColorPicker = (props2) => {
  const [value, setValue] = h2(props2.color);
  const loaded = _2(true);
  return /* @__PURE__ */ Cn.createElement(Sketch_default, {
    color: value,
    onChangeComplete: (cr) => {
      if (loaded.current) {
        setValue(cr.hex);
        props2.saveValue(cr.hex);
        props2.hide();
        loaded.current = false;
      }
    }
  });
};
var showColorPickerMenu = (point, value, setValue) => {
  const menu = new import_obsidian40.Menu();
  menu.dom.toggleClass("mk-menu", true);
  menu.setUseNativeMenu(false);
  const frag = document.createDocumentFragment();
  const div = frag.createEl("div");
  div.addEventListener("click", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mousedown", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("mouseup", (e4) => {
    e4.stopImmediatePropagation();
  });
  div.addEventListener("keydown", (e4) => {
  });
  const root2 = createRoot(div);
  root2.render(
    /* @__PURE__ */ Cn.createElement(ColorPicker, {
      color: value,
      saveValue: setValue,
      hide: () => menu.hide()
    })
  );
  menu.addItem((item) => {
    item.setTitle(frag);
  });
  const keys2 = [...menu.scope.keys];
  for (let i4 = 0; i4 < keys2.length; i4++) {
    if (keys2[i4].key != "Escape") {
      menu.scope.unregister(keys2[i4]);
    }
  }
  menu.showAtPosition(point);
  return menu;
};

// src/components/Space/Contexts/DataTypeView/ColorCell.tsx
init_compat_module();
var ColorCell = (props2) => {
  const showMenu = (e4) => {
    const handleChangeComplete = (color) => {
      props2.saveValue(color);
    };
    const offset2 = e4.target.getBoundingClientRect();
    showColorPickerMenu(
      { x: offset2.left, y: offset2.top + 30 },
      props2.initialValue,
      handleChangeComplete
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-setter-color",
    onClick: (e4) => showMenu(e4),
    style: {
      backgroundColor: props2.initialValue,
      width: 30,
      height: 30
    }
  }));
};

// src/components/Space/Contexts/DataTypeView/IconCell.tsx
init_compat_module();
var IconCell = (props2) => {
  const value = F2(
    () => {
      var _a2;
      return props2.multi ? (_a2 = parseMultiString(props2.initialValue)) != null ? _a2 : [] : [props2.initialValue];
    },
    [props2.initialValue]
  );
  const ref2 = _2(null);
  p2(() => {
    var _a2;
    if (props2.editMode == 2) {
      (_a2 = ref2 == null ? void 0 : ref2.current) == null ? void 0 : _a2.focus();
    }
  }, [props2.editMode]);
  const triggerStickerMenu = (e4) => {
    e4.stopPropagation();
    const vaultChangeModal = new stickerModal(
      props2.plugin.app,
      props2.plugin,
      (emoji) => props2.saveValue(emoji)
    );
    vaultChangeModal.open();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-icon"
  }, value.map((v3, i4) => /* @__PURE__ */ Cn.createElement("button", {
    key: i4,
    "aria-label": i18n_default.buttons.changeIcon,
    dangerouslySetInnerHTML: {
      __html: stickerFromString(v3, props2.plugin)
    },
    onClick: (e4) => triggerStickerMenu(e4)
  })));
};

// src/components/Space/Contexts/DataTypeView/ObjectCell.tsx
init_compat_module();
var ObjectCell = (props2) => {
  const { initialValue } = props2;
  const [value, setValue] = Cn.useState(safelyParseJSON(initialValue));
  const saveValue = (value2) => {
    props2.saveValue(JSON.stringify(value2));
  };
  const newKey = (key2) => {
    if (key2)
      saveValue({
        ...value,
        [key2]: ""
      });
  };
  const saveKey = (key2, newKey2) => {
    if (key2 != newKey2)
      saveValue({
        ...value,
        [newKey2]: value[key2],
        [key2]: void 0
      });
  };
  const saveVal = (key2, val) => {
    saveValue({
      ...value,
      [key2]: val
    });
  };
  Cn.useEffect(() => {
    setValue(safelyParseJSON(initialValue));
  }, [initialValue]);
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-object"
  }, Object.keys(value).map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-cell-object-row"
  }, /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    type: "text",
    value: f4,
    onBlur: (e4) => saveKey(f4, e4.target.value)
  }), /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    type: "text",
    value: value[f4],
    onBlur: (e4) => saveVal(f4, e4.target.value)
  }))), /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    type: "text",
    value: "",
    onBlur: (e4) => newKey(e4.target.value)
  }));
};

// src/components/Space/Contexts/DataTypeView/PreviewCell.tsx
init_compat_module();
var PreviewCell = (props2) => {
  var _a2;
  const [vaultItem, setVaultItem] = h2(null);
  const previewImage = F2(() => {
    if (vaultItem == null ? void 0 : vaultItem.banner)
      return vaultItem.banner;
    if (props2.initialValue)
      return props2.initialValue;
    if (!props2.row || !props2.columns)
      return null;
    const imageCol = props2.columns.find((f4) => f4.type == "image");
    if (!imageCol)
      return null;
    return props2.row[imageCol.name + imageCol.table];
  }, [props2.row, props2.columns]);
  const previewFile = F2(() => {
    return getAbstractFileAtPath(app, previewImage);
  }, [previewImage]);
  const loadIcon = () => {
    setVaultItem(props2.plugin.index.filesIndex.get(props2.file));
  };
  p2(() => {
    loadIcon();
    window.addEventListener(eventTypes.spacesChange, loadIcon);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, loadIcon);
    };
  }, [props2.file]);
  return previewImage ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-preview",
    style: {
      backgroundSize: "cover",
      backgroundPositionY: "50%",
      backgroundImage: `url(${previewFile ? app.vault.getResourcePath(previewFile) : previewImage})`
    }
  }) : /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-preview",
    style: ((_a2 = vaultItem == null ? void 0 : vaultItem.color) == null ? void 0 : _a2.length) > 0 ? {
      "--label-color": `${vaultItem.color}`,
      "--icon-color": `#ffffff`
    } : {
      "--label-color": `var(--background-secondary-alt)`,
      "--icon-color": `var(--text-muted)`
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-icon",
    dangerouslySetInnerHTML: (vaultItem == null ? void 0 : vaultItem.sticker) ? { __html: stickerFromString(vaultItem.sticker, props2.plugin) } : (vaultItem == null ? void 0 : vaultItem.isFolder) ? { __html: uiIconSet["mk-ui-folder"] } : { __html: uiIconSet["mk-ui-file"] }
  }));
};

// src/components/Space/Contexts/DataTypeView/SpaceCell.tsx
init_compat_module();
var SpaceCell = (props2) => {
  const path = F2(
    () => uriByString(props2.initialValue),
    [props2.initialValue]
  );
  const openLink = async () => {
    if (path) {
      openPath(props2.plugin, path);
    }
  };
  const menuRef = _2(null);
  const ref2 = _2(null);
  const menuProps = () => ({
    multi: false,
    plugin: props2.plugin,
    editable: true,
    value: [props2.initialValue],
    options: props2.plugin.index.allSpaces().map((f4) => ({
      name: f4.name,
      value: f4.name,
      description: f4.name
    })),
    saveOptions: (_12, value) => props2.saveValue(value[0]),
    removeOption: () => {
    },
    placeholder: i18n_default.labels.optionItemSelectPlaceholder,
    searchable: true,
    showAll: true,
    onHide: () => props2.setEditMode(null)
  });
  const showMenu = () => {
    const offset2 = ref2.current.getBoundingClientRect();
    menuRef.current = showSelectMenu(
      { x: offset2.left - 4, y: offset2.bottom - 4 },
      menuProps()
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-cell-option-item"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: () => openLink()
  }, path.path), /* @__PURE__ */ Cn.createElement("span", null), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => showMenu(),
    className: "mk-cell-option-select mk-icon-xxsmall mk-icon-rotated",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse-sm"]
    }
  })));
};

// src/components/Space/Contexts/DataTypeView/DataTypeView.tsx
var DataTypeView = (props2) => {
  const { initialValue, column, file } = props2;
  const saveValue = (value) => {
    props2.updateValue(value);
  };
  const saveFieldValue = (fieldValue, value) => {
    props2.updateFieldValue(fieldValue, value);
  };
  const viewProps = {
    initialValue,
    saveValue,
    editMode: props2.editable == true ? 3 : 0,
    setEditMode: () => {
    },
    plugin: props2.plugin,
    propertyValue: column.value
  };
  const fieldType = fieldTypeForType(column.type);
  if (!fieldType) {
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
  }
  if (fieldType.type == "preview") {
    return /* @__PURE__ */ Cn.createElement(PreviewCell, {
      ...viewProps,
      file,
      row: props2.row,
      columns: props2.cols,
      plugin: props2.plugin
    });
  } else if (fieldType.type == "file") {
    return /* @__PURE__ */ Cn.createElement(FileCell, {
      isFolder: false,
      ...viewProps,
      multi: fieldType.multiType == column.type,
      openFlow: props2.openFlow
    });
  } else if (fieldType.type == "icon") {
    return /* @__PURE__ */ Cn.createElement(IconCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type
    });
  } else if (fieldType.type == "boolean") {
    return /* @__PURE__ */ Cn.createElement(BooleanCell, {
      ...viewProps,
      column
    });
  } else if (fieldType.type == "option") {
    return /* @__PURE__ */ Cn.createElement(OptionCell, {
      ...viewProps,
      options: column.value,
      multi: fieldType.multiType == column.type,
      saveOptions: saveFieldValue
    });
  } else if (fieldType.type == "date") {
    return /* @__PURE__ */ Cn.createElement(DateCell, {
      ...viewProps
    });
  } else if (fieldType.type == "context") {
    return /* @__PURE__ */ Cn.createElement(ContextCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      contextTable: props2.contextTable[column.value],
      contextTag: column.value
    });
  } else if (fieldType.type == "fileprop") {
    return /* @__PURE__ */ Cn.createElement(LookUpCell, {
      ...viewProps,
      file
    });
  } else if (fieldType.type == "number") {
    return /* @__PURE__ */ Cn.createElement(NumberCell, {
      ...viewProps
    });
  } else if (fieldType.type == "link") {
    return /* @__PURE__ */ Cn.createElement(LinkCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type,
      file
    });
  } else if (fieldType.type == "tag") {
    return /* @__PURE__ */ Cn.createElement(TagCell, {
      ...viewProps,
      multi: fieldType.multiType == column.type
    });
  } else if (fieldType.type == "image") {
    return /* @__PURE__ */ Cn.createElement(ImageCell, {
      ...viewProps
    });
  } else if (fieldType.type == "object") {
    return /* @__PURE__ */ Cn.createElement(ObjectCell, {
      ...viewProps
    });
  } else if (fieldType.type == "color") {
    return /* @__PURE__ */ Cn.createElement(ColorCell, {
      ...viewProps
    });
  } else if (fieldType.type == "SpaceCell") {
    return /* @__PURE__ */ Cn.createElement(SpaceCell, {
      ...viewProps
    });
  }
  return /* @__PURE__ */ Cn.createElement(TextCell, {
    ...viewProps
  });
};

// src/components/FileContexts/FileContextList.tsx
init_hooks_module();
init_compat_module();
var FileContextList = (props2) => {
  const { path } = props2;
  const { spaceInfo } = q2(SpaceContext);
  const { tableData } = q2(ContextMDBContext);
  const {
    newColumn,
    cols,
    saveColumn,
    hideColumn,
    delColumn,
    sortColumn,
    updateFieldValue,
    updateValue: updateValue2,
    loadContextFields,
    predicate
  } = q2(ContextEditorContext);
  const [collapsed, setCollapsed] = h2(
    !props2.plugin.settings.inlineContextSectionsExpanded
  );
  const fileContext = F2(() => {
    return tableData ? {
      cols: tableData.cols.filter(
        (f4) => f4.name != FilePropertyName && !(f4.type == "fileprop" && (f4.value.startsWith(FilePropertyName) || f4.value.indexOf(".") == -1)) && f4.hidden != "true" && f4.type != "preview"
      ),
      data: tableData.rows.find((r3) => r3.File == path),
      dataIndex: tableData.rows.findIndex((r3) => r3.File == path)
    } : null;
  }, [tableData, path]);
  const saveField = (field, oldField) => {
    if (field.name.length > 0) {
      if (field.name != oldField.name || field.type != oldField.type || field.value != oldField.value || field.attrs != oldField.attrs) {
        const saveResult = saveColumn(field, oldField);
      }
    }
  };
  const saveContext = (field, oldField, value) => {
    const newContext = value[0];
    const newField = {
      ...field,
      value: newContext != null ? newContext : ""
    };
    saveColumn(newField, oldField);
  };
  const showMenu = (e4, field) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = optionValuesForColumn(field.name, tableData);
    showPropertyMenu({
      plugin: props2.plugin,
      position: { x: offset2.left, y: offset2.top + 30 },
      editable: true,
      options,
      field,
      fields: cols,
      contextPath: spaceInfo.path,
      saveField: (newField) => saveField(newField, field),
      saveContext: (newField, val) => saveContext(newField, field, val),
      hide: hideColumn,
      deleteColumn: delColumn,
      sortColumn,
      hidden: predicate.colsHidden.includes(field.name + field.table)
    });
  };
  return fileContext && fileContext.cols.length > 0 && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-section"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-title",
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    }
  }, /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse"]
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-icon-xsmall`,
    dangerouslySetInnerHTML: {
      __html: iconForSpace(spaceInfo)
    }
  }), contextDisplayName(spaceInfo)), !collapsed ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fileContext.cols.map((f4, i4) => {
    var _a2, _b2, _c2;
    return /* @__PURE__ */ Cn.createElement("div", {
      key: i4,
      className: "mk-file-context-row"
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-file-context-field",
      onClick: (e4) => showMenu(e4, { ...f4, table: "" })
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-file-context-field-icon",
      dangerouslySetInnerHTML: {
        __html: stickerFromString(
          (_a2 = fieldTypeForType(f4.type)) == null ? void 0 : _a2.icon,
          props2.plugin
        )
      }
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-file-context-field-key"
    }, f4.name)), /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-file-context-value"
    }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
      plugin: props2.plugin,
      initialValue: (_b2 = fileContext.data) == null ? void 0 : _b2[f4.name],
      file: (_c2 = fileContext.data) == null ? void 0 : _c2[FilePropertyName],
      column: { ...f4, table: "" },
      editable: !spaceInfo.readOnly,
      updateValue: (v3) => {
        var _a3;
        return updateValue2(
          f4.name,
          v3,
          "",
          fileContext.dataIndex,
          (_a3 = fileContext.data) == null ? void 0 : _a3[FilePropertyName]
        );
      },
      updateFieldValue: (fv, v3) => {
        var _a3;
        return updateFieldValue(
          f4.name,
          fv,
          v3,
          "",
          fileContext.dataIndex,
          (_a3 = fileContext.data) == null ? void 0 : _a3[FilePropertyName]
        );
      },
      contextTable: {}
    })));
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)));
};

// src/components/ui/menus/fmMenu.tsx
var import_obsidian41 = require("obsidian");
var showFMMenu = (plugin, position, property2, deleteProperty, syncProperty, renameProperty, changeType) => {
  const menu = new import_obsidian41.Menu();
  menu.setUseNativeMenu(false);
  menu.addItem((menuItem) => {
    var _a2;
    inputMenuItem(
      menuItem,
      (_a2 = property2 == null ? void 0 : property2.name) != null ? _a2 : "",
      (value) => renameProperty(property2.name, value)
    );
    menuItem.setIcon("type");
  });
  menu.addSeparator();
  menu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.changePropertyType);
    menuItem.onClick(() => {
      changeType(position, property2.name);
    });
    menuItem.setIcon("list");
  });
  if (property2.type != "object")
    menu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.syncToContext);
      menuItem.onClick(() => {
        syncProperty(property2);
      });
      menuItem.setIcon("sync");
    });
  menu.addItem((menuItem) => {
    menuItem.setTitle(i18n_default.menu.deleteProperty);
    menuItem.onClick(() => {
      deleteProperty(property2);
    });
    menuItem.setIcon("trash-2");
  });
  menu.addSeparator();
  menu.showAtPosition(position);
  return menu;
};

// src/components/ui/modals/moveMetadataModal.tsx
var import_obsidian42 = require("obsidian");
init_compat_module();
var MovePropertyModal = class extends import_obsidian42.Modal {
  constructor(plugin, syncProperty, property2, file) {
    super(plugin.app);
    this.plugin = plugin;
    this.file = file;
    const closeButton = this.modalEl.querySelector(
      ".modal-close-button"
    );
    closeButton.style.display = "none";
    this.syncProperty = syncProperty;
    this.property = property2;
  }
  onOpen() {
    const { contentEl } = this;
    let headerText;
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    headerEl.innerHTML = i18n_default.labels.syncMetadata;
    const root2 = createRoot(contentEl);
    root2.render(
      /* @__PURE__ */ Cn.createElement(MovePropertyComponent, {
        plugin: this.plugin,
        syncProperty: this.syncProperty,
        close: () => this.close(),
        property: this.property,
        file: this.file
      })
    );
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var MovePropertyComponent = (props2) => {
  const { plugin } = props2;
  const [table, setTable] = h2("");
  const saveContexts = (_12, value) => {
    setTable(value[0]);
  };
  const showContextMenu = async (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const tags = allTagsForFile(props2.file);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: [
          { name: props2.file.parent.name, value: "" },
          ...tags.map((m5) => ({ name: m5, value: m5 }))
        ],
        saveOptions: saveContexts,
        placeholder: i18n_default.labels.tagItemSelectPlaceholder,
        searchable: false,
        showAll: true
      }
    );
  };
  const sync = () => {
    props2.syncProperty(props2.property, table);
    props2.close();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "modal-content"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item setting-item-heading"
  }, i18n_default.labels.syncProperties), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-info"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-name"
  }, i18n_default.labels.selectContext), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-description"
  }, i18n_default.descriptions.selectContext)), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item-control"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showContextMenu(e4)
  }, table == "" ? i18n_default.buttons.currentFolder : table))), /* @__PURE__ */ Cn.createElement("button", {
    style: { marginRight: 8 },
    onClick: () => sync()
  }, i18n_default.buttons.sync), /* @__PURE__ */ Cn.createElement("button", {
    onClick: () => props2.close()
  }, i18n_default.buttons.cancel));
};

// src/components/FileContexts/FrontmatterView.tsx
init_hooks_module();
init_compat_module();

// src/utils/obsidian/obsidian.ts
var corePluginEnabled = (app2, plugin) => app2.internalPlugins.getPluginById(plugin) ? true : false;

// src/components/FileContexts/FrontmatterView.tsx
var FrontmatterView = (props2) => {
  const { metadataPath, path } = props2;
  const [values, setValues] = h2({});
  const [cols, setCols] = h2([]);
  const [excludeKeys, setExcludeKeys] = h2([]);
  const refreshData = async () => {
    var _a2, _b2;
    const fileContexts = (_a2 = props2.plugin.index.spacesMap.get(path)) != null ? _a2 : /* @__PURE__ */ new Set();
    const columns = [...fileContexts].map(
      (f4) => {
        var _a3, _b3, _c2, _d2;
        return (_d2 = (_c2 = (_b3 = (_a3 = props2.plugin.index.contextsIndex.get(f4)) == null ? void 0 : _a3.tables) == null ? void 0 : _b3["files"]) == null ? void 0 : _c2.cols) != null ? _d2 : [];
      }
    ).reduce((p3, c4) => [...p3, ...c4], []);
    const newCols = [];
    const newValues = {};
    const types2 = guestimateTypes([metadataPath], props2.plugin, false);
    const fm = frontMatterForFile(getAbstractFileAtPath(app, metadataPath));
    const fmKeys = uniqCaseInsensitive(frontMatterKeys(fm)).filter(
      (f4) => !columns.some((g4) => g4.name == f4)
    );
    const cols2 = fmKeys.map((f4) => ({
      table: "",
      name: f4,
      schemaId: "",
      type: yamlTypeToMDBType(types2[f4])
    }));
    if (fm) {
      newCols.push(...cols2);
      Object.keys(fm).forEach((c4) => {
        newValues[c4] = parseFrontMatter(c4, fm[c4]);
      });
    }
    if (props2.plugin.dataViewAPI() && props2.plugin.settings.dataviewInlineContext) {
      const types3 = guestimateTypes([metadataPath], props2.plugin, true);
      const fm2 = frontMatterForFile(getAbstractFileAtPath(app, metadataPath));
      const fmKeys2 = uniqCaseInsensitive(frontMatterKeys(fm2));
      const dvValues = props2.plugin.dataViewAPI().page(metadataPath);
      const dvKeys = uniqCaseInsensitive(
        Object.keys(dvValues != null ? dvValues : {}).filter(
          (f4, i4, self2) => !self2.find(
            (g4, j4) => g4.toLowerCase().replace(/\s/g, "-") == f4.toLowerCase().replace(/\s/g, "-") && i4 > j4
          ) ? true : false
        ).filter((f4) => f4 != "file").filter((f4) => f4 != "tag" && f4 != "tags").filter((f4) => !fmKeys2.includes(f4)).filter((f4) => !columns.some((g4) => g4.name == f4))
      );
      const dvCols = dvKeys.map((f4) => ({
        table: "",
        name: f4,
        schemaId: "",
        type: yamlTypeToMDBType(types3[f4])
      }));
      const dv = dvKeys.reduce(
        (p3, c4) => ({
          ...p3,
          [c4]: parseDataview(c4, dvValues[c4])
        }),
        {}
      );
      newCols.push(...dvCols);
      Object.keys(dv).forEach((c4) => {
        newValues[c4] = parseDataview(c4, dvValues[c4]);
      });
    }
    setCols(
      newCols.filter((f4) => {
        var _a3;
        return !((_a3 = props2.excludeKeys) == null ? void 0 : _a3.some((g4) => g4 == f4.name));
      })
    );
    setExcludeKeys([
      ...columns.map((f4) => f4.name),
      ...(_b2 = props2.excludeKeys) != null ? _b2 : []
    ]);
    setValues(newValues);
  };
  p2(() => {
    refreshData();
  }, [path, props2.tags]);
  const mdbChanged = (evt) => {
    if (evt.detail.type == "context" && evt.detail.contextPath && props2.tags.find(
      (f4) => spaceFromTag(props2.plugin, f4).path == evt.detail.contextPath
    )) {
      refreshData();
    } else if (evt.detail.type == "file" && evt.detail.name == path) {
      refreshData();
    }
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, mdbChanged);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, mdbChanged);
    };
  }, [path, props2.tags]);
  const saveFMValue = (value, f4) => {
    saveFrontmatterValue(props2.plugin, metadataPath, f4.name, value, f4.type);
  };
  const deleteFMValue = (property2) => {
    deleteFrontmatterValue(props2.plugin, metadataPath, property2.name);
  };
  const saveMetadata = async (property2, table) => {
    const field = {
      ...property2,
      schemaId: "files"
    };
    let context;
    let tag;
    if (table == "") {
      context = spaceFromFolder(props2.plugin, props2.folder);
      tag = false;
    } else {
      context = spaceFromTag(props2.plugin, table);
      tag = true;
    }
    await insertContextColumn(props2.plugin, context, field);
    await updateContextValue(
      props2.plugin,
      context,
      path,
      field.name,
      values[field.name]
    );
  };
  const syncFMValue = (property2) => {
    const vaultChangeModal = new MovePropertyModal(
      props2.plugin,
      saveMetadata,
      property2,
      getAbstractFileAtPath(app, metadataPath)
    );
    vaultChangeModal.open();
  };
  const renameFMKey = (key2, name) => {
    renameFrontmatterKey(props2.plugin, metadataPath, key2, name);
  };
  const selectedType = (value, key2) => {
    changeFrontmatterType(props2.plugin, metadataPath, key2, value[0]);
  };
  const selectType = (p3, key2) => {
    showSelectMenu(p3, {
      plugin: props2.plugin,
      multi: false,
      editable: false,
      searchable: false,
      saveOptions: (_12, v3) => selectedType(v3, key2),
      value: [],
      showAll: true,
      options: fieldTypes.filter((f4) => f4.metadata).map((f4, i4) => ({
        id: i4 + 1,
        name: f4.label,
        value: f4.type,
        icon: ""
      }))
    });
  };
  const showMenu = (e4, property2) => {
    const offset2 = e4.target.getBoundingClientRect();
    showFMMenu(
      props2.plugin,
      { x: offset2.left, y: offset2.top + 30 },
      property2,
      deleteFMValue,
      syncFMValue,
      renameFMKey,
      selectType
    );
  };
  const propertiesPlugin = corePluginEnabled(app, "properties");
  return !propertiesPlugin ? cols.length > 0 ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-section"
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, cols.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-file-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-field",
    onClick: (e4) => showMenu(e4, f4)
  }, f4.name), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-value"
  }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
    plugin: props2.plugin,
    initialValue: values[f4.name],
    file: metadataPath,
    column: { ...f4, table: "" },
    editable: props2.editable,
    updateValue: (value) => saveFMValue(value, f4),
    updateFieldValue: (fieldValue, value) => saveFMValue(value, f4),
    contextTable: {}
  }))))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null) : excludeKeys.length > 0 ? /* @__PURE__ */ Cn.createElement("style", null, `${excludeKeys.map((f4) => `.metadata-property[data-property-key="${f4}"]`).join(", ")}
      {
        display: none;
      }`) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/components/FileContexts/InlineFileContext/NoteBannerView.tsx
var import_obsidian44 = require("obsidian");
init_compat_module();
var NoteBannerView = (props2) => {
  var _a2;
  const [banner, setBanner] = h2(null);
  p2(() => {
    if (props2.link) {
      let path = uriByString(props2.link);
      if (props2.path)
        path = uriByString(props2.link, props2.path.path);
      setBanner(path);
    } else {
      setBanner(null);
    }
  }, [props2.link]);
  const triggerBannerContextMenu = (e4) => {
    if (!props2.path || props2.path.type == "file")
      return;
    e4.preventDefault();
    const fileMenu = new import_obsidian44.Menu();
    fileMenu.addSeparator();
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.changeBanner);
      menuItem.setIcon("lucide-image");
      menuItem.onClick((ev) => {
        const vaultChangeModal = new imageModal(
          props2.plugin,
          props2.plugin.app,
          (image) => saveFrontmatterValue(
            props2.plugin,
            props2.path.path,
            props2.plugin.settings.fmKeyBanner,
            image,
            "image",
            true
          )
        );
        vaultChangeModal.open();
      });
    });
    fileMenu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.buttons.removeBanner);
      menuItem.setIcon("lucide-file-minus");
      menuItem.onClick((ev) => {
        deleteFrontmatterValue(
          props2.plugin,
          props2.path.path,
          props2.plugin.settings.fmKeyBanner
        );
      });
    });
    if (isMouseEvent(e4)) {
      fileMenu.showAtPosition({ x: e4.pageX, y: e4.pageY });
    } else {
      fileMenu.showAtPosition({
        x: e4.nativeEvent.locationX,
        y: e4.nativeEvent.locationY
      });
    }
    return false;
  };
  return banner ? /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-note-header`,
    onContextMenu: triggerBannerContextMenu
  }, banner.type == "file" ? /* @__PURE__ */ Cn.createElement("img", {
    src: app.vault.getResourcePath(
      getAbstractFileAtPath(app, banner.path)
    )
  }) : banner.type == "url" ? /* @__PURE__ */ Cn.createElement("img", {
    src: banner.path
  }) : banner.refType == "frame" ? /* @__PURE__ */ Cn.createElement(EmbedFrameView, {
    source: (_a2 = props2.path) == null ? void 0 : _a2.path,
    plugin: props2.plugin,
    path: banner
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/components/FileContexts/InlineFileContext/InlineFileContextView.tsx
var InlineFileContextView = (props2) => {
  var _a2, _b2, _c2;
  const { file } = props2;
  const folderPath = (_a2 = file == null ? void 0 : file.parent) == null ? void 0 : _a2.path;
  const { spaceInfo, contexts } = q2(SpaceContext);
  const getFileCache = (file2) => {
    if (!file2 || file2.path == "/")
      return null;
    const cache = props2.plugin.index.filesIndex.get(file2.path);
    if (!cache) {
      return props2.plugin.index.filesIndex.get(
        folderPathFromFolderNoteFile(props2.plugin.settings, tFileToAFile(file2))
      );
    }
    return cache;
  };
  const [fileCache, setFileCache] = h2(
    getFileCache(props2.file)
  );
  const metadataFilePath = F2(() => {
    if (!fileCache)
      return null;
    if (fileCache.isFolder && fileCache.folderNote) {
      return fileCache.folderNote.folderNotePath;
    }
    return fileCache.path;
  }, [fileCache]);
  const showHeader = props2.showHeader;
  const [collapsed, setCollapsed] = h2(
    !showHeader ? false : !props2.plugin.settings.inlineContextExpanded
  );
  const tags = (_b2 = fileCache == null ? void 0 : fileCache.tags) != null ? _b2 : [];
  const [spaces, setSpaces] = h2(
    spacesFromFileCache(fileCache, props2.plugin)
  );
  const banner = fileCache == null ? void 0 : fileCache.banner;
  p2(() => {
    props2.plugin.settings.inlineContextExpanded = !collapsed;
    props2.plugin.saveSettings();
  }, [collapsed]);
  const fileNameRef = _2(null);
  const refreshFile = () => {
    if (!file) {
      return;
    }
    const fileCache2 = getFileCache(file);
    setFileCache(fileCache2);
    setSpaces(spacesFromFileCache(fileCache2, props2.plugin));
  };
  const cacheChanged = (evt) => {
    var _a3;
    if (evt.detail.type == "file" && (evt.detail.name == (file == null ? void 0 : file.path) || evt.detail.name == ((_a3 = fileCache == null ? void 0 : fileCache.folderNote) == null ? void 0 : _a3.folderPath))) {
      refreshFile();
    }
    if (evt.detail.type == "space" && spaces.some((f4) => f4.path == evt.detail.name)) {
      refreshFile();
    }
  };
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, cacheChanged);
    refreshFile();
    return () => {
      window.removeEventListener(eventTypes.spacesChange, cacheChanged);
    };
  }, [file]);
  const changeCover = (e4) => {
    const vaultChangeModal = new imageModal(
      props2.plugin,
      props2.plugin.app,
      (image) => saveFrontmatterValue(
        props2.plugin,
        fileCache == null ? void 0 : fileCache.path,
        props2.plugin.settings.fmKeyBanner,
        image,
        "image",
        true
      )
    );
    vaultChangeModal.open();
  };
  const showContextMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const f4 = loadTags(props2.plugin);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        multi: false,
        editable: true,
        value: [],
        options: f4.map((m5) => ({ name: m5, value: m5 })),
        saveOptions: (_12, value) => addTag(value[0]),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true,
        plugin: props2.plugin
      }
    );
  };
  const addTag = (tag) => {
    if (file instanceof import_obsidian45.TFile && file.extension == "md")
      addTagToNote(tag, file);
  };
  const removeTag = (tag) => {
    if (file instanceof import_obsidian45.TFile && file.extension == "md")
      removeTagFromFile(tag, file);
  };
  const saveField = (source, field) => {
    if (source == "fm") {
      saveFrontmatterValue(
        props2.plugin,
        fileCache.path,
        field.name,
        "",
        field.type,
        true
      );
      return;
    }
    if (source == "") {
      insertContextColumn(
        props2.plugin,
        spaceInfoByPath(props2.plugin, fileCache.parent),
        field
      );
      return;
    }
    insertContextColumn(
      props2.plugin,
      spaceFromTag(props2.plugin, source),
      field
    );
  };
  const fileName = F2(
    () => {
      var _a3;
      return (_a3 = fileCache == null ? void 0 : fileCache.name) != null ? _a3 : fileNameToString(file == null ? void 0 : file.name);
    },
    [fileCache, file]
  );
  const newProperty = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    showNewPropertyMenu(
      props2.plugin,
      { x: offset2.left, y: offset2.top + 30 },
      tags,
      [],
      saveField,
      "files",
      folderPath,
      true
    );
  };
  const onBlur = (e4) => {
    const newValue = import_he.default.decode(e4.target.innerHTML);
    if (newValue != fileName) {
      if (props2.plugin.settings.spacesUseAlias) {
        saveFrontmatterValue(
          props2.plugin,
          fileCache.path,
          props2.plugin.settings.fmKeyAlias,
          newValue.trim(),
          "text",
          true
        );
      } else {
        renameFile(props2.plugin, file, newValue.trim());
      }
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    var _a3, _b3;
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      (_a3 = props2.editorView) == null ? void 0 : _a3.focus();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      (_b3 = props2.editorView) == null ? void 0 : _b3.focus();
      e4.preventDefault();
    }
  };
  y2(() => {
    var _a3;
    (_a3 = props2.editorView) == null ? void 0 : _a3.requestMeasure();
  }, []);
  p2(() => {
    var _a3;
    if (fileName == null ? void 0 : fileName.startsWith("Untitled")) {
      selectElementContents(fileNameRef.current);
    }
    const pasteEvent = (e4) => {
      e4.preventDefault();
      const text2 = e4.clipboardData.getData("text/plain");
      document.execCommand("insertText", false, text2);
    };
    (_a3 = fileNameRef.current) == null ? void 0 : _a3.addEventListener("paste", pasteEvent);
    return () => {
      var _a4;
      (_a4 = fileNameRef.current) == null ? void 0 : _a4.removeEventListener("paste", pasteEvent);
    };
  }, [fileNameRef, fileName]);
  const addContext = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const f4 = loadTags(props2.plugin).filter((f5) => f5 != spaceInfo.name);
    const addTag2 = async (tag) => {
      if (!spaceInfo)
        return;
      insertContextInSpace(props2.plugin, spaceInfo, tagToTagPath(tag));
    };
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: true,
        value: [],
        options: f4.map((m5) => ({ name: m5, value: m5 })),
        saveOptions: (_12, value) => addTag2(value[0]),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.showBanner && /* @__PURE__ */ Cn.createElement(NoteBannerView, {
    plugin: props2.plugin,
    link: banner,
    path: uriByString(props2.file.path)
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component"
  }, props2.showBanner && banner && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-spacer`,
    style: {
      "--header-height": ((platformIsMobile() ? 1 : 0) * 26 + 138 + (!props2.plugin.settings.spacesStickers || props2.plugin.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px"
    },
    onContextMenu: (e4) => e4.preventDefault()
  }), showHeader && /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-context-file ${props2.plugin.settings.inlineContextNameLayout == "horizontal" ? "mk-file-context-file-horizontal" : ""}`
  }, props2.plugin.settings.spacesStickers && fileCache ? /* @__PURE__ */ Cn.createElement(FileSticker, {
    plugin: props2.plugin,
    fileCache
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title",
    ref: fileNameRef,
    contentEditable: props2.editable,
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    dangerouslySetInnerHTML: {
      __html: fileName
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-collapse mk-icon-xsmall mk-fold ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse"]
    },
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    }
  })), !collapsed && props2.editable ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fileCache && /* @__PURE__ */ Cn.createElement(NoteSpacesBar, {
    path: fileCache == null ? void 0 : fileCache.path,
    plugin: props2.plugin,
    removeTag
  }), /* @__PURE__ */ Cn.createElement(ContextSelector, {
    plugin: props2.plugin
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-field-new"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => newProperty(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }), platformIsMobile() ? "Property" : "Property"), props2.cacheType == "space" && /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => addContext(e4)
  }, " ", /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-context"]
    }
  }), platformIsMobile() ? "Space" : "Context"), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => showContextMenu(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-tags"] }
  }), platformIsMobile() ? "Tag" : "Tag"), fileCache && /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => changeCover(e4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-make-image"]
    }
  }), platformIsMobile() ? "Cover" : "Cover"))) : /* @__PURE__ */ Cn.createElement("div", {
    style: { height: 16 }
  })), !collapsed && fileCache ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component"
  }, metadataFilePath ? /* @__PURE__ */ Cn.createElement(FrontmatterView, {
    plugin: props2.plugin,
    path: fileCache.path,
    metadataPath: metadataFilePath,
    folder: folderPath,
    tags,
    excludeKeys: (_c2 = props2.hiddenFields) != null ? _c2 : [],
    editable: props2.editable
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), spaces.map((space, i4) => /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
    key: i4,
    plugin: props2.plugin,
    space
  }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
    key: i4,
    plugin: props2.plugin,
    file: fileCache.path
  }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
    plugin: props2.plugin
  }, /* @__PURE__ */ Cn.createElement(FileContextList, {
    plugin: props2.plugin,
    path: fileCache.path,
    color: "var(--tag-background)"
  })))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/Space/SpaceComponent.tsx
init_compat_module();

// src/components/Space/Contexts/SpaceBodyView.tsx
init_compat_module();
init_compat_module();
var PLACEHOLDER_ID3 = "_placeholder";
var SpaceBodyView = (props2) => {
  const { frameSchema } = q2(FramesMDBContext);
  const {
    instance,
    root: root2,
    saveState,
    hoverNode,
    setHoverNode,
    dragNode,
    moveToRank,
    nodes,
    setDragNode,
    addNode,
    saveNodes,
    moveNodeFromSchema
  } = q2(FramesEditorContext);
  const activeRunID = _2(null);
  p2(
    () => () => {
      activeRunID.current = null;
    },
    []
  );
  const resetState = () => {
    setHoverNode(null);
    setDragNode(null);
  };
  const getDragLayer = () => {
    var _a2;
    if (dragNode === null) {
      return null;
    }
    const node = (_a2 = findParent(instance.root, dragNode)) == null ? void 0 : _a2.children.find(
      (f4) => f4.id == dragNode
    );
    if (!node)
      return null;
    return /* @__PURE__ */ Cn.createElement(FrameNodeView, {
      editMode: 1,
      plugin: props2.plugin,
      treeNode: node,
      instance
    });
  };
  const moveParent = (node, newParent, schemaId) => {
  };
  useDndMonitor({
    onDragStart({ active }) {
      if (active.data.current.frame == frameSchema.id)
        setDragNode(active.data.current.id);
    },
    onDragOver({ active, over }) {
      const overId = over == null ? void 0 : over.data.current.id;
      if ((over == null ? void 0 : over.data.current.frame) == frameSchema.id) {
        if (overId)
          setHoverNode(overId);
      }
    },
    onDragCancel() {
      resetState();
    },
    onDragEnd({ active, over }) {
      if (!active) {
        resetState();
        return;
      }
      let overId = hoverNode;
      let overNewColumn = false;
      if ((overId == null ? void 0 : overId.charAt(0)) == "|") {
        overId = overId.substring(1);
        overNewColumn = true;
      }
      if (overId == active.data.current.id) {
        resetState();
        return;
      }
      const overParentNode = findParent(instance.root, overId);
      const overNode = overParentNode == null ? void 0 : overParentNode.children.find(
        (f4) => f4.id == overId
      );
      const activeParentNode = findParent(
        instance.root,
        active.data.current.id
      );
      const activeNode = activeParentNode == null ? void 0 : activeParentNode.children.find(
        (f4) => f4.id == active.data.current.id
      );
      if (overNewColumn) {
        if (overNode.node.type == "column") {
          const column = {
            ...newUniqueNode(columnNode, overParentNode.id, [], frameSchema.id),
            rank: overNode.node.rank > activeNode.node.rank ? overNode.node.rank : overNode.node.rank + 1
          };
          const nodes2 = [column, { ...activeNode.node, parentId: column.id }];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes([column]).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes(nodes2);
          }
        } else {
          const newColumns = newUniqueNode(
            columnsNode,
            overParentNode.id,
            nodes,
            frameSchema.id
          );
          const column1 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns],
            frameSchema.id
          );
          const column2 = newUniqueNode(
            columnNode,
            newColumns.id,
            [...nodes, newColumns, column1],
            frameSchema.id
          );
          const newNodes = [
            newColumns,
            column1,
            column2,
            { ...overNode.node, parentId: column1.id }
          ];
          if (active.data.current.frame != frameSchema.id) {
            saveNodes(newNodes).then(
              () => moveNodeFromSchema(
                active.data.current.id,
                active.data.current.frame,
                column2.id,
                {
                  position: `'relative'`,
                  left: "0",
                  top: "0"
                }
              )
            );
          } else {
            saveNodes([
              ...newNodes,
              { ...activeNode.node, parentId: column2.id }
            ]);
          }
        }
        resetState();
        return;
      }
      if (active.data.current.frame != frameSchema.id) {
        moveNodeFromSchema(
          active.data.current.id,
          active.data.current.frame,
          overNode.node.parentId,
          {
            position: `'relative'`,
            left: "0",
            top: "0"
          }
        );
        resetState();
        return;
      }
      if ((overParentNode == null ? void 0 : overParentNode.id) == (activeParentNode == null ? void 0 : activeParentNode.id)) {
        console.group("same parent", overNode);
        if (overNode)
          moveToRank(activeNode.node, overNode.node.rank);
      } else {
        if (overNode)
          saveNodes([{ ...activeNode.node, parentId: overNode.node.parentId }]);
      }
      if (!overId) {
        resetState();
        return;
      }
      if (overId === PLACEHOLDER_ID3) {
        saveNodes([{ ...activeNode.node, parentId: overNode.node.id }]);
        resetState();
        return;
      }
      resetState();
    }
  });
  return instance.root && /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(FrameNodeView, {
    editMode: 1,
    plugin: props2.plugin,
    treeNode: instance.root,
    instance
  }), /* @__PURE__ */ Cn.createElement(RowPlaceholder, {
    plugin: props2.plugin,
    id: PLACEHOLDER_ID3,
    parentId: "main"
  }), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, null, getDragLayer()),
    document.body
  ));
};

// src/components/Space/TitleComponent.tsx
init_compat_module();
var TitleComponent = (props2) => {
  const fileNameRef = _2(null);
  const name = pathDisplayName(props2.path);
  const onBlur = (e4) => {
    const newValue = e4.target.innerHTML;
    if (newValue != name) {
      renamePath(props2.plugin, props2.path, newValue);
    }
  };
  const onKeyPress = (e4) => {
    e4.stopPropagation();
  };
  const onKeyUp = (e4) => {
    e4.stopPropagation();
  };
  const onKeyDown = (e4) => {
    e4.stopPropagation();
    if (e4.key == "a" && e4.metaKey) {
      e4.preventDefault();
      const selection = window.getSelection();
      const range = document.createRange();
      range.selectNodeContents(e4.target);
      selection.removeAllRanges();
      selection.addRange(range);
    }
    if (e4.key == "Enter") {
      e4.target.blur();
      e4.preventDefault();
    }
    if (e4.key == "Escape") {
      e4.target.blur();
      e4.preventDefault();
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.plugin.settings.spacesStickers && props2.path ? /* @__PURE__ */ Cn.createElement(FileStickerContainer, {
    plugin: props2.plugin,
    path: props2.path
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-title-container"
  }, props2.path.type == "tag" ? "#" : "", /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title",
    ref: fileNameRef,
    contentEditable: true,
    onBlur,
    onDrop: (e4) => e4.preventDefault(),
    onKeyDown,
    onKeyPress,
    onKeyUp,
    dangerouslySetInnerHTML: {
      __html: name
    }
  })));
};

// src/components/Space/SpaceComponent.tsx
var SpaceComponent = (props2) => {
  const path = props2.path;
  const [spaceCache, setSpaceCache] = h2(null);
  const reloadSpace = T2(() => {
    const newSpace = props2.plugin.index.spacesIndex.get(path.fullPath);
    setSpaceCache(newSpace);
  }, [path]);
  const { spaceInfo } = q2(SpaceContext);
  const defFile = F2(
    () => spaceCache ? getAbstractFileAtPath(app, spaceCache.space.defPath) : null,
    [spaceCache]
  );
  p2(() => reloadSpace(), []);
  const refreshSpace = T2(
    async (evt) => {
      if (evt.detail.type == "space") {
        if (evt.detail.name == spaceInfo.path) {
          reloadSpace();
        }
      }
    },
    [spaceInfo, reloadSpace]
  );
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, refreshSpace);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, refreshSpace);
    };
  }, [refreshSpace]);
  const [selectedView, setSelectedView] = h2(0);
  const banner = F2(() => {
    var _a2;
    if (props2.path.type == "space" && spaceCache) {
      return spaceCache.metadata.banner;
    }
    if (props2.path.type == "folder") {
      return (_a2 = props2.plugin.index.filesIndex.get(props2.path.path)) == null ? void 0 : _a2.banner;
    }
    return null;
  }, [spaceCache, props2.path]);
  const frameProps = F2(() => {
    var _a2;
    if (!spaceInfo) {
      return {};
    }
    const folderNote = spaceInfo.defPath;
    return {
      ...(_a2 = spaceCache == null ? void 0 : spaceCache.frontmatter) != null ? _a2 : {},
      note: folderNote,
      space: props2.path.fullPath + "/#^files"
    };
  }, [spaceInfo, props2.path]);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    }),
    useSensor(KeyboardSensor, {
      coordinateGetter: sortableKeyboardCoordinates
    })
  );
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    measuring: {
      droppable: {
        strategy: MeasuringStrategy.Always
      }
    }
  }, /* @__PURE__ */ Cn.createElement(FramesEditorProvider, {
    plugin: props2.plugin,
    props: frameProps
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-scroller markdown-source-view mod-cm6 is-readable-line-width"
  }, spaceCache && /* @__PURE__ */ Cn.createElement(NoteBannerView, {
    plugin: props2.plugin,
    link: spaceCache.metadata.banner
  }), (spaceCache == null ? void 0 : spaceCache.metadata.banner) && /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-spacer",
    style: {
      "--header-height": ((platformIsMobile() ? 1 : 0) * 26 + 138 + (!props2.plugin.settings.spacesStickers || props2.plugin.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px"
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-outer cm-line"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-header"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-context-file ${props2.plugin.settings.inlineContextNameLayout == "horizontal" ? "mk-file-context-file-horizontal" : ""}`
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-title"
  }, /* @__PURE__ */ Cn.createElement(TitleComponent, {
    plugin: props2.plugin,
    path: props2.path
  })), defFile && /* @__PURE__ */ Cn.createElement(InlineFileContextView, {
    plugin: props2.plugin,
    file: defFile,
    showHeader: false,
    showMetadata: true,
    hiddenFields: [
      ...FMMetadataKeys(props2.plugin),
      ...FMSpaceKeys(props2.plugin)
    ],
    cacheType: "space",
    showBanner: false,
    editable: true,
    showFolder: spaceCache.space.uri.type == "folder"
  }))), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-space-body"
  }, /* @__PURE__ */ Cn.createElement(SpaceBodyView, {
    selectedView,
    plugin: props2.plugin
  }))))));
};

// src/components/Space/Contexts/SpaceView.tsx
var SPACE_VIEW_TYPE = "mk-space";
var SpaceView = class extends import_obsidian46.ItemView {
  constructor(leaf, plugin, viewType) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
    this.viewType = viewType;
  }
  getViewType() {
    return SPACE_VIEW_TYPE;
  }
  getDisplayText() {
    return pathDisplayName(this.path);
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.path = uriByString(state.path);
    if (!this.path)
      return;
    this.constructNote(this.path);
    const displayName = pathDisplayName(this.path);
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = displayName;
    this.leaf.view.titleEl = displayName;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = displayName;
    }
    result.history = true;
    return;
  }
  getState() {
    const state = super.getState();
    state.path = this.path.fullPath;
    return state;
  }
  constructNote(path) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    const space = spaceInfoByPath(this.plugin, path.fullPath);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-space-view"
      }, space && /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
        plugin: this.plugin,
        space
      }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
        plugin: this.plugin,
        schema: "main"
      }, /* @__PURE__ */ Cn.createElement(SpaceComponent, {
        path,
        plugin: this.plugin,
        leaf: this.leaf
      }))))
    );
  }
};

// src/utils/file.ts
var import_obsidian47 = require("obsidian");
var tFileToAFile = (file) => {
  var _a2, _b2, _c2;
  if (!file)
    return null;
  if (file instanceof import_obsidian47.TFile && file.stat) {
    return {
      isFolder: false,
      name: file.basename,
      filename: file.name,
      path: file.path,
      parent: (_a2 = file.parent) == null ? void 0 : _a2.path,
      stat: file.stat,
      extension: file.extension
    };
  }
  return {
    isFolder: true,
    name: file.name,
    filename: file.name,
    path: file.path,
    parent: (_c2 = (_b2 = file.parent) == null ? void 0 : _b2.path) != null ? _c2 : "/"
  };
};
var defaultNoteFolder = (plugin, activeFile) => {
  var _a2;
  return (_a2 = plugin.settings.newFileLocation == "folder" ? getFolderFromPath(app, plugin.settings.newFileFolderPath) : plugin.settings.newFileLocation == "current" && activeFile ? getFolderFromPath(app, activeFile.path) : plugin.app.vault.getRoot()) != null ? _a2 : plugin.app.vault.getRoot();
};
var defaultConfigFile = async (app2) => {
  return await app2.vault.adapter.read(
    (0, import_obsidian47.normalizePath)(app2.vault.configDir + "/app.json")
  );
};
var fileExtensionForFile = (path) => path == null ? void 0 : path.split(".").pop();
var appendFilesMetaData = (plugin, propType, filesString) => {
  const files = parseMultiString(filesString).map((f4) => plugin.index.filesIndex.get(f4)).filter((f4) => f4);
  return serializeMultiString(files.map((f4) => appendFileMetaData(propType, f4)));
};
var appendFileMetaData = (propType, file) => {
  var _a2, _b2, _c2;
  let value = "";
  if (file) {
    if (propType == "folder") {
      value = file.parent;
    } else if (propType == "ctime") {
      value = (_a2 = file.ctime) == null ? void 0 : _a2.toString();
    } else if (propType == "mtime") {
      value = (_b2 = file.mtime) == null ? void 0 : _b2.toString();
    } else if (propType == "extension") {
      value = file.extension;
    } else if (propType == "size") {
      value = (_c2 = file.size) == null ? void 0 : _c2.toString();
    } else if (propType == "inlinks") {
      value = serializeMultiDisplayString(file.inlinks);
    } else if (propType == "outlinks") {
      value = serializeMultiDisplayString(file.outlinks);
    } else if (propType == "tags") {
      value = serializeMultiDisplayString(file.tags);
    } else if (propType == "spaces") {
      value = serializeMultiDisplayString(file.spaces);
    }
  }
  return value;
};
var moveFile = async (folder, file) => {
  await app.vault.rename(file, folder.path + "/" + file.name);
};
var uniqueFileName = (oldName, name, extension, folder) => {
  let newName = sanitizeFileName(name);
  let uniqueName = false;
  let append = 1;
  while (!uniqueName) {
    if (!folder.children.some((f4) => f4.name == `${newName}.${extension}` && f4.name != oldName)) {
      uniqueName = true;
    } else {
      newName = `${newName} ${append}`;
      append += 1;
    }
  }
  return `${newName}.${extension}`;
};
var uniqueFolderName = (oldName, name, folder) => {
  let newName = sanitizeFolderName(name);
  let uniqueName = false;
  let append = 1;
  while (!uniqueName) {
    if (!folder.children.some((f4) => f4.name == `${newName}` && f4.name != oldName)) {
      uniqueName = true;
    } else {
      newName = `${newName} ${append}`;
      append += 1;
    }
  }
  return `${newName}`;
};
var renameFile = async (plugin, file, newName) => {
  const afile = tFileToAFile(file);
  const fileName = afile.isFolder ? uniqueFolderName(file.name, newName, file.parent) : uniqueFileName(file.name, newName, afile.extension, file.parent);
  const newPath = file.parent.path == "/" ? fileName : file.parent.path + "/" + fileName;
  await app.fileManager.renameFile(
    file,
    newPath
  );
  return fileName;
};
var folderRenamed = async (plugin, oldPath, newPath) => {
  const oldName = folderPathToString(oldPath);
  const newName = folderPathToString(newPath);
  if (newPath.startsWith(plugin.settings.spacesFolder)) {
    const spaceNote = getAbstractFileAtPath(app, `${newPath}/${oldName}.md`);
    if (spaceNote)
      renameFile(plugin, spaceNote, newName);
  } else if (plugin.settings.enableFolderNote) {
    const folder = getAbstractFileAtPath(app, newPath);
    const afile = tFileToAFile(folder);
    const folderNotePath = folderNotePathFromAFile(plugin.settings, { ...afile, name: oldName });
    const folderNote = getAbstractFileAtPath(app, folderNotePath);
    if (folderNote)
      await app.fileManager.renameFile(
        folderNote,
        folderNotePathFromAFile(plugin.settings, afile)
      );
  }
};
function getAllAbstractFilesInVault(plugin, app2) {
  const files = [];
  const rootFolder = app2.vault.getRoot();
  function recursiveFx(folder) {
    for (const child of folderChildren(plugin, folder)) {
      if (child instanceof import_obsidian47.TFolder) {
        const childFolder = child;
        if (childFolder.children)
          recursiveFx(childFolder);
      }
      files.push(child);
    }
  }
  recursiveFx(rootFolder);
  return files;
}
var removeTrailingSlashFromFolder = (path) => path == "/" ? path : path.slice(-1) == "/" ? path.substring(0, path.length - 1) : path;
var getFolderFromPath = (app2, path) => {
  if (!path)
    return null;
  const afile = getAbstractFileAtPath(app2, removeTrailingSlashFromFolder(path));
  if (!afile)
    return null;
  return afile instanceof import_obsidian47.TFolder ? afile : afile.parent;
};
var getFolderPathFromString = (file) => {
  var _a2;
  return (_a2 = getFolderFromPath(app, file)) == null ? void 0 : _a2.path;
};
var getParentPathFromString = (file) => {
  const indexOfLastSlash = file.lastIndexOf("/");
  if (indexOfLastSlash == -1) {
    return "/";
  }
  return file.substring(0, indexOfLastSlash + 1);
};
var deleteFiles = (plugin, files) => {
  files.forEach((f4) => {
    const file = getAbstractFileAtPath(app, f4);
    deleteFile(plugin, file);
  });
};
var deleteFile = (plugin, file) => {
  const deleteOption = plugin.settings.deleteFileOption;
  if (deleteOption === "permanent") {
    return plugin.app.vault.delete(file, true);
  } else if (deleteOption === "system-trash") {
    return plugin.app.vault.trash(file, true);
  } else if (deleteOption === "trash") {
    return plugin.app.vault.trash(file, false);
  }
};
var openPath2 = async (path, plugin, newLeaf) => {
  openAFile(getAbstractFileAtPath(plugin.app, path), plugin, newLeaf);
};
var openSpace = async (spacePath, plugin, newLeaf) => {
  if (!plugin.settings.contextEnabled)
    return;
  const leaf = getLeaf(newLeaf);
  const viewType = SPACE_VIEW_TYPE;
  app.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({
    type: viewType,
    state: { path: spacePath }
  });
  await app.workspace.requestSaveLayout();
  if (platformIsMobile()) {
    app.workspace.leftSplit.collapse();
  }
  const evt = new CustomEvent(eventTypes.activePathChange, {
    detail: { path: uriByString(spacePath) }
  });
  window.dispatchEvent(evt);
};
var getLeaf = (location) => {
  let leaf = app.workspace.getLeaf(false);
  if (location == "right") {
    leaf = app.workspace.getRightLeaf(false);
  } else if (location == "left") {
    leaf = app.workspace.getLeftLeaf(false);
  } else {
    leaf = app.workspace.getLeaf(location);
  }
  return leaf;
};
var openURL = async (url, location) => {
  const leaf = getLeaf(location);
  if (url.endsWith(".md")) {
    const viewType = FILE_VIEW_TYPE;
    app.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: viewType,
      state: { path: url }
    });
    await app.workspace.requestSaveLayout();
  } else if (url.endsWith(".mdb")) {
    const viewType = SPACE_VIEW_TYPE;
    app.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: viewType,
      state: { path: url }
    });
    await app.workspace.requestSaveLayout();
  } else {
    app.workspace.setActiveLeaf(leaf, { focus: true });
    await leaf.setViewState({
      type: EMBED_CONTEXT_VIEW_TYPE,
      state: { path: url }
    });
  }
  if (platformIsMobile()) {
    app.workspace.leftSplit.collapse();
  }
};
function getAllFoldersInVault(app2) {
  const folders = [];
  const rootFolder = app2.vault.getRoot();
  folders.push(rootFolder);
  function recursiveFx(folder) {
    for (const child of folder.children) {
      if (child instanceof import_obsidian47.TFolder) {
        const childFolder = child;
        folders.push(childFolder);
        if (childFolder.children)
          recursiveFx(childFolder);
      }
    }
  }
  recursiveFx(rootFolder);
  return folders;
}
var openAFile = async (file, plugin, newLeaf) => {
  if (file instanceof import_obsidian47.TFolder) {
    openTFolder(file, plugin, newLeaf);
  } else if (file instanceof import_obsidian47.TFile) {
    openTFile(file, plugin, newLeaf);
  }
  const evt = new CustomEvent(eventTypes.activePathChange, {
    detail: { path: uriByString(file.path) }
  });
  window.dispatchEvent(evt);
};
var openTFile = async (file, plugin, newLeaf) => {
  if (!file)
    return;
  const leaf = getLeaf(newLeaf);
  app.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.openFile(file, { eState: { focus: true } });
  const fileCache = plugin.index.filesIndex.get(file.path);
  if ((fileCache == null ? void 0 : fileCache.sticker) && leaf.tabHeaderInnerIconEl) {
    const icon = stickerFromString(fileCache.sticker, plugin);
    leaf.tabHeaderInnerIconEl.innerHTML = icon;
  }
};
var openTFolder = async (file, plugin, newLeaf) => {
  const leaf = getLeaf(newLeaf);
  const viewType = SPACE_VIEW_TYPE;
  app.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({
    type: viewType,
    state: { path: file.path }
  });
  const fileCache = plugin.index.filesIndex.get(file.path);
  if ((fileCache == null ? void 0 : fileCache.sticker) && leaf.tabHeaderInnerIconEl) {
    const icon = stickerFromString(fileCache.sticker, plugin);
    leaf.tabHeaderInnerIconEl.innerHTML = icon;
  }
  await app.workspace.requestSaveLayout();
  if (platformIsMobile()) {
    app.workspace.leftSplit.collapse();
  }
};
var openTagContext = async (tag, plugin, newLeaf) => {
  const leaf = getLeaf(newLeaf);
  const viewType = SPACE_VIEW_TYPE;
  app.workspace.setActiveLeaf(leaf, { focus: true });
  await leaf.setViewState({ type: viewType, state: { path: "spaces://" + tag } });
  await app.workspace.requestSaveLayout();
  if (platformIsMobile()) {
    app.workspace.leftSplit.collapse();
  }
  const evt = new CustomEvent(eventTypes.activePathChange, {
    detail: { path: uriByString(tag) }
  });
  window.dispatchEvent(evt);
};
var getAbstractFileAtPath = (app2, path) => {
  return app2.vault.getAbstractFileByPath(path);
};
var abstractFileAtPathExists = (app2, path) => {
  return app2.vault.getAbstractFileByPath(path) ? true : false;
};
var openFileInNewPane = (plugin, file) => {
  openPath2(file.path, plugin, true);
};
var createNewCanvasFile = async (plugin, folder, newFileName, dontOpen) => {
  const newFile = await app.fileManager.createNewMarkdownFile(
    folder,
    newFileName
  );
  await app.vault.modify(newFile, "{}");
  await app.fileManager.renameFile(
    newFile,
    newFile.name.substring(0, newFile.name.lastIndexOf(".")) + ".canvas"
  );
  if (dontOpen) {
    return newFile;
  }
  await openAFile(newFile, plugin, false);
  const evt = new CustomEvent(eventTypes.activePathChange, {
    detail: { path: uriByString(newFile.path) }
  });
  window.dispatchEvent(evt);
  return newFile;
};
var createNewMarkdownFile = async (plugin, folder, newFileName, content, dontOpen) => {
  const newFile = await app.fileManager.createNewMarkdownFile(
    folder,
    newFileName
  );
  if (content && content !== "")
    await app.vault.modify(newFile, content);
  if (dontOpen) {
    return newFile;
  }
  await openAFile(newFile, plugin, false);
  const titleEl = app.workspace.activeLeaf.view.containerEl.querySelector(
    ".inline-title"
  );
  if (titleEl) {
    titleEl.focus();
    selectElementContents(titleEl);
  }
  const evt = new CustomEvent(eventTypes.activePathChange, {
    detail: { path: uriByString(newFile.path) }
  });
  window.dispatchEvent(evt);
  return newFile;
};
var platformIsMobile = () => {
  return import_obsidian47.Platform.isMobile;
};
var newFileInFolder = async (plugin, data2, dontOpen) => {
  await createNewMarkdownFile(
    plugin,
    data2.parent.children.find((f4) => f4.name == data2.name),
    "",
    "",
    dontOpen
  );
};
var noteToFolderNote = async (plugin, file, open) => {
  const folderPath = fileNameToString(file.path);
  const folder = getAbstractFileAtPath(app, folderPath);
  if (folder && folder instanceof import_obsidian47.TFolder) {
    if (open) {
      openTFolder(folder, plugin, false);
    }
    return;
  }
  await app.vault.createFolder(folderPath);
  plugin.index.filesIndex.delete(file.path);
  const newFolderNotePath = folderNotePathFromAFile(plugin.settings, tFileToAFile(getAbstractFileAtPath(app, folderPath)));
  if (newFolderNotePath != file.path) {
    await app.vault.rename(file, newFolderNotePath);
  }
  if (open) {
    openTFolder(getAbstractFileAtPath(app, folderPath), plugin, false);
  }
};
var folderNoteCache = (plugin, file) => {
  if (!file.extension || file.extension.length == 0) {
    const folderNotePath = folderNotePathFromAFile(plugin.settings, file);
    if (abstractFileAtPathExists(app, folderNotePath)) {
      return {
        folderNotePath,
        folderPath: file.path
      };
    }
  } else if (file.extension == "md") {
    const folderPath = getAbstractFileAtPath(app, folderPathFromFolderNoteFile(plugin.settings, file));
    if (folderPath instanceof import_obsidian47.TFolder && folderPath.name == file.name) {
      return {
        folderNotePath: file.path,
        folderPath: folderPath.path
      };
    }
  }
  return null;
};

// src/utils/spaces/space.ts
var pathIsSpace = (path) => {
  const uri = uriByString(path);
  if (uri.type == "space" || uri.type == "tag" || uri.type == "folder" || uri.type == "vault")
    return true;
  return false;
};
var spaceFolderPathFromSpace = (path, plugin) => {
  if (plugin.settings.spacesMDBInHidden) {
    if (path == "/")
      return ".space/";
    return path + ".space/";
  }
  return path;
};
var spaceFolderForMDBPath = (path, plugin) => {
  const indexOfLastSlash = path.lastIndexOf("/");
  if (indexOfLastSlash == -1) {
    return "/";
  }
  let parentPath = path.substring(0, indexOfLastSlash);
  if (plugin.settings.spacesMDBInHidden) {
    const indexOfSecondLastSlash = parentPath.lastIndexOf("/");
    if (parentPath.substring(indexOfSecondLastSlash + 1) == ".space") {
      parentPath = parentPath.substring(0, indexOfSecondLastSlash);
    } else {
      return null;
    }
  }
  if (parentPath.startsWith(plugin.settings.spacesFolder)) {
    parentPath = parentPath.replace(plugin.settings.spacesFolder, "spaces:/");
  }
  return parentPath;
};
var folderForSpace = (space, plugin) => getFolderPathFromString(plugin.settings.spacesFolder) + "/" + space;
var spacesFromFileCache = (cache, plugin) => {
  var _a2;
  return ((_a2 = cache == null ? void 0 : cache.spaces) != null ? _a2 : []).map((f4) => plugin.index.spacesIndex.get(f4)).filter((f4) => f4).map((f4) => f4.space);
};

// src/utils/contexts/contexts.ts
var renamePath = async (plugin, path, newName) => {
  var _a2;
  if (path.type == "tag") {
    await renameTag(plugin, path.space, newName);
  } else if (path.type == "space") {
    const space = (_a2 = plugin.index.spacesIndex.get(path.fullPath)) == null ? void 0 : _a2.space;
    if (space) {
      const spaceName = uniqueFolderName(space.name, newName, getAbstractFileAtPath(app, plugin.settings.spacesFolder));
      if (space.name != spaceName)
        await plugin.index.renameSpace(space.name, spaceName);
      return spaceName;
    }
  } else if (path.type == "folder") {
    return await renameFile(plugin, getAbstractFileAtPath(app, path.path), newName);
  }
};
var contextEmbedStringFromContext = (space, schema) => {
  if (space.uri.type == "folder") {
    return `![![${space.path}/#^${schema}]]`;
  }
  if (space.uri.type == "vault") {
    return `![![/#^${schema}]]`;
  }
  return `![![${space.path}#^${schema}]]`;
};
var spaceFromCustomSpace = (plugin, space, readOnly) => {
  const path = spacePathFromName(space);
  const folderPath = folderForSpace(space, plugin);
  return {
    name: space,
    uri: uriByString(path),
    path,
    folderPath,
    isRemote: false,
    readOnly,
    defPath: `${folderPath}/${space}.md`,
    dbPath: spaceFolderPathFromSpace(folderPath + "/", plugin) + plugin.settings.folderContextFile + ".mdb",
    framePath: spaceFolderPathFromSpace(folderPath + "/", plugin) + "views.mdb"
  };
};
var spaceFromTag = (plugin, tag, readOnly) => {
  const path = tagSpacePathFromTag(tag);
  const folderPath = getFolderPathFromString(plugin.settings.spacesFolder) + "/" + tagToTagPath(tag);
  return {
    name: tag,
    path,
    uri: uriByString(path),
    isRemote: false,
    readOnly,
    folderPath,
    defPath: `${folderPath}/${tag}.md`,
    framePath: spaceFolderPathFromSpace(folderPath + "/", plugin) + "frames.mdb",
    dbPath: spaceFolderPathFromSpace(folderPath + "/", plugin) + plugin.settings.folderContextFile + ".mdb"
  };
};
var remoteContextFromURL = (url) => {
  return {
    name: url,
    path: url,
    uri: uriByString(url),
    isRemote: true,
    readOnly: true,
    folderPath: url,
    defPath: url,
    dbPath: url,
    framePath: url
  };
};
var spaceInfoByPath = (plugin, contextPath) => {
  if (!contextPath)
    return;
  const path = uriByString(contextPath);
  if (path.type == "url") {
    return remoteContextFromURL(path.fullPath);
  }
  if (path.type == "space") {
    return spaceFromCustomSpace(plugin, path.space);
  } else if (path.type == "folder") {
    return spaceFromFolder(plugin, removeTrailingSlashFromFolder(path.path));
  } else if (path.type == "tag") {
    return spaceFromTag(plugin, path.space);
  } else if (path.type == "vault") {
    return spaceFromFolder(plugin, "/");
  }
  return null;
};
var spaceFromFolder = (plugin, folder, readOnly) => {
  if (folder == "/") {
    const vaultName = plugin.app.vault.getName();
    return {
      name: vaultName,
      uri: uriForFolder(folder),
      path: folder,
      isRemote: false,
      readOnly,
      folderPath: folder,
      defPath: vaultName + ".md",
      dbPath: spaceFolderPathFromSpace(folder, plugin) + plugin.settings.folderContextFile + ".mdb",
      framePath: spaceFolderPathFromSpace(folder, plugin) + "views.mdb"
    };
  }
  const folderName = folderPathToString(folder);
  return {
    name: folderName,
    uri: uriForFolder(folder),
    path: folder,
    isRemote: false,
    readOnly,
    folderPath: folder,
    defPath: folder + "/" + folderName + ".md",
    dbPath: spaceFolderPathFromSpace(folder + "/", plugin) + plugin.settings.folderContextFile + ".mdb",
    framePath: spaceFolderPathFromSpace(folder + "/", plugin) + "views.mdb"
  };
};
var linkContextRow = (plugin, row, fields) => {
  return {
    ...row,
    ...fields.filter((f4) => f4.type == "fileprop").reduce((p3, c4) => {
      const { field, property: property2 } = parsePropString(c4.value);
      const col = fields.find((f4) => f4.name == field);
      if (!col || !property2) {
        return p3;
      }
      if (col.type == "file" || col.type == "link") {
        return {
          ...p3,
          [c4.name]: appendFilesMetaData(plugin, property2, row[col.name])
        };
      }
      if (col.type.includes("context")) {
        const context = col.value;
        const contextCache = plugin.index.contextsIndex.get(context);
        if (contextCache.tables["files"]) {
          return {
            ...p3,
            [c4.name]: linkContextProp(
              property2,
              row[col.name],
              contextCache.tables["files"].rows
            )
          };
        }
      }
      return p3;
    }, {})
  };
};
var linkContextProp = (propType, rows, contextTableRows) => {
  const contextRows = contextTableRows.filter(
    (f4) => parseMultiString(rows).contains(f4.File)
  );
  return serializeMultiString(uniq(contextRows.map((f4) => f4[propType]).filter((f4) => f4)));
};

// src/components/Space/Editor/FlowEditorHover.tsx
var FlowEditorHover = (props2) => {
  var _a2, _b2;
  const fields = (_b2 = (_a2 = props2.plugin.index.framesIndex.get(props2.path.path)) == null ? void 0 : _a2.frames[props2.path.ref]) == null ? void 0 : _b2.cols;
  const convertTable = () => {
    const context = spaceInfoByPath(props2.plugin, props2.path.fullPath);
    getMDBTable(props2.plugin, context, props2.path.ref, "context").then(
      (mdbTable) => {
        const markdown = createTable2(mdbTable.rows, mdbTable.cols);
        props2.view.dispatch({
          changes: {
            from: props2.pos.from - 4,
            to: props2.pos.to + 2,
            insert: markdown
          }
        });
      }
    );
  };
  const cutTable = () => {
    navigator.clipboard.writeText(`![![${props2.path.fullPath}]]`);
    props2.view.dispatch({
      changes: { from: props2.pos.from - 4, to: props2.pos.to + 2 }
    });
  };
  const deleteTable = () => {
    props2.view.dispatch({
      changes: { from: props2.pos.from - 4, to: props2.pos.to + 2 }
    });
  };
  const toggleFlow = () => {
    props2.view.dispatch({
      changes: { from: props2.pos.from - 4, to: props2.pos.from - 3 }
    });
  };
  const openLink = () => {
    openFileFlowEditor(props2.path.fullPath, "/");
  };
  const [propsEditor, setPropsEditor] = h2(false);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flowblock-menu"
  }, props2.path.type == "file" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.toggle && /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.toggleFlow,
    onClick: toggleFlow,
    className: `mk-hover-button ${props2.toggleState ? "mk-toggle-on" : ""}`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-flow-hover"]
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.openLink,
    onClick: openLink,
    className: "mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-open-link"] }
  })) : props2.path.refType == "frame" ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.convertTable,
    onClick: () => setPropsEditor((p3) => !p3),
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-sync"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.convertTable,
    onClick: () => openFrameEditor(props2.plugin, props2.path.path, props2.path.ref),
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-sync"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.deleteTable,
    onClick: deleteTable,
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.convertTable,
    onClick: convertTable,
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-sync"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.cutTable,
    onClick: cutTable,
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-cut"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.deleteTable,
    onClick: deleteTable,
    className: "mk-icon-xsmall mk-hover-button",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  })), " "));
};

// src/cm-extensions/flowEditor/flowEditor.tsx
var import_obsidian48 = require("obsidian");
var toggleFlowEditor = import_state6.Annotation.define();
var cacheFlowEditorHeight = import_state6.Annotation.define();
var preloadFlowEditor = import_state6.EditorState.transactionFilter.of(
  (tr) => {
    const newTrans = [];
    const value = tr.state.field(flowEditorInfo, false);
    if (value && !tr.annotation(toggleFlowEditor)) {
      newTrans.push(
        ...value.filter((f4) => f4.expandedState == 1).map((f4) => {
          if (tr.state.field(flowTypeStateField, false) == "doc") {
            return {
              annotations: toggleFlowEditor.of([f4.id, 2])
            };
          } else {
            return {
              annotations: toggleFlowEditor.of([f4.id, 0])
            };
          }
        })
      );
    }
    return [tr, ...newTrans];
  }
);
var internalLinkToggle = import_view4.ViewPlugin.fromClass(
  class {
    constructor(view) {
    }
  },
  {
    eventHandlers: {
      mousedown: (e4, view) => {
        if (!e4.shiftKey) {
          return;
        }
        const pos = view.posAtDOM(e4.target);
        const { from: lineFrom, to: lineTo, text: text2 } = view.state.doc.lineAt(pos);
        for (const match2 of text2.matchAll(/(?!!)\[\[([^\]]+)\]\]/g)) {
          const stateField = view.state.field(flowEditorInfo, false);
          const info = stateField.find(
            (f4) => f4.to == lineFrom + match2.index + match2[1].length + 2 && pos >= f4.from && pos <= f4.to
          );
          if (info) {
            e4.preventDefault();
            view.dispatch({
              annotations: toggleFlowEditor.of([info.id, 2])
            });
          }
        }
      }
    }
  }
);
var internalLinkHover = hoverTooltip((view, pos, side) => {
  const { from: lineFrom, to: lineTo } = view.state.doc.lineAt(pos);
  let hovObject = null;
  iterateTreeInSelection({ from: lineFrom, to: lineTo }, view.state, {
    enter: ({ name, from, to }) => {
      if (name.contains("hmd-internal-link") && pos <= to && pos >= from) {
        const stateField = view.state.field(flowEditorInfo, false);
        const info = stateField.find((f4) => f4.to == to);
        if (info) {
          hovObject = {
            pos,
            end: to,
            above: true,
            create(view2) {
              const dom = document.createElement("div");
              dom.toggleClass("mk-flow-hover", true);
              dom.toggleClass("menu", true);
              const openHoverDiv = dom.createDiv();
              openHoverDiv.setAttribute(
                "aria-label",
                info.expandedState == 0 ? i18n_default.buttons.openFlow : i18n_default.buttons.hideFlow
              );
              openHoverDiv.addEventListener("click", () => {
                view2.dispatch({
                  annotations: toggleFlowEditor.of([info.id, 2])
                });
              });
              const icon = openHoverDiv.createDiv();
              icon.innerHTML = uiIconSet["mk-ui-flow-hover"];
              openHoverDiv.insertAdjacentText(
                "beforeend",
                info.expandedState == 0 ? i18n_default.buttons.openFlow : i18n_default.buttons.hideFlow
              );
              return { dom };
            }
          };
          return false;
        }
      }
    }
  });
  return hovObject;
});
var flowEditorInfo = import_state6.StateField.define({
  create() {
    return [];
  },
  update(value, tr) {
    var _a2, _b2, _c2, _d2, _e2, _f, _g, _h, _i, _j, _k, _l;
    const newValues = [];
    const previous = value;
    const usedContainers = [];
    const str = tr.newDoc.sliceString(0);
    const reverseExpandedState = (state) => {
      const news = state != 2 ? 2 : 0;
      return news;
    };
    for (const match2 of str.matchAll(/(?:!\[!\[|!!\[\[)([^\]]+)\]\]/g)) {
      const link = match2[1];
      const existingLinks = previous.filter((f4) => f4.link == link);
      const offset2 = usedContainers.filter((f4) => f4 == link).length;
      const existingInfo = existingLinks[offset2];
      const id2 = existingInfo ? existingInfo.id : genId();
      usedContainers.push(link);
      const info = {
        id: id2,
        link: match2[1],
        startOfLineFix: false,
        from: match2.index + 4,
        to: match2.index + 4 + match2[1].length,
        embed: 1,
        height: existingInfo ? ((_a2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _a2[0]) == id2 && ((_b2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _b2[1]) != 0 ? (_c2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _c2[1] : existingInfo.height : -1,
        expandedState: existingInfo ? ((_d2 = tr.annotation(toggleFlowEditor)) == null ? void 0 : _d2[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 1
      };
      newValues.push(info);
    }
    for (const match2 of str.matchAll(/\[\[([^\]]+)\]\]/g)) {
      if (str.charAt(match2.index - 1) != "!") {
        const link = match2[1];
        const existingLinks = previous.filter((f4) => f4.link == link);
        const offset2 = usedContainers.filter((f4) => f4 == link).length;
        const existingInfo = existingLinks[offset2];
        const id2 = existingInfo ? existingInfo.id : genId();
        usedContainers.push(link);
        const info = {
          id: id2,
          link: match2[1],
          startOfLineFix: false,
          from: match2.index + 2,
          to: match2.index + 2 + match2[1].length,
          embed: 0,
          height: existingInfo ? ((_e2 = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _e2[0]) == id2 && ((_f = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _f[1]) != 0 ? (_g = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _g[1] : existingInfo.height : -1,
          expandedState: existingInfo ? ((_h = tr.annotation(toggleFlowEditor)) == null ? void 0 : _h[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 0
        };
        newValues.push(info);
      } else if (str.charAt(match2.index - 2) != "!") {
        const link = match2[1];
        const existingLinks = previous.filter((f4) => f4.link == link);
        const offset2 = usedContainers.filter((f4) => f4 == link).length;
        const existingInfo = existingLinks[offset2];
        const id2 = existingInfo ? existingInfo.id : genId();
        usedContainers.push(link);
        const info = {
          id: id2,
          link: match2[1],
          startOfLineFix: false,
          from: match2.index + 3,
          to: match2.index + 3 + match2[1].length,
          embed: 2,
          height: existingInfo ? ((_i = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _i[0]) == id2 && ((_j = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _j[1]) != 0 ? (_k = tr.annotation(cacheFlowEditorHeight)) == null ? void 0 : _k[1] : existingInfo.height : -1,
          expandedState: existingInfo ? ((_l = tr.annotation(toggleFlowEditor)) == null ? void 0 : _l[0]) == id2 ? reverseExpandedState(existingInfo.expandedState) : existingInfo.expandedState : 1
        };
        newValues.push(info);
      }
    }
    newValues.sort(compareByField("from", true));
    return newValues;
  }
});
var flowEditorRangeset = (state, plugin) => {
  const builder = new import_state6.RangeSetBuilder();
  const infoFields = state.field(flowEditorInfo, false);
  for (const info of infoFields) {
    const { from, to, embed: embedType, expandedState } = info;
    const lineFix = from - 3 == state.doc.lineAt(from).from && to + 2 == state.doc.lineAt(from).to;
    if (expandedState == 2) {
      if (embedType == 1) {
        if (!(state.selection.main.from == from - 4 && state.selection.main.to == to + 2 || state.selection.main.from >= from - 3 && state.selection.main.to <= to + 1)) {
          builder.add(from - 4, from - 3, flowEditorSelector(info, plugin));
          if (lineFix) {
            builder.add(from - 3, to + 2, flowEditorWidgetDecoration(info));
          } else {
            builder.add(from - 3, to + 2, flowEditorDecoration(info));
          }
        }
      } else if (embedType == 0) {
        builder.add(to + 2, to + 2, flowEditorDecoration(info));
      }
    }
  }
  const dec = builder.finish();
  return dec;
};
var flowEditorField = (plugin) => import_state6.StateField.define({
  create(state) {
    return flowEditorRangeset(state, plugin);
  },
  update(value, tr) {
    return flowEditorRangeset(tr.state, plugin);
  },
  provide: (f4) => import_view4.EditorView.decorations.from(f4)
});
var FlowEditorWidget = class extends import_view4.WidgetType {
  constructor(info) {
    super();
    this.info = info;
  }
  eq(other) {
    return other.info.id === this.info.id;
  }
  toDOM(view) {
    const div = document.createElement("div");
    div.toggleClass("mk-floweditor-container", true);
    div.toggleClass("mk-floweditor-fix", this.info.startOfLineFix);
    div.setAttribute("id", "mk-flow-" + this.info.id);
    const placeholder2 = div.createDiv("mk-floweditor-placeholder");
    placeholder2.style.setProperty("height", this.info.height + "px");
    loadFlowEditorByDOM(div, view, this.info.id);
    return div;
  }
  get estimatedHeight() {
    return this.info.height;
  }
};
var FlowEditorSelector = class extends import_view4.WidgetType {
  constructor(info, plugin) {
    super();
    this.info = info;
    this.flowInfo = info;
    this.plugin = plugin;
  }
  eq(other) {
    return other.info.id === this.info.id;
  }
  toDOM(view) {
    const div = document.createElement("div");
    div.toggleClass("mk-floweditor-selector", true);
    const reactEl = createRoot(div);
    if (this.info.link && view.state.field(import_obsidian48.editorInfoField, false)) {
      const infoField = view.state.field(import_obsidian48.editorInfoField, false);
      const file = infoField.file;
      const path = uriByString(this.info.link, file.path);
      reactEl.render(
        /* @__PURE__ */ Cn.createElement(FlowEditorHover, {
          plugin: this.plugin,
          toggle: true,
          path,
          toggleState: true,
          view,
          pos: { from: this.info.from, to: this.info.to }
        })
      );
    }
    return div;
  }
};
var flowEditorSelector = (info, plugin) => import_view4.Decoration.replace({
  widget: new FlowEditorSelector(info, plugin),
  inclusive: true,
  block: false
});
var flowEditorDecoration = (info) => import_view4.Decoration.replace({
  widget: new FlowEditorWidget(info),
  inclusive: true,
  block: false
});
var flowEditorWidgetDecoration = (info) => import_view4.Decoration.widget({
  widget: new FlowEditorWidget(info),
  block: true
});

// src/cm-extensions/flowEditor/flowViewUpdates.ts
var import_view5 = require("@codemirror/view");
var flowViewUpdates = import_view5.EditorView.updateListener.of((v3) => {
  if (v3.heightChanged) {
    app.workspace.iterateRootLeaves((leaf) => {
      var _a2, _b2;
      const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
      if (cm && v3.view.dom == cm.dom && cm.state.field(flowTypeStateField, false)) {
        if ((_b2 = leaf.containerEl.parentElement) == null ? void 0 : _b2.hasClass("workspace-tab-container")) {
          if (cm.state.field(flowTypeStateField, false) != "doc") {
            cm.dispatch({
              annotations: portalTypeAnnotation.of("doc")
            });
          }
        }
      }
    });
  }
  if (v3.heightChanged) {
    const flowID = v3.state.field(flowIDStateField, false);
    if (flowID) {
      app.workspace.iterateLeaves((leaf) => {
        var _a2;
        const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
        if (cm) {
          const stateField = cm.state.field(flowEditorInfo, false);
          if (stateField) {
            if (stateField.find((f4) => f4.id == flowID)) {
              cm.dispatch({
                annotations: cacheFlowEditorHeight.of([
                  flowID,
                  v3.view.contentHeight
                ])
              });
            }
          }
        }
      }, app.workspace["rootSplit"]);
    }
  }
});

// src/cm-extensions/inlineStylerView/inlineStyler.tsx
var import_state8 = require("@codemirror/state");

// src/cm-extensions/inlineStylerView/InlineMenu.tsx
var import_classnames5 = __toESM(require_classnames());

// src/cm-extensions/inlineStylerView/marks.ts
var import_state7 = require("@codemirror/state");

// src/cm-extensions/markSans/obsidianSyntax.ts
var oMarks = [
  {
    mark: "em",
    formatting: "formatting-em",
    altFormatting: "em_formatting_formatting-strong",
    formatChar: "*"
  },
  {
    mark: "strong",
    formatting: "formatting-strong",
    formatChar: "**"
  },
  {
    mark: "strikethrough",
    formatting: "formatting-strikethrough",
    formatChar: "~~"
  },
  {
    mark: "inline-code",
    formatting: "formatting-code",
    formatChar: "`"
  }
];

// src/cm-extensions/inlineStylerView/marks.ts
var toggleMark = import_state7.Annotation.define();
var trimSpace = (pos, moveDirLeft, state) => {
  if (moveDirLeft && state.sliceDoc(pos, pos + 1) == " ")
    return pos + 1;
  if (!moveDirLeft && state.sliceDoc(pos - 1, pos) == " ")
    return pos - 1;
  return pos;
};
var newPosAfterFormatting = (pos, moveDirLeft, state) => {
  const line = state.doc.lineAt(pos);
  const start = moveDirLeft ? line.from : pos;
  const end = moveDirLeft ? pos : line.to;
  let newPos = start;
  let lastFormatPos = start;
  const exitFormatRange = false;
  iterateTreeInSelection({ from: start, to: end }, state, {
    enter: (node) => {
      if (exitFormatRange)
        return false;
      if (node.name.contains("formatting")) {
        if (!moveDirLeft && node.from > start) {
          return false;
        }
        if (moveDirLeft) {
          newPos = node.from;
          lastFormatPos = node.to;
        } else {
          newPos = node.to;
        }
      }
    }
  });
  if (moveDirLeft && lastFormatPos < pos) {
    newPos = pos;
  }
  return newPos;
};
var expandRange = (selection, state) => {
  const from = trimSpace(
    newPosAfterFormatting(selection.from, true, state),
    true,
    state
  );
  const to = trimSpace(
    newPosAfterFormatting(selection.to, false, state),
    false,
    state
  );
  return { from, to };
};
var addMarkAtPos = (pos, mark) => ({
  changes: { from: pos, to: pos, insert: mark.formatChar }
});
var rangeIsMark = (state, mark, selection) => posIsMark(selection.from, state, mark.mark) && posIsMark(selection.to, state, mark.mark);
var posIsMark = (pos, state, markString) => {
  let isMark = false;
  iterateTreeAtPos(pos, state, {
    enter: ({ name, from, to }) => {
      if (nodeNameContainsMark(name, markString))
        isMark = true;
    }
  });
  return isMark;
};
var nodeNameContainsMark = (name, markString) => {
  return name.contains(markString);
};
var edgeIsMark = (pos, state, mark) => posIsMark(pos, state, mark.mark);
var edgeIsMarkFormat = (pos, state, mark) => posIsMark(pos, state, mark.formatting) ? true : mark.altFormatting ? posIsMark(pos, state, mark.altFormatting) : false;
var transactionChangesForMark = (range, mark, state) => {
  const newTrans = [];
  if (rangeIsMark(state, mark, range)) {
    if (edgeIsMarkFormat(range.from, state, mark) && !edgeIsMarkFormat(range.to, state, mark)) {
      newTrans.push(addMarkAtPos(range.to, mark));
    }
    if (edgeIsMarkFormat(range.to, state, mark) && !edgeIsMarkFormat(range.from, state, mark)) {
      newTrans.push(addMarkAtPos(range.from, mark));
    }
  } else if (edgeIsMark(range.from, state, mark)) {
    if (edgeIsMarkFormat(range.from, state, mark) && !edgeIsMark(range.from - 1, state, mark)) {
      newTrans.push(addMarkAtPos(range.from, mark));
    }
    newTrans.push(addMarkAtPos(range.to, mark));
  } else if (edgeIsMark(range.to, state, mark)) {
    if (edgeIsMarkFormat(range.to, state, mark) && !edgeIsMark(range.to + 1, state, mark)) {
      newTrans.push(addMarkAtPos(range.to, mark));
    }
    newTrans.push(addMarkAtPos(range.from, mark));
  } else {
    newTrans.push(addMarkAtPos(range.to, mark));
    newTrans.push(addMarkAtPos(range.from, mark));
  }
  return newTrans;
};
var removeAllInternalMarks = (sel, state, mark) => {
  const returnTrans = [];
  iterateTreeInSelection({ from: sel.from, to: sel.to }, state, {
    enter: ({ name, from, to }) => {
      if (nodeNameContainsMark(name, mark.formatting) || (mark.altFormatting ? nodeNameContainsMark(name, mark.altFormatting) : false))
        returnTrans.push({
          from,
          to: from + mark.formatChar.length
        });
    }
  });
  return {
    changes: returnTrans
  };
};
var toggleMarkExtension = import_state7.EditorState.transactionFilter.of(
  (tr) => {
    if (!tr.annotation(toggleMark))
      return tr;
    const markToggle = tr.annotation(toggleMark);
    const mark = oMarks.find((f4) => f4.mark == markToggle);
    if (!mark) {
      return tr;
    }
    const selection = tr.startState.selection.main;
    const newTrans = [];
    if (selection.head == selection.anchor) {
      if (tr.startState.sliceDoc(
        selection.head - mark.formatChar.length,
        selection.head
      ) == mark.formatChar && tr.startState.sliceDoc(
        selection.head,
        selection.head + mark.formatChar.length
      ) == mark.formatChar) {
        newTrans.push({
          changes: {
            from: selection.head - mark.formatChar.length,
            to: selection.head + mark.formatChar.length
          }
        });
      } else {
        newTrans.push({
          changes: {
            from: selection.head,
            insert: mark.formatChar + mark.formatChar
          },
          selection: {
            anchor: selection.head + mark.formatChar.length,
            head: selection.head + mark.formatChar.length
          }
        });
      }
      return [tr, ...newTrans];
    }
    const range = expandRange(selection, tr.startState);
    newTrans.push(removeAllInternalMarks(range, tr.startState, mark));
    const newFrom = range.from;
    const newTo = range.to;
    newTrans.push(...transactionChangesForMark(range, mark, tr.startState));
    return [tr, ...newTrans, { selection: { anchor: newFrom, head: newTo } }];
  }
);

// src/cm-extensions/inlineStylerView/InlineMenu.tsx
init_compat_module();

// src/cm-extensions/inlineStylerView/Mark.tsx
init_compat_module();
var Mark = (props2) => {
  const { i: i4, style, active, toggleMarkAction } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    "aria-label": !platformIsMobile() ? i18n_default.styles[style.label] : void 0,
    className: `mk-mark ${style.mark && active ? "mk-mark-active" : ""}`,
    dangerouslySetInnerHTML: { __html: uiIconSet[style.icon] },
    onMouseDown: (e4) => toggleMarkAction(e4, style)
  });
};

// src/cm-extensions/inlineStylerView/styles/default.ts
var default_default = [
  {
    label: "bold",
    value: `****`,
    insertOffset: 2,
    icon: "mk-mark-strong",
    mark: "strong"
  },
  {
    label: "italics",
    value: "**",
    insertOffset: 1,
    icon: "mk-mark-em",
    mark: "em"
  },
  {
    label: "strikethrough",
    value: "~~~~",
    insertOffset: 2,
    icon: "mk-mark-strikethrough",
    mark: "strikethrough"
  },
  {
    label: "code",
    value: "``",
    insertOffset: 1,
    icon: "mk-mark-code",
    mark: "inline-code"
  },
  {
    label: "link",
    value: "[]()",
    insertOffset: 1,
    cursorOffset: 2,
    icon: "mk-mark-link"
  },
  {
    label: "blocklink",
    value: "[[]]",
    insertOffset: 2,
    icon: "mk-mark-blocklink"
  }
];

// src/cm-extensions/inlineStylerView/styles/index.ts
function resolveStyles() {
  return default_default;
}

// src/cm-extensions/inlineStylerView/InlineMenu.tsx
var loadStylerIntoContainer = (el, plugin) => {
  const root2 = createRoot(el);
  root2.render(
    /* @__PURE__ */ Cn.createElement(InlineMenuComponent, {
      mobile: true,
      activeMarks: [],
      plugin
    })
  );
};
var InlineMenuComponent = (props2) => {
  const [mode, setMode] = h2(props2.mobile ? 0 : 1);
  const [colorMode, setColorMode] = h2(null);
  const makeMenu = (e4) => {
    var _a2;
    e4.preventDefault();
    const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM();
    if (!cm)
      return;
    const end = cm.state.selection.main.to;
    const insertChars = cm.state.sliceDoc(end - 1, end) == cm.state.lineBreak ? props2.plugin.settings.menuTriggerChar : cm.state.lineBreak + props2.plugin.settings.menuTriggerChar;
    cm.dispatch({
      changes: {
        from: end,
        to: end,
        insert: insertChars
      },
      selection: {
        head: end + insertChars.length,
        anchor: end + insertChars.length
      }
    });
  };
  const toggleMarkAction = (e4, s5) => {
    var _a2;
    e4.preventDefault();
    const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM();
    if (!cm)
      return;
    if (s5.mark) {
      cm.dispatch({
        annotations: toggleMark.of(s5.mark)
      });
      return;
    }
    const selection = cm.state.selection.main;
    const selectedText = cm.state.sliceDoc(selection.from, selection.to);
    cm.dispatch({
      changes: {
        from: selection.from,
        to: selection.to,
        insert: s5.value.substring(0, s5.insertOffset) + selectedText + s5.value.substring(s5.insertOffset)
      },
      selection: s5.cursorOffset ? {
        anchor: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length + s5.cursorOffset,
        head: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length + s5.cursorOffset
      } : {
        anchor: selection.from + s5.value.substring(0, s5.insertOffset).length,
        head: selection.from + s5.value.substring(0, s5.insertOffset).length + selectedText.length
      }
    });
  };
  const makeMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.commands.makeMenu : void 0,
    onMouseDown: (e4) => {
      makeMenu(e4);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-slash"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.commands.selectStyle : void 0,
    onMouseDown: () => {
      setMode(1);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-style"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.commands.image : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView();
      props2.plugin.app.commands.commands["editor:attach-file"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-attach"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.commands.toggleKeyboard : void 0,
    onMouseDown: () => {
      const view = getActiveMarkdownView();
      props2.plugin.app.commands.commands["editor:toggle-keyboard"].editorCallback(view.editor, view);
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-make-keyboard"] }
  }));
  const colorsMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      setColorMode(null);
      setMode(1);
    },
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }), colors.map((c4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    onMouseDown: () => {
      var _a2;
      setMode(1);
      setColorMode(null);
      const cm = (_a2 = props2.cm) != null ? _a2 : getActiveCM();
      if (!cm)
        return;
      const selection = cm.state.selection.main;
      const selectedText = cm.state.sliceDoc(
        selection.from,
        selection.to
      );
      cm.dispatch({
        changes: {
          from: selection.from,
          to: selection.to,
          insert: colorMode.prefix + c4[1] + colorMode.suffix + selectedText + colorMode.closeTag
        }
      });
    },
    className: "mk-color",
    style: { background: c4[1] }
  })));
  const marksMode = () => /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, props2.mobile ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-mark",
    onMouseDown: () => {
      setMode(0);
    },
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  }) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), resolveStyles().map((s5, i4) => {
    return /* @__PURE__ */ Cn.createElement(Mark, {
      key: i4,
      i: i4,
      style: s5,
      active: props2.activeMarks.find((f4) => f4 == s5.mark) ? true : false,
      toggleMarkAction
    });
  }), props2.plugin.settings.inlineStylerColors ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-divider"
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.styles.textColor : void 0,
    onMouseDown: () => {
      setMode(2);
      setColorMode({
        prefix: `<span style='color:`,
        suffix: `'>`,
        closeTag: "</span>"
      });
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-mark-color"] }
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": !platformIsMobile() ? i18n_default.styles.highlight : void 0,
    onMouseDown: () => {
      setMode(2);
      setColorMode({
        prefix: `<mark style='background:`,
        suffix: `'>`,
        closeTag: "</mark>"
      });
    },
    className: "mk-mark",
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-mark-highlight"]
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
  return /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames5.default)("mk-style-menu", props2.mobile ? "" : "menu"),
    onMouseDown: (e4) => e4.preventDefault()
  }, mode == 0 && props2.mobile ? makeMode() : mode == 2 ? colorsMode() : marksMode());
};

// src/cm-extensions/inlineStylerView/inlineStyler.tsx
init_compat_module();
var cursorTooltipField = (plugin) => import_state8.StateField.define({
  create: getCursorTooltips(plugin),
  update(tooltips2, tr) {
    if (!tr.docChanged && !tr.selection)
      return tooltips2;
    return getCursorTooltips(plugin)(tr.state);
  },
  provide: (f4) => showTooltip.computeN([f4], (state) => state.field(f4))
});
var getCursorTooltips = (plugin) => (state) => {
  return state.selection.ranges.filter((range) => !range.empty).map((range) => {
    const expandedRange = expandRange(range, state);
    const line = state.doc.lineAt(range.head);
    const activeMarks = oMarks.map((f4) => rangeIsMark(state, f4, expandedRange) ? f4.mark : "").filter((f4) => f4 != "");
    return {
      pos: Math.min(range.head, range.anchor),
      above: true,
      strictSide: true,
      arrow: false,
      create: (view) => {
        const dom = document.createElement("div");
        dom.className = "cm-tooltip-cursor";
        const reactElement = createRoot(dom);
        reactElement.render(
          /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(InlineMenuComponent, {
            plugin,
            cm: view,
            activeMarks,
            mobile: false
          }))
        );
        return { dom };
      }
    };
  });
};
function cursorTooltip(plugin) {
  return cursorTooltipField(plugin);
}

// src/cm-extensions/placeholder.ts
var import_state9 = require("@codemirror/state");
var import_view6 = require("@codemirror/view");
var placeholderLine = import_view6.Decoration.line({
  attributes: { "data-ph": i18n_default.labels.placeholder },
  class: "mk-placeholder"
});
var placeholder = import_state9.StateField.define({
  create() {
    return import_view6.Decoration.none;
  },
  update(value, tr) {
    const builder = new import_state9.RangeSetBuilder();
    const currentLine = tr.state.doc.lineAt(tr.state.selection.main.head);
    if ((currentLine == null ? void 0 : currentLine.length) == 0)
      builder.add(currentLine.from, currentLine.from, placeholderLine);
    const dec = builder.finish();
    return dec;
  },
  provide: (f4) => import_view6.EditorView.decorations.from(f4)
});

// src/cm-extensions/inlineContext/inlineContext.tsx
var import_state10 = require("@codemirror/state");
var import_obsidian49 = require("obsidian");
var frontmatterHider = (plugin) => import_state10.EditorState.transactionFilter.of((tr) => {
  const newTrans = [];
  const isFM = (typeString) => {
    if (typeString.contains("hmd-frontmatter")) {
      return true;
    }
    return false;
  };
  let fmStart = 1;
  const fmEnd = tr.state.doc.lines;
  iterateTreeInDocument(tr.state, {
    enter: ({ type, from, to }) => {
      if (isFM(type.name)) {
        fmStart = tr.state.doc.lineAt(to).number + 1;
      }
    }
  });
  const livePreview = tr.state.field(import_obsidian49.editorLivePreviewField, false);
  if (fmStart > 1 && fmStart <= tr.state.doc.lines && plugin.settings.hideFrontmatter && livePreview) {
    newTrans.push({
      annotations: [contentRange.of([fmStart, fmEnd])]
    });
  } else {
    newTrans.push({
      annotations: [contentRange.of([null, null])]
    });
  }
  return [tr, ...newTrans];
});

// src/cm-extensions/lineNumbers.ts
var import_view7 = require("@codemirror/view");
var lineNumberExtension = (plugin) => (0, import_view7.lineNumbers)({
  formatNumber: (lineNo, state) => {
    if (!plugin.settings.inlineContext) {
      return lineNo.toString();
    }
    const isFM = (state2, typeString, from, to) => {
      if (typeString.contains("hmd-frontmatter")) {
        return true;
      }
      return false;
    };
    let fmEnd = 0;
    iterateTreeInDocument(state, {
      enter: ({ type, from, to }) => {
        if (isFM(state, type.name, from, to)) {
          fmEnd = to;
        }
      }
    });
    const newLine = fmEnd > 0 ? lineNo - state.doc.lineAt(Math.min(fmEnd, state.doc.length - 1)).number : lineNo;
    return newLine > 0 ? newLine.toString() : lineNo.toString();
  }
});

// src/cm-extensions/cmExtensions.ts
var cmExtensions = (plugin, mobile) => {
  const extensions = [...editBlockExtensions()];
  if (plugin.settings.makerMode) {
    if (plugin.settings.inlineContext && plugin.settings.lineNumbers) {
      extensions.push(lineNumberExtension(plugin));
    }
    if (plugin.settings.inlineContext && plugin.settings.makerMode && !corePluginEnabled(plugin.app, "properties"))
      extensions.push(...[frontmatterHider(plugin)]);
    extensions.push(
      ...[toggleMarkExtension, tooltips({ parent: document.body })]
    );
    if (!mobile && plugin.settings.inlineStyler) {
      extensions.push(cursorTooltip(plugin));
    }
    if (plugin.settings.flowMenuEnabled && plugin.settings.makeMenuPlaceholder)
      extensions.push(placeholder);
    if (plugin.settings.editorFlow) {
      extensions.push(
        flowTypeStateField,
        preloadFlowEditor,
        flowEditorField(plugin),
        flowEditorInfo,
        flowIDStateField,
        flowViewUpdates
      );
      if (plugin.settings.internalLinkClickFlow) {
        extensions.push(internalLinkToggle);
      } else {
        extensions.push(internalLinkHover);
      }
    }
  }
  return extensions;
};

// src/components/Space/Editor/MakeMenu/MakeMenu.tsx
var import_obsidian51 = require("obsidian");

// src/components/Space/Editor/MakeMenu/commands/default.ts
var default_default2 = [
  {
    label: "todo",
    value: "- [ ] ",
    icon: "ui//mk-make-todo"
  },
  {
    label: "list",
    value: `- `,
    icon: "ui//mk-make-list"
  },
  {
    label: "ordered-list",
    value: `1. `,
    icon: "ui//mk-make-ordered"
  },
  {
    label: "h1",
    value: "# ",
    icon: "ui//mk-make-h1"
  },
  {
    label: "h2",
    value: "## ",
    icon: "ui//mk-make-h2"
  },
  {
    label: "h3",
    value: "### ",
    icon: "ui//mk-make-h3"
  },
  {
    label: "quote",
    value: "> ",
    icon: "ui//mk-make-quote"
  },
  {
    label: "divider",
    value: `
---
`,
    icon: "ui//mk-make-hr"
  },
  {
    label: "link",
    value: "<Paste Link>",
    offset: [-1, 1],
    icon: "ui//mk-make-link"
  },
  {
    label: "image",
    value: "![](Paste Link)",
    offset: [-1, 4],
    icon: "ui//mk-make-image"
  },
  {
    label: "codeblock",
    value: `
\`\`\`
Type/Paste Your Code
\`\`\``,
    offset: [-4, 5],
    icon: "ui//mk-make-codeblock"
  },
  {
    label: "callout",
    value: `> [!NOTE]
> Content`,
    offset: [-7, 12],
    icon: "ui//mk-make-callout"
  },
  {
    label: "note",
    value: "[[Note Name]]",
    offset: [-2, 2],
    icon: "ui//mk-make-note"
  },
  {
    label: "table",
    value: "table",
    icon: "ui//mk-make-table"
  },
  {
    label: "flow",
    value: `!![[Note Name]]`,
    offset: [-2, 4],
    icon: "ui//mk-make-flow"
  },
  {
    label: "tag",
    value: "#tag",
    offset: [0, 1],
    icon: "ui//mk-make-tag"
  },
  {
    label: "column",
    value: `![![Kit/#*Columns?columns=#^column1,#^column2]]

Column
^column1

Column
^column2
    `,
    offset: [0, 0],
    icon: "ui//mk-make-tag"
  }
];

// src/components/Space/Editor/MakeMenu/commands/index.ts
function resolveCommands(plugin) {
  const allFrames = plugin.settings.quickFrames.flatMap((f4) => {
    var _a2;
    return (_a2 = plugin.index.framesIndex.get(f4)) == null ? void 0 : _a2.schemas.map((g4) => ({ ...g4, path: f4 }));
  }).map((f4) => {
    var _a2;
    return {
      label: f4.name,
      value: `![![${f4.path}#*${f4.id}]]`,
      icon: (_a2 = safelyParseJSON(f4.def)) == null ? void 0 : _a2.icon
    };
  });
  return [...default_default2, ...allFrames];
}

// src/components/Space/Editor/MakeMenu/MakeMenu.tsx
var MakeMenu = class extends import_obsidian51.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.inCmd = false;
    this.cmdStartCh = 0;
    this.plugin = plugin;
  }
  resetInfos() {
    this.cmdStartCh = 0;
    this.inCmd = false;
  }
  onTrigger(cursor, editor, _file) {
    const currentLine = editor.getLine(cursor.line).slice(0, cursor.ch);
    const triggerCharLength = this.plugin.settings.menuTriggerChar.length;
    this.file = _file;
    if (!this.inCmd && currentLine.slice(0, triggerCharLength) !== this.plugin.settings.menuTriggerChar && currentLine.slice(-2 - triggerCharLength) !== "- " + this.plugin.settings.menuTriggerChar) {
      this.resetInfos();
      return null;
    }
    if (!this.inCmd) {
      this.cmdStartCh = currentLine.length - triggerCharLength;
      this.inCmd = true;
    }
    const currentCmd = currentLine.slice(this.cmdStartCh, cursor.ch);
    if (currentCmd.includes(" ") || !currentCmd.includes(this.plugin.settings.menuTriggerChar)) {
      this.resetInfos();
      return null;
    }
    return {
      start: cursor,
      end: cursor,
      query: currentCmd.slice(triggerCharLength)
    };
  }
  getSuggestions(context) {
    const suggestions = resolveCommands(this.plugin).filter(
      ({ label }) => label.toLowerCase().includes(context.query.toLowerCase()) || i18n_default.commands[label] && i18n_default.commands[label].toLowerCase().includes(context.query.toLowerCase())
    );
    return suggestions.length > 0 ? suggestions : [{ label: i18n_default.commandsSuggest.noResult, value: "", icon: "" }];
  }
  renderSuggestion(value, el) {
    var _a2;
    if (value.value == "") {
      el.setText(i18n_default.commandsSuggest.noResult);
      return;
    }
    const div = el.createDiv("mk-slash-item");
    const icon = div.createDiv("mk-slash-icon");
    icon.innerHTML = stickerFromString(value.icon, this.plugin);
    const title = div.createDiv();
    title.setText((_a2 = i18n_default.commands[value.label]) != null ? _a2 : value.label);
  }
  selectSuggestion(cmd, _evt) {
    if (cmd.label === i18n_default.commandsSuggest.noResult)
      return;
    if (cmd.value == "table") {
      createInlineTable(this.plugin, this.file.parent.path).then((f4) => {
        this.context.editor.replaceRange(
          contextEmbedStringFromContext(
            spaceFromFolder(this.plugin, this.file.parent.path),
            f4
          ),
          { ...this.context.start, ch: this.cmdStartCh },
          this.context.end
        );
        this.context.editor.setSelection({
          line: this.context.start.line,
          ch: 0
        });
        this.resetInfos();
        this.close();
      });
    } else {
      this.context.editor.replaceRange(
        cmd.value,
        { ...this.context.start, ch: this.cmdStartCh },
        this.context.end
      );
      if (cmd.offset) {
        this.context.editor.setSelection(
          { ...this.context.start, ch: this.cmdStartCh + cmd.offset[1] },
          {
            ...this.context.end,
            ch: this.cmdStartCh + cmd.value.length + cmd.offset[0]
          }
        );
      }
      this.resetInfos();
      this.close();
    }
  }
};

// src/components/Space/Editor/StickerMenu/StickerMenu.tsx
var import_obsidian52 = require("obsidian");
init_compat_module();
var StickerMenu = class extends import_obsidian52.EditorSuggest {
  constructor(app2, plugin) {
    super(app2);
    this.inCmd = false;
    this.cmdStartCh = 0;
    this.plugin = plugin;
    this.emojis = Object.keys(emojis).reduce(
      (p3, c4) => [
        ...p3,
        ...emojis[c4].map((e4) => ({
          label: e4.n[0],
          desc: e4.n[1],
          variants: e4.v,
          unicode: e4.u
        }))
      ],
      []
    );
  }
  resetInfos() {
    this.cmdStartCh = 0;
    this.inCmd = false;
  }
  onTrigger(cursor, editor, _file) {
    const currentLine = editor.getLine(cursor.line).slice(0, cursor.ch);
    if (!this.inCmd && !(currentLine.slice(-2) == " " + this.plugin.settings.emojiTriggerChar || currentLine[0] == this.plugin.settings.emojiTriggerChar)) {
      this.resetInfos();
      return null;
    }
    if (!this.inCmd) {
      this.cmdStartCh = currentLine.length - 1;
      this.inCmd = true;
    }
    const currentCmd = currentLine.slice(this.cmdStartCh, cursor.ch);
    if (currentCmd.includes(" ") || !currentCmd.includes(this.plugin.settings.emojiTriggerChar)) {
      this.resetInfos();
      return null;
    }
    this.suggestEl.classList.toggle("mk-emoji-menu", true);
    return { start: cursor, end: cursor, query: currentCmd.slice(1) };
  }
  getSuggestions(context) {
    const suggestions = this.emojis.filter(
      ({ label, desc }) => label.includes(context.query) || (desc == null ? void 0 : desc.includes(context.query))
    );
    return suggestions.length > 0 ? suggestions : [{ label: i18n_default.commandsSuggest.noResult, unicode: "", desc: "" }];
  }
  renderSuggestion(value, el) {
    const div = document.createElement("div");
    div.setAttribute("aria-label", value.label);
    const reactElement = createRoot(div);
    reactElement.render(
      /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, value.unicode.length > 0 ? stickerFromString(value.unicode, this.plugin) : i18n_default.commandsSuggest.noResult)
    );
    el.appendChild(div);
  }
  selectSuggestion(cmd, _evt) {
    if (cmd.label === i18n_default.commandsSuggest.noResult)
      return;
    this.context.editor.replaceRange(
      stickerFromString(cmd.unicode, this.plugin),
      { ...this.context.start, ch: this.cmdStartCh },
      this.context.end
    );
    this.resetInfos();
    this.close();
  }
};

// src/main.ts
var import_obsidian72 = require("obsidian");

// src/utils/flow/markdownPost.tsx
init_compat_module();
var getCMFromElement = (el) => {
  let dom = el;
  while (!dom.hasClass("cm-editor") && dom.parentElement) {
    dom = dom.parentElement;
  }
  if (!dom.hasClass("cm-editor")) {
    return;
  }
  let rcm;
  app.workspace.iterateLeaves((leaf) => {
    var _a2;
    const cm = (_a2 = leaf.view.editor) == null ? void 0 : _a2.cm;
    if (cm && dom == cm.dom) {
      rcm = cm;
      return true;
    }
  }, app.workspace["rootSplit"]);
  return rcm;
};
var replaceAllTables = (plugin, el, ctx) => {
  el.querySelectorAll("p").forEach((element) => {
    for (let match2 of element.textContent.matchAll(
      /(?:!\[!\[|!!\[\[)([^\]]+)\]\]/g
    )) {
      const link = match2[1];
      const reactEl = createRoot(element.parentElement);
      reactEl.render(
        /* @__PURE__ */ Cn.createElement(FlowView, {
          plugin,
          path: link,
          load: true
        })
      );
    }
  });
};
var replaceMarkdownForEmbeds = (el, callback) => {
  let dom = el;
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    while (!dom.hasClass("markdown-embed") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (dom) {
      callback(dom);
    }
  });
};
var replaceMarkdownForReadingMode = (el, callback) => {
  let dom = el;
  setTimeout(async () => {
    let counter = 0;
    while (!el.parentElement && counter++ <= 50)
      await sleep(50);
    if (!el.parentElement)
      return;
    while (!dom.hasClass("markdown-reading-view") && !dom.hasClass("internal-embed") && dom.parentElement) {
      dom = dom.parentElement;
    }
    if (dom && dom.hasClass("markdown-reading-view")) {
      callback(dom);
    }
  });
};
var replaceAllEmbed = (el, ctx, plugin) => {
  replaceMarkdownForEmbeds(el, (dom) => {
    var nodes = dom.querySelectorAll(".markdown-embed-link");
    for (var i4 = 0; i4 < nodes.length; i4++) {
      if (nodes[i4].parentNode === dom) {
        dom.removeChild(nodes[i4]);
        const div = dom.createDiv("mk-floweditor-selector");
        const reactEl = createRoot(div);
        const cm = getCMFromElement(dom);
        const pos = cm == null ? void 0 : cm.posAtDOM(dom);
        reactEl.render(
          /* @__PURE__ */ Cn.createElement(FlowEditorHover, {
            toggle: true,
            path: uriByString(ctx.sourcePath),
            toggleState: false,
            view: cm,
            pos: { from: pos - 3, to: pos + 4 },
            plugin
          })
        );
      }
    }
  });
};

// src/components/Sidebar/FileTreeView.tsx
var import_obsidian57 = require("obsidian");
init_compat_module();

// src/context/SidebarContext.tsx
var import_lodash12 = __toESM(require_lodash());
init_compat_module();
var SidebarContext = F({
  dragPaths: [],
  setDragPaths: import_lodash12.default.noop,
  selectedFiles: [],
  setSelectedFiles: import_lodash12.default.noop,
  activeFile: null,
  setActiveFile: import_lodash12.default.noop,
  activeViewSpace: null,
  waypoints: [],
  setWaypoints: import_lodash12.default.noop,
  spaces: [],
  setSpaces: import_lodash12.default.noop,
  saveActiveSpace: import_lodash12.default.noop,
  activeQuery: [],
  setActiveQuery: import_lodash12.default.noop,
  queryResults: [],
  queryMode: false,
  setQueryMode: import_lodash12.default.noop
});
var SidebarProvider = (props2) => {
  const [dragPaths, setDragPaths] = h2([]);
  const [selectedFiles, setSelectedFiles] = h2([]);
  const [activeFile, setActiveFile] = h2(null);
  const [activeQuery, setActiveQuery] = h2([]);
  const [queryMode, setQueryMode] = h2(false);
  const [activeViewSpacePath, setActiveViewSpacePath] = h2(
    props2.plugin.settings.activeView
  );
  const [waypointPaths, setWaypointPaths] = h2(
    props2.plugin.settings.waypoints
  );
  const [spaces, setSpaces] = h2(
    props2.plugin.index.allSpaces()
  );
  const waypoints = F2(
    () => waypointPaths.map((f4) => spaces.find((g4) => g4.path == f4)).filter((f4) => f4),
    [spaces, waypointPaths]
  );
  const queryResults = F2(() => {
    const paths = [];
    props2.plugin.index.filesIndex.forEach((f4) => {
      if (fileByDef(activeQuery, f4)) {
        paths.push(f4.path);
      }
    });
    return paths;
  }, [activeQuery]);
  const activeViewSpace = F2(() => {
    const activeSpace = spaces.find((f4) => f4.path == activeViewSpacePath);
    return activeSpace;
  }, [activeViewSpacePath, spaces]);
  p2(() => {
    settingsReloaded();
    loadCachedSpaces();
  }, []);
  const settingsReloaded = () => {
    setActiveViewSpacePath(props2.plugin.settings.activeView);
    setWaypointPaths(props2.plugin.settings.waypoints);
  };
  const setActiveViewSpaceByPath = (path) => {
    setQueryMode(false);
    props2.plugin.settings.activeView = path;
    props2.plugin.saveSettings();
  };
  const setWaypoints = (paths) => {
    props2.plugin.settings.waypoints = paths;
    props2.plugin.saveSettings();
  };
  const loadCachedSpaces = T2(() => {
    const _spaces = props2.plugin.index.allSpaces();
    setSpaces(_spaces);
  }, [activeViewSpace]);
  p2(() => {
    window.addEventListener(eventTypes.spacesChange, loadCachedSpaces);
    window.addEventListener(eventTypes.settingsChanged, settingsReloaded);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, loadCachedSpaces);
      window.addEventListener(eventTypes.settingsChanged, settingsReloaded);
    };
  }, [loadCachedSpaces, settingsReloaded]);
  return /* @__PURE__ */ Cn.createElement(SidebarContext.Provider, {
    value: {
      dragPaths,
      setDragPaths,
      selectedFiles,
      setSelectedFiles,
      activeFile,
      setActiveFile,
      activeViewSpace,
      activeQuery,
      setActiveQuery,
      waypoints,
      setWaypoints,
      spaces,
      setSpaces,
      saveActiveSpace: setActiveViewSpaceByPath,
      queryResults,
      queryMode,
      setQueryMode
    }
  }, props2.children);
};

// src/components/Sidebar/TreeView/TreeNodeView.tsx
init_compat_module();
var import_classnames6 = __toESM(require_classnames());

// node_modules/react-dropzone/dist/es/index.js
init_compat_module();
var import_prop_types17 = __toESM(require_prop_types());

// node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath(file, path) {
  var f4 = withMimeType(file);
  if (typeof f4.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f4, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f4;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  ".DS_Store",
  "Thumbs.db"
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      if (isObject2(evt) && isDataTransfer(evt.dataTransfer)) {
        return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value) {
  return isObject2(value);
}
function isChangeEvt(value) {
  return isObject2(value) && isObject2(value.target);
}
function isObject2(v3) {
  return typeof v3 === "object" && v3 !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map(function(file) {
    return toFileWithPath(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function() {
    var files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h5) {
            return h5.getFile();
          }))];
        case 1:
          files = _a2.sent();
          return [2, files.map(function(file) {
            return toFileWithPath(file);
          })];
      }
    });
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a2.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i4 = 0; i4 < items.length; i4++) {
    var file = items[i4];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spreadArray2(__spreadArray2([], __read(acc), false), __read(Array.isArray(files) ? flatten(files) : [files]), false);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject("".concat(item, " is not a File"));
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a2.label = 1;
              case 1:
                _a2.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a2.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a2.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a2.label = 6;
              case 6:
                return [2];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function ownKeys(object, enumerableOnly) {
  var keys2 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys(Object(source), true).forEach(function(key2) {
      _defineProperty2(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty2(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _slicedToArray(arr, i4) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i4) || _unsupportedIterableToArray(arr, i4) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o3, minLen) {
  if (!o3)
    return;
  if (typeof o3 === "string")
    return _arrayLikeToArray(o3, minLen);
  var n2 = Object.prototype.toString.call(o3).slice(8, -1);
  if (n2 === "Object" && o3.constructor)
    n2 = o3.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o3);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o3, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n2 = true;
  var _d2 = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n2 = (_s = _i.next()).done); _n2 = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d2 = true;
    _e2 = err;
  } finally {
    try {
      if (!_n2 && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d2)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles, validator = _ref.validator;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    var customErrors = validator ? validator(file) : null;
    return accepted && sizeMatch && !customErrors;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn2) {
      if (!isPropagationStopped(event) && fn2) {
        fn2.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function pickerOptionsFromAccept(accept) {
  if (isDefined(accept)) {
    var acceptForPicker = Object.entries(accept).filter(function(_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2), mimeType = _ref3[0], ext = _ref3[1];
      var ok = true;
      if (!isMIMEType(mimeType)) {
        console.warn('Skipped "'.concat(mimeType, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.'));
        ok = false;
      }
      if (!Array.isArray(ext) || !ext.every(isExt)) {
        console.warn('Skipped "'.concat(mimeType, '" because an invalid file extension was provided.'));
        ok = false;
      }
      return ok;
    }).reduce(function(agg, _ref4) {
      var _ref5 = _slicedToArray(_ref4, 2), mimeType = _ref5[0], ext = _ref5[1];
      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty2({}, mimeType, ext));
    }, {});
    return [{
      description: "Files",
      accept: acceptForPicker
    }];
  }
  return accept;
}
function acceptPropAsAcceptAttr(accept) {
  if (isDefined(accept)) {
    return Object.entries(accept).reduce(function(a5, _ref6) {
      var _ref7 = _slicedToArray(_ref6, 2), mimeType = _ref7[0], ext = _ref7[1];
      return [].concat(_toConsumableArray(a5), [mimeType], _toConsumableArray(ext));
    }, []).filter(function(v3) {
      return isMIMEType(v3) || isExt(v3);
    }).join(",");
  }
  return void 0;
}
function isAbort(v3) {
  return v3 instanceof DOMException && (v3.name === "AbortError" || v3.code === v3.ABORT_ERR);
}
function isSecurityError(v3) {
  return v3 instanceof DOMException && (v3.name === "SecurityError" || v3.code === v3.SECURITY_ERR);
}
function isMIMEType(v3) {
  return v3 === "audio/*" || v3 === "video/*" || v3 === "image/*" || v3 === "text/*" || /\w+\/[-+.\w]+/g.test(v3);
}
function isExt(v3) {
  return /^.*\.[\w]+$/.test(v3);
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded = ["children"];
var _excluded2 = ["open"];
var _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i4) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i4) || _unsupportedIterableToArray2(arr, i4) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o3, minLen) {
  if (!o3)
    return;
  if (typeof o3 === "string")
    return _arrayLikeToArray2(o3, minLen);
  var n2 = Object.prototype.toString.call(o3).slice(8, -1);
  if (n2 === "Object" && o3.constructor)
    n2 = o3.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o3);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray2(o3, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n2 = true;
  var _d2 = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n2 = (_s = _i.next()).done); _n2 = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d2 = true;
    _e2 = err;
  } finally {
    try {
      if (!_n2 && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d2)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys2 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys2(Object(source), true).forEach(function(key2) {
      _defineProperty3(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty3(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key2, i4;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i4 = 0; i4 < sourceSymbolKeys.length; i4++) {
      key2 = sourceSymbolKeys[i4];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i4;
  for (i4 = 0; i4 < sourceKeys.length; i4++) {
    key2 = sourceKeys[i4];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
var Dropzone = /* @__PURE__ */ k3(function(_ref, ref2) {
  var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props2 = _objectWithoutProperties(_useDropzone, _excluded2);
  A2(ref2, function() {
    return {
      open
    };
  }, [open]);
  return /* @__PURE__ */ Cn.createElement(_, null, children(_objectSpread2(_objectSpread2({}, props2), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps2 = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: true,
  autoFocus: false
};
Dropzone.defaultProps = defaultProps2;
Dropzone.propTypes = {
  children: import_prop_types17.default.func,
  accept: import_prop_types17.default.objectOf(import_prop_types17.default.arrayOf(import_prop_types17.default.string)),
  multiple: import_prop_types17.default.bool,
  preventDropOnDocument: import_prop_types17.default.bool,
  noClick: import_prop_types17.default.bool,
  noKeyboard: import_prop_types17.default.bool,
  noDrag: import_prop_types17.default.bool,
  noDragEventsBubbling: import_prop_types17.default.bool,
  minSize: import_prop_types17.default.number,
  maxSize: import_prop_types17.default.number,
  maxFiles: import_prop_types17.default.number,
  disabled: import_prop_types17.default.bool,
  getFilesFromEvent: import_prop_types17.default.func,
  onFileDialogCancel: import_prop_types17.default.func,
  onFileDialogOpen: import_prop_types17.default.func,
  useFsAccessApi: import_prop_types17.default.bool,
  autoFocus: import_prop_types17.default.bool,
  onDragEnter: import_prop_types17.default.func,
  onDragLeave: import_prop_types17.default.func,
  onDragOver: import_prop_types17.default.func,
  onDrop: import_prop_types17.default.func,
  onDropAccepted: import_prop_types17.default.func,
  onDropRejected: import_prop_types17.default.func,
  onError: import_prop_types17.default.func,
  validator: import_prop_types17.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$props = _objectSpread2(_objectSpread2({}, defaultProps2), props2), accept = _defaultProps$props.accept, disabled = _defaultProps$props.disabled, getFilesFromEvent = _defaultProps$props.getFilesFromEvent, maxSize = _defaultProps$props.maxSize, minSize = _defaultProps$props.minSize, multiple = _defaultProps$props.multiple, maxFiles = _defaultProps$props.maxFiles, onDragEnter = _defaultProps$props.onDragEnter, onDragLeave = _defaultProps$props.onDragLeave, onDragOver = _defaultProps$props.onDragOver, onDrop = _defaultProps$props.onDrop, onDropAccepted = _defaultProps$props.onDropAccepted, onDropRejected = _defaultProps$props.onDropRejected, onFileDialogCancel = _defaultProps$props.onFileDialogCancel, onFileDialogOpen = _defaultProps$props.onFileDialogOpen, useFsAccessApi = _defaultProps$props.useFsAccessApi, autoFocus = _defaultProps$props.autoFocus, preventDropOnDocument = _defaultProps$props.preventDropOnDocument, noClick = _defaultProps$props.noClick, noKeyboard = _defaultProps$props.noKeyboard, noDrag = _defaultProps$props.noDrag, noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling, onError = _defaultProps$props.onError, validator = _defaultProps$props.validator;
  var acceptAttr = F2(function() {
    return acceptPropAsAcceptAttr(accept);
  }, [accept]);
  var pickerTypes = F2(function() {
    return pickerOptionsFromAccept(accept);
  }, [accept]);
  var onFileDialogOpenCb = F2(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop2;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = F2(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop2;
  }, [onFileDialogCancel]);
  var rootRef = _2(null);
  var inputRef = _2(null);
  var _useReducer = s2(reducer2, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive;
  var fsAccessApiWorksRef = _2(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  p2(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = _2([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  p2(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  p2(function() {
    if (!disabled && autoFocus && rootRef.current) {
      rootRef.current.focus();
    }
    return function() {
    };
  }, [rootRef, autoFocus, disabled]);
  var onErrCb = T2(function(e4) {
    if (onError) {
      onError(e4);
    } else {
      console.error(e4);
    }
  }, [onError]);
  var onDragEnterCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    dragTargetsRef.current = [].concat(_toConsumableArray2(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        var fileCount = files.length;
        var isDragAccept = fileCount > 0 && allFilesAccepted({
          files,
          accept: acceptAttr,
          minSize,
          maxSize,
          multiple,
          maxFiles,
          validator
        });
        var isDragReject = fileCount > 0 && !isDragAccept;
        dispatch({
          isDragAccept,
          isDragReject,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      }).catch(function(e4) {
        return onErrCb(e4);
      });
    }
  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);
  var onDragOverCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      type: "setDraggedFiles",
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = T2(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, acceptAttr), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e4) {
            return e4;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = T2(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation2(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      }).catch(function(e4) {
        return onErrCb(e4);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]);
  var openFileDialog = T2(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: pickerTypes
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e4) {
        if (isAbort(e4)) {
          onFileDialogCancelCb(e4);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e4)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          } else {
            onErrCb(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."));
          }
        } else {
          onErrCb(e4);
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]);
  var onKeyDownCb = T2(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = T2(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = T2(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = T2(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn2) {
    return disabled ? null : fn2;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
    return noKeyboard ? null : composeHandler(fn2);
  };
  var composeDragHandler = function composeDragHandler2(fn2) {
    return noDrag ? null : composeHandler(fn2);
  };
  var stopPropagation2 = function stopPropagation3(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = F2(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
      return _objectSpread2(_objectSpread2(_defineProperty3({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "presentation"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = T2(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = F2(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
      var inputProps = _defineProperty3({
        accept: acceptAttr,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer2(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isDragActive: action.isDragActive,
        isDragAccept: action.isDragAccept,
        isDragReject: action.isDragReject
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread2({}, initialState);
    default:
      return state;
  }
}
function noop2() {
}

// src/components/Sidebar/TreeView/TreeNodeView.tsx
var animateLayoutChanges2 = ({
  isSorting,
  wasDragging
}) => isSorting || wasDragging ? false : true;
var SortableTreeItem = ({
  id: id2,
  data: data2,
  depth,
  disabled,
  style,
  dragActive,
  dragStarted,
  dragOver,
  dragEnded,
  ...props2
}) => {
  const {
    attributes,
    isDragging,
    isSorting,
    listeners,
    setDraggableNodeRef,
    setDroppableNodeRef,
    transform,
    transition
  } = useSortable({
    id: id2,
    animateLayoutChanges: animateLayoutChanges2,
    disabled,
    data: data2
  });
  const memoListeners = F2(() => {
    return {
      ...attributes,
      ...listeners
    };
  }, [isSorting]);
  return /* @__PURE__ */ Cn.createElement(TreeItem, {
    ref: setDraggableNodeRef,
    wrapperRef: setDroppableNodeRef,
    data: data2,
    depth,
    ghost: isDragging,
    disableInteraction: isSorting,
    disabled,
    dragActive,
    style: platformIsMobile() ? { ...style, transform: CSS.Translate.toString(transform) } : style,
    handleProps: memoListeners,
    dragOver,
    dragStarted,
    dragEnded,
    ...props2
  });
};
var TreeItem = k3(
  ({
    childCount,
    clone: clone2,
    data: data2,
    depth,
    disableSelection,
    dragActive,
    disableInteraction,
    ghost,
    handleProps,
    active,
    indentationWidth,
    indicator,
    collapsed,
    selected,
    highlighted,
    onCollapse,
    onSelectRange,
    wrapperRef,
    style,
    plugin,
    disabled,
    dragStarted,
    dragOver,
    dragEnded
  }, ref2) => {
    const {
      activeFile,
      setActiveFile,
      selectedFiles,
      setSelectedFiles,
      setDragPaths
    } = q2(SidebarContext);
    const [hoverTarget, setHoverTarget] = h2(null);
    const innerRef = _2(null);
    const [dropHighlighted, setDropHighlighted] = h2(false);
    const [fileCache, setFileCache] = h2(data2.item);
    const openFileAtTarget = (file, e4) => {
      if (e4.shiftKey) {
        onSelectRange(file.id);
        return;
      }
      if (file.item.cacheType == "space") {
        openSpace(
          file.item.path,
          plugin,
          e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
        );
        return;
      }
      if (data2.item.isFolder) {
        onCollapse(data2, true);
      }
      if (!plugin.settings.contextEnabled) {
        if (!file.item.isFolder) {
          openAFile(
            getAbstractFileAtPath(app, file.item.path),
            plugin,
            e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
          );
          setActiveFile(uriByString(file.item.path));
          setSelectedFiles([file]);
        }
      } else {
        openAFile(
          getAbstractFileAtPath(app, file.item.path),
          plugin,
          e4.ctrlKey || e4.metaKey ? e4.altKey ? "split" : "tab" : false
        );
        setActiveFile(uriByString(file.item.path));
        setSelectedFiles([file]);
      }
    };
    const onDragStarted = (e4) => {
      if (selectedFiles.length > 1) {
        setDragPaths(selectedFiles.map((f4) => f4.path));
        const files = selectedFiles.map((f4) => f4.file).filter((f4) => f4);
        app.dragManager.onDragStart(e4, {
          icon: "lucide-files",
          source: void 0,
          title: i18n_default.labels.filesCount.replace(
            "{$1}",
            files.length.toString()
          ),
          type: "files",
          files
        });
        app.dragManager.dragFiles(e4, files, true);
        return;
      }
      dragStarted(data2.id);
      setDragPaths([data2.path]);
      if (data2.type == "folder") {
        const file = getAbstractFileAtPath(app, data2.path);
        if (file)
          app.dragManager.onDragStart(e4, {
            icon: "lucide-folder",
            source: void 0,
            title: file.name,
            type: "folder",
            file
          });
        app.dragManager.dragFolder(e4, file, true);
      } else if (data2.type == "file") {
        const file = getAbstractFileAtPath(app, data2.path);
        if (file)
          app.dragManager.onDragStart(e4, {
            icon: "lucide-file",
            source: void 0,
            title: file.name,
            type: "file",
            file
          });
      }
    };
    const onDragOver = (e4) => {
      e4.preventDefault();
      if (!innerRef.current)
        return;
      const rect = innerRef.current.getBoundingClientRect();
      const x5 = e4.clientX - rect.left;
      const y5 = e4.clientY - rect.top;
      dragOver(data2.id, { x: x5, y: y5 });
    };
    const onKeyDown = (e4) => {
      if (e4.key === "Control" || e4.key === "Meta") {
        if (e4.repeat)
          return;
        const el = hoverTarget;
        if (el)
          plugin.app.workspace.trigger(
            "link-hover",
            {},
            el,
            data2.item.path,
            data2.item.path
          );
      }
    };
    const onDrop = T2((files) => {
      if (data2.item.cacheType == "space" && data2.item.type == "folder") {
        files.map(async (file) => {
          file.arrayBuffer().then((arrayBuffer) => {
            plugin.app.vault.adapter.writeBinary(
              data2.item.path + "/" + file.name,
              arrayBuffer
            );
          });
        });
      }
    }, []);
    const onDragEnter = T2(() => {
      if (data2.item.cacheType == "space" && data2.item.type == "folder")
        setDropHighlighted(true);
    }, []);
    const { getRootProps, getInputProps, isDragActive } = useDropzone({
      onDrop,
      onDragEnter,
      onDragLeave: () => setDropHighlighted(false),
      onDropAccepted: () => setDropHighlighted(false),
      onDropRejected: () => setDropHighlighted(false),
      noClick: true
    });
    const onDragEnded = (e4) => {
      dragEnded(data2.id);
    };
    const mouseOut = (e4) => {
      setHoverTarget(null);
    };
    const newAction = (e4) => {
      const space = data2.item;
      newFileInSpace(plugin, space.space, space.space.uri);
    };
    const handleRightClick = (e4) => {
      if (data2.item.cacheType == "space") {
        triggerSpaceMenu(
          plugin,
          data2.item,
          e4,
          activeFile,
          data2.space
        );
        return;
      }
      selectedFiles.length > 1 && selectedFiles.some((f4) => f4.id == data2.id) ? triggerMultiFileMenu(plugin, selectedFiles, e4) : contextMenu(e4);
    };
    const contextMenu = (e4) => {
      if (data2.item.cacheType == "space") {
        triggerSpaceMenu(
          plugin,
          data2.item,
          e4,
          activeFile,
          data2.space
        );
        return;
      }
      triggerFileMenu(plugin, data2.file, isFolder, e4, data2.space);
    };
    const updateFileCache = (evt) => {
      if (evt.detail.type == "file" && evt.detail.name == data2.item.path) {
        const fileCache2 = plugin.index.filesIndex.get(data2.item.path);
        if (fileCache2)
          setFileCache(fileCache2);
      } else if (evt.detail.type == "space" && evt.detail.name == data2.item.path) {
        const fileCache2 = plugin.index.spacesIndex.get(data2.item.path);
        if (fileCache2)
          setFileCache(fileCache2);
      }
    };
    p2(() => {
      window.addEventListener(eventTypes.spacesChange, updateFileCache);
      return () => {
        window.removeEventListener(eventTypes.spacesChange, updateFileCache);
      };
    }, []);
    const hoverItem = (e4) => {
      if (plugin.settings.filePreviewOnHover) {
        setHoverTarget(e4.target);
        if (e4.ctrlKey || e4.metaKey) {
          plugin.app.workspace.trigger(
            "link-hover",
            {},
            e4.target,
            data2.item.path,
            data2.item.path
          );
        }
      }
    };
    p2(() => {
      if (hoverTarget && plugin.settings.filePreviewOnHover) {
        window.addEventListener("keydown", onKeyDown);
        return () => {
          window.removeEventListener("keydown", onKeyDown);
        };
      }
    }, [hoverTarget]);
    const dropProps = !platformIsMobile() ? {
      onDragOver
    } : {};
    const innerProps = !platformIsMobile() ? {
      draggable: true,
      onDragStart: onDragStarted,
      onDrop: onDragEnded
    } : handleProps;
    const isFolder = data2.item.cacheType == "space" || data2.item.isFolder;
    const isFolderNote2 = data2.item.cacheType == "file" && data2.item.folderNote;
    const extension = data2.item.cacheType == "file" && data2.item.extension;
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
      className: (0, import_classnames6.default)(
        "mk-tree-wrapper",
        clone2 && "mk-clone",
        ghost && "mk-ghost",
        disableSelection && "mk-disable-selection",
        disableInteraction && "mk-disable-interaction",
        highlighted ? "is-highlighted" : ""
      ),
      style: { position: "relative" },
      ref: innerRef,
      onMouseLeave: mouseOut,
      onMouseEnter: hoverItem,
      onKeyDown,
      onClick: (e4) => openFileAtTarget(data2, e4),
      onContextMenu: (e4) => handleRightClick(e4),
      ...dropProps,
      ...innerProps
    }, /* @__PURE__ */ Cn.createElement("div", {
      className: (0, import_classnames6.default)(
        data2.item.cacheType == "space" || isFolder ? "nav-folder" : "nav-file"
      ),
      ref: wrapperRef,
      style: {
        ...style,
        ...dragActive ? { pointerEvents: "none" } : {}
      },
      ...getRootProps({ className: "dropzone" })
    }, /* @__PURE__ */ Cn.createElement("input", {
      ...getInputProps()
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: (0, import_classnames6.default)(
        "mk-tree-item",
        "tree-item-self",
        isFolder ? "nav-folder-title" : "nav-file-title",
        isFolderNote2 ? "mk-folder-is-folder-note" : "",
        active ? "is-active" : "",
        selected ? "is-selected" : "",
        indicator || dropHighlighted ? "mk-indicator-row" : ""
      ),
      ref: ref2,
      style: {
        "--spacing": `${indentationWidth * depth}px`,
        "--childrenCount": `${childCount * spaceRowHeight(plugin) - 13}px`
      },
      "data-path": fileCache.path
    }, data2.item.cacheType == "space" ? /* @__PURE__ */ Cn.createElement("button", {
      "aria-label": `${collapsed ? i18n_default.labels.expand : i18n_default.labels.collapse}`,
      className: `mk-collapse mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
      onClick: (e4) => {
        onCollapse(data2, false);
        e4.stopPropagation();
      },
      dangerouslySetInnerHTML: {
        __html: uiIconSet["mk-ui-collapse"]
      }
    }) : /* @__PURE__ */ Cn.createElement("div", {
      className: `mk-collapse mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`
    }), plugin.settings.spacesStickers && fileCache && /* @__PURE__ */ Cn.createElement(FileSticker, {
      plugin,
      fileCache
    }), /* @__PURE__ */ Cn.createElement("div", {
      className: `mk-tree-text ${isFolder ? "nav-folder-title-content" : "nav-file-title-content"}`
    }, plugin.settings.spacesUseAlias ? fileCache.alias : fileCache.name), !isFolder && extension != "md" && /* @__PURE__ */ Cn.createElement("span", {
      className: "nav-file-tag"
    }, extension), !clone2 ? /* @__PURE__ */ Cn.createElement("div", {
      className: "mk-folder-buttons"
    }, /* @__PURE__ */ Cn.createElement("button", {
      "aria-label": i18n_default.buttons.moreOptions,
      onClick: (e4) => {
        contextMenu(e4);
      },
      dangerouslySetInnerHTML: {
        __html: uiIconSet["mk-ui-options"]
      }
    }), isFolder && /* @__PURE__ */ Cn.createElement("button", {
      "aria-label": i18n_default.buttons.newNote,
      onClick: (e4) => {
        newAction(e4);
      },
      dangerouslySetInnerHTML: {
        __html: uiIconSet["mk-ui-plus"]
      }
    })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null)))));
  }
);
TreeItem.displayName = "TreeItem";

// src/hooks/ForceUpdate.tsx
init_compat_module();
function useForceUpdate() {
  const [value, setValue] = h2(0);
  return () => setValue((value2) => value2 + 1);
}

// src/components/Sidebar/TreeView/FileExplorerVirtualized.tsx
init_compat_module();
init_compat_module();

// src/utils/dnd/dragFile.ts
function getMaxDepth({ previousItem }) {
  var _a2;
  if (previousItem) {
    if (((_a2 = previousItem.item) == null ? void 0 : _a2.cacheType) == "space" && !previousItem.collapsed)
      return previousItem.depth + 1;
    return previousItem.depth;
  }
  return 0;
}
function getMinDepth({ previousItem }) {
  if (previousItem) {
    return Math.max(0, previousItem.depth - 1);
  }
  return 0;
}
function getDragDepth(offset2, indentationWidth) {
  return Math.round(offset2 / indentationWidth);
}
var getMultiProjection = (flattenedTree, paths, overIndex) => {
  const overItem = flattenedTree[overIndex];
  if (!overItem)
    return;
  const dropTarget = overItem.type == "file" ? flattenedTree.find((f4) => f4.id == overItem.parentId) : overItem;
  const droppable = paths.map((f4) => uriByString(f4)).filter(
    (f4) => dropTarget.dropableTypes.some((g4) => g4 == f4.type)
  );
  if (droppable.length > 0) {
    const _projected = {
      depth: overItem.depth,
      overId: overItem.id,
      parentId: dropTarget.id,
      sortable: false,
      insert: dropTarget.collapsed,
      droppable: true
    };
    return _projected;
  }
  return null;
};
function getProjection(items, paths, overItemIndex, dragDepth, yOffset) {
  if (paths.length == 0)
    return null;
  if (paths.length > 1)
    return getMultiProjection(items, paths, overItemIndex);
  const path = uriByString(paths[0]);
  const overItem = items[overItemIndex];
  const previousItem = items[overItemIndex];
  const nextItem = items[overItemIndex + 1];
  if (!previousItem)
    return;
  if (nodeIsAncestorOfTarget(path, previousItem.uri)) {
    return null;
  }
  const previousItemDroppable = previousItem.dropableTypes.some((f4) => path.type == f4);
  const insert2 = overItem.collapsed && previousItemDroppable && (!overItem.sortable || yOffset <= 13);
  const sortable = overItem.sortable || previousItemDroppable && !insert2 && nextItem.sortable;
  const projectedDepth = dragDepth;
  const maxDepth = getMaxDepth({
    previousItem
  });
  const minDepth = getMinDepth({ previousItem });
  let depth = projectedDepth;
  if (projectedDepth >= maxDepth) {
    depth = maxDepth;
  } else if (projectedDepth < minDepth) {
    depth = minDepth;
  }
  const parentId = getParentId();
  const parent = items.find((f4) => f4.id == parentId);
  return {
    depth,
    overId: previousItem.id,
    parentId,
    sortable,
    insert: insert2,
    droppable: parent == null ? void 0 : parent.dropableTypes.some((f4) => f4 == path.type)
  };
  function getParentId() {
    var _a2;
    if (depth === 0) {
      return null;
    }
    if (!previousItem) {
      return null;
    }
    if (depth === previousItem.depth || depth > previousItem.depth && previousItem.item.cacheType != "space") {
      return previousItem.parentId;
    }
    if (depth > previousItem.depth) {
      return previousItem.id;
    }
    const newParent = (_a2 = items.slice(0, overItemIndex).reverse().find((item) => item.depth === depth)) == null ? void 0 : _a2.parentId;
    return newParent != null ? newParent : null;
  }
}

// src/utils/dnd/dropFile.ts
var dropFilesInTree = async (plugin, paths, active, over, projected, flattenedTree, activeSpace) => {
  var _a2, _b2;
  if (paths.length == 1) {
    dropFileInTree(plugin, paths[0], active, over, projected, flattenedTree, activeSpace);
    return;
  }
  if (projected) {
    const overIndex = flattenedTree.findIndex(({ id: id2 }) => id2 === over);
    const overItem = flattenedTree[overIndex];
    const dropTarget = overItem.type == "file" ? overItem.depth == 0 ? activeSpace : (_a2 = flattenedTree.find((f4) => f4.id == overItem.parentId)) == null ? void 0 : _a2.item : overItem.item;
    const dropableTypes = droppableTypesForSpace(dropTarget.type);
    const droppable = paths.map((f4) => uriByString(f4)).filter(
      (f4) => dropableTypes.some((g4) => g4 == f4.type) && !nodeIsAncestorOfTarget(f4, dropTarget.space.uri)
    );
    const parentId = projected.insert ? over : projected.parentId;
    const newSpace = (_b2 = flattenedTree.find(({ id: id2 }) => id2 === parentId)) == null ? void 0 : _b2.item;
    if (!newSpace)
      return;
    movePathsToSpace(plugin, droppable.map((f4) => f4.path), newSpace);
  }
};
var dropFileInTree = async (plugin, path, active, over, projected, flattenedTree, activeSpace) => {
  var _a2, _b2, _c2, _d2;
  if (projected) {
    const clonedItems = flattenedTree;
    const overIndex = clonedItems.findIndex(({ id: id2 }) => id2 === over);
    const overItem = clonedItems[overIndex];
    const parentId = projected.insert ? over : projected.parentId;
    const newSpace = projected.depth == 0 && !projected.insert ? activeSpace : (_a2 = clonedItems.find(({ id: id2 }) => id2 === parentId)) == null ? void 0 : _a2.item;
    let newRank = parentId == overItem.id ? "-1" : (_c2 = (_b2 = overItem.item) == null ? void 0 : _b2.rank) != null ? _c2 : "-1";
    if (!newSpace)
      return;
    if (newSpace.path == homeSpace.path) {
      newRank = plugin.settings.rootSpaces.findIndex((f4) => f4 == overItem.path).toString();
    }
    if (!active) {
      movePathToSpace(plugin, path, null, newSpace, parseInt(newRank));
      return;
    }
    const activeIndex = clonedItems.findIndex(({ id: id2 }) => id2 === active);
    const activeItem = clonedItems[activeIndex];
    const oldSpace = activeItem.parentId == activeSpace.path ? activeSpace : (_d2 = clonedItems.find(({ id: id2 }) => id2 === activeItem.parentId)) == null ? void 0 : _d2.item;
    movePathToSpace(plugin, activeItem.item.path, oldSpace, newSpace, parseInt(newRank));
  }
};

// node_modules/@tanstack/react-virtual/build/esm/index.js
init_compat_module();
init_compat_module();
function _extends10() {
  _extends10 = Object.assign || function(target) {
    for (var i4 = 1; i4 < arguments.length; i4++) {
      var source = arguments[i4];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i4;
  for (i4 = 0; i4 < sourceKeys.length; i4++) {
    key2 = sourceKeys[i4];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
var props = ["bottom", "height", "left", "right", "top", "width"];
var rectChanged = function rectChanged2(a5, b4) {
  if (a5 === void 0) {
    a5 = {};
  }
  if (b4 === void 0) {
    b4 = {};
  }
  return props.some(function(prop) {
    return a5[prop] !== b4[prop];
  });
};
var observedNodes = /* @__PURE__ */ new Map();
var rafId;
var run = function run2() {
  var changedStates = [];
  observedNodes.forEach(function(state, node) {
    var newRect = node.getBoundingClientRect();
    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function(state) {
    state.callbacks.forEach(function(cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run2);
};
function observeRect(node, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;
      if (observedNodes.has(node)) {
        observedNodes.get(node).callbacks.push(cb);
      } else {
        observedNodes.set(node, {
          rect: void 0,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }
      if (wasEmpty)
        run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node);
      if (state) {
        var index = state.callbacks.indexOf(cb);
        if (index >= 0)
          state.callbacks.splice(index, 1);
        if (!state.callbacks.length)
          observedNodes["delete"](node);
        if (!observedNodes.size)
          cancelAnimationFrame(rafId);
      }
    }
  };
}
var useIsomorphicLayoutEffect3 = typeof window !== "undefined" ? y2 : p2;
function rectReducer(state, action) {
  var rect = action.rect;
  if (state.height !== rect.height || state.width !== rect.width) {
    return rect;
  }
  return state;
}
var useRect2 = function useRect3(nodeRef, initialRect) {
  if (initialRect === void 0) {
    initialRect = {
      width: 0,
      height: 0
    };
  }
  var _React$useState = Cn.useState(nodeRef.current), element = _React$useState[0], setElement = _React$useState[1];
  var _React$useReducer = Cn.useReducer(rectReducer, initialRect), rect = _React$useReducer[0], dispatch = _React$useReducer[1];
  var initialRectSet = Cn.useRef(false);
  useIsomorphicLayoutEffect3(function() {
    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  useIsomorphicLayoutEffect3(function() {
    if (element && !initialRectSet.current) {
      initialRectSet.current = true;
      var _rect = element.getBoundingClientRect();
      dispatch({
        rect: _rect
      });
    }
  }, [element]);
  Cn.useEffect(function() {
    if (!element) {
      return;
    }
    var observer = observeRect(element, function(rect2) {
      dispatch({
        rect: rect2
      });
    });
    observer.observe();
    return function() {
      observer.unobserve();
    };
  }, [element]);
  return rect;
};
var _excluded5 = ["align"];
var defaultEstimateSize = function defaultEstimateSize2() {
  return 50;
};
var defaultKeyExtractor = function defaultKeyExtractor2(index) {
  return index;
};
var defaultMeasureSize = function defaultMeasureSize2(el, horizontal) {
  var key2 = horizontal ? "offsetWidth" : "offsetHeight";
  return el[key2];
};
var defaultRangeExtractor = function defaultRangeExtractor2(range) {
  var start = Math.max(range.start - range.overscan, 0);
  var end = Math.min(range.end + range.overscan, range.size - 1);
  var arr = [];
  for (var _i = start; _i <= end; _i++) {
    arr.push(_i);
  }
  return arr;
};
var useVirtual = function useVirtual2(_ref) {
  var _measurements;
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 0 : _ref$size, _ref$estimateSize = _ref.estimateSize, estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize, _ref$overscan = _ref.overscan, overscan = _ref$overscan === void 0 ? 1 : _ref$overscan, _ref$paddingStart = _ref.paddingStart, paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart, _ref$paddingEnd = _ref.paddingEnd, paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd, parentRef = _ref.parentRef, _ref$horizontal = _ref.horizontal, horizontal = _ref$horizontal === void 0 ? false : _ref$horizontal, scrollToFn = _ref.scrollToFn, useObserver = _ref.useObserver, initialRect = _ref.initialRect, onScrollElement = _ref.onScrollElement, scrollOffsetFn = _ref.scrollOffsetFn, _ref$keyExtractor = _ref.keyExtractor, keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor, _ref$measureSize = _ref.measureSize, measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize, _ref$rangeExtractor = _ref.rangeExtractor, rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;
  var sizeKey = horizontal ? "width" : "height";
  var scrollKey = horizontal ? "scrollLeft" : "scrollTop";
  var latestRef = _2({
    outerSize: 0,
    scrollOffset: 0,
    measurements: [],
    totalSize: 0
  });
  var _React$useState = h2(0), scrollOffset = _React$useState[0], setScrollOffset = _React$useState[1];
  latestRef.current.scrollOffset = scrollOffset;
  var useMeasureParent = useObserver || useRect2;
  var _useMeasureParent = useMeasureParent(parentRef, initialRect), outerSize = _useMeasureParent[sizeKey];
  latestRef.current.outerSize = outerSize;
  var defaultScrollToFn = T2(function(offset2) {
    if (parentRef.current) {
      parentRef.current[scrollKey] = offset2;
    }
  }, [parentRef, scrollKey]);
  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;
  var scrollTo = T2(function(offset2) {
    resolvedScrollToFn(offset2, defaultScrollToFn);
  }, [defaultScrollToFn, resolvedScrollToFn]);
  var _React$useState2 = h2({}), measuredCache = _React$useState2[0], setMeasuredCache = _React$useState2[1];
  var measure = T2(function() {
    return setMeasuredCache({});
  }, []);
  var pendingMeasuredCacheIndexesRef = _2([]);
  var measurements = F2(function() {
    var min3 = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;
    pendingMeasuredCacheIndexesRef.current = [];
    var measurements2 = latestRef.current.measurements.slice(0, min3);
    for (var _i2 = min3; _i2 < size; _i2++) {
      var key2 = keyExtractor(_i2);
      var measuredSize = measuredCache[key2];
      var _start = measurements2[_i2 - 1] ? measurements2[_i2 - 1].end : paddingStart;
      var _size = typeof measuredSize === "number" ? measuredSize : estimateSize(_i2);
      var _end = _start + _size;
      measurements2[_i2] = {
        index: _i2,
        start: _start,
        size: _size,
        end: _end,
        key: key2
      };
    }
    return measurements2;
  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);
  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;
  latestRef.current.measurements = measurements;
  latestRef.current.totalSize = totalSize;
  var element = onScrollElement ? onScrollElement.current : parentRef.current;
  var scrollOffsetFnRef = _2(scrollOffsetFn);
  scrollOffsetFnRef.current = scrollOffsetFn;
  useIsomorphicLayoutEffect3(function() {
    if (!element) {
      setScrollOffset(0);
      return;
    }
    var onScroll = function onScroll2(event) {
      var offset2 = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];
      setScrollOffset(offset2);
    };
    onScroll();
    element.addEventListener("scroll", onScroll, {
      capture: false,
      passive: true
    });
    return function() {
      element.removeEventListener("scroll", onScroll);
    };
  }, [element, scrollKey]);
  var _calculateRange = calculateRange(latestRef.current), start = _calculateRange.start, end = _calculateRange.end;
  var indexes = F2(function() {
    return rangeExtractor({
      start,
      end,
      overscan,
      size: measurements.length
    });
  }, [start, end, overscan, measurements.length, rangeExtractor]);
  var measureSizeRef = _2(measureSize);
  measureSizeRef.current = measureSize;
  var virtualItems = F2(function() {
    var virtualItems2 = [];
    var _loop = function _loop2(k6, len2) {
      var i4 = indexes[k6];
      var measurement = measurements[i4];
      var item = _extends10({}, measurement, {
        measureRef: function measureRef(el) {
          if (el) {
            var measuredSize = measureSizeRef.current(el, horizontal);
            if (measuredSize !== item.size) {
              var _scrollOffset = latestRef.current.scrollOffset;
              if (item.start < _scrollOffset) {
                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));
              }
              pendingMeasuredCacheIndexesRef.current.push(i4);
              setMeasuredCache(function(old) {
                var _extends22;
                return _extends10({}, old, (_extends22 = {}, _extends22[item.key] = measuredSize, _extends22));
              });
            }
          }
        }
      });
      virtualItems2.push(item);
    };
    for (var k5 = 0, len = indexes.length; k5 < len; k5++) {
      _loop(k5);
    }
    return virtualItems2;
  }, [indexes, defaultScrollToFn, horizontal, measurements]);
  var mountedRef = _2(false);
  useIsomorphicLayoutEffect3(function() {
    if (mountedRef.current) {
      setMeasuredCache({});
    }
    mountedRef.current = true;
  }, [estimateSize]);
  var scrollToOffset = T2(function(toOffset, _temp) {
    var _ref2 = _temp === void 0 ? {
      align: "start"
    } : _temp, align = _ref2.align;
    var _latestRef$current = latestRef.current, scrollOffset2 = _latestRef$current.scrollOffset, outerSize2 = _latestRef$current.outerSize;
    if (align === "auto") {
      if (toOffset <= scrollOffset2) {
        align = "start";
      } else if (toOffset >= scrollOffset2 + outerSize2) {
        align = "end";
      } else {
        align = "start";
      }
    }
    if (align === "start") {
      scrollTo(toOffset);
    } else if (align === "end") {
      scrollTo(toOffset - outerSize2);
    } else if (align === "center") {
      scrollTo(toOffset - outerSize2 / 2);
    }
  }, [scrollTo]);
  var tryScrollToIndex = T2(function(index, _temp2) {
    var _ref3 = _temp2 === void 0 ? {
      align: "auto"
    } : _temp2, align = _ref3.align, rest = _objectWithoutPropertiesLoose2(_ref3, _excluded5);
    var _latestRef$current2 = latestRef.current, measurements2 = _latestRef$current2.measurements, scrollOffset2 = _latestRef$current2.scrollOffset, outerSize2 = _latestRef$current2.outerSize;
    var measurement = measurements2[Math.max(0, Math.min(index, size - 1))];
    if (!measurement) {
      return;
    }
    if (align === "auto") {
      if (measurement.end >= scrollOffset2 + outerSize2) {
        align = "end";
      } else if (measurement.start <= scrollOffset2) {
        align = "start";
      } else {
        return;
      }
    }
    var toOffset = align === "center" ? measurement.start + measurement.size / 2 : align === "end" ? measurement.end : measurement.start;
    scrollToOffset(toOffset, _extends10({
      align
    }, rest));
  }, [scrollToOffset, size]);
  var scrollToIndex = T2(function(index, options) {
    tryScrollToIndex(index, options);
    requestAnimationFrame(function() {
      tryScrollToIndex(index, options);
    });
  }, [tryScrollToIndex]);
  return {
    virtualItems,
    totalSize,
    scrollToOffset,
    scrollToIndex,
    measure
  };
};
var findNearestBinarySearch = function findNearestBinarySearch2(low, high, getCurrentValue, value) {
  while (low <= high) {
    var middle = (low + high) / 2 | 0;
    var currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange(_ref4) {
  var measurements = _ref4.measurements, outerSize = _ref4.outerSize, scrollOffset = _ref4.scrollOffset;
  var size = measurements.length - 1;
  var getOffset = function getOffset2(index) {
    return measurements[index].start;
  };
  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);
  var end = start;
  while (end < size && measurements[end].end < scrollOffset + outerSize) {
    end++;
  }
  return {
    start,
    end
  };
}

// src/components/Sidebar/TreeView/VirtualizedList.tsx
init_compat_module();
var VirtualizedList = Cn.memo(function VirtualizedList2(props2) {
  const {
    flattenedTree,
    projected,
    vRef,
    selectedFiles,
    activeFile,
    selectRange: selectRange2,
    handleCollapse,
    plugin,
    overIndex,
    activeIndex,
    indentationWidth
  } = props2;
  const parentRef = Cn.useRef(null);
  const rowHeight = (index) => flattenedTree[index].parentId == null ? spaceRowHeight(plugin) : spaceRowHeight(plugin);
  const rowVirtualizer = useVirtual({
    size: flattenedTree.length,
    paddingEnd: 24,
    parentRef,
    estimateSize: Cn.useCallback(
      (index) => rowHeight(index),
      [flattenedTree]
    ),
    overscan: plugin.settings.spacesPerformance ? 0 : 20
  });
  vRef.current = rowVirtualizer;
  rowVirtualizer.scrollToIndex;
  const dropIndicator = (index) => {
    return overIndex == index && projected && projected.insert;
  };
  const highlighted = (index) => {
    if (!projected || !flattenedTree[index] || !(projected == null ? void 0 : projected.droppable))
      return false;
    return !projected.sortable && !projected.insert && flattenedTree[index].parentId && flattenedTree[index].parentId.startsWith(projected.parentId) || flattenedTree[index].id == projected.parentId;
  };
  const calcYOffset = (index) => {
    if (!projected)
      return 0;
    if (projected.insert) {
      if (index > activeIndex) {
        return -spaceRowHeight(plugin);
      } else if (index == activeIndex) {
        return spaceRowHeight(plugin) * (overIndex - activeIndex);
      } else {
        return 0;
      }
    } else if (projected.sortable) {
      const targetIndex = overIndex < activeIndex ? overIndex : overIndex;
      if (index == activeIndex) {
        return spaceRowHeight(plugin) * (targetIndex - activeIndex);
      } else if (index > activeIndex && index <= targetIndex) {
        return -spaceRowHeight(plugin);
      } else if (index < activeIndex && index >= targetIndex) {
        return spaceRowHeight(plugin);
      } else {
        return 0;
      }
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: parentRef,
    style: {
      width: `100%`,
      height: `100%`,
      overflow: "auto",
      "--spaceRowHeight": spaceRowHeight(plugin) + "px"
    }
  }, /* @__PURE__ */ Cn.createElement("div", {
    style: {
      height: `${rowVirtualizer.totalSize}px`,
      width: "100%",
      position: "relative"
    }
  }, rowVirtualizer.virtualItems.map((virtualRow) => /* @__PURE__ */ Cn.createElement("div", {
    key: virtualRow.index,
    ref: virtualRow.measureRef,
    style: {
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: `${rowHeight(virtualRow.index)}px`,
      transform: `translateY(${virtualRow.start}px)`
    }
  }, /* @__PURE__ */ Cn.createElement(SortableTreeItem, {
    key: flattenedTree[virtualRow.index].id,
    id: flattenedTree[virtualRow.index].id,
    data: flattenedTree[virtualRow.index],
    disabled: false,
    depth: flattenedTree[virtualRow.index].depth,
    childCount: flattenedTree[virtualRow.index].childrenCount,
    indentationWidth,
    dragStarted: props2.dragStarted,
    dragOver: props2.dragOver,
    dragEnded: props2.dragEnded,
    dragActive: activeIndex != -1,
    indicator: dropIndicator(virtualRow.index),
    plugin,
    ghost: overIndex != -1 && activeIndex == virtualRow.index,
    style: {
      opacity: projected && projected.insert && virtualRow.index == activeIndex ? 0 : 1,
      transform: CSS.Translate.toString({
        x: projected && projected.sortable && virtualRow.index == activeIndex && projected ? (projected.depth - flattenedTree[virtualRow.index].depth) * indentationWidth : 0,
        y: calcYOffset(virtualRow.index),
        scaleX: 0,
        scaleY: 0
      })
    },
    onSelectRange: selectRange2,
    active: (activeFile == null ? void 0 : activeFile.fullPath) == flattenedTree[virtualRow.index].item.path,
    highlighted: highlighted(virtualRow.index),
    selected: selectedFiles.some(
      (g4) => g4.id == flattenedTree[virtualRow.index].id
    ),
    collapsed: flattenedTree[virtualRow.index].collapsed,
    onCollapse: handleCollapse
  })))));
});

// src/components/Sidebar/TreeView/FileExplorerVirtualized.tsx
var FileExplorerComponent = (props2) => {
  const { plugin } = props2;
  const indentationWidth = 16;
  const [expandedSpaces, setExpandedSpaces] = h2(
    plugin.settings.expandedSpaces
  );
  const {
    activeFile,
    activeViewSpace,
    setActiveFile,
    selectedFiles,
    setSelectedFiles,
    dragPaths,
    queryResults,
    spaces,
    queryMode
  } = q2(SidebarContext);
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const nextTreeScrollPath = _2(null);
  const [offset2, setOffset] = h2({ x: 0, y: 0 });
  const listRef = _2(null);
  const forceUpdate = useForceUpdate();
  const treeForPaths = (paths) => {
    const tree = [];
    paths.map((f4) => {
      const s5 = uriByString(f4);
      const fileCache = props2.plugin.index.filesIndex.get(f4);
      if (s5.type == "tag" || s5.type == "space" || s5.type == "folder" || s5.type == "vault") {
        if (fileCache) {
          return {
            ...props2.plugin.index.spacesIndex.get(f4)
          };
        }
        return props2.plugin.index.spacesIndex.get(f4);
      }
      return {
        ...fileCache
      };
    }).filter((f4) => f4).forEach((item) => {
      var _a2;
      if (item.cacheType == "file") {
        item = item;
        const id2 = item.filename;
        const itemCollapsed = !expandedSpaces.includes(id2);
        const items = [];
        if (!itemCollapsed) {
          const [sortStrat, dir] = ((_a2 = item.sortBy) == null ? void 0 : _a2.length) > 0 ? parseSortStrat(item.sortBy) : ["rank", true];
          items.push(
            ...flattenedTreeFromVaultItems(
              plugin,
              item.path,
              item.parent,
              expandedSpaces != null ? expandedSpaces : [],
              1,
              sortStrat,
              dir
            )
          );
        }
        items.splice(
          0,
          0,
          vaulItemToTreeNode(
            item,
            item.parent,
            item.path,
            0,
            0,
            itemCollapsed,
            false,
            items.length,
            null
          )
        );
        tree.push(...items);
      } else {
        tree.push(
          ...treeForSpace(
            item,
            0,
            null,
            activeId,
            false,
            false,
            null
          )
        );
      }
    });
    return tree;
  };
  const treeForSpace = (space, depth, parentId, activeId2, sortable, root2, parentPath) => {
    var _a2, _b2, _c2;
    const tree = [];
    const id2 = parentId ? parentId + "/" + space.path : space.path;
    const spaceCollapsed = !expandedSpaces.includes(id2) || activeId2 == id2;
    const spaceSort = (_b2 = safelyParseJSON((_a2 = space.metadata) == null ? void 0 : _a2.sort)) != null ? _b2 : [
      space.type == "smart" || space.type == "tag" ? "path" : "rank",
      true
    ];
    if (!root2)
      tree.push(
        spaceToTreeNode(
          space,
          spaceCollapsed,
          sortable,
          depth,
          parentId,
          parentPath
        )
      );
    if (!spaceCollapsed || root2)
      ((_c2 = plugin.index.getSpaceItems(space.path)) != null ? _c2 : []).sort(spaceSortFn(spaceSort[0], spaceSort[1])).forEach((item) => {
        var _a3;
        const _parentId = parentId ? parentId + "/" + space.path : space.path;
        if (item.cacheType == "file") {
          item = item;
          const id3 = _parentId + "/" + item.filename;
          const itemCollapsed = !expandedSpaces.includes(id3);
          const items = [];
          if (!itemCollapsed) {
            const [sortStrat, dir] = ((_a3 = item.sortBy) == null ? void 0 : _a3.length) > 0 ? parseSortStrat(item.sortBy) : spaceSort;
            items.push(
              ...flattenedTreeFromVaultItems(
                plugin,
                item.path,
                space.path,
                expandedSpaces != null ? expandedSpaces : [],
                depth + 2,
                sortStrat,
                dir
              )
            );
          }
          items.splice(
            0,
            0,
            vaulItemToTreeNode(
              item,
              space.path,
              item.path,
              depth + 1,
              0,
              itemCollapsed,
              space.sortable,
              items.length,
              _parentId
            )
          );
          tree.push(...items);
        } else {
          tree.push(
            ...treeForSpace(
              item,
              depth + 1,
              _parentId,
              activeId2,
              space.sortable,
              false,
              space.path
            )
          );
        }
      });
    return tree;
  };
  const [flattenedTree, setFlattenedTree] = h2([]);
  const retrieveData = () => {
    if (queryMode) {
      setFlattenedTree(treeForPaths(queryResults));
      return;
    }
    if (!activeViewSpace)
      return setFlattenedTree([]);
    const tree = [];
    tree.push(
      ...treeForSpace(
        activeViewSpace,
        -1,
        null,
        activeId,
        true,
        true,
        activeViewSpace.path
      )
    );
    if (nextTreeScrollPath.current) {
      const index = tree.findIndex(
        (f4) => {
          var _a2;
          return ((_a2 = f4.item) == null ? void 0 : _a2.path) == nextTreeScrollPath.current;
        }
      );
      if (index != -1) {
        listRef.current.scrollToIndex(index);
        nextTreeScrollPath.current = null;
      }
    }
    setFlattenedTree(tree);
  };
  p2(() => {
    if (selectedFiles.length <= 1) {
      if (!selectedFiles[0] || selectedFiles[0].item.path != (activeFile == null ? void 0 : activeFile.fullPath))
        setSelectedFiles([]);
      if (plugin.settings.revealActiveFile)
        revealFile(activeFile);
    }
    window.addEventListener(eventTypes.activePathChange, changeActiveFile);
    return () => {
      window.removeEventListener(eventTypes.activePathChange, changeActiveFile);
    };
  }, [activeFile]);
  p2(() => {
    window.addEventListener(eventTypes.refreshView, forceUpdate);
    window.addEventListener(eventTypes.settingsChanged, settingsChanged);
    return () => {
      window.removeEventListener(eventTypes.refreshView, forceUpdate);
      window.removeEventListener(eventTypes.settingsChanged, settingsChanged);
    };
  }, [activeViewSpace]);
  p2(() => {
    window.addEventListener(eventTypes.revealFile, handleRevealFileEvent);
    return () => {
      window.removeEventListener(eventTypes.revealFile, handleRevealFileEvent);
    };
  }, [activeViewSpace]);
  const revealFile = (path) => {
    var _a2;
    const space = spaces.find((f4) => f4.path == "/");
    if (!space || !path || activeViewSpace.path != space.path)
      return;
    const file = getAbstractFileAtPath(app, path.path);
    const folders = file.path.split("/");
    const openPaths = folders.reduce(
      (p3, c4, index) => [...p3, index == 0 ? c4 : `/${p3[index]}/${c4}`],
      ["/"]
    ).slice(0, -1);
    const newOpenFolders = [
      ...(_a2 = expandedSpaces.filter((f4) => !openPaths.find((g4) => g4 == f4))) != null ? _a2 : [],
      ...openPaths
    ];
    plugin.settings.expandedSpaces = newOpenFolders;
    nextTreeScrollPath.current = "/" + file.path;
    plugin.saveSettings();
  };
  const handleRevealFileEvent = (evt) => {
    if (evt.detail)
      revealFile(uriByString(evt.detail.file.path));
  };
  p2(() => {
    retrieveData();
    window.addEventListener(eventTypes.spacesChange, spaceChangeEvent);
    return () => {
      window.removeEventListener(eventTypes.spacesChange, spaceChangeEvent);
    };
  }, [expandedSpaces, activeViewSpace, activeId, queryResults, queryMode]);
  const spaceChangeEvent = (evt) => {
    if (evt.detail.type == "vault" || evt.detail.type == "space") {
      retrieveData();
    }
  };
  const changeActiveFile = (evt) => {
    const path = evt.detail.path;
    setActiveFile(path);
  };
  const settingsChanged = () => {
    setExpandedSpaces(plugin.settings.expandedSpaces);
  };
  const overIndex = F2(
    () => flattenedTree.findIndex((f4) => f4.id == overId),
    [overId, flattenedTree]
  );
  const activeIndex = F2(
    () => flattenedTree.findIndex((f4) => f4.id == activeId),
    [activeId, flattenedTree]
  );
  const [currentPosition, setCurrentPosition] = h2(null);
  const sortedIds = F2(
    () => flattenedTree.map(({ id: id2 }) => id2),
    [flattenedTree]
  );
  const selectRange2 = (fromId) => {
    const startIndex = sortedIds.findIndex((f4) => f4 == fromId);
    const selectedFilesStartIndex = sortedIds.findIndex(
      (f4) => {
        var _a2;
        return f4 == ((_a2 = selectedFiles[0]) == null ? void 0 : _a2.id);
      }
    );
    const selectedFilesEndIndex = sortedIds.findIndex(
      (f4) => {
        var _a2;
        return f4 == ((_a2 = selectedFiles[selectedFiles.length - 1]) == null ? void 0 : _a2.id);
      }
    );
    if (startIndex < selectedFilesStartIndex) {
      setSelectedFiles(
        flattenedTree.slice(startIndex, selectedFilesEndIndex + 1).filter((f4) => f4.item)
      );
    } else {
      setSelectedFiles(
        flattenedTree.slice(selectedFilesStartIndex, startIndex + 1).filter((f4) => f4.item)
      );
    }
  };
  const [projected, setProjected] = h2(null);
  p2(() => {
    const dragDepth = getDragDepth(offset2.x, indentationWidth);
    const _projected = overId ? getProjection(flattenedTree, dragPaths, overIndex, dragDepth, offset2.y) : null;
    setProjected(_projected);
  }, [flattenedTree, overId, overIndex, dragPaths, offset2]);
  function handleDragStart(event) {
    const {
      active: { id: activeId2 }
    } = event;
    dragStarted(activeId2);
  }
  const dragStarted = (activeId2) => {
    const activeItem = flattenedTree.find(({ id: id2 }) => id2 === activeId2);
    setActiveId(activeId2);
    setOverId(activeId2);
    if (activeItem) {
      setCurrentPosition({
        parentId: activeItem.parentId,
        overId: activeId2
      });
    }
  };
  function handleDragMove({ delta }) {
    setOffset({ x: Math.max(1, delta.x), y: delta.y });
  }
  function handleDragOver({ over }) {
    const overId2 = over == null ? void 0 : over.id;
    if (overId2) {
      setOverId(overId2);
    }
  }
  const dragOver = (_overId, position) => {
    if (dragPaths.length > 1) {
      if (_overId && _overId != overId)
        setOverId(_overId);
      return;
    }
    if (_overId && _overId != overId)
      setOverId(_overId);
    setOffset({
      x: Math.max(1, position.x - indentationWidth - 20),
      y: position.y
    });
  };
  function handleDragEnd({ active, over }) {
    dropFilesInTree(
      plugin,
      dragPaths,
      activeId,
      over.id,
      projected,
      flattenedTree,
      activeViewSpace
    );
    resetState();
  }
  const dragEnded = (overId2) => {
    dropFilesInTree(
      plugin,
      dragPaths,
      activeId,
      overId2,
      projected,
      flattenedTree,
      activeViewSpace
    );
    resetState();
  };
  const adjustTranslate = ({ transform }) => {
    return {
      ...transform,
      x: transform.x,
      y: transform.y - 10
    };
  };
  function handleDragCancel() {
    resetState();
  }
  const handleCollapse = T2(
    (folder, open) => {
      const folderOpen = expandedSpaces == null ? void 0 : expandedSpaces.includes(folder.id);
      const newOpenFolders = !folderOpen || open ? [...expandedSpaces, folder.id] : expandedSpaces.filter(
        (openFolder) => folder.id !== openFolder
      );
      plugin.settings.expandedSpaces = newOpenFolders;
      plugin.saveSettings();
    },
    [plugin, expandedSpaces]
  );
  function resetState() {
    setOverId(null);
    setActiveId(null);
    setOffset({ x: 0, y: 0 });
    setProjected(null);
    dragCounter.current = 0;
    document.body.style.setProperty("cursor", "");
  }
  useDndMonitor({
    onDragStart: handleDragStart,
    onDragMove: handleDragMove,
    onDragOver: handleDragOver,
    onDragEnd: handleDragEnd,
    onDragCancel: handleDragCancel
  });
  const dragCounter = _2(0);
  const dragEnter = () => {
    dragCounter.current++;
  };
  const dragLeave = () => {
    dragCounter.current--;
    if (dragCounter.current == 0) {
      setOverId(null);
      setOffset({ x: 0, y: 0 });
      setProjected(null);
      dragCounter.current = 0;
    }
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-tree",
    onDragEnter: () => dragEnter(),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => e4.preventDefault(),
    onDrop: (e4) => {
      if (overId) {
        dragEnded(overId);
      } else {
        resetState();
      }
    }
  }, /* @__PURE__ */ Cn.createElement(SortableContext, {
    items: flattenedTree,
    strategy: verticalListSortingStrategy
  }, /* @__PURE__ */ Cn.createElement(VirtualizedList, {
    vRef: listRef,
    flattenedTree,
    projected,
    handleCollapse,
    activeFile,
    plugin,
    selectedFiles,
    selectRange: selectRange2,
    indentationWidth,
    dragStarted,
    dragOver,
    dragEnded,
    overIndex,
    activeIndex
  }), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      modifiers: [adjustTranslate],
      zIndex: 1600
    }, activeId ? /* @__PURE__ */ Cn.createElement(SortableTreeItem, {
      id: activeId,
      data: flattenedTree.find((f4) => f4.id == activeId),
      indicator: null,
      depth: 0,
      disabled: false,
      plugin,
      selected: false,
      highlighted: false,
      active: false,
      clone: true,
      childCount: 0,
      style: {},
      indentationWidth,
      dragStarted,
      dragOver,
      dragEnded,
      dragActive: false
    }) : null),
    document.body
  )));
};

// src/components/Sidebar/MainList.tsx
init_hooks_module();
init_compat_module();

// src/components/Sidebar/MainMenu.tsx
var import_classnames7 = __toESM(require_classnames());

// src/components/ui/modals/hiddenFilesModal.tsx
var import_obsidian53 = require("obsidian");
init_compat_module();
var HiddenItemsModal = class extends import_obsidian53.Modal {
  constructor(plugin) {
    super(plugin.app);
    this.plugin = plugin;
  }
  onOpen() {
    const { contentEl } = this;
    const myModal = this;
    let headerText;
    const headerEl = contentEl.createEl("div", { text: headerText });
    headerEl.addClass("modal-title");
    headerEl.innerHTML = i18n_default.labels.hiddenFiles;
    const listEl = contentEl.createEl("div");
    const root2 = createRoot(listEl);
    root2.render(/* @__PURE__ */ Cn.createElement(HiddenFiles, {
      plugin: this.plugin
    }));
    const cancelButton = contentEl.createEl("button", {
      text: i18n_default.buttons.cancel
    });
    cancelButton.style.cssText = "float: right;";
    cancelButton.addEventListener("click", () => {
      myModal.close();
    });
    const onClickAction = async () => {
      myModal.close();
    };
  }
  onClose() {
    const { contentEl } = this;
    contentEl.empty();
  }
};
var HiddenFiles = (props2) => {
  const { plugin } = props2;
  const ref2 = _2(null);
  const [hiddenFiles, setHiddenFiles] = h2(plugin.settings.hiddenFiles);
  const [hiddenExtensions, setHiddenExtensions] = h2(
    plugin.settings.hiddenExtensions
  );
  const saveExtension = (value) => {
    plugin.settings.hiddenExtensions = [
      ...plugin.settings.hiddenExtensions,
      value
    ];
    plugin.saveSettings();
  };
  const saveFile = (_12, value) => {
    plugin.settings.hiddenFiles = [...plugin.settings.hiddenFiles, ...value];
    plugin.saveSettings();
  };
  const removeExtension = (index) => {
    plugin.settings.hiddenExtensions = plugin.settings.hiddenExtensions.filter(
      (f4, i4) => i4 != index
    );
    plugin.saveSettings();
  };
  const removeItem = (index) => {
    plugin.settings.hiddenFiles = plugin.settings.hiddenFiles.filter(
      (f4, i4) => i4 != index
    );
    plugin.saveSettings();
  };
  const addExtension = () => {
    if ((ref2 == null ? void 0 : ref2.current.value.length) > 0) {
      saveExtension(ref2.current.value);
      ref2.current.empty();
    }
  };
  const settingsChanged = () => {
    setHiddenFiles(plugin.settings.hiddenFiles);
    setHiddenExtensions(plugin.settings.hiddenExtensions);
  };
  p2(() => {
    window.addEventListener(eventTypes.settingsChanged, settingsChanged);
    return () => {
      window.removeEventListener(eventTypes.settingsChanged, settingsChanged);
    };
  }, []);
  const addMenu = (e4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const options = getAllAbstractFilesInVault(props2.plugin, app).map((f4) => ({
      name: fileNameToString(f4.name),
      value: f4.path
    }));
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options,
        saveOptions: saveFile,
        placeholder: i18n_default.labels.linkItemSelectPlaceholder,
        detail: true,
        searchable: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "modal-content"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item setting-item-heading"
  }, "Extensions"), /* @__PURE__ */ Cn.createElement("div", null, hiddenExtensions.map((f4, index) => /* @__PURE__ */ Cn.createElement("div", {
    key: index,
    className: "mobile-option-setting-item"
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "mobile-option-setting-item-name"
  }, f4), /* @__PURE__ */ Cn.createElement("div", {
    className: "clickable-icon mobile-option-setting-item-option-icon",
    "aria-label": i18n_default.buttons.delete,
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] },
    onClick: () => removeExtension(index)
  })))), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item"
  }, /* @__PURE__ */ Cn.createElement("input", {
    placeholder: i18n_default.labels.addExtension,
    type: "text",
    ref: ref2
  }), /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => addExtension()
  }, "+ Add")), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item setting-item-heading"
  }, "Files"), /* @__PURE__ */ Cn.createElement("div", null, hiddenFiles.map((f4, index) => /* @__PURE__ */ Cn.createElement("div", {
    key: index,
    className: "mobile-option-setting-item"
  }, /* @__PURE__ */ Cn.createElement("span", {
    className: "mobile-option-setting-item-name"
  }, f4), /* @__PURE__ */ Cn.createElement("div", {
    className: "clickable-icon mobile-option-setting-item-option-icon",
    "aria-label": i18n_default.buttons.delete,
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] },
    onClick: () => removeItem(index)
  })))), /* @__PURE__ */ Cn.createElement("div", {
    className: "setting-item"
  }, /* @__PURE__ */ Cn.createElement("button", {
    onClick: (e4) => addMenu(e4)
  }, "+ ", i18n_default.buttons.addFile)));
};

// src/components/Sidebar/MainMenu.tsx
var import_obsidian56 = require("obsidian");
init_compat_module();

// src/components/Space/Contexts/ContextBuilder/BuilderMetadataFields.tsx
var import_obsidian54 = require("obsidian");
init_compat_module();
var allMetadataForFiles = (plugin, files) => {
  return files.reduce((p3, c4) => {
    const fm = frontMatterForFile(c4);
    const fmKeys = uniqCaseInsensitive(frontMatterKeys(fm));
    if (plugin.dataViewAPI()) {
      const dvValues = plugin.dataViewAPI().page(c4.path);
      const dvKeys = uniqCaseInsensitive(
        Object.keys(dvValues != null ? dvValues : {}).filter(
          (f4, i4, self2) => !self2.find(
            (g4, j4) => g4.toLowerCase().replace(/\s/g, "-") == f4.toLowerCase().replace(/\s/g, "-") && i4 > j4
          ) ? true : false
        ).filter((f4) => f4 != "file" && !fmKeys.some((g4) => f4 == g4))
      );
      return [
        ...p3,
        ...fmKeys.map((f4) => ({ name: f4, type: "fm" })),
        ...dvKeys.map((f4) => ({ name: f4, type: "dv" }))
      ].filter(metadatTypeFilterPredicate);
    }
    return [
      ...p3,
      ...fmKeys.map((f4) => ({ name: f4, type: "fm" }))
    ].filter(metadatTypeFilterPredicate);
  }, []);
};
var metadatTypeFilterPredicate = (value, index, self2) => {
  return self2.findIndex(
    (v3) => value["type"] == v3["type"] && value["name"] == v3["name"]
  ) === index;
};

// src/components/Sidebar/SpaceQuery.tsx
var import_obsidian55 = require("obsidian");
init_compat_module();

// src/types/metadata.ts
var fileProps = {
  "name": {
    label: "File Name",
    field: "name",
    vType: "text",
    type: "fileprop"
  },
  "path": {
    label: "Path",
    field: "path",
    vType: "text",
    type: "fileprop"
  },
  "parent": {
    label: "Folder",
    field: "parent",
    vType: "text",
    type: "fileprop"
  },
  "sticker": {
    label: "Sticker",
    field: "sticker",
    vType: "text",
    type: "fileprop"
  },
  "color": {
    label: "Color",
    field: "color",
    vType: "text",
    type: "fileprop"
  },
  "ctime": {
    label: "Created",
    field: "ctime",
    vType: "date",
    type: "fileprop"
  },
  "mtime": {
    label: "Last Modified",
    field: "mtime",
    vType: "date",
    type: "fileprop"
  },
  "extension": {
    label: "Extension",
    field: "extension",
    vType: "text",
    type: "fileprop"
  },
  "size": {
    label: "Size",
    field: "size",
    vType: "number",
    type: "fileprop"
  }
};
var fileMeta = {
  "tags": {
    label: "Tags",
    field: "tags",
    vType: "tags-multi",
    type: "filemeta"
  },
  "inlinks": {
    label: "Linked Mentions",
    field: "inlinks",
    vType: "link-multi",
    type: "filemeta"
  },
  "outlinks": {
    label: "Links",
    field: "outlinks",
    vType: "link-multi",
    type: "filemeta"
  }
};

// src/components/Sidebar/SpaceQuery.tsx
var SpaceQuery = (props2) => {
  const { filters, setFilters } = props2;
  const selectFilterValue = (e4, filter, i4, k5) => {
    var _a2;
    const saveFilterValue = (value) => {
      setDefFilterValue(value, i4, k5);
    };
    switch ((_a2 = filterFnTypes[filter.fn]) == null ? void 0 : _a2.valueType) {
      case "text":
      case "number":
        {
          const menu = new import_obsidian55.Menu();
          menu.setUseNativeMenu(false);
          menu.addItem((menuItem) => {
            inputMenuItem(
              menuItem,
              filter.value,
              (value) => saveFilterValue(value)
            );
            menuItem.setIcon("type");
          });
          const offset2 = e4.target.getBoundingClientRect();
          menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
        }
        break;
      case "date": {
        const saveValue = (date2) => {
          saveFilterValue(date2.valueOf().toString());
        };
        const offset2 = e4.target.getBoundingClientRect();
        const date = new Date(filter.value);
        showDatePickerMenu(
          { x: offset2.left, y: offset2.top + 30 },
          date.getTime() ? date : null,
          saveValue
        );
        break;
      }
      case "list":
        {
          const fieldType = filter.fType;
          const saveOptions = (options2, values) => {
            saveFilterValue(serializeMultiString(values));
          };
          let options = [];
          if (fieldType.startsWith("option")) {
            options = parseMultiString(filter.value).map((f4) => ({
              name: f4,
              value: f4
            }));
          } else if (fieldType.startsWith("tags")) {
            options = loadTags(props2.plugin).map((f4) => ({
              value: f4,
              name: f4
            }));
          } else if (fieldType.startsWith("links")) {
            options = getAllAbstractFilesInVault(props2.plugin, app).map(
              (f4) => ({
                name: fileNameToString(f4.name),
                value: f4.path,
                description: f4.path
              })
            );
          }
          const offset2 = e4.target.getBoundingClientRect();
          showSelectMenu(
            { x: offset2.left, y: offset2.top + 30 },
            {
              plugin: props2.plugin,
              multi: true,
              editable: true,
              value: parseMultiString(filter.value),
              options,
              saveOptions,
              placeholder: i18n_default.labels.optionItemSelectPlaceholder,
              searchable: false,
              showAll: true
            }
          );
        }
        break;
    }
  };
  const addDefGroup = () => {
    setFilters((p3) => [
      ...p3,
      {
        type: "any",
        trueFalse: true,
        filters: []
      }
    ]);
  };
  const removeDefGroup = (groupIndex) => {
    setFilters(filters.filter((f4, i4) => i4 == groupIndex ? false : true));
  };
  const typeForField = (type, field) => {
    if (type == "frontmatter") {
      return "text";
    }
    if (type == "filemeta") {
      return fileMeta[field].vType;
    }
    if (type == "fileprop") {
      return fileProps[field].vType;
    }
    return "text";
  };
  const setDefFilter = (filter, groupIndex, filterIndex) => {
    var _a2;
    let field;
    let fType;
    const filterTuple = filter.split(".");
    const type = filterTuple[0];
    if (type == "frontmatter") {
      fType = filterTuple[1];
      field = filterTuple[2];
    } else {
      field = filterTuple[1];
      fType = typeForField(type, field);
    }
    if (filters.length == 0) {
      setFilters([
        {
          type: "any",
          trueFalse: true,
          filters: [
            {
              type,
              field,
              fType,
              fn: "",
              value: ""
            }
          ]
        }
      ]);
      return;
    }
    if (((_a2 = filters[groupIndex]) == null ? void 0 : _a2.filters.length) == 0) {
      setFilters(
        filters.map(
          (f4, i4) => i4 == groupIndex ? {
            ...f4,
            filters: [
              {
                type,
                field,
                fType,
                fn: "",
                value: ""
              }
            ]
          } : f4
        )
      );
      return;
    }
    setFilters(
      filters.map(
        (f4, i4) => {
          var _a3;
          return i4 == groupIndex ? {
            ...f4,
            filters: !f4.filters || filterIndex == f4.filters.length ? [
              ...(_a3 = f4.filters) != null ? _a3 : [],
              {
                type,
                fType,
                field,
                fn: "",
                value: ""
              }
            ] : f4.filters.map(
              (g4, k5) => k5 == filterIndex ? {
                ...g4,
                type,
                fType,
                field
              } : g4
            )
          } : f4;
        }
      )
    );
  };
  const setDefFilterFn = (fn2, groupIndex, filterIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.map(
            (g4, k5) => k5 == filterIndex ? {
              ...g4,
              fn: fn2
            } : g4
          )
        } : f4
      )
    );
  };
  const setDefFilterValue = (value, groupIndex, filterIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.map(
            (g4, k5) => k5 == filterIndex ? {
              ...g4,
              value
            } : g4
          )
        } : f4
      )
    );
  };
  const removeDefFilter = (filterIndex, groupIndex) => {
    setFilters(
      filters.map(
        (f4, i4) => i4 == groupIndex ? {
          ...f4,
          filters: f4.filters.filter(
            (g4, k5) => k5 == filterIndex ? false : true
          )
        } : f4
      )
    );
  };
  const setGroupType = (groupIndex, type) => {
    if (groupIndex == 0 && filters.length == 0) {
      setFilters([
        {
          type,
          trueFalse: true,
          filters: []
        }
      ]);
    } else {
      setFilters(
        filters.map(
          (f4, i4) => i4 == groupIndex ? {
            ...f4,
            type
          } : f4
        )
      );
    }
  };
  const selectGroupType = (e4, i4) => {
    const offset2 = e4.target.getBoundingClientRect();
    const filters2 = ["any", "all"];
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: filters2.map((f4) => ({ name: f4, value: f4 })),
        saveOptions: (_12, value) => setGroupType(i4, value[0]),
        searchable: false,
        showAll: true
      }
    );
  };
  const selectFilter = (e4, i4, k5) => {
    const offset2 = e4.target.getBoundingClientRect();
    const { type, field, fType } = filters[i4].filters[k5];
    const _filters = predicateFnsForType(fType, filterFnTypes);
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: true,
        value: [],
        options: _filters.map((f4) => ({ name: filterFnLabels[f4], value: f4 })),
        saveOptions: (_12, value) => setDefFilterFn(value[0], i4, k5),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  const selectField = (e4, i4, k5) => {
    const offset2 = e4.target.getBoundingClientRect();
    const allFiles = retrieveAllFiles(
      props2.plugin.index.vaultDBCache,
      props2.plugin.settings
    );
    const frontmatter = allMetadataForFiles(
      props2.plugin,
      allFiles.map((f5) => getAbstractFileAtPath(app, f5.path)).filter((f5) => f5 instanceof import_obsidian55.TFile)
    );
    const fmTypes = guestimateTypes(
      allFiles.map((f5) => f5.path),
      props2.plugin,
      false
    );
    const f4 = [
      ...Object.keys(fileMeta).map((f5) => ({
        name: fileMeta[f5].label,
        value: "filemeta." + f5
      })),
      ...Object.keys(fileProps).map((f5) => ({
        name: fileProps[f5].label,
        value: "fileprop." + f5
      })),
      ...frontmatter.map((f5) => ({
        name: f5.name,
        value: "frontmatter." + fmTypes[f5.name] + "." + f5.name
      }))
    ];
    showSelectMenu(
      { x: offset2.left, y: offset2.top + 30 },
      {
        plugin: props2.plugin,
        multi: false,
        editable: false,
        value: [],
        options: f4,
        saveOptions: (_12, value) => setDefFilter(value[0], i4, k5),
        placeholder: i18n_default.labels.contextItemSelectPlaceholder,
        searchable: true,
        showAll: true
      }
    );
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query"
  }, filters.length == 0 ? /* @__PURE__ */ Cn.createElement(DefFilterGroup, {
    selectGroupType,
    group: null,
    addDefGroup,
    selectField,
    i: 0,
    removeDefGroup
  }) : filters.map((f4, i4) => /* @__PURE__ */ Cn.createElement(DefFilterGroup, {
    key: i4,
    group: f4,
    selectGroupType,
    addDefGroup,
    selectField,
    i: i4,
    removeDefGroup
  }, f4.filters.map((filter, k5) => /* @__PURE__ */ Cn.createElement(DefFilter, {
    key: k5,
    filter,
    i: i4,
    k: k5,
    selectField,
    selectFilter,
    selectFilterValue,
    removeDefFilter
  })))));
};
var DefFilter = (props2) => {
  var _a2;
  const {
    filter,
    selectField,
    selectFilter,
    selectFilterValue,
    removeDefFilter,
    i: i4,
    k: k5
  } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter"
  }, /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectField(e4, i4, k5)
  }, filter.field.length == 0 ? "Select" : filter.field), filter.field.length > 0 && /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectFilter(e4, i4, k5)
  }, !filterFnLabels[filter.fn] ? "Select" : filterFnLabels[filter.fn]), filter.field.length > 0 && filterFnLabels[filter.fn] && ((_a2 = filterFnTypes[filter.fn]) == null ? void 0 : _a2.valueType) != "none" && /* @__PURE__ */ Cn.createElement("span", null, /* @__PURE__ */ Cn.createElement(FilterValueSpan, {
    fieldType: filter.fType,
    filter,
    selectFilterValue: (e4, h5) => selectFilterValue(e4, h5, i4, k5)
  })), /* @__PURE__ */ Cn.createElement("span", {
    onClick: () => removeDefFilter(k5, i4)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-close"] }
  })));
};
var DefFilterGroup = (props2) => {
  var _a2;
  const {
    group,
    selectGroupType,
    addDefGroup,
    selectField,
    i: i4,
    removeDefGroup
  } = props2;
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query-group"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-query-group-type"
  }, /* @__PURE__ */ Cn.createElement("span", {
    onClick: (e4) => selectGroupType(e4, i4),
    dangerouslySetInnerHTML: {
      __html: uiIconSet[`mk-ui-${(_a2 = group == null ? void 0 : group.type) != null ? _a2 : "any"}`]
    }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter-bar mk-query-filters"
  }, props2.children, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-filter",
    onClick: (e4) => {
      var _a3;
      return selectField(e4, i4, (_a3 = group == null ? void 0 : group.filters.length) != null ? _a3 : 0);
    }
  }, /* @__PURE__ */ Cn.createElement("span", null, /* @__PURE__ */ Cn.createElement("span", {
    className: "mk-icon-xsmall",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-plus"] }
  }), "Filter"))));
};

// src/components/Sidebar/MainMenu.tsx
var replaceMobileMainMenu = (plugin) => {
  if (platformIsMobile()) {
    const header = app.workspace.containerEl.querySelector(
      ".workspace-drawer.mod-left .workspace-drawer-header-left"
    );
    header.empty();
    const reactEl = createRoot(header);
    reactEl.render(
      /* @__PURE__ */ Cn.createElement(SidebarProvider, {
        plugin
      }, /* @__PURE__ */ Cn.createElement(MainMenu, {
        plugin
      }))
    );
  }
};
var MainMenu = (props2) => {
  var _a2, _b2;
  const { plugin } = props2;
  const {
    activeFile,
    activeViewSpace,
    spaces,
    setDragPaths,
    saveActiveSpace: setActiveViewSpaceByPath,
    waypoints: pinnedSpaces,
    activeQuery,
    queryMode,
    setQueryMode,
    setActiveQuery
  } = q2(SidebarContext);
  const folder = defaultNoteFolder(props2.plugin, activeFile);
  const ref2 = _2();
  const inputRef = _2();
  const [queryString, setQueryString] = h2("");
  const [filters, setFilters] = h2([]);
  const [hover, setHover] = h2(false);
  const queries = F2(() => {
    return queryString.length > 0 ? [
      {
        type: "any",
        trueFalse: true,
        filters: [
          {
            type: "fileprop",
            fType: "text",
            field: "name",
            fn: "include",
            value: queryString
          }
        ]
      },
      ...filters
    ] : filters;
  }, [queryString, filters]);
  p2(() => {
    setActiveQuery(queries);
  }, [queries]);
  const toggleSections = (collapse) => {
    const newSections = collapse ? [] : spaces.map((f4) => f4.name);
    plugin.settings.expandedSpaces = newSections;
    plugin.saveSettings();
  };
  const newFile = async () => {
    await createNewMarkdownFile(props2.plugin, folder, "", "");
  };
  p2(() => {
    refreshLeafs();
  }, []);
  const refreshLeafs = () => {
    const leafs = [];
    let spaceActive = true;
    if (plugin.app.workspace.leftSplit && platformIsMobile()) {
      const mobileDrawer = plugin.app.workspace.leftSplit;
      const leaves = mobileDrawer.children;
      const index = leaves.reduce((p3, c4, i4) => {
        return c4.getViewState().type == FILE_TREE_VIEW_TYPE ? i4 : p3;
      }, -1);
      spaceActive = index == mobileDrawer.currentTab;
      leafs.push(...leaves.filter((l3, i4) => i4 != index));
    }
    return { leafs, spaceActive };
  };
  const showMenu = (e4) => {
    const { spaceActive, leafs } = refreshLeafs();
    const menu = new import_obsidian56.Menu();
    !spaceActive && menu.addItem((menuItem) => {
      menuItem.setIcon("lucide-arrow-left");
      menuItem.setTitle(i18n_default.menu.backToSpace);
      menuItem.onClick((ev) => {
        const leaves = plugin.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
        if (leaves.length > 0) {
          plugin.app.workspace.revealLeaf(leaves[0]);
        }
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.home);
      menuItem.onClick((ev) => {
        setActiveViewSpaceByPath("spaces://$home");
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle("Vault");
      menuItem.onClick((ev) => {
        setActiveViewSpaceByPath("/");
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle(i18n_default.menu.tags);
      menuItem.onClick((ev) => {
        setActiveViewSpaceByPath("spaces://$tags");
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setTitle("All Spaces");
      menuItem.onClick((ev) => {
        setActiveViewSpaceByPath("spaces://$all");
      });
    });
    menu.addSeparator();
    menu.addItem((menuItem) => {
      menuItem.setIcon("lucide-chevrons-down-up");
      menuItem.setTitle(i18n_default.menu.collapseAllSections);
      menuItem.onClick((ev) => {
        toggleSections(true);
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setIcon("lucide-chevrons-up-down");
      menuItem.setTitle(i18n_default.menu.expandAllSections);
      menuItem.onClick((ev) => {
        toggleSections(false);
      });
    });
    menu.addSeparator();
    menu.addItem((menuItem) => {
      menuItem.setIcon("eye-off");
      menuItem.setTitle(i18n_default.menu.manageHiddenFiles);
      menuItem.onClick((ev) => {
        const vaultChangeModal = new HiddenItemsModal(plugin);
        vaultChangeModal.open();
      });
    });
    menu.addSeparator();
    leafs.map(
      (l3) => menu.addItem((menuItem) => {
        menuItem.setIcon(l3.view.icon);
        menuItem.setTitle(l3.getDisplayText());
        menuItem.onClick((ev) => {
          plugin.app.workspace.revealLeaf(l3);
        });
      })
    );
    menu.addItem((menuItem) => {
      menuItem.setIcon("lucide-settings");
      menuItem.setTitle(i18n_default.menu.obSettings);
      menuItem.onClick((ev) => {
        plugin.app.commands.commands["app:open-settings"].callback();
      });
    });
    menu.addItem((menuItem) => {
      menuItem.setIcon("vault");
      menuItem.setTitle(i18n_default.menu.openVault);
      menuItem.onClick((ev) => {
        plugin.app.commands.commands["app:open-vault"].callback();
      });
    });
    menu.addSeparator();
    menu.addItem((menuItem) => {
      menuItem.setIcon("mk-logo");
      menuItem.setTitle(i18n_default.menu.getHelp);
      menuItem.onClick((ev) => {
        window.open("https://make.md/community");
      });
    });
    const offset2 = ref2.current.getBoundingClientRect();
    menu.showAtPosition({ x: offset2.left, y: offset2.top + 30 });
  };
  const { dragPaths, saveActiveSpace } = q2(SidebarContext);
  const onDragOver = (e4) => {
    e4.preventDefault();
    if (dragPaths.length == 1) {
      setHover(true);
    }
  };
  const dragLeave = () => {
    setHover(false);
  };
  const onDrop = () => {
    if (dragPaths.length == 1) {
      saveActiveSpace(dragPaths[0]);
      setHover(false);
    }
  };
  const saveQuerySpace = () => {
    const vaultChangeModal = new EditSpaceModal(plugin, null, "create", {
      type: "smart",
      filters: activeQuery
    });
    vaultChangeModal.open();
  };
  return /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flow-bar"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-flow-bar-compact"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames7.default)(
      "mk-main-menu-container",
      queryMode && "mk-hidden"
    )
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-main-menu-button",
    ref: ref2,
    onClick: (e4) => showMenu(e4),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => onDragOver(e4),
    onDrop: () => onDrop()
  }, activeViewSpace ? /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames7.default)(
      "mk-waypoints-item",
      hover && "is-active"
    ),
    dangerouslySetInnerHTML: {
      __html: ((_b2 = (_a2 = activeViewSpace == null ? void 0 : activeViewSpace.metadata) == null ? void 0 : _a2.sticker) == null ? void 0 : _b2.length) > 0 ? stickerFromString(
        activeViewSpace.metadata.sticker,
        props2.plugin
      ) : "F"
    },
    draggable: true,
    onDragStart: () => setDragPaths([activeViewSpace.path])
  }), activeViewSpace.alias) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-expand"] }
  })), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-button",
    onClick: () => setQueryMode((p3) => !p3)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-search"] }
  }))), /* @__PURE__ */ Cn.createElement("div", {
    className: (0, import_classnames7.default)(
      "mk-main-menu-search",
      !queryMode && "mk-hidden"
    )
  }, /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.blink,
    className: "mk-inline-button",
    onClick: () => setQueryMode((p3) => !p3)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: { __html: lucideIcon("arrow-left") }
  })), /* @__PURE__ */ Cn.createElement("input", {
    onClick: (e4) => e4.stopPropagation(),
    className: "mk-cell-text",
    ref: inputRef,
    type: "text",
    value: queryString,
    onChange: (e4) => setQueryString(e4.target.value)
  }), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.blink,
    className: "mk-inline-button",
    onClick: () => saveQuerySpace()
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: { __html: lucideIcon("save") }
  }))), /* @__PURE__ */ Cn.createElement("div", {
    "aria-label": i18n_default.buttons.newNote,
    className: "mk-inline-button",
    onClick: (e4) => triggerSectionAddMenu(props2.plugin, e4, activeViewSpace, activeFile)
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-icon-small",
    dangerouslySetInnerHTML: { __html: uiIconSet["mk-ui-new-note"] }
  }))), queryMode && /* @__PURE__ */ Cn.createElement(SpaceQuery, {
    plugin,
    filters,
    setFilters
  }));
};

// src/components/Sidebar/SpaceSwitcher/SpaceSwitcher.tsx
init_compat_module();
init_compat_module();

// src/components/Sidebar/SpaceSwitcher/PinnedSpace.tsx
var import_classnames8 = __toESM(require_classnames());
init_compat_module();
var animateLayoutChanges3 = ({
  isSorting,
  wasDragging
}) => isSorting || wasDragging ? false : true;
var SortablePinnedSpaceItem = ({
  id: id2,
  index,
  ...props2
}) => {
  const {
    attributes,
    isDragging,
    isSorting,
    listeners,
    setNodeRef,
    transform,
    transition
  } = useSortable({
    id: id2,
    animateLayoutChanges: animateLayoutChanges3
  });
  const memoListeners = F2(() => {
    return {
      ...attributes,
      ...listeners
    };
  }, [isSorting]);
  return /* @__PURE__ */ Cn.createElement(PinnedSpace, {
    index,
    ref: setNodeRef,
    handleProps: memoListeners,
    ...props2
  });
};
var PinnedSpace = k3(
  ({
    pin,
    handleProps,
    indicator,
    highlighted,
    plugin,
    style,
    clone: clone2,
    ghost,
    dragStart,
    dragOver,
    dragEnded,
    index
  }, ref2) => {
    var _a2;
    const innerRef = _2(null);
    const { setDragPaths, activeViewSpace, activeFile, saveActiveSpace } = q2(SidebarContext);
    const onDragStarted = (e4) => {
      if (dragStart && pin) {
        dragStart(index);
        setDragPaths([pin.path]);
      }
    };
    const onDragEnded = (e4) => {
      if (dragEnded) {
        dragEnded();
      }
    };
    const innerProps = !platformIsMobile() ? {
      draggable: true,
      onDragStart: onDragStarted,
      onDrop: onDragEnded
    } : handleProps;
    return /* @__PURE__ */ Cn.createElement("div", {
      ref: innerRef,
      className: "mk-waypoint",
      onClick: () => saveActiveSpace(pin.path),
      onContextMenu: (e4) => triggerSpaceMenu(plugin, pin, e4, activeFile, null),
      onDragOver: (e4) => {
        e4.preventDefault();
        if (!innerRef.current)
          return;
        const rect = innerRef.current.getBoundingClientRect();
        const x5 = e4.clientX - rect.left;
        if (dragOver)
          dragOver(index, x5);
      },
      ...innerProps
    }, /* @__PURE__ */ Cn.createElement("div", {
      ref: ref2,
      className: (0, import_classnames8.default)(
        "mk-waypoints-item",
        "clickable-icon",
        "nav-action-button",
        (activeViewSpace == null ? void 0 : activeViewSpace.path) == (pin == null ? void 0 : pin.path) && "mk-active",
        highlighted && "mk-active",
        indicator && "mk-indicator",
        clone2 && "mk-clone",
        ghost && "mk-ghost"
      ),
      dangerouslySetInnerHTML: ((_a2 = pin == null ? void 0 : pin.metadata.sticker) == null ? void 0 : _a2.length) > 0 ? {
        __html: stickerFromString(pin.metadata.sticker, plugin)
      } : null,
      style: {
        ...style,
        ...{ pointerEvents: "none" }
      }
    }, pin == null ? void 0 : pin.name.substring(0, 1)));
  }
);
PinnedSpace.displayName = "PinnedSpace";

// src/components/Sidebar/SpaceSwitcher/SpaceSwitcher.tsx
var SpaceSwitcher = (props2) => {
  const { activeFile, waypoints } = q2(SidebarContext);
  const folder = defaultNoteFolder(props2.plugin, activeFile);
  const { plugin } = props2;
  const newFile = async () => {
    await createNewMarkdownFile(props2.plugin, folder, "", "");
  };
  const { dragPaths } = q2(SidebarContext);
  const [activeId, setActiveId] = h2(null);
  const [overId, setOverId] = h2(null);
  const dragCounter = _2(0);
  const [offset2, setOffset] = h2(0);
  const [projected, setProjected] = h2(null);
  const [dropPlaceholder, setDragPlaceholder] = h2(null);
  p2(() => {
    if (overId === null || dragPaths.length == 0) {
      setProjected(null);
      return;
    }
    const waypoint = waypoints[overId];
    const dropableTypes = droppableTypesForSpace(waypoint.type);
    if (dragPaths.length > 1) {
      const droppable = dragPaths.map((f4) => uriByString(f4)).filter((f4) => dropableTypes.some((g4) => g4 == f4.type));
      if (droppable.length > 0) {
        const _projected = {
          depth: 0,
          overId,
          parentId: null,
          sortable: false,
          insert: offset2 > 20,
          droppable: true
        };
        setProjected(_projected);
        return;
      } else {
        return null;
      }
    } else {
      const path = uriByString(dragPaths[0]);
      const droppable = dropableTypes.some((f4) => path.type == f4);
      const _projected = {
        depth: 0,
        overId,
        parentId: null,
        sortable: false,
        insert: offset2 > 20,
        droppable
      };
      setProjected(_projected);
    }
  }, [overId, dragPaths, offset2]);
  const resetState = () => {
    setOverId(null);
    setActiveId(null);
    setProjected(null);
    setOffset(0);
    dragCounter.current = 0;
  };
  const handleDragCancel = () => {
    resetState();
  };
  const dragEnter = () => {
    dragCounter.current++;
  };
  const dragLeave = () => {
    dragCounter.current--;
    if (dragCounter.current == 0) {
      setOverId(null);
      setProjected(null);
      setOffset(0);
      dragCounter.current = 0;
    }
  };
  const adjustTranslate = ({ transform }) => {
    return {
      ...transform,
      x: transform.x,
      y: transform.y - 10
    };
  };
  const dragStarted = (id2) => {
    setActiveId(id2);
  };
  const dragOver = (id2, x5) => {
    setOffset(x5);
    setOverId(id2);
  };
  const dragEnded = () => {
    if (dragPaths.length == 1) {
      if (activeId !== null) {
        plugin.settings.waypoints = arrayMove(
          waypoints.map((f4) => f4.path),
          activeId,
          overId
        );
        plugin.saveSettings();
      } else {
        plugin.settings.waypoints = insert(
          waypoints.map((f4) => f4.path).filter((f4) => f4 != dragPaths[0]),
          overId,
          dragPaths[0]
        );
        plugin.saveSettings();
      }
    }
    resetState();
  };
  useDndMonitor({
    onDragStart: handleDragStart,
    onDragMove: handleDragMove,
    onDragOver: handleDragOver,
    onDragEnd: handleDragEnd,
    onDragCancel: handleDragCancel
  });
  function handleDragStart(event) {
    const {
      active: { id: activeId2 }
    } = event;
    dragStarted(activeId2);
  }
  function handleDragMove({ delta }) {
  }
  function handleDragOver({ over }) {
    const overId2 = over == null ? void 0 : over.id;
    if (overId2) {
      setOverId(overId2);
    }
  }
  function handleDragEnd({ active, over }) {
    dragEnded();
  }
  const width = 32;
  const calcXOffset = (index) => {
    if (!projected)
      return 0;
    const targetIndex = overId;
    if (activeId == null) {
      if (index >= overId)
        return width;
      return 0;
    }
    if (index == activeId) {
      return width * (targetIndex - activeId);
    } else if (index > activeId && index <= targetIndex) {
      return -width;
    } else if (index < activeId && index >= targetIndex) {
      return width;
    } else {
      return 0;
    }
  };
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-waypoints nav-header",
    onDragEnter: () => dragEnter(),
    onDragLeave: () => dragLeave(),
    onDragOver: (e4) => e4.preventDefault()
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "nav-buttons-container"
  }, waypoints.map((pin, i4) => /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
    id: i4,
    plugin: props2.plugin,
    highlighted: overId == i4 && projected && projected.insert && projected.droppable,
    style: {
      transform: CSS.Translate.toString({
        x: calcXOffset(i4),
        y: 0,
        scaleX: 0,
        scaleY: 0
      })
    },
    index: i4,
    pin,
    key: pin.path,
    dragStart: dragStarted,
    dragOver,
    dragEnded,
    dragActive: activeId !== null,
    ghost: activeId === i4
  })), overId != null && activeId == null && /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
    id: waypoints.length,
    plugin: props2.plugin,
    highlighted: false,
    index: waypoints.length,
    pin: null
  })), z3(
    /* @__PURE__ */ Cn.createElement(DragOverlay, {
      dropAnimation: null,
      modifiers: [adjustTranslate],
      zIndex: 1600
    }, activeId !== null ? /* @__PURE__ */ Cn.createElement(SortablePinnedSpaceItem, {
      id: -1,
      plugin: props2.plugin,
      highlighted: false,
      clone: true,
      index: activeId,
      indicator: false,
      pin: waypoints[activeId]
    }) : null),
    document.body
  )));
};

// src/components/Sidebar/MainList.tsx
var MainList = (props2) => {
  const { activeViewSpace } = q2(SidebarContext);
  const [error, resetError] = P2();
  if (error)
    console.log(error);
  const sensors = useSensors(
    useSensor(MouseSensor, {
      activationConstraint: {
        distance: 10
      }
    }),
    useSensor(TouchSensor, {
      activationConstraint: {
        delay: 250,
        tolerance: 5
      }
    })
  );
  const measuring = {
    droppable: {
      strategy: MeasuringStrategy.Always
    }
  };
  return /* @__PURE__ */ Cn.createElement(DndContext, {
    sensors,
    collisionDetection: closestCenter,
    measuring
  }, /* @__PURE__ */ Cn.createElement(SpaceSwitcher, {
    plugin: props2.plugin
  }), /* @__PURE__ */ Cn.createElement(MainMenu, {
    plugin: props2.plugin
  }), /* @__PURE__ */ Cn.createElement(FileExplorerComponent, {
    plugin: props2.plugin
  }));
};

// src/components/Sidebar/FileTreeView.tsx
var FILE_TREE_VIEW_TYPE = "mk-file-view";
var VIEW_DISPLAY_TEXT = "Spaces";
var ICON = "layout-grid";
var FileTreeView = class extends import_obsidian57.ItemView {
  constructor(leaf, plugin) {
    super(leaf);
    this.navigation = false;
    this.plugin = plugin;
  }
  revealInFolder(file) {
    if (file instanceof import_obsidian57.TFolder) {
      this.plugin.app.workspace.activeLeaf.setViewState({
        type: SPACE_VIEW_TYPE,
        state: { path: file.path }
      });
      this.plugin.app.workspace.requestSaveLayout();
    } else {
      const evt = new CustomEvent(eventTypes.revealFile, {
        detail: { file }
      });
      window.dispatchEvent(evt);
    }
  }
  getViewType() {
    return FILE_TREE_VIEW_TYPE;
  }
  getDisplayText() {
    return VIEW_DISPLAY_TEXT;
  }
  getIcon() {
    return ICON;
  }
  async onClose() {
    const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
    if (leafs.length == 0) {
      const leaf = this.app.workspace.getLeftLeaf(false);
      await leaf.setViewState({ type: FILE_TREE_VIEW_TYPE });
    }
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
    this.constructFileTree(this.app.vault.getRoot().path, "");
  }
  constructFileTree(folderPath, vaultChange) {
    this.destroy();
    this.root = createRoot(this.contentEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-sidebar"
      }, /* @__PURE__ */ Cn.createElement(SidebarProvider, {
        plugin: this.plugin
      }, /* @__PURE__ */ Cn.createElement(MainList, {
        plugin: this.plugin
      })))
    );
  }
};

// src/settings/settings.ts
var import_obsidian58 = require("obsidian");
var DEFAULT_SETTINGS = {
  defaultInitialization: false,
  filePreviewOnHover: false,
  flowMenuEnabled: true,
  markSans: false,
  blinkEnabled: true,
  makeMenuPlaceholder: true,
  mobileMakeBar: true,
  inlineStyler: true,
  makerMode: true,
  spacesMDBInHidden: true,
  inlineStylerColors: false,
  editorFlow: true,
  internalLinkClickFlow: true,
  contextEnabled: true,
  saveAllContextToFrontmatter: true,
  editorFlowStyle: "seamless",
  autoOpenFileContext: false,
  activeView: "root",
  hideFrontmatter: true,
  activeSpace: "",
  spacesCompactMode: false,
  defaultDateFormat: "MMM dd yyyy",
  spacesEnabled: true,
  spacesPerformance: false,
  collapsedTags: [],
  enableFolderNote: true,
  folderIndentationLines: true,
  revealActiveFile: false,
  spacesStickers: true,
  spaceRowHeight: 29,
  spacesDisablePatch: false,
  folderNoteInsideFolder: true,
  folderNoteDefaultView: true,
  sidebarTabs: true,
  showRibbon: true,
  deleteFileOption: "trash",
  expandedSpaces: ["/"],
  expandFolderOnClick: true,
  openFolders: [],
  fileIcons: [],
  cachedSpaces: [],
  menuTriggerChar: "/",
  inlineStickerMenu: true,
  emojiTriggerChar: ":",
  folderContextFile: "context",
  folderFrameFile: "frames",
  spacesFolder: "Spaces",
  hiddenFiles: ["Spaces"],
  lineNumbers: false,
  hiddenExtensions: ["mdb"],
  newFileLocation: "root",
  newFileFolderPath: "",
  inlineBacklinks: false,
  inlineContext: true,
  inlineBacklinksExpanded: false,
  inlineContextExpanded: true,
  inlineContextSectionsExpanded: true,
  dataviewInlineContext: false,
  inlineContextNameLayout: "vertical",
  waypoints: [],
  rootSpaces: [],
  spacesUseAlias: false,
  precreateVaultSpace: false,
  fmKeyAlias: "aliases",
  fmKeyBanner: "banner",
  fmKeyColor: "color",
  fmKeySticker: "sticker",
  fmKeyContexts: "contexts",
  fmKeySort: "sort",
  fmKeyDef: "def",
  fmKeyLinks: "links",
  openSpacesOnLaunch: true,
  indexSVG: false,
  quickFrames: [],
  readableLineWidth: true,
  autoAddContextsToSubtags: true,
  autoMigration08: false
};
var MakeMDPluginSettingsTab = class extends import_obsidian58.PluginSettingTab {
  constructor(app2, plugin) {
    super(app2, plugin);
    this.plugin = plugin;
  }
  refreshView() {
    this.display();
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h1", { text: i18n_default.settings.sectionSidebar });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.spaces.name).setDesc(i18n_default.settings.spaces.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.spacesEnabled).onChange((value) => {
        this.plugin.settings.spacesEnabled = value;
        this.plugin.saveSettings();
        if (value) {
          this.plugin.openFileTreeLeaf(true);
        } else {
          this.plugin.detachFileTreeLeafs();
        }
        this.refreshView();
      })
    );
    if (this.plugin.settings.spacesEnabled) {
      containerEl.createEl("h3", { text: i18n_default.settings.sectionAppearance });
      const spaceAppearances = containerEl.createEl("div");
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.sidebarTabs.name).setDesc(i18n_default.settings.sidebarTabs.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.sidebarTabs).onChange((value) => {
          this.plugin.settings.sidebarTabs = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-hide-tabs", !value);
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.hideRibbon.name).setDesc(i18n_default.settings.hideRibbon.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.showRibbon).onChange((value) => {
          this.plugin.settings.showRibbon = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-hide-ribbon", !value);
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.compactMode.name).setDesc(i18n_default.settings.compactMode.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.spacesCompactMode).onChange((value) => {
          this.plugin.settings.spacesCompactMode = value;
          this.plugin.detachFileTreeLeafs();
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.folderIndentationLines.name).setDesc(i18n_default.settings.folderIndentationLines.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.folderIndentationLines).onChange((value) => {
          this.plugin.settings.folderIndentationLines = value;
          this.plugin.saveSettings();
          document.body.classList.toggle("mk-folder-lines", value);
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.spacesStickers.name).setDesc(i18n_default.settings.spacesStickers.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.spacesStickers).onChange((value) => {
          this.plugin.settings.spacesStickers = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.spacesAlias.name).setDesc(i18n_default.settings.spacesAlias.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.spacesUseAlias).onChange((value) => {
          this.plugin.settings.spacesUseAlias = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.readableLineWidth.name).setDesc(i18n_default.settings.readableLineWidth.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.readableLineWidth).onChange((value) => {
          this.plugin.settings.readableLineWidth = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.openSpacesOnLaunch.name).setDesc(i18n_default.settings.openSpacesOnLaunch.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.openSpacesOnLaunch).onChange((value) => {
          this.plugin.settings.openSpacesOnLaunch = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(spaceAppearances).setName(i18n_default.settings.spaceRowHeight.name).setDesc(i18n_default.settings.spaceRowHeight.desc).addText((text2) => {
        text2.setValue(this.plugin.settings.spaceRowHeight.toString()).onChange(async (value) => {
          text2.setValue(parseInt(value).toString());
          this.plugin.settings.spaceRowHeight = parseInt(value);
          await this.plugin.saveSettings();
        });
      });
      containerEl.createEl("h3", { text: "Folder Note" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.folderNote.name).setDesc(i18n_default.settings.folderNote.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.enableFolderNote).onChange((value) => {
          this.plugin.settings.enableFolderNote = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.folderNoteLocation.name).setDesc(i18n_default.settings.folderNoteLocation.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.folderNoteInsideFolder).onChange((value) => {
          this.plugin.settings.folderNoteInsideFolder = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.folderViewDefault.name).setDesc(i18n_default.settings.folderViewDefault.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.folderNoteDefaultView).onChange((value) => {
          this.plugin.settings.folderNoteDefaultView = value;
          this.plugin.saveSettings();
        })
      );
      containerEl.createEl("h3", { text: "Advanced" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.expandFolder.name).setDesc(i18n_default.settings.expandFolder.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.expandFolderOnClick).onChange((value) => {
          this.plugin.settings.expandFolderOnClick = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.hoverPreview.name).setDesc(i18n_default.settings.hoverPreview.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.filePreviewOnHover).onChange((value) => {
          this.plugin.settings.filePreviewOnHover = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.activeFile.name).setDesc(i18n_default.settings.activeFile.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.revealActiveFile).onChange((value) => {
          this.plugin.settings.revealActiveFile = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.spacesFileExplorerDual.name).setDesc(i18n_default.settings.spacesFileExplorerDual.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.spacesDisablePatch).onChange((value) => {
          this.plugin.settings.spacesDisablePatch = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.spacesPerformance.name).setDesc(i18n_default.settings.spacesPerformance.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.spacesPerformance).onChange((value) => {
          this.plugin.settings.spacesPerformance = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.indexSVG.name).setDesc(i18n_default.settings.indexSVG.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.indexSVG).onChange((value) => {
          this.plugin.settings.indexSVG = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.spacesDeleteOption.name).setDesc(i18n_default.settings.spacesDeleteOption.desc).addDropdown((dropdown) => {
        dropdown.addOption(
          "permanent",
          i18n_default.settings.spacesDeleteOptions.permanant
        );
        dropdown.addOption("trash", i18n_default.settings.spacesDeleteOptions.trash);
        dropdown.addOption(
          "system-trash",
          i18n_default.settings.spacesDeleteOptions["system-trash"]
        );
        dropdown.setValue(this.plugin.settings.deleteFileOption);
        dropdown.onChange((option) => {
          this.plugin.settings.deleteFileOption = option;
          this.plugin.saveSettings();
        });
      });
    }
    containerEl.createEl("h1", { text: "Context" });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.contexts.name).setDesc(i18n_default.settings.contexts.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.contextEnabled).onChange((value) => {
        this.plugin.settings.contextEnabled = value;
        this.plugin.saveSettings();
        this.plugin.reloadExtensions(false);
      })
    );
    containerEl.createEl("h3", { text: i18n_default.settings.sectionAppearance });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.defaultDateFormat.name).setDesc(i18n_default.settings.defaultDateFormat.desc).addText((text2) => {
      text2.setValue(this.plugin.settings.defaultDateFormat).onChange(async (value) => {
        this.plugin.settings.defaultDateFormat = value;
        await this.plugin.saveSettings();
      });
    });
    containerEl.createEl("h3", { text: i18n_default.settings.sectionAdvanced });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.openFileContext.name).setDesc(i18n_default.settings.openFileContext.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.autoOpenFileContext).onChange((value) => {
        this.plugin.settings.autoOpenFileContext = value;
        this.plugin.saveSettings();
      })
    );
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.syncContextToFrontmatter.name).setDesc(i18n_default.settings.syncContextToFrontmatter.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.saveAllContextToFrontmatter).onChange((value) => {
        this.plugin.settings.saveAllContextToFrontmatter = value;
        this.plugin.saveSettings();
      })
    );
    containerEl.createEl("h1", { text: "Blink" });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.blink.name).setDesc(i18n_default.settings.blink.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.blinkEnabled).onChange(async (value) => {
        this.plugin.settings.blinkEnabled = value;
        await this.plugin.saveSettings();
        this.plugin.reloadExtensions(false);
      })
    );
    containerEl.createEl("h1", { text: i18n_default.settings.sectionFlow });
    new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.editorMakerMode.name).setDesc(i18n_default.settings.editorMakerMode.desc).addToggle(
      (toggle) => toggle.setValue(this.plugin.settings.makerMode).onChange((value) => {
        this.plugin.settings.makerMode = value;
        this.plugin.saveSettings();
        this.refreshView();
      })
    );
    if (this.plugin.settings.makerMode) {
      containerEl.createEl("h3", { text: "Inline Context" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineContextExplorer.name).setDesc(i18n_default.settings.inlineContextExplorer.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineContext).onChange((value) => {
          this.plugin.settings.inlineContext = value;
          this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.lineNumbers.name).setDesc(i18n_default.settings.lineNumbers.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.lineNumbers).onChange(async (value) => {
          this.plugin.settings.lineNumbers = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineContextExpanded.name).setDesc(i18n_default.settings.inlineContextExpanded.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineContextSectionsExpanded).onChange((value) => {
          this.plugin.settings.inlineContextSectionsExpanded = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineContextHorizontal.name).setDesc(i18n_default.settings.inlineContextHorizontal.desc).addDropdown((dropdown) => {
        dropdown.addOption("vertical", i18n_default.settings.layoutVertical);
        dropdown.addOption("horizontal", i18n_default.settings.layoutHorizontal);
        dropdown.setValue(this.plugin.settings.inlineContextNameLayout);
        dropdown.onChange((option) => {
          this.plugin.settings.inlineContextNameLayout = option;
          this.plugin.saveSettings();
        });
      });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.hideFrontmatter.name).setDesc(i18n_default.settings.hideFrontmatter.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.hideFrontmatter).onChange(async (value) => {
          this.plugin.settings.hideFrontmatter = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.dataviewInlineContext.name).setDesc(i18n_default.settings.dataviewInlineContext.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.dataviewInlineContext).onChange((value) => {
          this.plugin.settings.dataviewInlineContext = value;
          this.plugin.saveSettings();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineBacklinks.name).setDesc(i18n_default.settings.inlineBacklinks.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineBacklinks).onChange(async (value) => {
          this.plugin.settings.inlineBacklinks = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      containerEl.createEl("h3", { text: "Flow Block" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.editorFlowReplace.name).setDesc(i18n_default.settings.editorFlowReplace.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.editorFlow).onChange((value) => {
          this.plugin.settings.editorFlow = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.internalLinkFlowEditor.name).setDesc(i18n_default.settings.internalLinkFlowEditor.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.internalLinkClickFlow).onChange(async (value) => {
          this.plugin.settings.internalLinkClickFlow = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.editorFlowStyle.name).setDesc(i18n_default.settings.editorFlowStyle.desc).addDropdown((dropdown) => {
        dropdown.addOption("classic", i18n_default.settings.editorFlowStyle.classic);
        dropdown.addOption("seamless", i18n_default.settings.editorFlowStyle.seamless);
        dropdown.addOption("minimal", i18n_default.settings.editorFlowStyle.minimal);
        dropdown.setValue(this.plugin.settings.editorFlowStyle).onChange(async (value) => {
          this.plugin.settings.editorFlowStyle = value;
          document.body.classList.toggle("mk-flow-classic", false);
          document.body.classList.toggle("mk-flow-seamless", false);
          document.body.classList.toggle("mk-flow-minimal", false);
          if (value == "seamless")
            document.body.classList.toggle("mk-flow-seamless", true);
          if (value == "classic")
            document.body.classList.toggle("mk-flow-classic", true);
          if (value == "minimal")
            document.body.classList.toggle("mk-flow-minimal", true);
        });
      });
      containerEl.createEl("h3", { text: "Flow Menu" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.editorMakeMenu.name).setDesc(i18n_default.settings.editorMakeMenu.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.flowMenuEnabled).onChange(async (value) => {
          this.plugin.settings.flowMenuEnabled = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.makeChar.name).setDesc(i18n_default.settings.makeChar.desc).addText((text2) => {
        text2.setValue(this.plugin.settings.menuTriggerChar).onChange(async (value) => {
          if (value.trim().length < 1) {
            text2.setValue(this.plugin.settings.menuTriggerChar);
            return;
          }
          let char = value[0];
          if (value.trim().length === 2) {
            char = value.replace(this.plugin.settings.menuTriggerChar, "");
          }
          text2.setValue(char);
          this.plugin.settings.menuTriggerChar = char;
          await this.plugin.saveSettings();
        });
      });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.editorMakePlacholder.name).setDesc(i18n_default.settings.editorMakePlacholder.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.makeMenuPlaceholder).onChange(async (value) => {
          this.plugin.settings.makeMenuPlaceholder = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      containerEl.createEl("h3", { text: "Flow Styler" });
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineStyler.name).setDesc(i18n_default.settings.inlineStyler.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineStyler).onChange(async (value) => {
          this.plugin.settings.inlineStyler = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineStickerMenu.name).setDesc(i18n_default.settings.inlineStickerMenu.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineStickerMenu).onChange(async (value) => {
          this.plugin.settings.inlineStickerMenu = value;
          await this.plugin.saveSettings();
          this.plugin.reloadExtensions(false);
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.inlineStylerColor.name).setDesc(i18n_default.settings.inlineStylerColor.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.inlineStylerColors).onChange((value) => {
          this.plugin.settings.inlineStylerColors = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
      new import_obsidian58.Setting(containerEl).setName(i18n_default.settings.mobileMakeBar.name).setDesc(i18n_default.settings.mobileMakeBar.desc).addToggle(
        (toggle) => toggle.setValue(this.plugin.settings.mobileMakeBar).onChange((value) => {
          this.plugin.settings.mobileMakeBar = value;
          this.plugin.saveSettings();
          this.refreshView();
        })
      );
    }
  }
};

// src/components/Blink/Blink.tsx
var import_obsidian59 = require("obsidian");
init_compat_module();

// src/components/Blink/BlinkComponent.tsx
init_compat_module();
var BlinkComponent = Cn.forwardRef(
  (props2, ref2) => {
    const [previewPath, setPreviewPath] = h2(null);
    const [allItems, setAllItems] = h2([]);
    const defaultOptions4 = F2(
      () => app.workspace.getLastOpenFiles().filter((f4) => getAbstractFileAtPath(app, f4)).map((f4) => ({
        description: f4,
        value: f4,
        name: filePathToString(f4)
      })),
      []
    );
    p2(() => {
      const allTags = loadTags(props2.plugin).map((f4) => ({
        value: f4,
        name: f4
      }));
      const allNotes = getAllAbstractFilesInVault(
        props2.plugin,
        app
      ).map((f4) => ({
        name: fileNameToString(f4.name),
        description: f4.path,
        value: f4.path
      }));
      setAllItems([...allNotes, ...allTags]);
    }, []);
    const loadPreview = (path) => {
      if (previewPath != path && getAbstractFileAtPath(app, path)) {
        setPreviewPath(path);
      }
    };
    const hoverItem = (item) => {
      loadPreview(item);
    };
    const selectItem = (item) => {
      if (!item)
        return;
      openPath(props2.plugin, uriByString(item));
    };
    const optionProps = {
      multi: false,
      editable: true,
      plugin: props2.plugin,
      onHover: hoverItem,
      value: [],
      options: allItems,
      defaultOptions: defaultOptions4,
      saveOptions: (_12, items) => selectItem(items[0]),
      placeholder: i18n_default.labels.blinkPlaceholder,
      searchable: true,
      showAll: true
    };
    return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement(selectMenu_default, {
      ref: ref2,
      plugin: props2.plugin,
      ...optionProps,
      hide: props2.hide,
      previewComponent: previewPath && /* @__PURE__ */ Cn.createElement("div", {
        className: "mk-blink-preview"
      }, /* @__PURE__ */ Cn.createElement(FlowView, {
        plugin: props2.plugin,
        path: previewPath,
        load: true
      }))
    }));
  }
);
BlinkComponent.displayName = "BlinkComponent";
var BlinkComponent_default = BlinkComponent;

// src/components/Blink/Blink.tsx
var Blink = class extends import_obsidian59.Modal {
  constructor(app2, plugin) {
    super(app2);
    this.ref = Cn.createRef();
    this.plugin = plugin;
    this.modalEl.toggleClass("mk-blink-modal", true);
    this.modalEl.toggleClass("modal", false);
    this.modalEl.toggleClass("prompt", true);
    const keys2 = [...this.scope.keys];
    for (let i4 = 0; i4 < keys2.length; i4++) {
      if (keys2[i4].key == "Escape") {
        this.scope.unregister(keys2[i4]);
        this.scope.register([], "Escape", () => {
          var _a2;
          const blurred = (_a2 = this.ref) == null ? void 0 : _a2.current();
          if (blurred) {
            this.close();
          }
        });
      }
    }
    this.root = createRoot(this.modalEl);
    this.root.render(
      /* @__PURE__ */ Cn.createElement(BlinkComponent_default, {
        ref: this.ref,
        plugin,
        hide: () => this.close()
      })
    );
  }
};

// src/components/FileContexts/ContextExplorer.tsx
init_compat_module();

// src/components/Space/Frames/FrameInspector.tsx
init_compat_module();

// src/components/Space/Frames/FrameStyler.tsx
init_compat_module();

// src/components/Space/Frames/Panels/BorderPanel.tsx
init_compat_module();

// src/components/Space/Frames/Setters/ColorSetter.tsx
init_compat_module();

// src/components/Space/Frames/Setters/StepSetter.tsx
init_compat_module();

// src/components/Space/Frames/Panels/CornersPanel.tsx
init_compat_module();

// src/components/Space/Frames/Setters/SliderSetter.tsx
init_compat_module();

// src/components/Space/Frames/Panels/ColorPanel.tsx
init_compat_module();

// src/components/Space/Frames/Setters/TextSetter.tsx
init_compat_module();

// src/components/Space/Frames/Panels/LayoutPanel.tsx
init_compat_module();

// src/components/Space/Frames/Setters/RadioGroupSetter.tsx
init_compat_module();

// src/components/Space/Frames/Panels/TypographyPanel.tsx
init_compat_module();

// src/components/Space/Frames/Setters/OptionsSetter.tsx
init_compat_module();

// src/components/Space/Contexts/DataTypeView/CodeCell.tsx
var import_language3 = require("@codemirror/language");
var import_state12 = require("@codemirror/state");
var import_view9 = require("@codemirror/view");

// src/cm-extensions/frames/code.ts
var import_state11 = require("@codemirror/state");
var import_view8 = require("@codemirror/view");
var codeBlockLine = import_view8.Decoration.line({
  class: "HyperMD-codeblock HyperMD-codeblock-bg"
});
function codeBlockClass(view) {
  const builder = new import_state11.RangeSetBuilder();
  for (const { from, to } of view.visibleRanges) {
    for (let pos = from; pos <= to; ) {
      const line = view.state.doc.lineAt(pos);
      builder.add(line.from, line.from, codeBlockLine);
      pos = line.to + 1;
    }
  }
  return builder.finish();
}
var codeBlock = import_view8.ViewPlugin.fromClass(class {
  constructor(view) {
    this.decorations = codeBlockClass(view);
  }
  update(update) {
    if (update.docChanged || update.viewportChanged)
      this.decorations = codeBlockClass(update.view);
  }
}, {
  decorations: (v3) => v3.decorations
});

// src/components/Space/Contexts/DataTypeView/CodeCell.tsx
var import_lodash13 = __toESM(require_lodash());
init_compat_module();

// src/components/ui/modals/textModal.tsx
var import_obsidian60 = require("obsidian");

// src/components/Space/Frames/Panels/CodePanel.tsx
init_compat_module();

// src/components/Space/Frames/Panels/EventsPanel.tsx
init_compat_module();

// src/components/Space/Frames/Panels/NodeInfoPanel.tsx
init_compat_module();

// src/components/Space/Frames/FrameLayerList.tsx
var import_obsidian61 = require("obsidian");
init_compat_module();

// src/components/FileContexts/ContextExplorer.tsx
var import_obsidian67 = require("obsidian");

// src/components/FileContexts/NoteExplorer.tsx
var import_obsidian62 = require("obsidian");
init_compat_module();

// src/components/FileContexts/Backlinks.tsx
init_compat_module();

// src/components/ui/modals/saveTableModal.ts
var import_obsidian63 = require("obsidian");

// src/components/Space/Contexts/FilterBar/TableSelector.tsx
var import_obsidian65 = require("obsidian");
init_compat_module();

// src/components/Space/Contexts/MDBFileViewer.tsx
var import_obsidian64 = require("obsidian");
init_compat_module();
var MDB_FILE_VIEWER_TYPE = "make-mdb-viewer";
var MDBFileViewer = class extends import_obsidian64.FileView {
  constructor(leaf, plugin) {
    super(leaf);
    this.navigation = true;
    this.plugin = plugin;
  }
  getViewType() {
    return MDB_FILE_VIEWER_TYPE;
  }
  getDisplayText() {
    var _a2;
    return (_a2 = this.file) == null ? void 0 : _a2.name;
  }
  async onClose() {
    this.destroy();
  }
  destroy() {
    if (this.root)
      this.root.unmount();
  }
  async onOpen() {
    this.destroy();
  }
  async setState(state, result) {
    this.file = getAbstractFileAtPath(app, state.file);
    this.schema = state.schema;
    this.constructInlineContext(state.file, state.schema);
    await super.setState(state, result);
    this.leaf.tabHeaderInnerTitleEl.innerText = this.file.name;
    this.leaf.view.titleEl = this.file.name;
    const headerEl = this.leaf.view.headerEl;
    if (headerEl) {
      headerEl.querySelector(".view-header-title").innerText = this.file.name;
    }
    return;
  }
  getState() {
    const state = super.getState();
    state.file = this.file.path;
    state.schema = this.schema;
    return state;
  }
  constructInlineContext(path, schema) {
    const space = spaceInfoByPath(this.plugin, getParentPathFromString(path));
    this.destroy();
    this.root = createRoot(this.contentEl);
    if (space)
      this.root.render(
        /* @__PURE__ */ Cn.createElement(SpaceContextProvider, {
          plugin: this.plugin,
          space
        }, /* @__PURE__ */ Cn.createElement(ContextMDBProvider, {
          plugin: this.plugin,
          schema
        }, /* @__PURE__ */ Cn.createElement(FramesMDBProvider, {
          plugin: this.plugin
        }, /* @__PURE__ */ Cn.createElement(ContextEditorProvider, {
          plugin: this.plugin
        }, /* @__PURE__ */ Cn.createElement(ContextListView, {
          plugin: this.plugin
        })))))
      );
  }
};

// src/components/Space/Frames/FramesSelector.tsx
var import_obsidian66 = require("obsidian");
init_compat_module();

// src/components/FileContexts/SpaceExplorer.tsx
init_compat_module();

// src/components/FileContexts/ContextExplorer.tsx
var FILE_CONTEXT_VIEW_TYPE = "make-context-view";

// src/dispatch/spaces.ts
var dispatchSpaceDatabaseFileChanged = (type, action, name, newName) => {
  let evt = new CustomEvent(eventTypes.spacesChange, {
    detail: {
      type,
      action,
      name,
      newName
    }
  });
  window.dispatchEvent(evt);
};
var onFileCreated = async (plugin, newPath, folder) => {
  var _a2;
  const file = getAbstractFileAtPath(app, newPath);
  const parent = file.parent;
  if (!excludeFilePredicate(plugin)(file, 0, (_a2 = parent.children) != null ? _a2 : [])) {
    return;
  }
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: [...plugin.index.vaultDBCache, {
    path: newPath,
    parent: parent == null ? void 0 : parent.path,
    created: Math.trunc(Date.now() / 1e3).toString(),
    folder: folder ? "true" : "false"
  }] } });
  plugin.index.createFile(newPath);
};
var onFileDeleted = async (plugin, oldPath) => {
  const newVaultRows = plugin.index.vaultDBCache.filter((f4) => f4.path != oldPath);
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
  plugin.index.deleteFile(oldPath);
};
var onFileChanged = async (plugin, oldPath, newPath) => {
  const newFolderPath = getFolderPathFromString(newPath);
  const newVaultRows = plugin.index.vaultDBCache.map((f4) => f4.path == oldPath ? {
    ...f4,
    path: newPath,
    parent: newFolderPath
  } : f4);
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
  return plugin.index.renameFile(oldPath, newPath);
};
var onFolderChanged = async (plugin, oldPath, newPath) => {
  const newFolderPath = getFolderFromPath(app, newPath).parent.path;
  const allChildren = retrieveAllRecursiveChildren(plugin.index.vaultDBCache, plugin.settings, oldPath);
  const newVaultRows = plugin.index.vaultDBCache.map((f4) => f4.path == oldPath ? {
    ...f4,
    path: newPath,
    parent: newFolderPath
  } : f4.parent.startsWith(oldPath) || f4.path.startsWith(oldPath) ? {
    ...f4,
    path: f4.path.replace(oldPath, newPath),
    parent: f4.parent.replace(oldPath, newPath)
  } : f4);
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
  await plugin.index.renameFile(oldPath, newPath);
  await folderRenamed(plugin, oldPath, newPath);
  allChildren.forEach((f4) => plugin.index.renameFile(f4.path, f4.path.replace(oldPath, newPath)));
};
var onFolderDeleted = async (plugin, oldPath) => {
  const allChildren = retrieveAllRecursiveChildren(plugin.index.vaultDBCache, plugin.settings, oldPath);
  const newVaultRows = plugin.index.vaultDBCache.filter((f4) => f4.path != oldPath && !f4.parent.startsWith(oldPath));
  await plugin.index.saveSpacesDatabaseToDisk({ vault: { ...vaultSchema, rows: newVaultRows } });
  allChildren.forEach((f4) => plugin.index.deleteFile(f4.path));
  plugin.index.deleteFile(oldPath);
};

// src/main.ts
var import_obsidian_dataview = __toESM(require_lib2());

// src/superstate/superstate.ts
var import_lodash14 = __toESM(require_lodash());
var import_obsidian69 = require("obsidian");

// src/types/indexMap.ts
var _IndexMap = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map();
    this.invMap = /* @__PURE__ */ new Map();
  }
  get(key2) {
    const result = this.map.get(key2);
    if (result) {
      return new Set(result);
    } else {
      return /* @__PURE__ */ new Set();
    }
  }
  getInverse(value) {
    return this.invMap.get(value) || _IndexMap.EMPTY_SET;
  }
  set(key2, values) {
    var _a2, _b2;
    if (!values.size) {
      this.delete(key2);
      return this;
    }
    const oldValues = this.map.get(key2);
    if (oldValues) {
      for (const value of oldValues) {
        if (!values.has(key2))
          (_a2 = this.invMap.get(value)) == null ? void 0 : _a2.delete(key2);
      }
    }
    this.map.set(key2, values);
    for (const value of values) {
      if (!this.invMap.has(value))
        this.invMap.set(value, /* @__PURE__ */ new Set([key2]));
      else
        (_b2 = this.invMap.get(value)) == null ? void 0 : _b2.add(key2);
    }
    return this;
  }
  setInverse(key2, values) {
    var _a2, _b2;
    if (!values.size) {
      this.deleteInverse(key2);
      return this;
    }
    const oldValues = this.invMap.get(key2);
    if (oldValues) {
      for (const value of oldValues) {
        if (!values.has(key2))
          (_a2 = this.map.get(value)) == null ? void 0 : _a2.delete(key2);
      }
    }
    this.invMap.set(key2, values);
    for (const value of values) {
      if (!this.map.has(value))
        this.map.set(value, /* @__PURE__ */ new Set([key2]));
      else
        (_b2 = this.map.get(value)) == null ? void 0 : _b2.add(key2);
    }
    return this;
  }
  delete(key2) {
    var _a2;
    const oldValues = this.map.get(key2);
    if (!oldValues)
      return false;
    this.map.delete(key2);
    for (const value of oldValues) {
      (_a2 = this.invMap.get(value)) == null ? void 0 : _a2.delete(key2);
    }
    return true;
  }
  deleteInverse(key2) {
    var _a2;
    const oldValues = this.invMap.get(key2);
    if (!oldValues)
      return false;
    this.invMap.delete(key2);
    for (const value of oldValues) {
      (_a2 = this.map.get(value)) == null ? void 0 : _a2.delete(key2);
    }
    return true;
  }
  rename(oldKey, newKey) {
    const oldValues = this.map.get(oldKey);
    if (!oldValues)
      return false;
    this.delete(oldKey);
    this.set(newKey, oldValues);
    return true;
  }
  renameInverse(oldKey, newKey) {
    const oldValues = this.invMap.get(oldKey);
    if (!oldValues)
      return false;
    this.deleteInverse(oldKey);
    this.setInverse(newKey, oldValues);
    return true;
  }
  clear() {
    this.map.clear();
    this.invMap.clear();
  }
};
var IndexMap = _IndexMap;
IndexMap.EMPTY_SET = Object.freeze(/* @__PURE__ */ new Set());

// src/utils/foldernote.ts
var isFolderNote = (settings, aFile) => {
  if (!aFile)
    return false;
  const afolder = tFileToAFile(getAbstractFileAtPath(app, folderPathFromFolderNoteFile(settings, aFile)));
  if (!afolder)
    return false;
  if (folderNotePathFromAFile(settings, afolder) == aFile.path)
    return true;
  return false;
};

// src/utils/superstate/parser.ts
var parseFileCache = (cache) => {
  return safelyParseJSON(cache);
};

// src/utils/superstate/serializer.ts
var serializeFileCache = (fileCache) => {
  return JSON.stringify(fileCache);
};
var stringifyJob = (job) => `${job.type}:${job.path}`;

// src/superstate/api.ts
var API = class {
  constructor(plugin) {
    this.buttonCommand = (action, actionValue) => {
      if (action == "command") {
        this.runObsidianCommand(actionValue);
      }
      if (action == "open") {
        this.openLink(actionValue, false);
      }
    };
    this.runObsidianCommand = (command) => {
      this.plugin.app.commands.commands[command].callback();
    };
    this.formatDate = (date, format2) => {
      return formatDate(this.plugin, date, format2);
    };
    this.now = () => {
      return new Date();
    };
    this.plugin = plugin;
  }
  openLink(path, target) {
    openPath(this.plugin, uriByString(path), target);
  }
  getLocalFile(path) {
    return app.vault.getResourcePath(getAbstractFileAtPath(app, path));
  }
  getContext(path, table) {
    var _a2;
    return (_a2 = this.plugin.index.contextsIndex.get(path)) == null ? void 0 : _a2.tables[table];
  }
  setContextValue(path, file, field, value) {
    const space = this.plugin.index.spacesIndex.get(path);
    if (space)
      updateValueInContext(this.plugin, file, field, value, space.space);
  }
};

// src/superstate/localCache/localCache.ts
var import_localforage = __toESM(require_localforage());
var LocalStorageCache = class {
  constructor(appId, version2) {
    this.appId = appId;
    this.version = version2;
    this.persister = import_localforage.default.createInstance({
      name: "superstate/" + appId,
      driver: [import_localforage.default.INDEXEDDB],
      description: "Superstate Index"
    });
  }
  async recreate() {
    await import_localforage.default.dropInstance({ name: "superstate/" + this.appId });
    this.persister = import_localforage.default.createInstance({
      name: "superstate/" + this.appId,
      driver: [import_localforage.default.INDEXEDDB],
      description: "Superstate Index"
    });
  }
  async load(path, type) {
    return this.persister.getItem(this.keyForType(path, type)).then((raw) => {
      let result = raw;
      return result;
    });
  }
  async store(path, data2, type) {
    await this.persister.setItem(this.keyForType(path, type), data2);
  }
  async remove(path, type) {
    await this.persister.removeItem(this.keyForType(path, type));
  }
  async synchronize(existing) {
    let keys2 = new Set(await this.allFiles());
    for (let exist of existing)
      keys2.delete(exist);
    for (let key2 of keys2)
      await this.persister.removeItem(this.keyForType(key2, "file"));
    return keys2;
  }
  async allKeys() {
    return this.persister.keys();
  }
  async allFiles() {
    let keys2 = await this.allKeys();
    return keys2.filter((k5) => k5.startsWith("file:")).map((k5) => k5.substring(5));
  }
  keyForType(path, type) {
    return type + ":" + path;
  }
};

// src/superstate/workers/manager.ts
var import_obsidian68 = require("obsidian");

// inline-worker:__inline-worker
function inlineWorker(scriptText) {
  let blob = new Blob([scriptText], { type: "text/javascript" });
  let url = URL.createObjectURL(blob);
  let worker = new Worker(url, { "name": "Superstate Worker" });
  URL.revokeObjectURL(url);
  return worker;
}

// src/superstate/workers/entry.worker.ts
function Worker2() {
  return inlineWorker('var Gd=Object.create;var nu=Object.defineProperty,qd=Object.defineProperties,$d=Object.getOwnPropertyDescriptor,Hd=Object.getOwnPropertyDescriptors,Kd=Object.getOwnPropertyNames,Bo=Object.getOwnPropertySymbols,kd=Object.getPrototypeOf,No=Object.prototype.hasOwnProperty,zd=Object.prototype.propertyIsEnumerable;var Uo=(i,l,x)=>l in i?nu(i,l,{enumerable:!0,configurable:!0,writable:!0,value:x}):i[l]=x,It=(i,l)=>{for(var x in l||(l={}))No.call(l,x)&&Uo(i,x,l[x]);if(Bo)for(var x of Bo(l))zd.call(l,x)&&Uo(i,x,l[x]);return i},Mt=(i,l)=>qd(i,Hd(l));var Yd=(i,l)=>()=>(l||i((l={exports:{}}).exports,l),l.exports);var Zd=(i,l,x,m)=>{if(l&&typeof l=="object"||typeof l=="function")for(let w of Kd(l))!No.call(i,w)&&w!==x&&nu(i,w,{get:()=>l[w],enumerable:!(m=$d(l,w))||m.enumerable});return i};var Jd=(i,l,x)=>(x=i!=null?Gd(kd(i)):{},Zd(l||!i||!i.__esModule?nu(x,"default",{value:i,enumerable:!0}):x,i));var Go=Yd((ie,Ie)=>{(function(){var i,l="4.17.21",x=200,m="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",w="Expected a function",N="Invalid `variable` option passed into `_.template`",z="__lodash_hash_undefined__",ln=500,G="__lodash_placeholder__",W=1,cn=2,Q=4,on=1,Cn=2,V=1,Z=2,tt=4,hn=8,$=16,j=32,rn=64,pn=128,Jn=256,Rt=512,et=30,Er="...",Le=800,_t=16,Xn=1,fe=2,be=3,Qn=1/0,Hn=9007199254740991,Ee=17976931348623157e292,Lt=0/0,In=4294967295,Oe=In-1,De=In>>>1,Pe=[["ary",pn],["bind",V],["bindKey",Z],["curry",hn],["curryRight",$],["flip",Rt],["partial",j],["partialRight",rn],["rearg",Jn]],rt="[object Arguments]",bt="[object Array]",We="[object AsyncFunction]",H="[object Boolean]",en="[object Date]",_n="[object DOMException]",gn="[object Error]",Et="[object Function]",oe="[object GeneratorFunction]",Mn="[object Map]",Ot="[object Number]",Ht="[object Null]",it="[object Object]",uu="[object Promise]",is="[object Proxy]",se="[object RegExp]",Kn="[object Set]",ae="[object String]",Be="[object Symbol]",us="[object Undefined]",le="[object WeakMap]",fs="[object WeakSet]",ce="[object ArrayBuffer]",Kt="[object DataView]",Or="[object Float32Array]",Dr="[object Float64Array]",Pr="[object Int8Array]",Wr="[object Int16Array]",Br="[object Int32Array]",Ur="[object Uint8Array]",Nr="[object Uint8ClampedArray]",Gr="[object Uint16Array]",qr="[object Uint32Array]",os=/\\b__p \\+= \'\';/g,ss=/\\b(__p \\+=) \'\' \\+/g,as=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n\'\';/g,fu=/&(?:amp|lt|gt|quot|#39);/g,ou=/[&<>"\']/g,ls=RegExp(fu.source),cs=RegExp(ou.source),hs=/<%-([\\s\\S]+?)%>/g,ps=/<%([\\s\\S]+?)%>/g,su=/<%=([\\s\\S]+?)%>/g,gs=/\\.|\\[(?:[^[\\]]*|(["\'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,ds=/^\\w*$/,_s=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["\'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,$r=/[\\\\^$.*+?()[\\]{}|]/g,vs=RegExp($r.source),Hr=/^\\s+/,ms=/\\s/,xs=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,ys=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,ws=/,? & /,As=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Ss=/[()=,{}\\[\\]\\/\\s]/,Ts=/\\\\(\\\\)?/g,Fs=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,au=/\\w*$/,Cs=/^[-+]0x[0-9a-f]+$/i,Is=/^0b[01]+$/i,Ms=/^\\[object .+?Constructor\\]$/,Rs=/^0o[0-7]+$/i,Ls=/^(?:0|[1-9]\\d*)$/,bs=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Ue=/($^)/,Es=/[\'\\n\\r\\u2028\\u2029\\\\]/g,Ne="\\\\ud800-\\\\udfff",Os="\\\\u0300-\\\\u036f",Ds="\\\\ufe20-\\\\ufe2f",Ps="\\\\u20d0-\\\\u20ff",lu=Os+Ds+Ps,cu="\\\\u2700-\\\\u27bf",hu="a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff",Ws="\\\\xac\\\\xb1\\\\xd7\\\\xf7",Bs="\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf",Us="\\\\u2000-\\\\u206f",Ns=" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000",pu="A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde",gu="\\\\ufe0e\\\\ufe0f",du=Ws+Bs+Us+Ns,Kr="[\'\\u2019]",Gs="["+Ne+"]",_u="["+du+"]",Ge="["+lu+"]",vu="\\\\d+",qs="["+cu+"]",mu="["+hu+"]",xu="[^"+Ne+du+vu+cu+hu+pu+"]",kr="\\\\ud83c[\\\\udffb-\\\\udfff]",$s="(?:"+Ge+"|"+kr+")",yu="[^"+Ne+"]",zr="(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}",Yr="[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]",kt="["+pu+"]",wu="\\\\u200d",Au="(?:"+mu+"|"+xu+")",Hs="(?:"+kt+"|"+xu+")",Su="(?:"+Kr+"(?:d|ll|m|re|s|t|ve))?",Tu="(?:"+Kr+"(?:D|LL|M|RE|S|T|VE))?",Fu=$s+"?",Cu="["+gu+"]?",Ks="(?:"+wu+"(?:"+[yu,zr,Yr].join("|")+")"+Cu+Fu+")*",ks="\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])",zs="\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])",Iu=Cu+Fu+Ks,Ys="(?:"+[qs,zr,Yr].join("|")+")"+Iu,Zs="(?:"+[yu+Ge+"?",Ge,zr,Yr,Gs].join("|")+")",Js=RegExp(Kr,"g"),Xs=RegExp(Ge,"g"),Zr=RegExp(kr+"(?="+kr+")|"+Zs+Iu,"g"),Qs=RegExp([kt+"?"+mu+"+"+Su+"(?="+[_u,kt,"$"].join("|")+")",Hs+"+"+Tu+"(?="+[_u,kt+Au,"$"].join("|")+")",kt+"?"+Au+"+"+Su,kt+"+"+Tu,zs,ks,vu,Ys].join("|"),"g"),Vs=RegExp("["+wu+Ne+lu+gu+"]"),js=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,na=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],ta=-1,k={};k[Or]=k[Dr]=k[Pr]=k[Wr]=k[Br]=k[Ur]=k[Nr]=k[Gr]=k[qr]=!0,k[rt]=k[bt]=k[ce]=k[H]=k[Kt]=k[en]=k[gn]=k[Et]=k[Mn]=k[Ot]=k[it]=k[se]=k[Kn]=k[ae]=k[le]=!1;var K={};K[rt]=K[bt]=K[ce]=K[Kt]=K[H]=K[en]=K[Or]=K[Dr]=K[Pr]=K[Wr]=K[Br]=K[Mn]=K[Ot]=K[it]=K[se]=K[Kn]=K[ae]=K[Be]=K[Ur]=K[Nr]=K[Gr]=K[qr]=!0,K[gn]=K[Et]=K[le]=!1;var ea={\\u00C0:"A",\\u00C1:"A",\\u00C2:"A",\\u00C3:"A",\\u00C4:"A",\\u00C5:"A",\\u00E0:"a",\\u00E1:"a",\\u00E2:"a",\\u00E3:"a",\\u00E4:"a",\\u00E5:"a",\\u00C7:"C",\\u00E7:"c",\\u00D0:"D",\\u00F0:"d",\\u00C8:"E",\\u00C9:"E",\\u00CA:"E",\\u00CB:"E",\\u00E8:"e",\\u00E9:"e",\\u00EA:"e",\\u00EB:"e",\\u00CC:"I",\\u00CD:"I",\\u00CE:"I",\\u00CF:"I",\\u00EC:"i",\\u00ED:"i",\\u00EE:"i",\\u00EF:"i",\\u00D1:"N",\\u00F1:"n",\\u00D2:"O",\\u00D3:"O",\\u00D4:"O",\\u00D5:"O",\\u00D6:"O",\\u00D8:"O",\\u00F2:"o",\\u00F3:"o",\\u00F4:"o",\\u00F5:"o",\\u00F6:"o",\\u00F8:"o",\\u00D9:"U",\\u00DA:"U",\\u00DB:"U",\\u00DC:"U",\\u00F9:"u",\\u00FA:"u",\\u00FB:"u",\\u00FC:"u",\\u00DD:"Y",\\u00FD:"y",\\u00FF:"y",\\u00C6:"Ae",\\u00E6:"ae",\\u00DE:"Th",\\u00FE:"th",\\u00DF:"ss",\\u0100:"A",\\u0102:"A",\\u0104:"A",\\u0101:"a",\\u0103:"a",\\u0105:"a",\\u0106:"C",\\u0108:"C",\\u010A:"C",\\u010C:"C",\\u0107:"c",\\u0109:"c",\\u010B:"c",\\u010D:"c",\\u010E:"D",\\u0110:"D",\\u010F:"d",\\u0111:"d",\\u0112:"E",\\u0114:"E",\\u0116:"E",\\u0118:"E",\\u011A:"E",\\u0113:"e",\\u0115:"e",\\u0117:"e",\\u0119:"e",\\u011B:"e",\\u011C:"G",\\u011E:"G",\\u0120:"G",\\u0122:"G",\\u011D:"g",\\u011F:"g",\\u0121:"g",\\u0123:"g",\\u0124:"H",\\u0126:"H",\\u0125:"h",\\u0127:"h",\\u0128:"I",\\u012A:"I",\\u012C:"I",\\u012E:"I",\\u0130:"I",\\u0129:"i",\\u012B:"i",\\u012D:"i",\\u012F:"i",\\u0131:"i",\\u0134:"J",\\u0135:"j",\\u0136:"K",\\u0137:"k",\\u0138:"k",\\u0139:"L",\\u013B:"L",\\u013D:"L",\\u013F:"L",\\u0141:"L",\\u013A:"l",\\u013C:"l",\\u013E:"l",\\u0140:"l",\\u0142:"l",\\u0143:"N",\\u0145:"N",\\u0147:"N",\\u014A:"N",\\u0144:"n",\\u0146:"n",\\u0148:"n",\\u014B:"n",\\u014C:"O",\\u014E:"O",\\u0150:"O",\\u014D:"o",\\u014F:"o",\\u0151:"o",\\u0154:"R",\\u0156:"R",\\u0158:"R",\\u0155:"r",\\u0157:"r",\\u0159:"r",\\u015A:"S",\\u015C:"S",\\u015E:"S",\\u0160:"S",\\u015B:"s",\\u015D:"s",\\u015F:"s",\\u0161:"s",\\u0162:"T",\\u0164:"T",\\u0166:"T",\\u0163:"t",\\u0165:"t",\\u0167:"t",\\u0168:"U",\\u016A:"U",\\u016C:"U",\\u016E:"U",\\u0170:"U",\\u0172:"U",\\u0169:"u",\\u016B:"u",\\u016D:"u",\\u016F:"u",\\u0171:"u",\\u0173:"u",\\u0174:"W",\\u0175:"w",\\u0176:"Y",\\u0177:"y",\\u0178:"Y",\\u0179:"Z",\\u017B:"Z",\\u017D:"Z",\\u017A:"z",\\u017C:"z",\\u017E:"z",\\u0132:"IJ",\\u0133:"ij",\\u0152:"Oe",\\u0153:"oe",\\u0149:"\'n",\\u017F:"s"},ra={"&":"&amp;","<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&#39;"},ia={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&#39;":"\'"},ua={"\\\\":"\\\\","\'":"\'","\\n":"n","\\r":"r","\\u2028":"u2028","\\u2029":"u2029"},fa=parseFloat,oa=parseInt,Mu=typeof global=="object"&&global&&global.Object===Object&&global,sa=typeof self=="object"&&self&&self.Object===Object&&self,sn=Mu||sa||Function("return this")(),Jr=typeof ie=="object"&&ie&&!ie.nodeType&&ie,Dt=Jr&&typeof Ie=="object"&&Ie&&!Ie.nodeType&&Ie,Ru=Dt&&Dt.exports===Jr,Xr=Ru&&Mu.process,Pn=function(){try{var c=Dt&&Dt.require&&Dt.require("util").types;return c||Xr&&Xr.binding&&Xr.binding("util")}catch(g){}}(),Lu=Pn&&Pn.isArrayBuffer,bu=Pn&&Pn.isDate,Eu=Pn&&Pn.isMap,Ou=Pn&&Pn.isRegExp,Du=Pn&&Pn.isSet,Pu=Pn&&Pn.isTypedArray;function Rn(c,g,p){switch(p.length){case 0:return c.call(g);case 1:return c.call(g,p[0]);case 2:return c.call(g,p[0],p[1]);case 3:return c.call(g,p[0],p[1],p[2])}return c.apply(g,p)}function aa(c,g,p,A){for(var I=-1,P=c==null?0:c.length;++I<P;){var un=c[I];g(A,un,p(un),c)}return A}function Wn(c,g){for(var p=-1,A=c==null?0:c.length;++p<A&&g(c[p],p,c)!==!1;);return c}function la(c,g){for(var p=c==null?0:c.length;p--&&g(c[p],p,c)!==!1;);return c}function Wu(c,g){for(var p=-1,A=c==null?0:c.length;++p<A;)if(!g(c[p],p,c))return!1;return!0}function vt(c,g){for(var p=-1,A=c==null?0:c.length,I=0,P=[];++p<A;){var un=c[p];g(un,p,c)&&(P[I++]=un)}return P}function qe(c,g){var p=c==null?0:c.length;return!!p&&zt(c,g,0)>-1}function Qr(c,g,p){for(var A=-1,I=c==null?0:c.length;++A<I;)if(p(g,c[A]))return!0;return!1}function Y(c,g){for(var p=-1,A=c==null?0:c.length,I=Array(A);++p<A;)I[p]=g(c[p],p,c);return I}function mt(c,g){for(var p=-1,A=g.length,I=c.length;++p<A;)c[I+p]=g[p];return c}function Vr(c,g,p,A){var I=-1,P=c==null?0:c.length;for(A&&P&&(p=c[++I]);++I<P;)p=g(p,c[I],I,c);return p}function ca(c,g,p,A){var I=c==null?0:c.length;for(A&&I&&(p=c[--I]);I--;)p=g(p,c[I],I,c);return p}function jr(c,g){for(var p=-1,A=c==null?0:c.length;++p<A;)if(g(c[p],p,c))return!0;return!1}var ha=ni("length");function pa(c){return c.split("")}function ga(c){return c.match(As)||[]}function Bu(c,g,p){var A;return p(c,function(I,P,un){if(g(I,P,un))return A=P,!1}),A}function $e(c,g,p,A){for(var I=c.length,P=p+(A?1:-1);A?P--:++P<I;)if(g(c[P],P,c))return P;return-1}function zt(c,g,p){return g===g?Ca(c,g,p):$e(c,Uu,p)}function da(c,g,p,A){for(var I=p-1,P=c.length;++I<P;)if(A(c[I],g))return I;return-1}function Uu(c){return c!==c}function Nu(c,g){var p=c==null?0:c.length;return p?ei(c,g)/p:Lt}function ni(c){return function(g){return g==null?i:g[c]}}function ti(c){return function(g){return c==null?i:c[g]}}function Gu(c,g,p,A,I){return I(c,function(P,un,q){p=A?(A=!1,P):g(p,P,un,q)}),p}function _a(c,g){var p=c.length;for(c.sort(g);p--;)c[p]=c[p].value;return c}function ei(c,g){for(var p,A=-1,I=c.length;++A<I;){var P=g(c[A]);P!==i&&(p=p===i?P:p+P)}return p}function ri(c,g){for(var p=-1,A=Array(c);++p<c;)A[p]=g(p);return A}function va(c,g){return Y(g,function(p){return[p,c[p]]})}function qu(c){return c&&c.slice(0,ku(c)+1).replace(Hr,"")}function Ln(c){return function(g){return c(g)}}function ii(c,g){return Y(g,function(p){return c[p]})}function he(c,g){return c.has(g)}function $u(c,g){for(var p=-1,A=c.length;++p<A&&zt(g,c[p],0)>-1;);return p}function Hu(c,g){for(var p=c.length;p--&&zt(g,c[p],0)>-1;);return p}function ma(c,g){for(var p=c.length,A=0;p--;)c[p]===g&&++A;return A}var xa=ti(ea),ya=ti(ra);function wa(c){return"\\\\"+ua[c]}function Aa(c,g){return c==null?i:c[g]}function Yt(c){return Vs.test(c)}function Sa(c){return js.test(c)}function Ta(c){for(var g,p=[];!(g=c.next()).done;)p.push(g.value);return p}function ui(c){var g=-1,p=Array(c.size);return c.forEach(function(A,I){p[++g]=[I,A]}),p}function Ku(c,g){return function(p){return c(g(p))}}function xt(c,g){for(var p=-1,A=c.length,I=0,P=[];++p<A;){var un=c[p];(un===g||un===G)&&(c[p]=G,P[I++]=p)}return P}function He(c){var g=-1,p=Array(c.size);return c.forEach(function(A){p[++g]=A}),p}function Fa(c){var g=-1,p=Array(c.size);return c.forEach(function(A){p[++g]=[A,A]}),p}function Ca(c,g,p){for(var A=p-1,I=c.length;++A<I;)if(c[A]===g)return A;return-1}function Ia(c,g,p){for(var A=p+1;A--;)if(c[A]===g)return A;return A}function Zt(c){return Yt(c)?Ra(c):ha(c)}function kn(c){return Yt(c)?La(c):pa(c)}function ku(c){for(var g=c.length;g--&&ms.test(c.charAt(g)););return g}var Ma=ti(ia);function Ra(c){for(var g=Zr.lastIndex=0;Zr.test(c);)++g;return g}function La(c){return c.match(Zr)||[]}function ba(c){return c.match(Qs)||[]}var Ea=function c(g){g=g==null?sn:yt.defaults(sn.Object(),g,yt.pick(sn,na));var p=g.Array,A=g.Date,I=g.Error,P=g.Function,un=g.Math,q=g.Object,fi=g.RegExp,Oa=g.String,Bn=g.TypeError,Ke=p.prototype,Da=P.prototype,Jt=q.prototype,ke=g["__core-js_shared__"],ze=Da.toString,U=Jt.hasOwnProperty,Pa=0,zu=function(){var n=/[^.]+$/.exec(ke&&ke.keys&&ke.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:""}(),Ye=Jt.toString,Wa=ze.call(q),Ba=sn._,Ua=fi("^"+ze.call(U).replace($r,"\\\\$&").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,"$1.*?")+"$"),Ze=Ru?g.Buffer:i,wt=g.Symbol,Je=g.Uint8Array,Yu=Ze?Ze.allocUnsafe:i,Xe=Ku(q.getPrototypeOf,q),Zu=q.create,Ju=Jt.propertyIsEnumerable,Qe=Ke.splice,Xu=wt?wt.isConcatSpreadable:i,pe=wt?wt.iterator:i,Pt=wt?wt.toStringTag:i,Ve=function(){try{var n=Gt(q,"defineProperty");return n({},"",{}),n}catch(t){}}(),Na=g.clearTimeout!==sn.clearTimeout&&g.clearTimeout,Ga=A&&A.now!==sn.Date.now&&A.now,qa=g.setTimeout!==sn.setTimeout&&g.setTimeout,je=un.ceil,nr=un.floor,oi=q.getOwnPropertySymbols,$a=Ze?Ze.isBuffer:i,Qu=g.isFinite,Ha=Ke.join,Ka=Ku(q.keys,q),fn=un.max,vn=un.min,ka=A.now,za=g.parseInt,Vu=un.random,Ya=Ke.reverse,si=Gt(g,"DataView"),ge=Gt(g,"Map"),ai=Gt(g,"Promise"),Xt=Gt(g,"Set"),de=Gt(g,"WeakMap"),_e=Gt(q,"create"),tr=de&&new de,Qt={},Za=qt(si),Ja=qt(ge),Xa=qt(ai),Qa=qt(Xt),Va=qt(de),er=wt?wt.prototype:i,ve=er?er.valueOf:i,ju=er?er.toString:i;function f(n){if(X(n)&&!M(n)&&!(n instanceof O)){if(n instanceof Un)return n;if(U.call(n,"__wrapped__"))return to(n)}return new Un(n)}var Vt=function(){function n(){}return function(t){if(!J(t))return{};if(Zu)return Zu(t);n.prototype=t;var e=new n;return n.prototype=i,e}}();function rr(){}function Un(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=i}f.templateSettings={escape:hs,evaluate:ps,interpolate:su,variable:"",imports:{_:f}},f.prototype=rr.prototype,f.prototype.constructor=f,Un.prototype=Vt(rr.prototype),Un.prototype.constructor=Un;function O(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=In,this.__views__=[]}function ja(){var n=new O(this.__wrapped__);return n.__actions__=An(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=An(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=An(this.__views__),n}function nl(){if(this.__filtered__){var n=new O(this);n.__dir__=-1,n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function tl(){var n=this.__wrapped__.value(),t=this.__dir__,e=M(n),r=t<0,u=e?n.length:0,o=pc(0,u,this.__views__),s=o.start,a=o.end,h=a-s,d=r?a:s-1,_=this.__iteratees__,v=_.length,y=0,S=vn(h,this.__takeCount__);if(!e||!r&&u==h&&S==h)return Tf(n,this.__actions__);var F=[];n:for(;h--&&y<S;){d+=t;for(var L=-1,C=n[d];++L<v;){var E=_[L],D=E.iteratee,On=E.type,wn=D(C);if(On==fe)C=wn;else if(!wn){if(On==Xn)continue n;break n}}F[y++]=C}return F}O.prototype=Vt(rr.prototype),O.prototype.constructor=O;function Wt(n){var t=-1,e=n==null?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function el(){this.__data__=_e?_e(null):{},this.size=0}function rl(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function il(n){var t=this.__data__;if(_e){var e=t[n];return e===z?i:e}return U.call(t,n)?t[n]:i}function ul(n){var t=this.__data__;return _e?t[n]!==i:U.call(t,n)}function fl(n,t){var e=this.__data__;return this.size+=this.has(n)?0:1,e[n]=_e&&t===i?z:t,this}Wt.prototype.clear=el,Wt.prototype.delete=rl,Wt.prototype.get=il,Wt.prototype.has=ul,Wt.prototype.set=fl;function ut(n){var t=-1,e=n==null?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function ol(){this.__data__=[],this.size=0}function sl(n){var t=this.__data__,e=ir(t,n);if(e<0)return!1;var r=t.length-1;return e==r?t.pop():Qe.call(t,e,1),--this.size,!0}function al(n){var t=this.__data__,e=ir(t,n);return e<0?i:t[e][1]}function ll(n){return ir(this.__data__,n)>-1}function cl(n,t){var e=this.__data__,r=ir(e,n);return r<0?(++this.size,e.push([n,t])):e[r][1]=t,this}ut.prototype.clear=ol,ut.prototype.delete=sl,ut.prototype.get=al,ut.prototype.has=ll,ut.prototype.set=cl;function ft(n){var t=-1,e=n==null?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function hl(){this.size=0,this.__data__={hash:new Wt,map:new(ge||ut),string:new Wt}}function pl(n){var t=_r(this,n).delete(n);return this.size-=t?1:0,t}function gl(n){return _r(this,n).get(n)}function dl(n){return _r(this,n).has(n)}function _l(n,t){var e=_r(this,n),r=e.size;return e.set(n,t),this.size+=e.size==r?0:1,this}ft.prototype.clear=hl,ft.prototype.delete=pl,ft.prototype.get=gl,ft.prototype.has=dl,ft.prototype.set=_l;function Bt(n){var t=-1,e=n==null?0:n.length;for(this.__data__=new ft;++t<e;)this.add(n[t])}function vl(n){return this.__data__.set(n,z),this}function ml(n){return this.__data__.has(n)}Bt.prototype.add=Bt.prototype.push=vl,Bt.prototype.has=ml;function zn(n){var t=this.__data__=new ut(n);this.size=t.size}function xl(){this.__data__=new ut,this.size=0}function yl(n){var t=this.__data__,e=t.delete(n);return this.size=t.size,e}function wl(n){return this.__data__.get(n)}function Al(n){return this.__data__.has(n)}function Sl(n,t){var e=this.__data__;if(e instanceof ut){var r=e.__data__;if(!ge||r.length<x-1)return r.push([n,t]),this.size=++e.size,this;e=this.__data__=new ft(r)}return e.set(n,t),this.size=e.size,this}zn.prototype.clear=xl,zn.prototype.delete=yl,zn.prototype.get=wl,zn.prototype.has=Al,zn.prototype.set=Sl;function nf(n,t){var e=M(n),r=!e&&$t(n),u=!e&&!r&&Ct(n),o=!e&&!r&&!u&&ee(n),s=e||r||u||o,a=s?ri(n.length,Oa):[],h=a.length;for(var d in n)(t||U.call(n,d))&&!(s&&(d=="length"||u&&(d=="offset"||d=="parent")||o&&(d=="buffer"||d=="byteLength"||d=="byteOffset")||lt(d,h)))&&a.push(d);return a}function tf(n){var t=n.length;return t?n[yi(0,t-1)]:i}function Tl(n,t){return vr(An(n),Ut(t,0,n.length))}function Fl(n){return vr(An(n))}function li(n,t,e){(e!==i&&!Yn(n[t],e)||e===i&&!(t in n))&&ot(n,t,e)}function me(n,t,e){var r=n[t];(!(U.call(n,t)&&Yn(r,e))||e===i&&!(t in n))&&ot(n,t,e)}function ir(n,t){for(var e=n.length;e--;)if(Yn(n[e][0],t))return e;return-1}function Cl(n,t,e,r){return At(n,function(u,o,s){t(r,u,e(u),s)}),r}function ef(n,t){return n&&jn(t,an(t),n)}function Il(n,t){return n&&jn(t,Tn(t),n)}function ot(n,t,e){t=="__proto__"&&Ve?Ve(n,t,{configurable:!0,enumerable:!0,value:e,writable:!0}):n[t]=e}function ci(n,t){for(var e=-1,r=t.length,u=p(r),o=n==null;++e<r;)u[e]=o?i:ki(n,t[e]);return u}function Ut(n,t,e){return n===n&&(e!==i&&(n=n<=e?n:e),t!==i&&(n=n>=t?n:t)),n}function Nn(n,t,e,r,u,o){var s,a=t&W,h=t&cn,d=t&Q;if(e&&(s=u?e(n,r,u,o):e(n)),s!==i)return s;if(!J(n))return n;var _=M(n);if(_){if(s=dc(n),!a)return An(n,s)}else{var v=mn(n),y=v==Et||v==oe;if(Ct(n))return If(n,a);if(v==it||v==rt||y&&!u){if(s=h||y?{}:zf(n),!a)return h?ic(n,Il(s,n)):rc(n,ef(s,n))}else{if(!K[v])return u?n:{};s=_c(n,v,a)}}o||(o=new zn);var S=o.get(n);if(S)return S;o.set(n,s),Ao(n)?n.forEach(function(C){s.add(Nn(C,t,e,C,n,o))}):yo(n)&&n.forEach(function(C,E){s.set(E,Nn(C,t,e,E,n,o))});var F=d?h?bi:Li:h?Tn:an,L=_?i:F(n);return Wn(L||n,function(C,E){L&&(E=C,C=n[E]),me(s,E,Nn(C,t,e,E,n,o))}),s}function Ml(n){var t=an(n);return function(e){return rf(e,n,t)}}function rf(n,t,e){var r=e.length;if(n==null)return!r;for(n=q(n);r--;){var u=e[r],o=t[u],s=n[u];if(s===i&&!(u in n)||!o(s))return!1}return!0}function uf(n,t,e){if(typeof n!="function")throw new Bn(w);return Fe(function(){n.apply(i,e)},t)}function xe(n,t,e,r){var u=-1,o=qe,s=!0,a=n.length,h=[],d=t.length;if(!a)return h;e&&(t=Y(t,Ln(e))),r?(o=Qr,s=!1):t.length>=x&&(o=he,s=!1,t=new Bt(t));n:for(;++u<a;){var _=n[u],v=e==null?_:e(_);if(_=r||_!==0?_:0,s&&v===v){for(var y=d;y--;)if(t[y]===v)continue n;h.push(_)}else o(t,v,r)||h.push(_)}return h}var At=Ef(Vn),ff=Ef(pi,!0);function Rl(n,t){var e=!0;return At(n,function(r,u,o){return e=!!t(r,u,o),e}),e}function ur(n,t,e){for(var r=-1,u=n.length;++r<u;){var o=n[r],s=t(o);if(s!=null&&(a===i?s===s&&!En(s):e(s,a)))var a=s,h=o}return h}function Ll(n,t,e,r){var u=n.length;for(e=R(e),e<0&&(e=-e>u?0:u+e),r=r===i||r>u?u:R(r),r<0&&(r+=u),r=e>r?0:To(r);e<r;)n[e++]=t;return n}function of(n,t){var e=[];return At(n,function(r,u,o){t(r,u,o)&&e.push(r)}),e}function dn(n,t,e,r,u){var o=-1,s=n.length;for(e||(e=mc),u||(u=[]);++o<s;){var a=n[o];t>0&&e(a)?t>1?dn(a,t-1,e,r,u):mt(u,a):r||(u[u.length]=a)}return u}var hi=Of(),sf=Of(!0);function Vn(n,t){return n&&hi(n,t,an)}function pi(n,t){return n&&sf(n,t,an)}function fr(n,t){return vt(t,function(e){return ct(n[e])})}function Nt(n,t){t=Tt(t,n);for(var e=0,r=t.length;n!=null&&e<r;)n=n[nt(t[e++])];return e&&e==r?n:i}function af(n,t,e){var r=t(n);return M(n)?r:mt(r,e(n))}function xn(n){return n==null?n===i?us:Ht:Pt&&Pt in q(n)?hc(n):Fc(n)}function gi(n,t){return n>t}function bl(n,t){return n!=null&&U.call(n,t)}function El(n,t){return n!=null&&t in q(n)}function Ol(n,t,e){return n>=vn(t,e)&&n<fn(t,e)}function di(n,t,e){for(var r=e?Qr:qe,u=n[0].length,o=n.length,s=o,a=p(o),h=1/0,d=[];s--;){var _=n[s];s&&t&&(_=Y(_,Ln(t))),h=vn(_.length,h),a[s]=!e&&(t||u>=120&&_.length>=120)?new Bt(s&&_):i}_=n[0];var v=-1,y=a[0];n:for(;++v<u&&d.length<h;){var S=_[v],F=t?t(S):S;if(S=e||S!==0?S:0,!(y?he(y,F):r(d,F,e))){for(s=o;--s;){var L=a[s];if(!(L?he(L,F):r(n[s],F,e)))continue n}y&&y.push(F),d.push(S)}}return d}function Dl(n,t,e,r){return Vn(n,function(u,o,s){t(r,e(u),o,s)}),r}function ye(n,t,e){t=Tt(t,n),n=Xf(n,t);var r=n==null?n:n[nt(qn(t))];return r==null?i:Rn(r,n,e)}function lf(n){return X(n)&&xn(n)==rt}function Pl(n){return X(n)&&xn(n)==ce}function Wl(n){return X(n)&&xn(n)==en}function we(n,t,e,r,u){return n===t?!0:n==null||t==null||!X(n)&&!X(t)?n!==n&&t!==t:Bl(n,t,e,r,we,u)}function Bl(n,t,e,r,u,o){var s=M(n),a=M(t),h=s?bt:mn(n),d=a?bt:mn(t);h=h==rt?it:h,d=d==rt?it:d;var _=h==it,v=d==it,y=h==d;if(y&&Ct(n)){if(!Ct(t))return!1;s=!0,_=!1}if(y&&!_)return o||(o=new zn),s||ee(n)?Hf(n,t,e,r,u,o):lc(n,t,h,e,r,u,o);if(!(e&on)){var S=_&&U.call(n,"__wrapped__"),F=v&&U.call(t,"__wrapped__");if(S||F){var L=S?n.value():n,C=F?t.value():t;return o||(o=new zn),u(L,C,e,r,o)}}return y?(o||(o=new zn),cc(n,t,e,r,u,o)):!1}function Ul(n){return X(n)&&mn(n)==Mn}function _i(n,t,e,r){var u=e.length,o=u,s=!r;if(n==null)return!o;for(n=q(n);u--;){var a=e[u];if(s&&a[2]?a[1]!==n[a[0]]:!(a[0]in n))return!1}for(;++u<o;){a=e[u];var h=a[0],d=n[h],_=a[1];if(s&&a[2]){if(d===i&&!(h in n))return!1}else{var v=new zn;if(r)var y=r(d,_,h,n,t,v);if(!(y===i?we(_,d,on|Cn,r,v):y))return!1}}return!0}function cf(n){if(!J(n)||yc(n))return!1;var t=ct(n)?Ua:Ms;return t.test(qt(n))}function Nl(n){return X(n)&&xn(n)==se}function Gl(n){return X(n)&&mn(n)==Kn}function ql(n){return X(n)&&Sr(n.length)&&!!k[xn(n)]}function hf(n){return typeof n=="function"?n:n==null?Fn:typeof n=="object"?M(n)?df(n[0],n[1]):gf(n):Po(n)}function vi(n){if(!Te(n))return Ka(n);var t=[];for(var e in q(n))U.call(n,e)&&e!="constructor"&&t.push(e);return t}function $l(n){if(!J(n))return Tc(n);var t=Te(n),e=[];for(var r in n)r=="constructor"&&(t||!U.call(n,r))||e.push(r);return e}function mi(n,t){return n<t}function pf(n,t){var e=-1,r=Sn(n)?p(n.length):[];return At(n,function(u,o,s){r[++e]=t(u,o,s)}),r}function gf(n){var t=Oi(n);return t.length==1&&t[0][2]?Zf(t[0][0],t[0][1]):function(e){return e===n||_i(e,n,t)}}function df(n,t){return Pi(n)&&Yf(t)?Zf(nt(n),t):function(e){var r=ki(e,n);return r===i&&r===t?zi(e,n):we(t,r,on|Cn)}}function or(n,t,e,r,u){n!==t&&hi(t,function(o,s){if(u||(u=new zn),J(o))Hl(n,t,s,e,or,r,u);else{var a=r?r(Bi(n,s),o,s+"",n,t,u):i;a===i&&(a=o),li(n,s,a)}},Tn)}function Hl(n,t,e,r,u,o,s){var a=Bi(n,e),h=Bi(t,e),d=s.get(h);if(d){li(n,e,d);return}var _=o?o(a,h,e+"",n,t,s):i,v=_===i;if(v){var y=M(h),S=!y&&Ct(h),F=!y&&!S&&ee(h);_=h,y||S||F?M(a)?_=a:nn(a)?_=An(a):S?(v=!1,_=If(h,!0)):F?(v=!1,_=Mf(h,!0)):_=[]:Ce(h)||$t(h)?(_=a,$t(a)?_=Fo(a):(!J(a)||ct(a))&&(_=zf(h))):v=!1}v&&(s.set(h,_),u(_,h,r,o,s),s.delete(h)),li(n,e,_)}function _f(n,t){var e=n.length;if(!!e)return t+=t<0?e:0,lt(t,e)?n[t]:i}function vf(n,t,e){t.length?t=Y(t,function(o){return M(o)?function(s){return Nt(s,o.length===1?o[0]:o)}:o}):t=[Fn];var r=-1;t=Y(t,Ln(T()));var u=pf(n,function(o,s,a){var h=Y(t,function(d){return d(o)});return{criteria:h,index:++r,value:o}});return _a(u,function(o,s){return ec(o,s,e)})}function Kl(n,t){return mf(n,t,function(e,r){return zi(n,r)})}function mf(n,t,e){for(var r=-1,u=t.length,o={};++r<u;){var s=t[r],a=Nt(n,s);e(a,s)&&Ae(o,Tt(s,n),a)}return o}function kl(n){return function(t){return Nt(t,n)}}function xi(n,t,e,r){var u=r?da:zt,o=-1,s=t.length,a=n;for(n===t&&(t=An(t)),e&&(a=Y(n,Ln(e)));++o<s;)for(var h=0,d=t[o],_=e?e(d):d;(h=u(a,_,h,r))>-1;)a!==n&&Qe.call(a,h,1),Qe.call(n,h,1);return n}function xf(n,t){for(var e=n?t.length:0,r=e-1;e--;){var u=t[e];if(e==r||u!==o){var o=u;lt(u)?Qe.call(n,u,1):Si(n,u)}}return n}function yi(n,t){return n+nr(Vu()*(t-n+1))}function zl(n,t,e,r){for(var u=-1,o=fn(je((t-n)/(e||1)),0),s=p(o);o--;)s[r?o:++u]=n,n+=e;return s}function wi(n,t){var e="";if(!n||t<1||t>Hn)return e;do t%2&&(e+=n),t=nr(t/2),t&&(n+=n);while(t);return e}function b(n,t){return Ui(Jf(n,t,Fn),n+"")}function Yl(n){return tf(re(n))}function Zl(n,t){var e=re(n);return vr(e,Ut(t,0,e.length))}function Ae(n,t,e,r){if(!J(n))return n;t=Tt(t,n);for(var u=-1,o=t.length,s=o-1,a=n;a!=null&&++u<o;){var h=nt(t[u]),d=e;if(h==="__proto__"||h==="constructor"||h==="prototype")return n;if(u!=s){var _=a[h];d=r?r(_,h,a):i,d===i&&(d=J(_)?_:lt(t[u+1])?[]:{})}me(a,h,d),a=a[h]}return n}var yf=tr?function(n,t){return tr.set(n,t),n}:Fn,Jl=Ve?function(n,t){return Ve(n,"toString",{configurable:!0,enumerable:!1,value:Zi(t),writable:!0})}:Fn;function Xl(n){return vr(re(n))}function Gn(n,t,e){var r=-1,u=n.length;t<0&&(t=-t>u?0:u+t),e=e>u?u:e,e<0&&(e+=u),u=t>e?0:e-t>>>0,t>>>=0;for(var o=p(u);++r<u;)o[r]=n[r+t];return o}function Ql(n,t){var e;return At(n,function(r,u,o){return e=t(r,u,o),!e}),!!e}function sr(n,t,e){var r=0,u=n==null?r:n.length;if(typeof t=="number"&&t===t&&u<=De){for(;r<u;){var o=r+u>>>1,s=n[o];s!==null&&!En(s)&&(e?s<=t:s<t)?r=o+1:u=o}return u}return Ai(n,t,Fn,e)}function Ai(n,t,e,r){var u=0,o=n==null?0:n.length;if(o===0)return 0;t=e(t);for(var s=t!==t,a=t===null,h=En(t),d=t===i;u<o;){var _=nr((u+o)/2),v=e(n[_]),y=v!==i,S=v===null,F=v===v,L=En(v);if(s)var C=r||F;else d?C=F&&(r||y):a?C=F&&y&&(r||!S):h?C=F&&y&&!S&&(r||!L):S||L?C=!1:C=r?v<=t:v<t;C?u=_+1:o=_}return vn(o,Oe)}function wf(n,t){for(var e=-1,r=n.length,u=0,o=[];++e<r;){var s=n[e],a=t?t(s):s;if(!e||!Yn(a,h)){var h=a;o[u++]=s===0?0:s}}return o}function Af(n){return typeof n=="number"?n:En(n)?Lt:+n}function bn(n){if(typeof n=="string")return n;if(M(n))return Y(n,bn)+"";if(En(n))return ju?ju.call(n):"";var t=n+"";return t=="0"&&1/n==-Qn?"-0":t}function St(n,t,e){var r=-1,u=qe,o=n.length,s=!0,a=[],h=a;if(e)s=!1,u=Qr;else if(o>=x){var d=t?null:sc(n);if(d)return He(d);s=!1,u=he,h=new Bt}else h=t?[]:a;n:for(;++r<o;){var _=n[r],v=t?t(_):_;if(_=e||_!==0?_:0,s&&v===v){for(var y=h.length;y--;)if(h[y]===v)continue n;t&&h.push(v),a.push(_)}else u(h,v,e)||(h!==a&&h.push(v),a.push(_))}return a}function Si(n,t){return t=Tt(t,n),n=Xf(n,t),n==null||delete n[nt(qn(t))]}function Sf(n,t,e,r){return Ae(n,t,e(Nt(n,t)),r)}function ar(n,t,e,r){for(var u=n.length,o=r?u:-1;(r?o--:++o<u)&&t(n[o],o,n););return e?Gn(n,r?0:o,r?o+1:u):Gn(n,r?o+1:0,r?u:o)}function Tf(n,t){var e=n;return e instanceof O&&(e=e.value()),Vr(t,function(r,u){return u.func.apply(u.thisArg,mt([r],u.args))},e)}function Ti(n,t,e){var r=n.length;if(r<2)return r?St(n[0]):[];for(var u=-1,o=p(r);++u<r;)for(var s=n[u],a=-1;++a<r;)a!=u&&(o[u]=xe(o[u]||s,n[a],t,e));return St(dn(o,1),t,e)}function Ff(n,t,e){for(var r=-1,u=n.length,o=t.length,s={};++r<u;){var a=r<o?t[r]:i;e(s,n[r],a)}return s}function Fi(n){return nn(n)?n:[]}function Ci(n){return typeof n=="function"?n:Fn}function Tt(n,t){return M(n)?n:Pi(n,t)?[n]:no(B(n))}var Vl=b;function Ft(n,t,e){var r=n.length;return e=e===i?r:e,!t&&e>=r?n:Gn(n,t,e)}var Cf=Na||function(n){return sn.clearTimeout(n)};function If(n,t){if(t)return n.slice();var e=n.length,r=Yu?Yu(e):new n.constructor(e);return n.copy(r),r}function Ii(n){var t=new n.constructor(n.byteLength);return new Je(t).set(new Je(n)),t}function jl(n,t){var e=t?Ii(n.buffer):n.buffer;return new n.constructor(e,n.byteOffset,n.byteLength)}function nc(n){var t=new n.constructor(n.source,au.exec(n));return t.lastIndex=n.lastIndex,t}function tc(n){return ve?q(ve.call(n)):{}}function Mf(n,t){var e=t?Ii(n.buffer):n.buffer;return new n.constructor(e,n.byteOffset,n.length)}function Rf(n,t){if(n!==t){var e=n!==i,r=n===null,u=n===n,o=En(n),s=t!==i,a=t===null,h=t===t,d=En(t);if(!a&&!d&&!o&&n>t||o&&s&&h&&!a&&!d||r&&s&&h||!e&&h||!u)return 1;if(!r&&!o&&!d&&n<t||d&&e&&u&&!r&&!o||a&&e&&u||!s&&u||!h)return-1}return 0}function ec(n,t,e){for(var r=-1,u=n.criteria,o=t.criteria,s=u.length,a=e.length;++r<s;){var h=Rf(u[r],o[r]);if(h){if(r>=a)return h;var d=e[r];return h*(d=="desc"?-1:1)}}return n.index-t.index}function Lf(n,t,e,r){for(var u=-1,o=n.length,s=e.length,a=-1,h=t.length,d=fn(o-s,0),_=p(h+d),v=!r;++a<h;)_[a]=t[a];for(;++u<s;)(v||u<o)&&(_[e[u]]=n[u]);for(;d--;)_[a++]=n[u++];return _}function bf(n,t,e,r){for(var u=-1,o=n.length,s=-1,a=e.length,h=-1,d=t.length,_=fn(o-a,0),v=p(_+d),y=!r;++u<_;)v[u]=n[u];for(var S=u;++h<d;)v[S+h]=t[h];for(;++s<a;)(y||u<o)&&(v[S+e[s]]=n[u++]);return v}function An(n,t){var e=-1,r=n.length;for(t||(t=p(r));++e<r;)t[e]=n[e];return t}function jn(n,t,e,r){var u=!e;e||(e={});for(var o=-1,s=t.length;++o<s;){var a=t[o],h=r?r(e[a],n[a],a,e,n):i;h===i&&(h=n[a]),u?ot(e,a,h):me(e,a,h)}return e}function rc(n,t){return jn(n,Di(n),t)}function ic(n,t){return jn(n,Kf(n),t)}function lr(n,t){return function(e,r){var u=M(e)?aa:Cl,o=t?t():{};return u(e,n,T(r,2),o)}}function jt(n){return b(function(t,e){var r=-1,u=e.length,o=u>1?e[u-1]:i,s=u>2?e[2]:i;for(o=n.length>3&&typeof o=="function"?(u--,o):i,s&&yn(e[0],e[1],s)&&(o=u<3?i:o,u=1),t=q(t);++r<u;){var a=e[r];a&&n(t,a,r,o)}return t})}function Ef(n,t){return function(e,r){if(e==null)return e;if(!Sn(e))return n(e,r);for(var u=e.length,o=t?u:-1,s=q(e);(t?o--:++o<u)&&r(s[o],o,s)!==!1;);return e}}function Of(n){return function(t,e,r){for(var u=-1,o=q(t),s=r(t),a=s.length;a--;){var h=s[n?a:++u];if(e(o[h],h,o)===!1)break}return t}}function uc(n,t,e){var r=t&V,u=Se(n);function o(){var s=this&&this!==sn&&this instanceof o?u:n;return s.apply(r?e:this,arguments)}return o}function Df(n){return function(t){t=B(t);var e=Yt(t)?kn(t):i,r=e?e[0]:t.charAt(0),u=e?Ft(e,1).join(""):t.slice(1);return r[n]()+u}}function ne(n){return function(t){return Vr(Oo(Eo(t).replace(Js,"")),n,"")}}function Se(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var e=Vt(n.prototype),r=n.apply(e,t);return J(r)?r:e}}function fc(n,t,e){var r=Se(n);function u(){for(var o=arguments.length,s=p(o),a=o,h=te(u);a--;)s[a]=arguments[a];var d=o<3&&s[0]!==h&&s[o-1]!==h?[]:xt(s,h);if(o-=d.length,o<e)return Nf(n,t,cr,u.placeholder,i,s,d,i,i,e-o);var _=this&&this!==sn&&this instanceof u?r:n;return Rn(_,this,s)}return u}function Pf(n){return function(t,e,r){var u=q(t);if(!Sn(t)){var o=T(e,3);t=an(t),e=function(a){return o(u[a],a,u)}}var s=n(t,e,r);return s>-1?u[o?t[s]:s]:i}}function Wf(n){return at(function(t){var e=t.length,r=e,u=Un.prototype.thru;for(n&&t.reverse();r--;){var o=t[r];if(typeof o!="function")throw new Bn(w);if(u&&!s&&dr(o)=="wrapper")var s=new Un([],!0)}for(r=s?r:e;++r<e;){o=t[r];var a=dr(o),h=a=="wrapper"?Ei(o):i;h&&Wi(h[0])&&h[1]==(pn|hn|j|Jn)&&!h[4].length&&h[9]==1?s=s[dr(h[0])].apply(s,h[3]):s=o.length==1&&Wi(o)?s[a]():s.thru(o)}return function(){var d=arguments,_=d[0];if(s&&d.length==1&&M(_))return s.plant(_).value();for(var v=0,y=e?t[v].apply(this,d):_;++v<e;)y=t[v].call(this,y);return y}})}function cr(n,t,e,r,u,o,s,a,h,d){var _=t&pn,v=t&V,y=t&Z,S=t&(hn|$),F=t&Rt,L=y?i:Se(n);function C(){for(var E=arguments.length,D=p(E),On=E;On--;)D[On]=arguments[On];if(S)var wn=te(C),Dn=ma(D,wn);if(r&&(D=Lf(D,r,u,S)),o&&(D=bf(D,o,s,S)),E-=Dn,S&&E<d){var tn=xt(D,wn);return Nf(n,t,cr,C.placeholder,e,D,tn,a,h,d-E)}var Zn=v?e:this,pt=y?Zn[n]:n;return E=D.length,a?D=Cc(D,a):F&&E>1&&D.reverse(),_&&h<E&&(D.length=h),this&&this!==sn&&this instanceof C&&(pt=L||Se(pt)),pt.apply(Zn,D)}return C}function Bf(n,t){return function(e,r){return Dl(e,n,t(r),{})}}function hr(n,t){return function(e,r){var u;if(e===i&&r===i)return t;if(e!==i&&(u=e),r!==i){if(u===i)return r;typeof e=="string"||typeof r=="string"?(e=bn(e),r=bn(r)):(e=Af(e),r=Af(r)),u=n(e,r)}return u}}function Mi(n){return at(function(t){return t=Y(t,Ln(T())),b(function(e){var r=this;return n(t,function(u){return Rn(u,r,e)})})})}function pr(n,t){t=t===i?" ":bn(t);var e=t.length;if(e<2)return e?wi(t,n):t;var r=wi(t,je(n/Zt(t)));return Yt(t)?Ft(kn(r),0,n).join(""):r.slice(0,n)}function oc(n,t,e,r){var u=t&V,o=Se(n);function s(){for(var a=-1,h=arguments.length,d=-1,_=r.length,v=p(_+h),y=this&&this!==sn&&this instanceof s?o:n;++d<_;)v[d]=r[d];for(;h--;)v[d++]=arguments[++a];return Rn(y,u?e:this,v)}return s}function Uf(n){return function(t,e,r){return r&&typeof r!="number"&&yn(t,e,r)&&(e=r=i),t=ht(t),e===i?(e=t,t=0):e=ht(e),r=r===i?t<e?1:-1:ht(r),zl(t,e,r,n)}}function gr(n){return function(t,e){return typeof t=="string"&&typeof e=="string"||(t=$n(t),e=$n(e)),n(t,e)}}function Nf(n,t,e,r,u,o,s,a,h,d){var _=t&hn,v=_?s:i,y=_?i:s,S=_?o:i,F=_?i:o;t|=_?j:rn,t&=~(_?rn:j),t&tt||(t&=~(V|Z));var L=[n,t,u,S,v,F,y,a,h,d],C=e.apply(i,L);return Wi(n)&&Qf(C,L),C.placeholder=r,Vf(C,n,t)}function Ri(n){var t=un[n];return function(e,r){if(e=$n(e),r=r==null?0:vn(R(r),292),r&&Qu(e)){var u=(B(e)+"e").split("e"),o=t(u[0]+"e"+(+u[1]+r));return u=(B(o)+"e").split("e"),+(u[0]+"e"+(+u[1]-r))}return t(e)}}var sc=Xt&&1/He(new Xt([,-0]))[1]==Qn?function(n){return new Xt(n)}:Qi;function Gf(n){return function(t){var e=mn(t);return e==Mn?ui(t):e==Kn?Fa(t):va(t,n(t))}}function st(n,t,e,r,u,o,s,a){var h=t&Z;if(!h&&typeof n!="function")throw new Bn(w);var d=r?r.length:0;if(d||(t&=~(j|rn),r=u=i),s=s===i?s:fn(R(s),0),a=a===i?a:R(a),d-=u?u.length:0,t&rn){var _=r,v=u;r=u=i}var y=h?i:Ei(n),S=[n,t,e,r,u,_,v,o,s,a];if(y&&Sc(S,y),n=S[0],t=S[1],e=S[2],r=S[3],u=S[4],a=S[9]=S[9]===i?h?0:n.length:fn(S[9]-d,0),!a&&t&(hn|$)&&(t&=~(hn|$)),!t||t==V)var F=uc(n,t,e);else t==hn||t==$?F=fc(n,t,a):(t==j||t==(V|j))&&!u.length?F=oc(n,t,e,r):F=cr.apply(i,S);var L=y?yf:Qf;return Vf(L(F,S),n,t)}function qf(n,t,e,r){return n===i||Yn(n,Jt[e])&&!U.call(r,e)?t:n}function $f(n,t,e,r,u,o){return J(n)&&J(t)&&(o.set(t,n),or(n,t,i,$f,o),o.delete(t)),n}function ac(n){return Ce(n)?i:n}function Hf(n,t,e,r,u,o){var s=e&on,a=n.length,h=t.length;if(a!=h&&!(s&&h>a))return!1;var d=o.get(n),_=o.get(t);if(d&&_)return d==t&&_==n;var v=-1,y=!0,S=e&Cn?new Bt:i;for(o.set(n,t),o.set(t,n);++v<a;){var F=n[v],L=t[v];if(r)var C=s?r(L,F,v,t,n,o):r(F,L,v,n,t,o);if(C!==i){if(C)continue;y=!1;break}if(S){if(!jr(t,function(E,D){if(!he(S,D)&&(F===E||u(F,E,e,r,o)))return S.push(D)})){y=!1;break}}else if(!(F===L||u(F,L,e,r,o))){y=!1;break}}return o.delete(n),o.delete(t),y}function lc(n,t,e,r,u,o,s){switch(e){case Kt:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case ce:return!(n.byteLength!=t.byteLength||!o(new Je(n),new Je(t)));case H:case en:case Ot:return Yn(+n,+t);case gn:return n.name==t.name&&n.message==t.message;case se:case ae:return n==t+"";case Mn:var a=ui;case Kn:var h=r&on;if(a||(a=He),n.size!=t.size&&!h)return!1;var d=s.get(n);if(d)return d==t;r|=Cn,s.set(n,t);var _=Hf(a(n),a(t),r,u,o,s);return s.delete(n),_;case Be:if(ve)return ve.call(n)==ve.call(t)}return!1}function cc(n,t,e,r,u,o){var s=e&on,a=Li(n),h=a.length,d=Li(t),_=d.length;if(h!=_&&!s)return!1;for(var v=h;v--;){var y=a[v];if(!(s?y in t:U.call(t,y)))return!1}var S=o.get(n),F=o.get(t);if(S&&F)return S==t&&F==n;var L=!0;o.set(n,t),o.set(t,n);for(var C=s;++v<h;){y=a[v];var E=n[y],D=t[y];if(r)var On=s?r(D,E,y,t,n,o):r(E,D,y,n,t,o);if(!(On===i?E===D||u(E,D,e,r,o):On)){L=!1;break}C||(C=y=="constructor")}if(L&&!C){var wn=n.constructor,Dn=t.constructor;wn!=Dn&&"constructor"in n&&"constructor"in t&&!(typeof wn=="function"&&wn instanceof wn&&typeof Dn=="function"&&Dn instanceof Dn)&&(L=!1)}return o.delete(n),o.delete(t),L}function at(n){return Ui(Jf(n,i,io),n+"")}function Li(n){return af(n,an,Di)}function bi(n){return af(n,Tn,Kf)}var Ei=tr?function(n){return tr.get(n)}:Qi;function dr(n){for(var t=n.name+"",e=Qt[t],r=U.call(Qt,t)?e.length:0;r--;){var u=e[r],o=u.func;if(o==null||o==n)return u.name}return t}function te(n){var t=U.call(f,"placeholder")?f:n;return t.placeholder}function T(){var n=f.iteratee||Ji;return n=n===Ji?hf:n,arguments.length?n(arguments[0],arguments[1]):n}function _r(n,t){var e=n.__data__;return xc(t)?e[typeof t=="string"?"string":"hash"]:e.map}function Oi(n){for(var t=an(n),e=t.length;e--;){var r=t[e],u=n[r];t[e]=[r,u,Yf(u)]}return t}function Gt(n,t){var e=Aa(n,t);return cf(e)?e:i}function hc(n){var t=U.call(n,Pt),e=n[Pt];try{n[Pt]=i;var r=!0}catch(o){}var u=Ye.call(n);return r&&(t?n[Pt]=e:delete n[Pt]),u}var Di=oi?function(n){return n==null?[]:(n=q(n),vt(oi(n),function(t){return Ju.call(n,t)}))}:Vi,Kf=oi?function(n){for(var t=[];n;)mt(t,Di(n)),n=Xe(n);return t}:Vi,mn=xn;(si&&mn(new si(new ArrayBuffer(1)))!=Kt||ge&&mn(new ge)!=Mn||ai&&mn(ai.resolve())!=uu||Xt&&mn(new Xt)!=Kn||de&&mn(new de)!=le)&&(mn=function(n){var t=xn(n),e=t==it?n.constructor:i,r=e?qt(e):"";if(r)switch(r){case Za:return Kt;case Ja:return Mn;case Xa:return uu;case Qa:return Kn;case Va:return le}return t});function pc(n,t,e){for(var r=-1,u=e.length;++r<u;){var o=e[r],s=o.size;switch(o.type){case"drop":n+=s;break;case"dropRight":t-=s;break;case"take":t=vn(t,n+s);break;case"takeRight":n=fn(n,t-s);break}}return{start:n,end:t}}function gc(n){var t=n.match(ys);return t?t[1].split(ws):[]}function kf(n,t,e){t=Tt(t,n);for(var r=-1,u=t.length,o=!1;++r<u;){var s=nt(t[r]);if(!(o=n!=null&&e(n,s)))break;n=n[s]}return o||++r!=u?o:(u=n==null?0:n.length,!!u&&Sr(u)&&lt(s,u)&&(M(n)||$t(n)))}function dc(n){var t=n.length,e=new n.constructor(t);return t&&typeof n[0]=="string"&&U.call(n,"index")&&(e.index=n.index,e.input=n.input),e}function zf(n){return typeof n.constructor=="function"&&!Te(n)?Vt(Xe(n)):{}}function _c(n,t,e){var r=n.constructor;switch(t){case ce:return Ii(n);case H:case en:return new r(+n);case Kt:return jl(n,e);case Or:case Dr:case Pr:case Wr:case Br:case Ur:case Nr:case Gr:case qr:return Mf(n,e);case Mn:return new r;case Ot:case ae:return new r(n);case se:return nc(n);case Kn:return new r;case Be:return tc(n)}}function vc(n,t){var e=t.length;if(!e)return n;var r=e-1;return t[r]=(e>1?"& ":"")+t[r],t=t.join(e>2?", ":" "),n.replace(xs,`{\n/* [wrapped with `+t+`] */\n`)}function mc(n){return M(n)||$t(n)||!!(Xu&&n&&n[Xu])}function lt(n,t){var e=typeof n;return t=t==null?Hn:t,!!t&&(e=="number"||e!="symbol"&&Ls.test(n))&&n>-1&&n%1==0&&n<t}function yn(n,t,e){if(!J(e))return!1;var r=typeof t;return(r=="number"?Sn(e)&&lt(t,e.length):r=="string"&&t in e)?Yn(e[t],n):!1}function Pi(n,t){if(M(n))return!1;var e=typeof n;return e=="number"||e=="symbol"||e=="boolean"||n==null||En(n)?!0:ds.test(n)||!gs.test(n)||t!=null&&n in q(t)}function xc(n){var t=typeof n;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?n!=="__proto__":n===null}function Wi(n){var t=dr(n),e=f[t];if(typeof e!="function"||!(t in O.prototype))return!1;if(n===e)return!0;var r=Ei(e);return!!r&&n===r[0]}function yc(n){return!!zu&&zu in n}var wc=ke?ct:ji;function Te(n){var t=n&&n.constructor,e=typeof t=="function"&&t.prototype||Jt;return n===e}function Yf(n){return n===n&&!J(n)}function Zf(n,t){return function(e){return e==null?!1:e[n]===t&&(t!==i||n in q(e))}}function Ac(n){var t=wr(n,function(r){return e.size===ln&&e.clear(),r}),e=t.cache;return t}function Sc(n,t){var e=n[1],r=t[1],u=e|r,o=u<(V|Z|pn),s=r==pn&&e==hn||r==pn&&e==Jn&&n[7].length<=t[8]||r==(pn|Jn)&&t[7].length<=t[8]&&e==hn;if(!(o||s))return n;r&V&&(n[2]=t[2],u|=e&V?0:tt);var a=t[3];if(a){var h=n[3];n[3]=h?Lf(h,a,t[4]):a,n[4]=h?xt(n[3],G):t[4]}return a=t[5],a&&(h=n[5],n[5]=h?bf(h,a,t[6]):a,n[6]=h?xt(n[5],G):t[6]),a=t[7],a&&(n[7]=a),r&pn&&(n[8]=n[8]==null?t[8]:vn(n[8],t[8])),n[9]==null&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Tc(n){var t=[];if(n!=null)for(var e in q(n))t.push(e);return t}function Fc(n){return Ye.call(n)}function Jf(n,t,e){return t=fn(t===i?n.length-1:t,0),function(){for(var r=arguments,u=-1,o=fn(r.length-t,0),s=p(o);++u<o;)s[u]=r[t+u];u=-1;for(var a=p(t+1);++u<t;)a[u]=r[u];return a[t]=e(s),Rn(n,this,a)}}function Xf(n,t){return t.length<2?n:Nt(n,Gn(t,0,-1))}function Cc(n,t){for(var e=n.length,r=vn(t.length,e),u=An(n);r--;){var o=t[r];n[r]=lt(o,e)?u[o]:i}return n}function Bi(n,t){if(!(t==="constructor"&&typeof n[t]=="function")&&t!="__proto__")return n[t]}var Qf=jf(yf),Fe=qa||function(n,t){return sn.setTimeout(n,t)},Ui=jf(Jl);function Vf(n,t,e){var r=t+"";return Ui(n,vc(r,Ic(gc(r),e)))}function jf(n){var t=0,e=0;return function(){var r=ka(),u=_t-(r-e);if(e=r,u>0){if(++t>=Le)return arguments[0]}else t=0;return n.apply(i,arguments)}}function vr(n,t){var e=-1,r=n.length,u=r-1;for(t=t===i?r:t;++e<t;){var o=yi(e,u),s=n[o];n[o]=n[e],n[e]=s}return n.length=t,n}var no=Ac(function(n){var t=[];return n.charCodeAt(0)===46&&t.push(""),n.replace(_s,function(e,r,u,o){t.push(u?o.replace(Ts,"$1"):r||e)}),t});function nt(n){if(typeof n=="string"||En(n))return n;var t=n+"";return t=="0"&&1/n==-Qn?"-0":t}function qt(n){if(n!=null){try{return ze.call(n)}catch(t){}try{return n+""}catch(t){}}return""}function Ic(n,t){return Wn(Pe,function(e){var r="_."+e[0];t&e[1]&&!qe(n,r)&&n.push(r)}),n.sort()}function to(n){if(n instanceof O)return n.clone();var t=new Un(n.__wrapped__,n.__chain__);return t.__actions__=An(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function Mc(n,t,e){(e?yn(n,t,e):t===i)?t=1:t=fn(R(t),0);var r=n==null?0:n.length;if(!r||t<1)return[];for(var u=0,o=0,s=p(je(r/t));u<r;)s[o++]=Gn(n,u,u+=t);return s}function Rc(n){for(var t=-1,e=n==null?0:n.length,r=0,u=[];++t<e;){var o=n[t];o&&(u[r++]=o)}return u}function Lc(){var n=arguments.length;if(!n)return[];for(var t=p(n-1),e=arguments[0],r=n;r--;)t[r-1]=arguments[r];return mt(M(e)?An(e):[e],dn(t,1))}var bc=b(function(n,t){return nn(n)?xe(n,dn(t,1,nn,!0)):[]}),Ec=b(function(n,t){var e=qn(t);return nn(e)&&(e=i),nn(n)?xe(n,dn(t,1,nn,!0),T(e,2)):[]}),Oc=b(function(n,t){var e=qn(t);return nn(e)&&(e=i),nn(n)?xe(n,dn(t,1,nn,!0),i,e):[]});function Dc(n,t,e){var r=n==null?0:n.length;return r?(t=e||t===i?1:R(t),Gn(n,t<0?0:t,r)):[]}function Pc(n,t,e){var r=n==null?0:n.length;return r?(t=e||t===i?1:R(t),t=r-t,Gn(n,0,t<0?0:t)):[]}function Wc(n,t){return n&&n.length?ar(n,T(t,3),!0,!0):[]}function Bc(n,t){return n&&n.length?ar(n,T(t,3),!0):[]}function Uc(n,t,e,r){var u=n==null?0:n.length;return u?(e&&typeof e!="number"&&yn(n,t,e)&&(e=0,r=u),Ll(n,t,e,r)):[]}function eo(n,t,e){var r=n==null?0:n.length;if(!r)return-1;var u=e==null?0:R(e);return u<0&&(u=fn(r+u,0)),$e(n,T(t,3),u)}function ro(n,t,e){var r=n==null?0:n.length;if(!r)return-1;var u=r-1;return e!==i&&(u=R(e),u=e<0?fn(r+u,0):vn(u,r-1)),$e(n,T(t,3),u,!0)}function io(n){var t=n==null?0:n.length;return t?dn(n,1):[]}function Nc(n){var t=n==null?0:n.length;return t?dn(n,Qn):[]}function Gc(n,t){var e=n==null?0:n.length;return e?(t=t===i?1:R(t),dn(n,t)):[]}function qc(n){for(var t=-1,e=n==null?0:n.length,r={};++t<e;){var u=n[t];r[u[0]]=u[1]}return r}function uo(n){return n&&n.length?n[0]:i}function $c(n,t,e){var r=n==null?0:n.length;if(!r)return-1;var u=e==null?0:R(e);return u<0&&(u=fn(r+u,0)),zt(n,t,u)}function Hc(n){var t=n==null?0:n.length;return t?Gn(n,0,-1):[]}var Kc=b(function(n){var t=Y(n,Fi);return t.length&&t[0]===n[0]?di(t):[]}),kc=b(function(n){var t=qn(n),e=Y(n,Fi);return t===qn(e)?t=i:e.pop(),e.length&&e[0]===n[0]?di(e,T(t,2)):[]}),zc=b(function(n){var t=qn(n),e=Y(n,Fi);return t=typeof t=="function"?t:i,t&&e.pop(),e.length&&e[0]===n[0]?di(e,i,t):[]});function Yc(n,t){return n==null?"":Ha.call(n,t)}function qn(n){var t=n==null?0:n.length;return t?n[t-1]:i}function Zc(n,t,e){var r=n==null?0:n.length;if(!r)return-1;var u=r;return e!==i&&(u=R(e),u=u<0?fn(r+u,0):vn(u,r-1)),t===t?Ia(n,t,u):$e(n,Uu,u,!0)}function Jc(n,t){return n&&n.length?_f(n,R(t)):i}var Xc=b(fo);function fo(n,t){return n&&n.length&&t&&t.length?xi(n,t):n}function Qc(n,t,e){return n&&n.length&&t&&t.length?xi(n,t,T(e,2)):n}function Vc(n,t,e){return n&&n.length&&t&&t.length?xi(n,t,i,e):n}var jc=at(function(n,t){var e=n==null?0:n.length,r=ci(n,t);return xf(n,Y(t,function(u){return lt(u,e)?+u:u}).sort(Rf)),r});function nh(n,t){var e=[];if(!(n&&n.length))return e;var r=-1,u=[],o=n.length;for(t=T(t,3);++r<o;){var s=n[r];t(s,r,n)&&(e.push(s),u.push(r))}return xf(n,u),e}function Ni(n){return n==null?n:Ya.call(n)}function th(n,t,e){var r=n==null?0:n.length;return r?(e&&typeof e!="number"&&yn(n,t,e)?(t=0,e=r):(t=t==null?0:R(t),e=e===i?r:R(e)),Gn(n,t,e)):[]}function eh(n,t){return sr(n,t)}function rh(n,t,e){return Ai(n,t,T(e,2))}function ih(n,t){var e=n==null?0:n.length;if(e){var r=sr(n,t);if(r<e&&Yn(n[r],t))return r}return-1}function uh(n,t){return sr(n,t,!0)}function fh(n,t,e){return Ai(n,t,T(e,2),!0)}function oh(n,t){var e=n==null?0:n.length;if(e){var r=sr(n,t,!0)-1;if(Yn(n[r],t))return r}return-1}function sh(n){return n&&n.length?wf(n):[]}function ah(n,t){return n&&n.length?wf(n,T(t,2)):[]}function lh(n){var t=n==null?0:n.length;return t?Gn(n,1,t):[]}function ch(n,t,e){return n&&n.length?(t=e||t===i?1:R(t),Gn(n,0,t<0?0:t)):[]}function hh(n,t,e){var r=n==null?0:n.length;return r?(t=e||t===i?1:R(t),t=r-t,Gn(n,t<0?0:t,r)):[]}function ph(n,t){return n&&n.length?ar(n,T(t,3),!1,!0):[]}function gh(n,t){return n&&n.length?ar(n,T(t,3)):[]}var dh=b(function(n){return St(dn(n,1,nn,!0))}),_h=b(function(n){var t=qn(n);return nn(t)&&(t=i),St(dn(n,1,nn,!0),T(t,2))}),vh=b(function(n){var t=qn(n);return t=typeof t=="function"?t:i,St(dn(n,1,nn,!0),i,t)});function mh(n){return n&&n.length?St(n):[]}function xh(n,t){return n&&n.length?St(n,T(t,2)):[]}function yh(n,t){return t=typeof t=="function"?t:i,n&&n.length?St(n,i,t):[]}function Gi(n){if(!(n&&n.length))return[];var t=0;return n=vt(n,function(e){if(nn(e))return t=fn(e.length,t),!0}),ri(t,function(e){return Y(n,ni(e))})}function oo(n,t){if(!(n&&n.length))return[];var e=Gi(n);return t==null?e:Y(e,function(r){return Rn(t,i,r)})}var wh=b(function(n,t){return nn(n)?xe(n,t):[]}),Ah=b(function(n){return Ti(vt(n,nn))}),Sh=b(function(n){var t=qn(n);return nn(t)&&(t=i),Ti(vt(n,nn),T(t,2))}),Th=b(function(n){var t=qn(n);return t=typeof t=="function"?t:i,Ti(vt(n,nn),i,t)}),Fh=b(Gi);function Ch(n,t){return Ff(n||[],t||[],me)}function Ih(n,t){return Ff(n||[],t||[],Ae)}var Mh=b(function(n){var t=n.length,e=t>1?n[t-1]:i;return e=typeof e=="function"?(n.pop(),e):i,oo(n,e)});function so(n){var t=f(n);return t.__chain__=!0,t}function Rh(n,t){return t(n),n}function mr(n,t){return t(n)}var Lh=at(function(n){var t=n.length,e=t?n[0]:0,r=this.__wrapped__,u=function(o){return ci(o,n)};return t>1||this.__actions__.length||!(r instanceof O)||!lt(e)?this.thru(u):(r=r.slice(e,+e+(t?1:0)),r.__actions__.push({func:mr,args:[u],thisArg:i}),new Un(r,this.__chain__).thru(function(o){return t&&!o.length&&o.push(i),o}))});function bh(){return so(this)}function Eh(){return new Un(this.value(),this.__chain__)}function Oh(){this.__values__===i&&(this.__values__=So(this.value()));var n=this.__index__>=this.__values__.length,t=n?i:this.__values__[this.__index__++];return{done:n,value:t}}function Dh(){return this}function Ph(n){for(var t,e=this;e instanceof rr;){var r=to(e);r.__index__=0,r.__values__=i,t?u.__wrapped__=r:t=r;var u=r;e=e.__wrapped__}return u.__wrapped__=n,t}function Wh(){var n=this.__wrapped__;if(n instanceof O){var t=n;return this.__actions__.length&&(t=new O(this)),t=t.reverse(),t.__actions__.push({func:mr,args:[Ni],thisArg:i}),new Un(t,this.__chain__)}return this.thru(Ni)}function Bh(){return Tf(this.__wrapped__,this.__actions__)}var Uh=lr(function(n,t,e){U.call(n,e)?++n[e]:ot(n,e,1)});function Nh(n,t,e){var r=M(n)?Wu:Rl;return e&&yn(n,t,e)&&(t=i),r(n,T(t,3))}function Gh(n,t){var e=M(n)?vt:of;return e(n,T(t,3))}var qh=Pf(eo),$h=Pf(ro);function Hh(n,t){return dn(xr(n,t),1)}function Kh(n,t){return dn(xr(n,t),Qn)}function kh(n,t,e){return e=e===i?1:R(e),dn(xr(n,t),e)}function ao(n,t){var e=M(n)?Wn:At;return e(n,T(t,3))}function lo(n,t){var e=M(n)?la:ff;return e(n,T(t,3))}var zh=lr(function(n,t,e){U.call(n,e)?n[e].push(t):ot(n,e,[t])});function Yh(n,t,e,r){n=Sn(n)?n:re(n),e=e&&!r?R(e):0;var u=n.length;return e<0&&(e=fn(u+e,0)),Tr(n)?e<=u&&n.indexOf(t,e)>-1:!!u&&zt(n,t,e)>-1}var Zh=b(function(n,t,e){var r=-1,u=typeof t=="function",o=Sn(n)?p(n.length):[];return At(n,function(s){o[++r]=u?Rn(t,s,e):ye(s,t,e)}),o}),Jh=lr(function(n,t,e){ot(n,e,t)});function xr(n,t){var e=M(n)?Y:pf;return e(n,T(t,3))}function Xh(n,t,e,r){return n==null?[]:(M(t)||(t=t==null?[]:[t]),e=r?i:e,M(e)||(e=e==null?[]:[e]),vf(n,t,e))}var Qh=lr(function(n,t,e){n[e?0:1].push(t)},function(){return[[],[]]});function Vh(n,t,e){var r=M(n)?Vr:Gu,u=arguments.length<3;return r(n,T(t,4),e,u,At)}function jh(n,t,e){var r=M(n)?ca:Gu,u=arguments.length<3;return r(n,T(t,4),e,u,ff)}function np(n,t){var e=M(n)?vt:of;return e(n,Ar(T(t,3)))}function tp(n){var t=M(n)?tf:Yl;return t(n)}function ep(n,t,e){(e?yn(n,t,e):t===i)?t=1:t=R(t);var r=M(n)?Tl:Zl;return r(n,t)}function rp(n){var t=M(n)?Fl:Xl;return t(n)}function ip(n){if(n==null)return 0;if(Sn(n))return Tr(n)?Zt(n):n.length;var t=mn(n);return t==Mn||t==Kn?n.size:vi(n).length}function up(n,t,e){var r=M(n)?jr:Ql;return e&&yn(n,t,e)&&(t=i),r(n,T(t,3))}var fp=b(function(n,t){if(n==null)return[];var e=t.length;return e>1&&yn(n,t[0],t[1])?t=[]:e>2&&yn(t[0],t[1],t[2])&&(t=[t[0]]),vf(n,dn(t,1),[])}),yr=Ga||function(){return sn.Date.now()};function op(n,t){if(typeof t!="function")throw new Bn(w);return n=R(n),function(){if(--n<1)return t.apply(this,arguments)}}function co(n,t,e){return t=e?i:t,t=n&&t==null?n.length:t,st(n,pn,i,i,i,i,t)}function ho(n,t){var e;if(typeof t!="function")throw new Bn(w);return n=R(n),function(){return--n>0&&(e=t.apply(this,arguments)),n<=1&&(t=i),e}}var qi=b(function(n,t,e){var r=V;if(e.length){var u=xt(e,te(qi));r|=j}return st(n,r,t,e,u)}),po=b(function(n,t,e){var r=V|Z;if(e.length){var u=xt(e,te(po));r|=j}return st(t,r,n,e,u)});function go(n,t,e){t=e?i:t;var r=st(n,hn,i,i,i,i,i,t);return r.placeholder=go.placeholder,r}function _o(n,t,e){t=e?i:t;var r=st(n,$,i,i,i,i,i,t);return r.placeholder=_o.placeholder,r}function vo(n,t,e){var r,u,o,s,a,h,d=0,_=!1,v=!1,y=!0;if(typeof n!="function")throw new Bn(w);t=$n(t)||0,J(e)&&(_=!!e.leading,v="maxWait"in e,o=v?fn($n(e.maxWait)||0,t):o,y="trailing"in e?!!e.trailing:y);function S(tn){var Zn=r,pt=u;return r=u=i,d=tn,s=n.apply(pt,Zn),s}function F(tn){return d=tn,a=Fe(E,t),_?S(tn):s}function L(tn){var Zn=tn-h,pt=tn-d,Wo=t-Zn;return v?vn(Wo,o-pt):Wo}function C(tn){var Zn=tn-h,pt=tn-d;return h===i||Zn>=t||Zn<0||v&&pt>=o}function E(){var tn=yr();if(C(tn))return D(tn);a=Fe(E,L(tn))}function D(tn){return a=i,y&&r?S(tn):(r=u=i,s)}function On(){a!==i&&Cf(a),d=0,r=h=u=a=i}function wn(){return a===i?s:D(yr())}function Dn(){var tn=yr(),Zn=C(tn);if(r=arguments,u=this,h=tn,Zn){if(a===i)return F(h);if(v)return Cf(a),a=Fe(E,t),S(h)}return a===i&&(a=Fe(E,t)),s}return Dn.cancel=On,Dn.flush=wn,Dn}var sp=b(function(n,t){return uf(n,1,t)}),ap=b(function(n,t,e){return uf(n,$n(t)||0,e)});function lp(n){return st(n,Rt)}function wr(n,t){if(typeof n!="function"||t!=null&&typeof t!="function")throw new Bn(w);var e=function(){var r=arguments,u=t?t.apply(this,r):r[0],o=e.cache;if(o.has(u))return o.get(u);var s=n.apply(this,r);return e.cache=o.set(u,s)||o,s};return e.cache=new(wr.Cache||ft),e}wr.Cache=ft;function Ar(n){if(typeof n!="function")throw new Bn(w);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function cp(n){return ho(2,n)}var hp=Vl(function(n,t){t=t.length==1&&M(t[0])?Y(t[0],Ln(T())):Y(dn(t,1),Ln(T()));var e=t.length;return b(function(r){for(var u=-1,o=vn(r.length,e);++u<o;)r[u]=t[u].call(this,r[u]);return Rn(n,this,r)})}),$i=b(function(n,t){var e=xt(t,te($i));return st(n,j,i,t,e)}),mo=b(function(n,t){var e=xt(t,te(mo));return st(n,rn,i,t,e)}),pp=at(function(n,t){return st(n,Jn,i,i,i,t)});function gp(n,t){if(typeof n!="function")throw new Bn(w);return t=t===i?t:R(t),b(n,t)}function dp(n,t){if(typeof n!="function")throw new Bn(w);return t=t==null?0:fn(R(t),0),b(function(e){var r=e[t],u=Ft(e,0,t);return r&&mt(u,r),Rn(n,this,u)})}function _p(n,t,e){var r=!0,u=!0;if(typeof n!="function")throw new Bn(w);return J(e)&&(r="leading"in e?!!e.leading:r,u="trailing"in e?!!e.trailing:u),vo(n,t,{leading:r,maxWait:t,trailing:u})}function vp(n){return co(n,1)}function mp(n,t){return $i(Ci(t),n)}function xp(){if(!arguments.length)return[];var n=arguments[0];return M(n)?n:[n]}function yp(n){return Nn(n,Q)}function wp(n,t){return t=typeof t=="function"?t:i,Nn(n,Q,t)}function Ap(n){return Nn(n,W|Q)}function Sp(n,t){return t=typeof t=="function"?t:i,Nn(n,W|Q,t)}function Tp(n,t){return t==null||rf(n,t,an(t))}function Yn(n,t){return n===t||n!==n&&t!==t}var Fp=gr(gi),Cp=gr(function(n,t){return n>=t}),$t=lf(function(){return arguments}())?lf:function(n){return X(n)&&U.call(n,"callee")&&!Ju.call(n,"callee")},M=p.isArray,Ip=Lu?Ln(Lu):Pl;function Sn(n){return n!=null&&Sr(n.length)&&!ct(n)}function nn(n){return X(n)&&Sn(n)}function Mp(n){return n===!0||n===!1||X(n)&&xn(n)==H}var Ct=$a||ji,Rp=bu?Ln(bu):Wl;function Lp(n){return X(n)&&n.nodeType===1&&!Ce(n)}function bp(n){if(n==null)return!0;if(Sn(n)&&(M(n)||typeof n=="string"||typeof n.splice=="function"||Ct(n)||ee(n)||$t(n)))return!n.length;var t=mn(n);if(t==Mn||t==Kn)return!n.size;if(Te(n))return!vi(n).length;for(var e in n)if(U.call(n,e))return!1;return!0}function Ep(n,t){return we(n,t)}function Op(n,t,e){e=typeof e=="function"?e:i;var r=e?e(n,t):i;return r===i?we(n,t,i,e):!!r}function Hi(n){if(!X(n))return!1;var t=xn(n);return t==gn||t==_n||typeof n.message=="string"&&typeof n.name=="string"&&!Ce(n)}function Dp(n){return typeof n=="number"&&Qu(n)}function ct(n){if(!J(n))return!1;var t=xn(n);return t==Et||t==oe||t==We||t==is}function xo(n){return typeof n=="number"&&n==R(n)}function Sr(n){return typeof n=="number"&&n>-1&&n%1==0&&n<=Hn}function J(n){var t=typeof n;return n!=null&&(t=="object"||t=="function")}function X(n){return n!=null&&typeof n=="object"}var yo=Eu?Ln(Eu):Ul;function Pp(n,t){return n===t||_i(n,t,Oi(t))}function Wp(n,t,e){return e=typeof e=="function"?e:i,_i(n,t,Oi(t),e)}function Bp(n){return wo(n)&&n!=+n}function Up(n){if(wc(n))throw new I(m);return cf(n)}function Np(n){return n===null}function Gp(n){return n==null}function wo(n){return typeof n=="number"||X(n)&&xn(n)==Ot}function Ce(n){if(!X(n)||xn(n)!=it)return!1;var t=Xe(n);if(t===null)return!0;var e=U.call(t,"constructor")&&t.constructor;return typeof e=="function"&&e instanceof e&&ze.call(e)==Wa}var Ki=Ou?Ln(Ou):Nl;function qp(n){return xo(n)&&n>=-Hn&&n<=Hn}var Ao=Du?Ln(Du):Gl;function Tr(n){return typeof n=="string"||!M(n)&&X(n)&&xn(n)==ae}function En(n){return typeof n=="symbol"||X(n)&&xn(n)==Be}var ee=Pu?Ln(Pu):ql;function $p(n){return n===i}function Hp(n){return X(n)&&mn(n)==le}function Kp(n){return X(n)&&xn(n)==fs}var kp=gr(mi),zp=gr(function(n,t){return n<=t});function So(n){if(!n)return[];if(Sn(n))return Tr(n)?kn(n):An(n);if(pe&&n[pe])return Ta(n[pe]());var t=mn(n),e=t==Mn?ui:t==Kn?He:re;return e(n)}function ht(n){if(!n)return n===0?n:0;if(n=$n(n),n===Qn||n===-Qn){var t=n<0?-1:1;return t*Ee}return n===n?n:0}function R(n){var t=ht(n),e=t%1;return t===t?e?t-e:t:0}function To(n){return n?Ut(R(n),0,In):0}function $n(n){if(typeof n=="number")return n;if(En(n))return Lt;if(J(n)){var t=typeof n.valueOf=="function"?n.valueOf():n;n=J(t)?t+"":t}if(typeof n!="string")return n===0?n:+n;n=qu(n);var e=Is.test(n);return e||Rs.test(n)?oa(n.slice(2),e?2:8):Cs.test(n)?Lt:+n}function Fo(n){return jn(n,Tn(n))}function Yp(n){return n?Ut(R(n),-Hn,Hn):n===0?n:0}function B(n){return n==null?"":bn(n)}var Zp=jt(function(n,t){if(Te(t)||Sn(t)){jn(t,an(t),n);return}for(var e in t)U.call(t,e)&&me(n,e,t[e])}),Co=jt(function(n,t){jn(t,Tn(t),n)}),Fr=jt(function(n,t,e,r){jn(t,Tn(t),n,r)}),Jp=jt(function(n,t,e,r){jn(t,an(t),n,r)}),Xp=at(ci);function Qp(n,t){var e=Vt(n);return t==null?e:ef(e,t)}var Vp=b(function(n,t){n=q(n);var e=-1,r=t.length,u=r>2?t[2]:i;for(u&&yn(t[0],t[1],u)&&(r=1);++e<r;)for(var o=t[e],s=Tn(o),a=-1,h=s.length;++a<h;){var d=s[a],_=n[d];(_===i||Yn(_,Jt[d])&&!U.call(n,d))&&(n[d]=o[d])}return n}),jp=b(function(n){return n.push(i,$f),Rn(Io,i,n)});function ng(n,t){return Bu(n,T(t,3),Vn)}function tg(n,t){return Bu(n,T(t,3),pi)}function eg(n,t){return n==null?n:hi(n,T(t,3),Tn)}function rg(n,t){return n==null?n:sf(n,T(t,3),Tn)}function ig(n,t){return n&&Vn(n,T(t,3))}function ug(n,t){return n&&pi(n,T(t,3))}function fg(n){return n==null?[]:fr(n,an(n))}function og(n){return n==null?[]:fr(n,Tn(n))}function ki(n,t,e){var r=n==null?i:Nt(n,t);return r===i?e:r}function sg(n,t){return n!=null&&kf(n,t,bl)}function zi(n,t){return n!=null&&kf(n,t,El)}var ag=Bf(function(n,t,e){t!=null&&typeof t.toString!="function"&&(t=Ye.call(t)),n[t]=e},Zi(Fn)),lg=Bf(function(n,t,e){t!=null&&typeof t.toString!="function"&&(t=Ye.call(t)),U.call(n,t)?n[t].push(e):n[t]=[e]},T),cg=b(ye);function an(n){return Sn(n)?nf(n):vi(n)}function Tn(n){return Sn(n)?nf(n,!0):$l(n)}function hg(n,t){var e={};return t=T(t,3),Vn(n,function(r,u,o){ot(e,t(r,u,o),r)}),e}function pg(n,t){var e={};return t=T(t,3),Vn(n,function(r,u,o){ot(e,u,t(r,u,o))}),e}var gg=jt(function(n,t,e){or(n,t,e)}),Io=jt(function(n,t,e,r){or(n,t,e,r)}),dg=at(function(n,t){var e={};if(n==null)return e;var r=!1;t=Y(t,function(o){return o=Tt(o,n),r||(r=o.length>1),o}),jn(n,bi(n),e),r&&(e=Nn(e,W|cn|Q,ac));for(var u=t.length;u--;)Si(e,t[u]);return e});function _g(n,t){return Mo(n,Ar(T(t)))}var vg=at(function(n,t){return n==null?{}:Kl(n,t)});function Mo(n,t){if(n==null)return{};var e=Y(bi(n),function(r){return[r]});return t=T(t),mf(n,e,function(r,u){return t(r,u[0])})}function mg(n,t,e){t=Tt(t,n);var r=-1,u=t.length;for(u||(u=1,n=i);++r<u;){var o=n==null?i:n[nt(t[r])];o===i&&(r=u,o=e),n=ct(o)?o.call(n):o}return n}function xg(n,t,e){return n==null?n:Ae(n,t,e)}function yg(n,t,e,r){return r=typeof r=="function"?r:i,n==null?n:Ae(n,t,e,r)}var Ro=Gf(an),Lo=Gf(Tn);function wg(n,t,e){var r=M(n),u=r||Ct(n)||ee(n);if(t=T(t,4),e==null){var o=n&&n.constructor;u?e=r?new o:[]:J(n)?e=ct(o)?Vt(Xe(n)):{}:e={}}return(u?Wn:Vn)(n,function(s,a,h){return t(e,s,a,h)}),e}function Ag(n,t){return n==null?!0:Si(n,t)}function Sg(n,t,e){return n==null?n:Sf(n,t,Ci(e))}function Tg(n,t,e,r){return r=typeof r=="function"?r:i,n==null?n:Sf(n,t,Ci(e),r)}function re(n){return n==null?[]:ii(n,an(n))}function Fg(n){return n==null?[]:ii(n,Tn(n))}function Cg(n,t,e){return e===i&&(e=t,t=i),e!==i&&(e=$n(e),e=e===e?e:0),t!==i&&(t=$n(t),t=t===t?t:0),Ut($n(n),t,e)}function Ig(n,t,e){return t=ht(t),e===i?(e=t,t=0):e=ht(e),n=$n(n),Ol(n,t,e)}function Mg(n,t,e){if(e&&typeof e!="boolean"&&yn(n,t,e)&&(t=e=i),e===i&&(typeof t=="boolean"?(e=t,t=i):typeof n=="boolean"&&(e=n,n=i)),n===i&&t===i?(n=0,t=1):(n=ht(n),t===i?(t=n,n=0):t=ht(t)),n>t){var r=n;n=t,t=r}if(e||n%1||t%1){var u=Vu();return vn(n+u*(t-n+fa("1e-"+((u+"").length-1))),t)}return yi(n,t)}var Rg=ne(function(n,t,e){return t=t.toLowerCase(),n+(e?bo(t):t)});function bo(n){return Yi(B(n).toLowerCase())}function Eo(n){return n=B(n),n&&n.replace(bs,xa).replace(Xs,"")}function Lg(n,t,e){n=B(n),t=bn(t);var r=n.length;e=e===i?r:Ut(R(e),0,r);var u=e;return e-=t.length,e>=0&&n.slice(e,u)==t}function bg(n){return n=B(n),n&&cs.test(n)?n.replace(ou,ya):n}function Eg(n){return n=B(n),n&&vs.test(n)?n.replace($r,"\\\\$&"):n}var Og=ne(function(n,t,e){return n+(e?"-":"")+t.toLowerCase()}),Dg=ne(function(n,t,e){return n+(e?" ":"")+t.toLowerCase()}),Pg=Df("toLowerCase");function Wg(n,t,e){n=B(n),t=R(t);var r=t?Zt(n):0;if(!t||r>=t)return n;var u=(t-r)/2;return pr(nr(u),e)+n+pr(je(u),e)}function Bg(n,t,e){n=B(n),t=R(t);var r=t?Zt(n):0;return t&&r<t?n+pr(t-r,e):n}function Ug(n,t,e){n=B(n),t=R(t);var r=t?Zt(n):0;return t&&r<t?pr(t-r,e)+n:n}function Ng(n,t,e){return e||t==null?t=0:t&&(t=+t),za(B(n).replace(Hr,""),t||0)}function Gg(n,t,e){return(e?yn(n,t,e):t===i)?t=1:t=R(t),wi(B(n),t)}function qg(){var n=arguments,t=B(n[0]);return n.length<3?t:t.replace(n[1],n[2])}var $g=ne(function(n,t,e){return n+(e?"_":"")+t.toLowerCase()});function Hg(n,t,e){return e&&typeof e!="number"&&yn(n,t,e)&&(t=e=i),e=e===i?In:e>>>0,e?(n=B(n),n&&(typeof t=="string"||t!=null&&!Ki(t))&&(t=bn(t),!t&&Yt(n))?Ft(kn(n),0,e):n.split(t,e)):[]}var Kg=ne(function(n,t,e){return n+(e?" ":"")+Yi(t)});function kg(n,t,e){return n=B(n),e=e==null?0:Ut(R(e),0,n.length),t=bn(t),n.slice(e,e+t.length)==t}function zg(n,t,e){var r=f.templateSettings;e&&yn(n,t,e)&&(t=i),n=B(n),t=Fr({},t,r,qf);var u=Fr({},t.imports,r.imports,qf),o=an(u),s=ii(u,o),a,h,d=0,_=t.interpolate||Ue,v="__p += \'",y=fi((t.escape||Ue).source+"|"+_.source+"|"+(_===su?Fs:Ue).source+"|"+(t.evaluate||Ue).source+"|$","g"),S="//# sourceURL="+(U.call(t,"sourceURL")?(t.sourceURL+"").replace(/\\s/g," "):"lodash.templateSources["+ ++ta+"]")+`\n`;n.replace(y,function(C,E,D,On,wn,Dn){return D||(D=On),v+=n.slice(d,Dn).replace(Es,wa),E&&(a=!0,v+=`\' +\n__e(`+E+`) +\n\'`),wn&&(h=!0,v+=`\';\n`+wn+`;\n__p += \'`),D&&(v+=`\' +\n((__t = (`+D+`)) == null ? \'\' : __t) +\n\'`),d=Dn+C.length,C}),v+=`\';\n`;var F=U.call(t,"variable")&&t.variable;if(!F)v=`with (obj) {\n`+v+`\n}\n`;else if(Ss.test(F))throw new I(N);v=(h?v.replace(os,""):v).replace(ss,"$1").replace(as,"$1;"),v="function("+(F||"obj")+`) {\n`+(F?"":`obj || (obj = {});\n`)+"var __t, __p = \'\'"+(a?", __e = _.escape":"")+(h?`, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, \'\') }\n`:`;\n`)+v+`return __p\n}`;var L=Do(function(){return P(o,S+"return "+v).apply(i,s)});if(L.source=v,Hi(L))throw L;return L}function Yg(n){return B(n).toLowerCase()}function Zg(n){return B(n).toUpperCase()}function Jg(n,t,e){if(n=B(n),n&&(e||t===i))return qu(n);if(!n||!(t=bn(t)))return n;var r=kn(n),u=kn(t),o=$u(r,u),s=Hu(r,u)+1;return Ft(r,o,s).join("")}function Xg(n,t,e){if(n=B(n),n&&(e||t===i))return n.slice(0,ku(n)+1);if(!n||!(t=bn(t)))return n;var r=kn(n),u=Hu(r,kn(t))+1;return Ft(r,0,u).join("")}function Qg(n,t,e){if(n=B(n),n&&(e||t===i))return n.replace(Hr,"");if(!n||!(t=bn(t)))return n;var r=kn(n),u=$u(r,kn(t));return Ft(r,u).join("")}function Vg(n,t){var e=et,r=Er;if(J(t)){var u="separator"in t?t.separator:u;e="length"in t?R(t.length):e,r="omission"in t?bn(t.omission):r}n=B(n);var o=n.length;if(Yt(n)){var s=kn(n);o=s.length}if(e>=o)return n;var a=e-Zt(r);if(a<1)return r;var h=s?Ft(s,0,a).join(""):n.slice(0,a);if(u===i)return h+r;if(s&&(a+=h.length-a),Ki(u)){if(n.slice(a).search(u)){var d,_=h;for(u.global||(u=fi(u.source,B(au.exec(u))+"g")),u.lastIndex=0;d=u.exec(_);)var v=d.index;h=h.slice(0,v===i?a:v)}}else if(n.indexOf(bn(u),a)!=a){var y=h.lastIndexOf(u);y>-1&&(h=h.slice(0,y))}return h+r}function jg(n){return n=B(n),n&&ls.test(n)?n.replace(fu,Ma):n}var nd=ne(function(n,t,e){return n+(e?" ":"")+t.toUpperCase()}),Yi=Df("toUpperCase");function Oo(n,t,e){return n=B(n),t=e?i:t,t===i?Sa(n)?ba(n):ga(n):n.match(t)||[]}var Do=b(function(n,t){try{return Rn(n,i,t)}catch(e){return Hi(e)?e:new I(e)}}),td=at(function(n,t){return Wn(t,function(e){e=nt(e),ot(n,e,qi(n[e],n))}),n});function ed(n){var t=n==null?0:n.length,e=T();return n=t?Y(n,function(r){if(typeof r[1]!="function")throw new Bn(w);return[e(r[0]),r[1]]}):[],b(function(r){for(var u=-1;++u<t;){var o=n[u];if(Rn(o[0],this,r))return Rn(o[1],this,r)}})}function rd(n){return Ml(Nn(n,W))}function Zi(n){return function(){return n}}function id(n,t){return n==null||n!==n?t:n}var ud=Wf(),fd=Wf(!0);function Fn(n){return n}function Ji(n){return hf(typeof n=="function"?n:Nn(n,W))}function od(n){return gf(Nn(n,W))}function sd(n,t){return df(n,Nn(t,W))}var ad=b(function(n,t){return function(e){return ye(e,n,t)}}),ld=b(function(n,t){return function(e){return ye(n,e,t)}});function Xi(n,t,e){var r=an(t),u=fr(t,r);e==null&&!(J(t)&&(u.length||!r.length))&&(e=t,t=n,n=this,u=fr(t,an(t)));var o=!(J(e)&&"chain"in e)||!!e.chain,s=ct(n);return Wn(u,function(a){var h=t[a];n[a]=h,s&&(n.prototype[a]=function(){var d=this.__chain__;if(o||d){var _=n(this.__wrapped__),v=_.__actions__=An(this.__actions__);return v.push({func:h,args:arguments,thisArg:n}),_.__chain__=d,_}return h.apply(n,mt([this.value()],arguments))})}),n}function cd(){return sn._===this&&(sn._=Ba),this}function Qi(){}function hd(n){return n=R(n),b(function(t){return _f(t,n)})}var pd=Mi(Y),gd=Mi(Wu),dd=Mi(jr);function Po(n){return Pi(n)?ni(nt(n)):kl(n)}function _d(n){return function(t){return n==null?i:Nt(n,t)}}var vd=Uf(),md=Uf(!0);function Vi(){return[]}function ji(){return!1}function xd(){return{}}function yd(){return""}function wd(){return!0}function Ad(n,t){if(n=R(n),n<1||n>Hn)return[];var e=In,r=vn(n,In);t=T(t),n-=In;for(var u=ri(r,t);++e<n;)t(e);return u}function Sd(n){return M(n)?Y(n,nt):En(n)?[n]:An(no(B(n)))}function Td(n){var t=++Pa;return B(n)+t}var Fd=hr(function(n,t){return n+t},0),Cd=Ri("ceil"),Id=hr(function(n,t){return n/t},1),Md=Ri("floor");function Rd(n){return n&&n.length?ur(n,Fn,gi):i}function Ld(n,t){return n&&n.length?ur(n,T(t,2),gi):i}function bd(n){return Nu(n,Fn)}function Ed(n,t){return Nu(n,T(t,2))}function Od(n){return n&&n.length?ur(n,Fn,mi):i}function Dd(n,t){return n&&n.length?ur(n,T(t,2),mi):i}var Pd=hr(function(n,t){return n*t},1),Wd=Ri("round"),Bd=hr(function(n,t){return n-t},0);function Ud(n){return n&&n.length?ei(n,Fn):0}function Nd(n,t){return n&&n.length?ei(n,T(t,2)):0}return f.after=op,f.ary=co,f.assign=Zp,f.assignIn=Co,f.assignInWith=Fr,f.assignWith=Jp,f.at=Xp,f.before=ho,f.bind=qi,f.bindAll=td,f.bindKey=po,f.castArray=xp,f.chain=so,f.chunk=Mc,f.compact=Rc,f.concat=Lc,f.cond=ed,f.conforms=rd,f.constant=Zi,f.countBy=Uh,f.create=Qp,f.curry=go,f.curryRight=_o,f.debounce=vo,f.defaults=Vp,f.defaultsDeep=jp,f.defer=sp,f.delay=ap,f.difference=bc,f.differenceBy=Ec,f.differenceWith=Oc,f.drop=Dc,f.dropRight=Pc,f.dropRightWhile=Wc,f.dropWhile=Bc,f.fill=Uc,f.filter=Gh,f.flatMap=Hh,f.flatMapDeep=Kh,f.flatMapDepth=kh,f.flatten=io,f.flattenDeep=Nc,f.flattenDepth=Gc,f.flip=lp,f.flow=ud,f.flowRight=fd,f.fromPairs=qc,f.functions=fg,f.functionsIn=og,f.groupBy=zh,f.initial=Hc,f.intersection=Kc,f.intersectionBy=kc,f.intersectionWith=zc,f.invert=ag,f.invertBy=lg,f.invokeMap=Zh,f.iteratee=Ji,f.keyBy=Jh,f.keys=an,f.keysIn=Tn,f.map=xr,f.mapKeys=hg,f.mapValues=pg,f.matches=od,f.matchesProperty=sd,f.memoize=wr,f.merge=gg,f.mergeWith=Io,f.method=ad,f.methodOf=ld,f.mixin=Xi,f.negate=Ar,f.nthArg=hd,f.omit=dg,f.omitBy=_g,f.once=cp,f.orderBy=Xh,f.over=pd,f.overArgs=hp,f.overEvery=gd,f.overSome=dd,f.partial=$i,f.partialRight=mo,f.partition=Qh,f.pick=vg,f.pickBy=Mo,f.property=Po,f.propertyOf=_d,f.pull=Xc,f.pullAll=fo,f.pullAllBy=Qc,f.pullAllWith=Vc,f.pullAt=jc,f.range=vd,f.rangeRight=md,f.rearg=pp,f.reject=np,f.remove=nh,f.rest=gp,f.reverse=Ni,f.sampleSize=ep,f.set=xg,f.setWith=yg,f.shuffle=rp,f.slice=th,f.sortBy=fp,f.sortedUniq=sh,f.sortedUniqBy=ah,f.split=Hg,f.spread=dp,f.tail=lh,f.take=ch,f.takeRight=hh,f.takeRightWhile=ph,f.takeWhile=gh,f.tap=Rh,f.throttle=_p,f.thru=mr,f.toArray=So,f.toPairs=Ro,f.toPairsIn=Lo,f.toPath=Sd,f.toPlainObject=Fo,f.transform=wg,f.unary=vp,f.union=dh,f.unionBy=_h,f.unionWith=vh,f.uniq=mh,f.uniqBy=xh,f.uniqWith=yh,f.unset=Ag,f.unzip=Gi,f.unzipWith=oo,f.update=Sg,f.updateWith=Tg,f.values=re,f.valuesIn=Fg,f.without=wh,f.words=Oo,f.wrap=mp,f.xor=Ah,f.xorBy=Sh,f.xorWith=Th,f.zip=Fh,f.zipObject=Ch,f.zipObjectDeep=Ih,f.zipWith=Mh,f.entries=Ro,f.entriesIn=Lo,f.extend=Co,f.extendWith=Fr,Xi(f,f),f.add=Fd,f.attempt=Do,f.camelCase=Rg,f.capitalize=bo,f.ceil=Cd,f.clamp=Cg,f.clone=yp,f.cloneDeep=Ap,f.cloneDeepWith=Sp,f.cloneWith=wp,f.conformsTo=Tp,f.deburr=Eo,f.defaultTo=id,f.divide=Id,f.endsWith=Lg,f.eq=Yn,f.escape=bg,f.escapeRegExp=Eg,f.every=Nh,f.find=qh,f.findIndex=eo,f.findKey=ng,f.findLast=$h,f.findLastIndex=ro,f.findLastKey=tg,f.floor=Md,f.forEach=ao,f.forEachRight=lo,f.forIn=eg,f.forInRight=rg,f.forOwn=ig,f.forOwnRight=ug,f.get=ki,f.gt=Fp,f.gte=Cp,f.has=sg,f.hasIn=zi,f.head=uo,f.identity=Fn,f.includes=Yh,f.indexOf=$c,f.inRange=Ig,f.invoke=cg,f.isArguments=$t,f.isArray=M,f.isArrayBuffer=Ip,f.isArrayLike=Sn,f.isArrayLikeObject=nn,f.isBoolean=Mp,f.isBuffer=Ct,f.isDate=Rp,f.isElement=Lp,f.isEmpty=bp,f.isEqual=Ep,f.isEqualWith=Op,f.isError=Hi,f.isFinite=Dp,f.isFunction=ct,f.isInteger=xo,f.isLength=Sr,f.isMap=yo,f.isMatch=Pp,f.isMatchWith=Wp,f.isNaN=Bp,f.isNative=Up,f.isNil=Gp,f.isNull=Np,f.isNumber=wo,f.isObject=J,f.isObjectLike=X,f.isPlainObject=Ce,f.isRegExp=Ki,f.isSafeInteger=qp,f.isSet=Ao,f.isString=Tr,f.isSymbol=En,f.isTypedArray=ee,f.isUndefined=$p,f.isWeakMap=Hp,f.isWeakSet=Kp,f.join=Yc,f.kebabCase=Og,f.last=qn,f.lastIndexOf=Zc,f.lowerCase=Dg,f.lowerFirst=Pg,f.lt=kp,f.lte=zp,f.max=Rd,f.maxBy=Ld,f.mean=bd,f.meanBy=Ed,f.min=Od,f.minBy=Dd,f.stubArray=Vi,f.stubFalse=ji,f.stubObject=xd,f.stubString=yd,f.stubTrue=wd,f.multiply=Pd,f.nth=Jc,f.noConflict=cd,f.noop=Qi,f.now=yr,f.pad=Wg,f.padEnd=Bg,f.padStart=Ug,f.parseInt=Ng,f.random=Mg,f.reduce=Vh,f.reduceRight=jh,f.repeat=Gg,f.replace=qg,f.result=mg,f.round=Wd,f.runInContext=c,f.sample=tp,f.size=ip,f.snakeCase=$g,f.some=up,f.sortedIndex=eh,f.sortedIndexBy=rh,f.sortedIndexOf=ih,f.sortedLastIndex=uh,f.sortedLastIndexBy=fh,f.sortedLastIndexOf=oh,f.startCase=Kg,f.startsWith=kg,f.subtract=Bd,f.sum=Ud,f.sumBy=Nd,f.template=zg,f.times=Ad,f.toFinite=ht,f.toInteger=R,f.toLength=To,f.toLower=Yg,f.toNumber=$n,f.toSafeInteger=Yp,f.toString=B,f.toUpper=Zg,f.trim=Jg,f.trimEnd=Xg,f.trimStart=Qg,f.truncate=Vg,f.unescape=jg,f.uniqueId=Td,f.upperCase=nd,f.upperFirst=Yi,f.each=ao,f.eachRight=lo,f.first=uo,Xi(f,function(){var n={};return Vn(f,function(t,e){U.call(f.prototype,e)||(n[e]=t)}),n}(),{chain:!1}),f.VERSION=l,Wn(["bind","bindKey","curry","curryRight","partial","partialRight"],function(n){f[n].placeholder=f}),Wn(["drop","take"],function(n,t){O.prototype[n]=function(e){e=e===i?1:fn(R(e),0);var r=this.__filtered__&&!t?new O(this):this.clone();return r.__filtered__?r.__takeCount__=vn(e,r.__takeCount__):r.__views__.push({size:vn(e,In),type:n+(r.__dir__<0?"Right":"")}),r},O.prototype[n+"Right"]=function(e){return this.reverse()[n](e).reverse()}}),Wn(["filter","map","takeWhile"],function(n,t){var e=t+1,r=e==Xn||e==be;O.prototype[n]=function(u){var o=this.clone();return o.__iteratees__.push({iteratee:T(u,3),type:e}),o.__filtered__=o.__filtered__||r,o}}),Wn(["head","last"],function(n,t){var e="take"+(t?"Right":"");O.prototype[n]=function(){return this[e](1).value()[0]}}),Wn(["initial","tail"],function(n,t){var e="drop"+(t?"":"Right");O.prototype[n]=function(){return this.__filtered__?new O(this):this[e](1)}}),O.prototype.compact=function(){return this.filter(Fn)},O.prototype.find=function(n){return this.filter(n).head()},O.prototype.findLast=function(n){return this.reverse().find(n)},O.prototype.invokeMap=b(function(n,t){return typeof n=="function"?new O(this):this.map(function(e){return ye(e,n,t)})}),O.prototype.reject=function(n){return this.filter(Ar(T(n)))},O.prototype.slice=function(n,t){n=R(n);var e=this;return e.__filtered__&&(n>0||t<0)?new O(e):(n<0?e=e.takeRight(-n):n&&(e=e.drop(n)),t!==i&&(t=R(t),e=t<0?e.dropRight(-t):e.take(t-n)),e)},O.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},O.prototype.toArray=function(){return this.take(In)},Vn(O.prototype,function(n,t){var e=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),u=f[r?"take"+(t=="last"?"Right":""):t],o=r||/^find/.test(t);!u||(f.prototype[t]=function(){var s=this.__wrapped__,a=r?[1]:arguments,h=s instanceof O,d=a[0],_=h||M(s),v=function(E){var D=u.apply(f,mt([E],a));return r&&y?D[0]:D};_&&e&&typeof d=="function"&&d.length!=1&&(h=_=!1);var y=this.__chain__,S=!!this.__actions__.length,F=o&&!y,L=h&&!S;if(!o&&_){s=L?s:new O(this);var C=n.apply(s,a);return C.__actions__.push({func:mr,args:[v],thisArg:i}),new Un(C,y)}return F&&L?n.apply(this,a):(C=this.thru(v),F?r?C.value()[0]:C.value():C)})}),Wn(["pop","push","shift","sort","splice","unshift"],function(n){var t=Ke[n],e=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",r=/^(?:pop|shift)$/.test(n);f.prototype[n]=function(){var u=arguments;if(r&&!this.__chain__){var o=this.value();return t.apply(M(o)?o:[],u)}return this[e](function(s){return t.apply(M(s)?s:[],u)})}}),Vn(O.prototype,function(n,t){var e=f[t];if(e){var r=e.name+"";U.call(Qt,r)||(Qt[r]=[]),Qt[r].push({name:t,func:e})}}),Qt[cr(i,Z).name]=[{name:"wrapper",func:i}],O.prototype.clone=ja,O.prototype.reverse=nl,O.prototype.value=tl,f.prototype.at=Lh,f.prototype.chain=bh,f.prototype.commit=Eh,f.prototype.next=Oh,f.prototype.plant=Ph,f.prototype.reverse=Wh,f.prototype.toJSON=f.prototype.valueOf=f.prototype.value=Bh,f.prototype.first=f.prototype.head,pe&&(f.prototype[pe]=Dh),f},yt=Ea();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(sn._=yt,define(function(){return yt})):Dt?((Dt.exports=yt)._=yt,Jr._=yt):sn._=yt}).call(ie)});var br=Jd(Go());var gt=i=>[...new Set(i)],qo=i=>[...new Map(i.map(l=>[l.toLowerCase(),l])).values()];function $o(i){return Array.isArray(i)?i:[]}var Ho=(i,l)=>l.indexOf(i)>0?l.indexOf(i):l.length;var Cr=i=>"spaces://"+i;var dt=i=>{var l;return(l=i==null?void 0:i.match(/(\\\\.|[^,])+/g))!=null?l:[]},tu=i=>{if(!i)return"";let l=/\\[\\[(.*?)\\]\\]/g.exec(i),x=(l==null?void 0:l.length)>1?l[1].substring(0,Ho("|",l[1])):i;return x||i};var Me=(i,l)=>{if(typeof i=="string"){if(/\\/\\/(\\S+?(?:jpe?g|png|gif|svg))/gi.test(i)||i.includes("unsplash"))return"image";if(/^\\d{4}-\\d{2}-\\d{2}$/.test(i))return"date";if(l=="tag"||l=="tags")return"tag";if(/\\[\\[.*?\\]\\]/.test(i))return"link"}else{if(typeof i=="number")return"number";if(typeof i=="boolean")return"boolean";if(i)if(Array.isArray(i)||typeof i=="string"&&i.indexOf(",")>-1){let x=Array.isArray(i)?i:[];if(typeof i=="string"&&i.indexOf(",")>-1&&(x=dt(i)),l=="tag"||l=="tags")return"tag-multi";if(x.length==1&&Array.isArray(x[0])&&x[0].length==1&&typeof x[0][0]=="string")return"link";let m=gt(x.map(w=>Me(w,l)));return m.length==1&&m[0]=="link"?"link-multi":"option-multi"}else{if(i.isLuxonDateTime)return"date";if(i.isLuxonDuration)return"duration";if(i.type=="file")return"link";if(typeof i=="object"&&!Array.isArray(i)&&i!==null)return"object"}else return"unknown"}return"text"};var Ko=i=>Object.keys(i!=null?i:{}).filter(l=>l!="position").filter(l=>l!="tag"&&l!="tags");var ue=i=>i.join(","),ko=i=>i.join(", ");var Ir=(i,l)=>{switch(Me(l,i)){case"object":return JSON.stringify(l);case"number":return l.toString();case"boolean":return l?"true":"false";case"date":return l;case"duration":return ko(Object.keys(l.values).reduce((m,w)=>[...m,...l.values[w]>0?[l.values[w]+" "+w]:[]],[]));case"option-multi":case"link-multi":return typeof l=="string"?l:ue(l.map(m=>m?typeof m=="string"?m:m.path?m.path:Array.isArray(l)&&m.length==1&&Array.isArray(m[0])&&m[0].length==1&&typeof m[0][0]=="string"?m[0][0]:JSON.stringify(m):""));case"link":return Array.isArray(l)&&l.length==1&&Array.isArray(l[0])&&l[0].length==1&&typeof l[0][0]=="string"?l[0][0]:typeof l=="string"?l:l.path;case"text":case"tag":case"image":return l}return""};var zo=i=>{switch(i){case"duration":return"text";case"unknown":return"text"}return i};var Mr=(i,l)=>i==l,eu=(i,l)=>(i!=null?i:"").length==0,ru=(i,l)=>(i!=null?i:"").toLowerCase().includes((l!=null?l:"").toLowerCase()),Rr=(i,l)=>parseFloat(i)>parseFloat(l),Lr=(i,l)=>parseInt(i)>parseInt(l),iu=(i,l)=>{let x=i?dt(i):[];return(l?dt(l):[]).some(w=>x.some(N=>N==w))},Yo=i=>{let l=new Date(`${i}T00:00`),x=new Date;return l.getMonth()===x.getMonth()&&l.getDate()===x.getDate()};var Re={isNotEmpty:{type:["text","file","link","link-multi","fileprop","image"],fn:(i,l)=>!eu(i,""),valueType:"none"},isEmpty:{type:["text","file","link","link-multi","fileprop","image"],fn:(i,l)=>eu(i,""),valueType:"none"},include:{fn:(i,l)=>ru(i,l),type:["text","file","link","link-multi","fileprop","image"],valueType:"text"},notInclude:{type:["text","file","link","link-multi","fileprop","image"],fn:(i,l)=>!ru(i,l),valueType:"text"},is:{type:["text","file","link","context","fileprop"],fn:(i,l)=>Mr(i,l),valueType:"text"},isNot:{type:["text","file","link","context","fileprop"],fn:(i,l)=>!Mr(i,l),valueType:"text"},equal:{type:["number"],fn:(i,l)=>Mr(i,l),valueType:"number"},isGreatThan:{type:["number"],fn:(i,l)=>Rr(i,l),valueType:"number"},isLessThan:{type:["number"],fn:(i,l)=>Lr(i,l),valueType:"number"},isLessThanOrEqual:{type:["number"],fn:(i,l)=>!Rr(i,l),valueType:"number"},isGreatThanOrEqual:{type:["number"],fn:(i,l)=>!Lr(i,l),valueType:"number"},dateBefore:{type:["date","fileprop"],fn:(i,l)=>Lr(i,l),valueType:"date"},dateAfter:{type:["date","fileprop"],fn:(i,l)=>Rr(i,l),valueType:"date"},isSameDateAsToday:{type:["date"],fn:(i,l)=>Yo(i,l),valueType:"none"},isAnyInList:{type:["option","context","option-multi","context-multi","tags-multi","tags"],fn:(i,l)=>iu(i,l),valueType:"list"},isNoneInList:{type:["option","context","option-multi","context-multi","tags-multi","tags"],fn:(i,l)=>!iu(i,l),valueType:"list"},isTrue:{type:["boolean"],fn:(i,l)=>i=="true",valueType:"none"},isFalse:{type:["boolean"],fn:(i,l)=>i!="true",valueType:"none"}};var Xd=(i,l)=>l.reduce((m,w)=>{let[N,z]=m,ln=w.type=="fileprop"?Xo(z,w):w.type=="filemeta"?Jo(z,w):w.type=="frontmatter"?Zo(z,w):[],G=z.filter(W=>!ln.includes(W));return[[...N,...ln],G]},[[],i])[0],Qd=(i,l)=>l.reduce((x,m)=>m.type=="fileprop"?Xo(x,m):m.type=="filemeta"?Jo(x,m):m.type=="frontmatter"?Zo(x,m):[],i),Zo=(i,l)=>i.filter(x=>{let m=x.frontmatter;if(!m||!m[l.field])return!1;let w=Re[l.fn],N=!0;return w&&(N=w.fn(Ir(l.field,m[l.field]),l.value)),N}),Jo=(i,l)=>i.filter(x=>{let m="";l.field=="outlinks"?m=ue(x.outlinks):l.field=="inlinks"?m=ue(x.inlinks):l.field=="tags"&&(m=ue(x.tags));let w=Re[l.fn],N=!0;return w&&(N=w.fn(m,l.value)),N}),Xo=(i,l)=>i.filter(x=>{if(["name","path","sticker","color","isFolder","extension","ctime","mtime","size","parent"].includes(l.field)){let w=Re[l.fn],N=!0;return w&&(N=w.fn(x[l.field],l.value)),N}return!0}),Qo=(i,l)=>i.reduce((m,w)=>!m||w.filters.length==0?m:w.type=="any"?Xd([l],w.filters).length>0:Qd([l],w.filters).length>0,!0);var Vo=(i,l,x)=>{if(!l)return{changed:!1,cache:{path:i.path,frames:{},schemas:[],listitems:{}}};let m=l.schemas,w=m.filter(G=>G.type=="frame").reduce((G,W)=>{var cn,Q;return Mt(It({},G),{[W.id]:{schema:W,cols:l.fields.filter(on=>on.schemaId==W.id),rows:(Q=(cn=l.tables[W.id])==null?void 0:cn.rows)!=null?Q:[]}})},{}),N=m.filter(G=>G.type=="listitem").reduce((G,W)=>{var cn,Q;return Mt(It({},G),{[W.id]:{schema:W,cols:l.fields.filter(on=>on.schemaId==W.id),rows:(Q=(cn=l.tables[W.id])==null?void 0:cn.rows)!=null?Q:[]}})},{}),z={path:i.path,frames:w,schemas:m,listitems:N},ln=!0;return x&&br.default.isEqual(z,x)&&(ln=!1),{changed:ln,cache:z}},jo=(i,l,x)=>{var on,Cn,V,Z,tt,hn;if(!l)return{changed:!1,cache:{path:i.path,schemas:[],outlinks:[],contexts:[],tables:{}}};let m=l.schemas.find($=>$.primary=="true"),w={schema:m,cols:l.fields.filter($=>$.schemaId==m.id),rows:(Cn=(on=l.tables[m.id])==null?void 0:on.rows)!=null?Cn:[]},N=l.schemas.filter($=>$.type=="db").reduce(($,j)=>{var rn,pn;return Mt(It({},$),{[j.id]:{schema:j,cols:l.fields.filter(Jn=>Jn.schemaId==j.id),rows:(pn=(rn=l.tables[j.id])==null?void 0:rn.rows)!=null?pn:[]}})},{}),z=(Z=(V=w.cols)==null?void 0:V.filter($=>$.type.startsWith("context")))!=null?Z:[],ln=(hn=(tt=w.cols)==null?void 0:tt.filter($=>$.type.startsWith("link")))!=null?hn:[],G=gt(z.map($=>$.value)),W=gt(w.rows.reduce(($,j)=>gt([...$,...[...z,...ln].flatMap(rn=>dt(j[rn.name]).map(pn=>tu(pn)))]),[])),cn={path:i.path,contexts:G,outlinks:W,tables:N,schemas:l.schemas},Q=!0;return x&&br.default.isEqual(cn,x)&&(Q=!0),{changed:Q,cache:cn}},Vd=i=>{var x,m,w,N,z,ln,G,W,cn,Q,on,Cn,V;let l=[];return i&&i.tags&&l.push(...(m=(x=i.tags)==null?void 0:x.map(Z=>Z.tag))!=null?m:[]),i&&((w=i.frontmatter)==null?void 0:w.tags)&&l.push(...(typeof((N=i.frontmatter)==null?void 0:N.tags)=="string"?dt(i.frontmatter.tags.replace(/ /g,"")):Array.isArray((z=i.frontmatter)==null?void 0:z.tags)?(G=(ln=i.frontmatter)==null?void 0:ln.tags)!=null?G:[]:[]).filter(Z=>typeof Z=="string").map(Z=>"#"+Z)),i&&((W=i.frontmatter)==null?void 0:W.tag)&&l.push(...(typeof((cn=i.frontmatter)==null?void 0:cn.tag)=="string"?dt(i.frontmatter.tag.replace(/ /g,"")):Array.isArray((Q=i.frontmatter)==null?void 0:Q.tag)?(Cn=(on=i.frontmatter)==null?void 0:on.tag)!=null?Cn:[]:[]).filter(Z=>typeof Z=="string").map(Z=>"#"+Z)),(V=gt(l))!=null?V:[]};var ns=(i,l,x,m,w,N,z,ln)=>{var Ee,Lt,In,Oe,De,Pe,rt,bt,We;let G={cacheType:"file",path:i.path,name:i.name,filename:i.filename};i.stat&&(G.ctime=i.stat.ctime,G.mtime=i.stat.mtime,G.size=i.stat.size,G.extension=i.extension);let W=[],cn=Vd(w),Q=(H,en,_n=new Set)=>{var Et,oe;let gn=[];for(let Mn of en){let Ot=(oe=(Et=H.get(Mn))==null?void 0:Et.contexts)!=null?oe:[];for(let Ht of Ot)_n.has(Ht)||(gn.push(Ht),_n.add(Ht),gn.push(...Q(H,[Cr(Ht)],_n)))}return gn};if(x.has(i.parent))for(let H of(Ee=x.get(i.parent).contexts)!=null?Ee:[])W.push(H);W.push(...cn);let on=i.name,Cn=i.name,V=(Lt=m==null?void 0:m.sticker)!=null?Lt:"",Z=(In=m==null?void 0:m.color)!=null?In:"",tt=(Oe=m==null?void 0:m.rank)!=null?Oe:"",hn=(De=m==null?void 0:m.folder)!=null?De:"";hn=="true"&&(hn="");let $=i.parent,j=i.isFolder,rn={},pn={},Jn=[],Rt=[],et=w==null?void 0:w.frontmatter;w!=null&&w.links&&Rt.push(...w.links.map(H=>H.link));let Er=z&&j?z.folderNotePath:i.path;for(let H of Object.keys(N))Er in N[H]&&Jn.push(H);let Le="";if(et){let en=qo(Ko(et)).reduce((_n,gn)=>Mt(It({},_n),{[gn]:{name:gn,type:zo(Me(et[gn],gn))}}),{});Object.keys(en).forEach(_n=>{rn[_n]=Ir(_n,et[_n]),pn[_n]=en[_n].type,en[_n].type.startsWith("link")&&Rt.push(tu(rn[_n]))}),Le=(Pe=rn[l.fmKeyBanner])!=null?Pe:"",rn[l.fmKeySticker]&&(V=et[l.fmKeySticker]),rn[l.fmKeyColor]&&(Z=et[l.fmKeyColor]),rn[l.fmKeyAlias]&&(Cn=(rt=$o(et[l.fmKeyAlias]))==null?void 0:rt[0])}let _t=Mt(It({},G),{name:on,tags:gt(W),alias:Cn,fileTags:cn,folderNote:z,sticker:V,color:Z,rank:tt,parent:$,banner:Le,isFolder:j,sortBy:hn,frontmatter:rn,frontmatterTypes:pn,inlinks:Jn,outlinks:Rt}),Xn=[],fe={[$]:tt};for(let H of W)Xn.push(Cr(H));for(let[H,en]of x)en.type=="smart"?Qo(en.metadata.def.filters,_t)&&Xn.push(H):en.type=="folder"||en.type=="vault"?en.space.folderPath==$&&en.space.defPath!=i.path&&(Xn.push(H),fe[H]=tt):((We=(bt=en.metadata)==null?void 0:bt.links)!=null?We:[]).find(gn=>gn==_t.path)&&(Xn.push(H),fe[H]=en.metadata.links.findIndex(gn=>gn==_t.path).toString());let be=Q(x,Xn);Xn.push(...be.map(H=>Cr(H))),_t.tags.push(...be);let Qn=z&&!j?Mt(It({},_t),{spaces:[],contexts:[]}):Mt(It({},_t),{spaces:gt(Xn),spaceRanks:fe}),Hn=!0;return ln&&br.default.isEqual(Qn,ln)&&(Hn=!1),{changed:Hn,cache:Qn}};function ts(i){let{file:l,settings:x,spacesCache:m,vaultItem:w,metadataCache:N,resolvedLinks:z,folderNote:ln,oldMetadata:G}=i;return ns(l,x,m,w,N,z,ln,G)}function es(i){let{space:l,mdb:x,oldCache:m}=i;return jo(l,x,m)}function rs(i){let{space:l,mdb:x,oldCache:m}=i;return Vo(l,x,m)}var jd=self;jd.onmessage=async i=>{let{payload:l,job:x}=i.data,m;x.type=="file"?m=ts(l):x.type=="context"?m=es(l):x.type=="frames"&&(m=rs(l));try{postMessage({job:x,result:m})}catch(w){console.log(w),postMessage({job:x,result:{$error:`Failed to index ${x.type} ${x.path}: ${w}`}})}};\n/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n');
}

// src/superstate/workers/manager.ts
var Manager = class extends import_obsidian68.Component {
  constructor(numWorkers, cache) {
    super();
    this.numWorkers = numWorkers;
    this.cache = cache;
    this.workers = [];
    this.busy = [];
    this.reloadQueue = [];
    this.reloadSet = /* @__PURE__ */ new Set();
    this.callbacks = /* @__PURE__ */ new Map();
    for (let index = 0; index < numWorkers; index++) {
      const worker = new Worker2({ name: "Make.md Superstate Indexer " + (index + 1) });
      worker.onmessage = (evt) => this.finish(evt.data.job, evt.data.result, index);
      this.workers.push(worker);
      this.register(() => worker.terminate());
      this.busy.push(false);
    }
  }
  reload(jerb) {
    const jobKey = stringifyJob(jerb);
    const promise = new Promise((resolve, reject) => {
      var _a2;
      if (this.callbacks.has(jobKey))
        (_a2 = this.callbacks.get(jobKey)) == null ? void 0 : _a2.push([resolve, reject]);
      else
        this.callbacks.set(jobKey, [[resolve, reject]]);
    });
    if (this.reloadSet.has(jobKey))
      return promise;
    this.reloadSet.add(jobKey);
    const workerId = this.nextAvailableWorker();
    if (workerId !== void 0) {
      this.send(jerb, workerId);
    } else {
      this.reloadQueue.push(jerb);
    }
    return promise;
  }
  finish(jerb, data2, index) {
    var _a2;
    const jobKey = stringifyJob(jerb);
    const calls = [].concat((_a2 = this.callbacks.get(jobKey)) != null ? _a2 : []);
    this.reloadSet.delete(jobKey);
    this.callbacks.delete(jobKey);
    this.busy[index] = false;
    const job = this.reloadQueue.shift();
    if (job !== void 0)
      this.send(job, index);
    if ("$error" in data2) {
      for (const [_12, reject] of calls)
        reject(data2["$error"]);
    } else {
      for (const [callback, _12] of calls)
        callback(data2);
    }
  }
  send(job, workerId) {
    if (job.type == "file") {
      const file = tFileToAFile(getAbstractFileAtPath(app, job.path));
      if (!file)
        return;
      const folderNote = this.cache.plugin.settings.enableFolderNote ? folderNoteCache(this.cache.plugin, file) : null;
      const metadataPath = folderNote && file.isFolder ? folderNote.folderNotePath : file.path;
      this.workers[workerId].postMessage({
        job,
        payload: {
          file,
          settings: this.cache.plugin.settings,
          spacesCache: this.cache.spacesIndex,
          vaultItem: vaultItemForPath(this.cache.plugin, job.path),
          metadataCache: app.metadataCache.getCache(metadataPath),
          resolvedLinks: app.metadataCache.resolvedLinks,
          folderNote,
          oldMetadata: this.cache.filesIndex.get(job.path)
        }
      });
      this.busy[workerId] = true;
    }
    if (job.type == "context") {
      const space = spaceInfoByPath(this.cache.plugin, job.path);
      if (!space || !space.path) {
        return;
      }
      getContextMDB(this.cache.plugin, space).then((mdb) => {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb,
            oldCache: this.cache.contextsIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
      });
    }
    if (job.type == "frames") {
      const space = spaceInfoByPath(this.cache.plugin, job.path);
      if (!space) {
        return;
      }
      getFramesMDB(this.cache.plugin, space).then((mdb) => {
        this.workers[workerId].postMessage({
          job,
          payload: {
            space,
            mdb,
            oldCache: this.cache.framesIndex.get(job.path)
          }
        });
        this.busy[workerId] = true;
      });
    }
  }
  nextAvailableWorker() {
    const index = this.busy.indexOf(false);
    return index == -1 ? void 0 : index;
  }
};

// src/superstate/superstate.ts
var loadSpaces = (plugin) => {
  const getAllTagContextFiles = (plugin2) => {
    var _a2, _b2;
    const folder = plugin2.settings.spacesFolder == "" ? app.vault.getRoot() : getAbstractFileAtPath(
      app,
      getFolderPathFromString(plugin2.settings.spacesFolder)
    );
    const allcontexts = (_b2 = uniq([...Object.keys(app.metadataCache.getTags()), ...(_a2 = folder == null ? void 0 : folder.children.filter(
      (f4) => f4 instanceof import_obsidian69.TFolder && f4.name.charAt(0) == "#"
    ).map((g4) => g4.name)) != null ? _a2 : []]).map((f4) => spaceFromTag(plugin2, tagPathToTag(f4)))) != null ? _b2 : [];
    return allcontexts;
  };
  const getAllSpaceContextFiles = (plugin2) => {
    var _a2;
    const folder = plugin2.settings.spacesFolder == "" ? app.vault.getRoot() : getAbstractFileAtPath(
      app,
      getFolderPathFromString(plugin2.settings.spacesFolder)
    );
    const allcontexts = (_a2 = folder == null ? void 0 : folder.children.filter(
      (f4) => f4 instanceof import_obsidian69.TFolder && f4.name.charAt(0) != "#"
    ).map((f4) => spaceFromCustomSpace(plugin2, f4.name))) != null ? _a2 : [];
    return allcontexts;
  };
  const getAllFolderContextFiles = (plugin2) => {
    const folders = [app.vault.getRoot()];
    const rootFolder = app.vault.getRoot();
    function recursiveFx(folder) {
      for (const child of folder.children) {
        if (folder.path != removeTrailingSlashFromFolder(plugin2.settings.spacesFolder)) {
          if (child instanceof import_obsidian69.TFolder) {
            const childFolder = child;
            folders.push(child);
            if (childFolder.children)
              recursiveFx(childFolder);
          }
        }
      }
    }
    recursiveFx(rootFolder);
    return folders.map((f4) => spaceFromFolder(plugin2, f4.path));
  };
  const allTagSpaces = getAllTagContextFiles(plugin);
  const allFolders = getAllFolderContextFiles(plugin);
  const allCustomSpaces = getAllSpaceContextFiles(plugin);
  return [...allTagSpaces, ...allFolders, ...allCustomSpaces];
};
var Superstate = class extends import_obsidian69.Component {
  constructor(app2, indexVersion, onChange, plugin) {
    super();
    this.app = app2;
    this.indexVersion = indexVersion;
    this.onChange = onChange;
    this.debounceSaveSpaceDatabase = (0, import_lodash14.debounce)(
      (tables) => {
        saveDBToPath(this.plugin, this.plugin.spacesDBPath, tables);
      },
      1e3,
      {
        leading: false
      }
    );
    this.initialized = false;
    this.plugin = plugin;
    this.metadataCache = app2.metadataCache;
    this.api = new API(plugin);
    this.filesIndex = /* @__PURE__ */ new Map();
    this.spacesIndex = /* @__PURE__ */ new Map();
    this.contextsIndex = /* @__PURE__ */ new Map();
    this.framesIndex = /* @__PURE__ */ new Map();
    this.spacesMap = new IndexMap();
    this.linksMap = new IndexMap();
    this.tagsMap = new IndexMap();
    this.iconsCache = /* @__PURE__ */ new Map();
    this.fontsCache = /* @__PURE__ */ new Map();
    this.contextStoreQueue = Promise.resolve();
    this.vaultQueue = Promise.resolve();
    this.vaultDBCache = [];
    this.persister = new LocalStorageCache(app2.appId || "shared", indexVersion);
    this.addChild(this.indexer = new Manager(2, this));
  }
  static create(app2, indexVersion, onChange, plugin) {
    return new Superstate(app2, indexVersion, onChange, plugin);
  }
  async initializeIndex() {
    await Promise.race([new Promise((resolve) => setTimeout(resolve, 1e3)), this.loadFromCache()]);
    this.loadSpacesDatabaseFromDisk();
  }
  addToVaultQueue(operation) {
    this.vaultQueue = this.vaultQueue.then(operation).catch(() => {
    });
  }
  addToContextStoreQueue(operation) {
    this.contextStoreQueue = this.contextStoreQueue.then(operation).catch(() => {
    });
  }
  async migrate08(db) {
    var _a2, _b2, _c2, _d2;
    const currentSpaces = (_b2 = (_a2 = selectDB(db, "spaces")) == null ? void 0 : _a2.rows) != null ? _b2 : [];
    const currentSpaceItems = (_d2 = (_c2 = selectDB(db, "spaceItems")) == null ? void 0 : _c2.rows) != null ? _d2 : [];
    const oldSpaceDefToSpaceDef = (oldDef) => {
      return {
        type: oldDef.type == "focus" ? oldDef.folder.length > 0 ? "folder" : "links" : oldDef.type,
        value: oldDef.type == "focus" && oldDef.folder.length > 0 ? oldDef.folder : null,
        filters: oldDef.filters
      };
    };
    let homeSpaces = this.plugin.settings.rootSpaces;
    let pinnedSpaces = this.plugin.settings.waypoints;
    const promises = currentSpaces.map((f4) => {
      const spaceDef = oldSpaceDefToSpaceDef(safelyParseJSON(f4.def));
      if (spaceDef.type == "folder") {
        const path = spaceDef.value;
        if (f4.pinned == "home" && homeSpaces.some((g4) => g4 != path)) {
          homeSpaces = [...homeSpaces, path];
        } else if (f4.pinned == "pinned" && pinnedSpaces.some((g4) => g4 != path)) {
          pinnedSpaces = [...pinnedSpaces, path];
        }
        return;
      } else {
        const path = spacePathFromName(f4.name);
        if (f4.pinned == "home" && homeSpaces.some((g4) => g4 != path)) {
          homeSpaces = [...homeSpaces, path];
        } else if (f4.pinned == "pinned" && pinnedSpaces.some((g4) => g4 != path)) {
          pinnedSpaces = [...pinnedSpaces, path];
        }
        if (this.spacesIndex.has(path))
          return;
        return insertSpaceAtIndex(this.plugin, f4.name, {
          sort: f4.sort,
          color: f4.color,
          sticker: f4.sticker,
          def: spaceDef,
          contexts: [],
          links: spaceDef.type == "links" ? currentSpaceItems.filter((s5) => s5.space == f4.name).map((s5) => s5.path) : null
        });
      }
    });
    await Promise.all(promises.filter((f4) => f4));
    this.plugin.settings.rootSpaces = homeSpaces;
    this.plugin.settings.waypoints = pinnedSpaces;
    this.plugin.settings.activeView = "spaces://$home";
    this.plugin.settings.autoMigration08 = true;
    this.plugin.saveSettings();
    return;
  }
  async loadSpacesDatabaseFromDisk() {
    var _a2, _b2;
    const db = await getDB(await this.plugin.sqlJS(), this.plugin.spacesDBPath);
    const tables = dbResultsToDBTables(
      db.exec(
        "SELECT name FROM sqlite_schema WHERE type ='table' AND name NOT LIKE 'sqlite_%';"
      )
    );
    if (tables.length == 0) {
      initiateDB(db);
      await saveDBToPath(this.plugin, this.plugin.spacesDBPath, {
        vault: vaultSchema
      });
    } else {
      if (!this.plugin.settings.autoMigration08) {
        await this.migrate08(db);
      }
    }
    this.vaultDBCache = (_b2 = (_a2 = selectDB(db, "vault")) == null ? void 0 : _a2.rows) != null ? _b2 : [];
    db.close();
    this.spacesDBLoaded = true;
    rebuildIndex(this.plugin, true);
  }
  async saveSpacesDatabaseToDisk(tables, save = true) {
    if (await app.vault.adapter.exists((0, import_obsidian69.normalizePath)(this.plugin.spacesDBPath)) && !this.spacesDBLoaded) {
      return;
    }
    this.spacesDBLoaded = true;
    if (tables.vault)
      this.vaultDBCache = tables.vault.rows;
    if (save && this.plugin.settings.spacesEnabled) {
      this.debounceSaveSpaceDatabase(tables);
    }
  }
  async initialize() {
    const start = Date.now();
    if (this.plugin.settings.spacesEnabled)
      await this.initializeSpaces();
    await this.initializeContexts();
    await this.initializeFrames();
    await this.initalizeFiles();
    this.cleanContexts();
    console.log(`Make.md Superstate: ${Date.now() - start} ms`);
  }
  async initializeSpaces() {
    this.spacesIndex = /* @__PURE__ */ new Map();
    this.spacesIndex.set(homeSpace.path, homeSpace);
    this.spacesIndex.set(tagsSpace.path, tagsSpace);
    this.spacesIndex.set(allSpace.path, allSpace);
    const promises = loadSpaces(this.plugin).map((f4) => {
      this.reloadSpace(f4, true);
    });
    await Promise.all(promises);
  }
  getSpaceItems(spacePath) {
    let items = [];
    if (spacePath == "spaces://$all") {
      items = this.allSpaces().filter((f4) => f4.type != "default" && f4.type != "folder").map((f4) => f4.path);
    } else if (spacePath == "spaces://$home") {
      items = import_lodash14.default.clone(this.plugin.settings.rootSpaces).filter((f4) => this.filesIndex.has(f4) || this.spacesIndex.has(f4));
    } else if (spacePath == "spaces://$tags") {
      items = this.allSpaces().filter((f4) => f4.type == "tag").map((f4) => f4.path);
    } else {
      items = [...this.spacesMap.getInverse(spacePath)];
    }
    return items.map((f4) => {
      var _a2, _b2;
      const s5 = uriByString(f4);
      const fileCache = this.filesIndex.get(f4);
      if (s5.type == "tag" || s5.type == "space" || s5.type == "folder" || s5.type == "vault") {
        if (fileCache) {
          return {
            ...this.spacesIndex.get(f4),
            rank: (_a2 = fileCache == null ? void 0 : fileCache.spaceRanks) == null ? void 0 : _a2[spacePath]
          };
        }
        return this.spacesIndex.get(f4);
      }
      return {
        ...fileCache,
        rank: (_b2 = fileCache == null ? void 0 : fileCache.spaceRanks) == null ? void 0 : _b2[spacePath]
      };
    }).filter((f4) => f4);
  }
  async initializeFrames() {
    const promises = this.allSpaces().filter((f4) => f4.type != "default").map((f4) => f4.space).map((l3) => {
      this.reloadFrames(l3);
    });
    await Promise.all(promises);
  }
  async initializeContexts() {
    const promises = this.allSpaces().filter((f4) => f4.type != "default").map((f4) => f4.space).map((l3) => {
      this.reloadContext(l3);
    });
    await Promise.all(promises);
  }
  async cleanContexts() {
    this.contextsIndex.forEach((context) => {
      var _a2, _b2, _c2;
      const contextFiles = [...this.spacesMap.getInverse(context.path)];
      const removeFiles = (_c2 = (_b2 = (_a2 = context.tables) == null ? void 0 : _a2["files"]) == null ? void 0 : _b2.rows.filter((f4) => !contextFiles.includes(f4.File))) != null ? _c2 : [];
      if (removeFiles.length > 0) {
        this.addToContextStoreQueue(() => removeFilesInContext(this.plugin, removeFiles.map((f4) => f4.File), this.spacesIndex.get(context.path).space).then((f4) => this.reloadSpaceByPath(context.path)));
      }
    });
    this.spacesIndex.forEach((space) => {
      const removeFiles = [...this.spacesMap.getInverse(space.path)];
    });
  }
  async loadFromCache() {
    const allFiles = getAllAbstractFilesInVault(this.plugin, app);
    if (this.plugin.settings.indexSVG) {
      const cacheIcons = allFiles.filter((f4) => f4 instanceof import_obsidian69.TFile && f4.extension == "svg").map((s5) => this.persister.load(s5.path, "icon").then((string) => {
        if ((string == null ? void 0 : string.length) > 0)
          this.iconsCache.set(s5.path, string);
      }));
      await Promise.all(cacheIcons);
    }
    const cachePromises = allFiles.map((file) => this.persister.load(file.path, "file").then((f4) => {
      if (!f4)
        return;
      const cache = parseFileCache(f4);
      this.filesIndex.set(file.path, cache);
      this.tagsMap.set(file.path, new Set(cache.tags));
      this.spacesMap.set(file.path, new Set(cache.spaces));
      this.linksMap.set(file.path, new Set(cache.outlinks));
      this.broadcast("file", "change", file.path);
    }));
    await Promise.all(cachePromises);
    const allSpaces = this.plugin.settings.cachedSpaces;
    const cacheSpacePromises = allSpaces.map((s5) => this.persister.load(s5, "space").then((serializedSpace) => {
      const space = safelyParseJSON(serializedSpace);
      if (space && space.type) {
        this.spacesIndex.set(s5, space);
        this.broadcast("space", "change", s5);
      }
    }));
    await Promise.all(cacheSpacePromises);
    this.broadcast("vault");
  }
  async initalizeFiles() {
    const allFiles = getAllAbstractFilesInVault(this.plugin, app);
    const promises = allFiles.map((l3) => this.reloadFile(l3, true));
    await Promise.all(promises);
    this.broadcast("vault");
  }
  async renameTag(tag, newTag) {
    this.renameSpace(spacePathFromName(tag), spacePathFromName(newTag));
    const allContextsWithTag = [];
    for (const [contextPath, spaceCache] of this.spacesIndex) {
      const contextCache = this.contextsIndex.get(contextPath);
      if (contextCache == null ? void 0 : contextCache.contexts.includes(tag)) {
        this.addToContextStoreQueue(() => renameTagInContexts(this.plugin, tag, newTag, allContextsWithTag));
      }
      if (spaceCache.metadata.contexts.includes(tag)) {
        saveSpaceCache(this.plugin, spaceCache.space, { ...spaceCache.metadata, contexts: spaceCache.metadata.contexts.map((f4) => f4 == tag ? newTag : f4) });
      }
    }
  }
  renameTagInFile(tag, newTag, file) {
    let oldMetadata;
    if (this.filesIndex.has(file.path)) {
      oldMetadata = this.filesIndex.get(file.path);
    }
    if (oldMetadata) {
      const newMetadata = {
        ...oldMetadata,
        tags: oldMetadata.tags.map((f4) => f4 == tag ? newTag : f4),
        fileTags: oldMetadata.fileTags.map((f4) => f4 == tag ? newTag : f4),
        spaces: oldMetadata.spaces.map((f4) => f4 == tagPathToTag(tag) ? tagPathToTag(newTag) : f4)
      };
      this.filesIndex.set(file.path, newMetadata);
      this.tagsMap.set(file.path, new Set(newMetadata.tags));
      this.spacesMap.set(file.path, new Set(newMetadata.spaces));
    } else {
      this.reloadFile(file);
    }
    this.fileReloaded(file.path);
    this.broadcast("file", "change", file.path);
  }
  deleteTag(tag) {
    this.tagsMap.getInverse(tag).forEach((file) => {
      this.deleteTagInFile(tag, getAbstractFileAtPath(app, file));
    });
    deleteSpaceFolder(this.plugin, tag);
    this.plugin.index.deleteSpace(tagSpacePathFromTag(tag));
    for (const [contextPath, spaceCache] of this.spacesIndex) {
      if (spaceCache.metadata.contexts.includes(tag)) {
        saveSpaceCache(this.plugin, spaceCache.space, { ...spaceCache.metadata, contexts: spaceCache.metadata.contexts.filter((f4) => f4 != tag) });
      }
    }
    const allContextsWithTag = [];
    for (const [contextPath, contextCache] of this.contextsIndex) {
      if (contextCache.contexts.includes(tag)) {
        allContextsWithTag.push(spaceInfoByPath(this.plugin, contextCache.path));
      }
    }
    this.addToContextStoreQueue(() => removeTagInContexts(this.plugin, tag, allContextsWithTag));
  }
  deleteTagInFile(tag, file) {
    let oldMetadata;
    if (this.filesIndex.has(file.path)) {
      oldMetadata = this.filesIndex.get(file.path);
    }
    if (oldMetadata) {
      const newMetadata = {
        ...oldMetadata,
        tags: oldMetadata.tags.filter((f4) => f4 != tag),
        fileTags: oldMetadata.fileTags.filter((f4) => f4 != tag),
        spaces: oldMetadata.spaces.filter((f4) => f4 != tagSpacePathFromTag(tag))
      };
      this.filesIndex.set(file.path, newMetadata);
      this.tagsMap.set(file.path, new Set(newMetadata.tags));
      this.spacesMap.set(file.path, new Set(newMetadata.spaces));
    } else {
      this.reloadFile(file);
    }
    this.fileReloaded(file.path);
    this.broadcast("file", "change", file.path);
  }
  metadataChange(file) {
    let fileCache = this.filesIndex.get(file.path);
    let afile = file;
    if (!fileCache) {
      const folderNotePath = folderPathFromFolderNoteFile(this.plugin.settings, tFileToAFile(file));
      fileCache = this.filesIndex.get(folderNotePath);
      if (fileCache)
        afile = getAbstractFileAtPath(app, fileCache.path);
    }
    if (fileCache) {
      const allContextsWithFile = fileCache.spaces.map((f4) => {
        var _a2;
        return (_a2 = this.spacesIndex.get(f4)) == null ? void 0 : _a2.space;
      }).filter((f4) => f4);
      this.addToContextStoreQueue(() => onMetadataChange(this.plugin, afile, allContextsWithFile));
      this.reloadFile(afile);
    }
  }
  reloadSpaceByPath(path) {
    return this.reloadSpace(spaceInfoByPath(this.plugin, path));
  }
  async renameFile(oldPath, newPath) {
    var _a2, _b2;
    const oldParentPath = getParentPathFromString(oldPath);
    const newParentPath = getParentPathFromString(newPath);
    let newFilePath = newPath;
    const newTFile = getAbstractFileAtPath(app, newPath);
    const oldFileCache = this.filesIndex.get(oldPath);
    if (!oldFileCache) {
      this.spacesMap.rename(oldPath, newPath);
      this.linksMap.rename(oldPath, newPath);
      this.linksMap.renameInverse(oldPath, newPath);
      this.spacesMap.get(newPath).forEach((f4) => this.reloadSpaceByPath(f4));
      this.reloadFile(newTFile).then((f4) => this.broadcast("space"));
      return;
    }
    const fileCache = { ...this.filesIndex.get(oldPath), path: newPath, parent: newParentPath };
    this.filesIndex.set(newPath, fileCache);
    this.filesIndex.delete(oldPath);
    if (this.plugin.settings.enableFolderNote) {
      if (isFolderNote(this.plugin.settings, tFileToAFile(getAbstractFileAtPath(app, newPath)))) {
        newFilePath = folderPathFromFolderNoteFile(this.plugin.settings, tFileToAFile(getAbstractFileAtPath(app, newPath)));
        this.filesIndex.delete(newPath);
      }
    }
    this.spacesMap.rename(oldPath, newFilePath);
    if (oldFileCache.isFolder) {
      await this.spaceRenamed(oldPath, spaceFromFolder(this.plugin, newPath));
    }
    const allContextsWithFile = ((_a2 = oldFileCache.spaces) != null ? _a2 : []).map((f4) => {
      var _a3;
      return (_a3 = this.spacesIndex.get(f4)) == null ? void 0 : _a3.space;
    }).filter((f4) => f4);
    if (oldParentPath != newParentPath) {
      const newFolderPath = getFolderPathFromString(newFilePath);
      const newFolderContext = this.spacesIndex.get(newFolderPath);
      const newTags = uniq([...oldFileCache.fileTags, ...(_b2 = newFolderContext == null ? void 0 : newFolderContext.contexts) != null ? _b2 : []]).map((f4) => tagSpacePathFromTag(f4));
      const sameContexts = allContextsWithFile.filter((f4) => newTags.includes(f4.path));
      if (sameContexts.length > 0)
        this.addToContextStoreQueue(() => renameFileInContexts(this.plugin, oldPath, newFilePath, sameContexts).then((f4) => sameContexts.forEach((c4) => this.reloadSpace(c4))));
      const newContexts = newTags.filter((f4) => !sameContexts.some((g4) => g4.path == f4)).map((f4) => {
        var _a3;
        return (_a3 = this.spacesIndex.get(f4)) == null ? void 0 : _a3.space;
      });
      if (newContexts.length > 0)
        this.addToContextStoreQueue(() => addFileInContexts(this.plugin, newFilePath, newContexts).then((f4) => newContexts.forEach((c4) => this.reloadSpace(c4))));
      const removedContexts = allContextsWithFile.filter((f4) => !sameContexts.includes(f4));
      if (removedContexts.length > 0)
        this.addToContextStoreQueue(() => removeFileInContexts(this.plugin, oldPath, removedContexts).then((f4) => removedContexts.forEach((c4) => this.reloadSpace(c4))));
    } else {
      this.addToContextStoreQueue(() => renameFileInContexts(this.plugin, oldPath, newFilePath, allContextsWithFile).then((f4) => {
        allContextsWithFile.forEach((c4) => this.reloadContext(c4));
      }));
    }
    const allContextsWithLink = [];
    for (const [contextPath, contextCache] of this.contextsIndex) {
      if (contextCache.outlinks.includes(oldPath)) {
        allContextsWithLink.push(this.spacesIndex.get(contextCache.path).space);
      }
    }
    this.spacesMap.get(newFilePath).forEach((f4) => this.reloadSpaceByPath(f4));
    this.reloadFile(getAbstractFileAtPath(app, newFilePath)).then((f4) => this.broadcast("space"));
    this.addToContextStoreQueue(() => renameLinkInContexts(this.plugin, oldPath, newFilePath, allContextsWithLink).then((f4) => allContextsWithFile.forEach((c4) => this.reloadSpace(c4))));
  }
  async createFile(path) {
    const file = getAbstractFileAtPath(app, path);
    if (file instanceof import_obsidian69.TFolder) {
      await this.reloadSpace(spaceFromFolder(this.plugin, path));
    }
    await this.reloadFile(file);
    this.broadcast("space");
  }
  async updateValue(contextPath, row, field, value) {
    const context = this.spacesIndex.get(contextPath).space;
    this.addToContextStoreQueue(() => updateContextValue(this.plugin, context, row, field, value).then((f4) => this.reloadContext(context)));
  }
  deleteFile(path) {
    var _a2;
    const fileCache = this.filesIndex.get(path);
    if (!fileCache) {
      if (path.startsWith(this.plugin.settings.spacesFolder)) {
        for (const [contextPath, spaceCache] of this.spacesIndex) {
          if (((_a2 = spaceCache.space) == null ? void 0 : _a2.folderPath) == path) {
            this.deleteSpace(spaceCache.path);
            break;
          }
        }
      }
      return;
    }
    if (fileCache.isFolder) {
      this.deleteSpace(fileCache.path);
    }
    this.filesIndex.delete(path);
    this.spacesMap.delete(path);
    this.linksMap.delete(path);
    this.linksMap.deleteInverse(path);
    const allContextsWithFile = fileCache.spaces.map((f4) => this.spacesIndex.get(f4).space).filter((f4) => f4);
    this.addToContextStoreQueue(() => removeFileInContexts(this.plugin, path, allContextsWithFile).then((f4) => allContextsWithFile.forEach((c4) => this.reloadContext(c4))));
    const allContextsWithLink = [];
    for (const [contextPath, contextCache] of this.contextsIndex) {
      if (contextCache.outlinks.includes(path)) {
        allContextsWithLink.push(this.spacesIndex.get(contextCache.path).space);
      }
    }
    this.addToContextStoreQueue(() => removeLinkInContexts(this.plugin, path, allContextsWithLink).then((f4) => allContextsWithFile.forEach((c4) => this.reloadContext(c4))));
    this.broadcast("space");
  }
  async renameSpace(oldSpace, newSpace) {
    await renameSpaceFolder(this.plugin, oldSpace, newSpace);
    const oldPath = spacePathFromName(oldSpace);
    const newPath = spacePathFromName(newSpace);
    const newSpaceInfo = spaceFromCustomSpace(this.plugin, newSpace);
    await this.spaceRenamed(oldPath, newSpaceInfo);
    this.broadcast("space", "rename", oldPath);
  }
  async spaceRenamed(oldPath, newSpaceInfo) {
    if (this.spacesIndex.has(oldPath)) {
      this.spacesIndex.delete(oldPath);
      this.contextsIndex.delete(oldPath);
      this.framesIndex.delete(oldPath);
      await this.reloadSpace(newSpaceInfo);
      await this.reloadContext(newSpaceInfo);
      await this.reloadFrames(newSpaceInfo);
    }
    this.spacesMap.renameInverse(oldPath, newSpaceInfo.path);
    app.workspace.iterateLeaves((leaf) => {
      if (leaf.view.getViewType() == SPACE_VIEW_TYPE && leaf.view.getState().path == oldPath) {
        leaf.setViewState({
          type: SPACE_VIEW_TYPE,
          state: { path: newSpaceInfo.path }
        });
      }
    }, app.workspace["rootSplit"]);
  }
  deleteSpace(space) {
    if (this.spacesIndex.has(space)) {
      this.spacesIndex.delete(space);
      this.contextsIndex.delete(space);
      this.framesIndex.delete(space);
    }
    this.spacesMap.deleteInverse(space);
    this.persister.remove(space, "space");
    this.plugin.settings.cachedSpaces = this.allSpaces().map((f4) => f4.name);
    this.plugin.saveSettings();
    spaceFolderDelete(space);
    this.broadcast("space");
  }
  async reloadFrames(space) {
    if (!space)
      return false;
    return this.indexer.reload({ type: "frames", path: space.path }).then((r3) => {
      const { changed, cache } = r3;
      if (!changed) {
        return false;
      }
      this.framesIndex.set(space.path, cache);
      this.broadcast("frames", "change", space.path);
      return true;
    });
  }
  async reloadContext(space) {
    if (!space)
      return false;
    return this.indexer.reload({ type: "context", path: space.path }).then((r3) => {
      const { changed, cache } = r3;
      if (!changed) {
        return false;
      }
      this.contextsIndex.set(space.path, cache);
      this.broadcast("context", "change", space.path);
      return true;
    });
  }
  broadcast(type, action, name, newName) {
    dispatchSpaceDatabaseFileChanged(type, action, name, newName);
  }
  async reloadVault() {
    this.broadcast("vault");
  }
  allSpaces() {
    return [...this.spacesIndex.values()];
  }
  allFrames() {
    return [...this.framesIndex.values()].filter((f4) => f4).flatMap((f4) => f4.schemas.filter((f5) => f5.type == "frame").map((s5) => ({ schema: s5, path: f4.path })));
  }
  allListItems() {
    return [...this.framesIndex.values()].filter((f4) => f4).flatMap((f4) => f4.schemas.filter((f5) => f5.type == "listitem").map((s5) => ({ schema: s5, path: f4.path })));
  }
  updateSpaceMetadata(spacePath, metadata) {
    var _a2, _b2;
    const space = this.spacesIndex.get(spacePath);
    if (!space) {
      this.reloadSpaceByPath(spacePath);
      return;
    }
    const spaceSort = (_a2 = safelyParseJSON(metadata == null ? void 0 : metadata.sort)) != null ? _a2 : [space.type == "smart" || space.type == "tag" ? "path" : "rank", true];
    const sortable = spaceSort[0] == "rank" || spaceSort[0] == "";
    this.spacesIndex.set(spacePath, {
      ...space,
      metadata,
      contexts: (_b2 = metadata == null ? void 0 : metadata.contexts) != null ? _b2 : [],
      sortable
    });
    this.broadcast("space", "change", spacePath);
  }
  async reloadSpace(space, initialized = true) {
    var _a2, _b2, _c2, _d2, _e2;
    if (!space)
      return;
    const defFile = getAbstractFileAtPath(app, space.defPath);
    const metaCache = defFile ? this.metadataCache.getFileCache(defFile) : null;
    const spaceDef = (metaCache == null ? void 0 : metaCache.frontmatter) ? metaCache.frontmatter : defaultDefForSpace(space, this.plugin);
    const metadata = parseSpaceMetadata(spaceDef, space, this.plugin);
    const frontmatter = metaCache == null ? void 0 : metaCache.frontmatter;
    const vaultItem = vaultItemForPath(this.plugin, space.path);
    const type = space.uri.type == "tag" ? "tag" : space.uri.type == "folder" ? "folder" : space.uri.type == "vault" ? "vault" : (_a2 = metadata.def) == null ? void 0 : _a2.type;
    const spaceSort = (_b2 = safelyParseJSON(metadata == null ? void 0 : metadata.sort)) != null ? _b2 : [type == "smart" || type == "tag" ? "path" : "rank", true];
    const sortable = spaceSort[0] == "rank" || spaceSort[0] == "";
    const rank = type == "folder" ? vaultItem == null ? void 0 : vaultItem.rank : metadata == null ? void 0 : metadata.rank;
    const contexts = (_c2 = metadata.contexts) != null ? _c2 : [];
    if (type == "tag" && this.plugin.settings.autoAddContextsToSubtags) {
      const parentTags = getAllParentTags(space.name);
      contexts.push(...parentTags);
    }
    const cache = {
      name: space.name,
      space,
      alias: (_e2 = (_d2 = ensureArray(metadata.aliases)) == null ? void 0 : _d2[0]) != null ? _e2 : space.name,
      cacheType: "space",
      path: space.path,
      frontmatter,
      type,
      contexts: contexts.map((f4) => tagToTagPath(f4)),
      metadata,
      sortable,
      rank
    };
    this.spacesIndex.set(space.path, cache);
    this.persister.store(space.path, JSON.stringify(cache), "space");
    cache.metadata.links.forEach((f4) => {
      if (pathIsSpace(f4)) {
        this.spacesMap.set(f4, /* @__PURE__ */ new Set([...this.spacesMap.get(f4), space.path]));
      }
    });
    if (initialized) {
      this.plugin.settings.cachedSpaces = this.allSpaces().map((f4) => f4.path);
      this.plugin.saveSettings();
      this.broadcast("space", "change", space.path);
    }
  }
  async reloadFile(file, force) {
    if (!file)
      return false;
    return this.indexer.reload({ type: "file", path: file.path }).then((r3) => {
      const { changed, cache } = r3;
      if (!changed && !force) {
        return false;
      }
      this.filesIndex.set(file.path, cache);
      this.tagsMap.set(file.path, new Set(cache.tags));
      this.linksMap.set(file.path, new Set(cache.outlinks));
      if (!import_lodash14.default.isEqual(cache.spaces, Array.from(this.spacesMap.get(file.path)))) {
        this.spacesMap.set(file.path, new Set(cache.spaces));
        cache.tags.map((f4) => this.spacesIndex.has(tagSpacePathFromTag(f4)) ? null : spaceFromTag(this.plugin, f4)).filter((f4) => f4).forEach((f4) => this.reloadSpace(f4).then((f5) => this.broadcast("file", "change", file.path)));
        this.broadcast("space");
      }
      if (force) {
        const allContextsWithFile = cache.spaces.map((f4) => {
          var _a2;
          return (_a2 = this.spacesIndex.get(f4)) == null ? void 0 : _a2.space;
        }).filter((f4) => f4);
        this.addToContextStoreQueue(() => onMetadataChange(this.plugin, file, allContextsWithFile));
      }
      if (cache.extension == "svg" && this.plugin.settings.indexSVG) {
        app.vault.read(file).then((f4) => {
          this.iconsCache.set(file.path, f4);
          this.persister.store(file.path, f4, "icon");
        });
      }
      this.fileReloaded(file.path);
      this.broadcast("file", "change", file.path);
      return true;
    });
  }
  async fileReloaded(path) {
    let metadata;
    if (this.filesIndex.has(path)) {
      metadata = this.filesIndex.get(path);
    }
    if (!metadata) {
      return false;
    }
    const missingContexts = [];
    const removedContexts = [];
    this.spacesIndex.forEach((spaceCache) => {
      var _a2, _b2;
      if (ensureArray(metadata.spaces).includes(spaceCache.path) && !ensureArray((_a2 = spaceCache.metadata) == null ? void 0 : _a2.links).includes(path)) {
        if (spaceCache.space)
          missingContexts.push(spaceCache.space);
      } else if (ensureArray((_b2 = spaceCache.metadata) == null ? void 0 : _b2.links).includes(path) && !ensureArray(metadata.spaces).includes(spaceCache.path)) {
        if (spaceCache.space)
          removedContexts.push(spaceCache.space);
      }
    });
    if (missingContexts.length > 0) {
      this.addToContextStoreQueue(() => addFileInContexts(this.plugin, path, missingContexts).then((f4) => missingContexts.forEach((c4) => this.reloadContext(c4))));
    }
    if (removedContexts.length > 0) {
      this.addToContextStoreQueue(() => removeFileInContexts(this.plugin, path, removedContexts).then((f4) => removedContexts.forEach((c4) => this.reloadContext(c4))));
    }
    this.persister.store(path, serializeFileCache(metadata), "file");
  }
};

// src/components/FileContexts/InlineFileContext/FileHeaderContextView.tsx
init_compat_module();
var FileHeaderContextView = (props2) => {
  var _a2;
  const { name, fm } = props2;
  const file = getAbstractFileAtPath(app, name);
  const [collapsed, setCollapsed] = h2(false);
  const tags = (_a2 = fm.tags) != null ? _a2 : [];
  const [values, setValues] = h2({});
  const [columns, setColumns] = h2([]);
  p2(() => {
    const newCols = [];
    const newValues = {};
    const fmKeys = uniqCaseInsensitive(frontMatterKeys(fm));
    const cols = fmKeys.map((f4) => ({
      table: "",
      name: f4,
      schemaId: "",
      type: yamlTypeToMDBType(detectYAMLType(fm[f4], f4))
    }));
    if (fm) {
      newCols.push(...cols);
      Object.keys(fm).forEach((c4) => {
        newValues[c4] = parseFrontMatter(c4, fm[c4]);
      });
    }
    setValues(newValues);
    setColumns(newCols);
  }, []);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fm && /* @__PURE__ */ Cn.createElement(NoteBannerView, {
    plugin: props2.plugin,
    link: fm[props2.plugin.settings.fmKeyBanner]
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-spacer`,
    style: {
      "--header-height": fm && fm[props2.plugin.settings.fmKeyBanner] ? ((platformIsMobile() ? 1 : 0) * 26 + 138 + (!fm.icon || props2.plugin.settings.inlineContextNameLayout == "horizontal" ? 1 : 0) * 50).toString() + "px" : 0
    },
    onContextMenu: (e4) => e4.preventDefault()
  }), /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-context-file ${props2.plugin.settings.inlineContextNameLayout == "horizontal" ? "mk-file-context-file-horizontal" : ""}`
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, fm.icon ? /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-file-icon`
  }, /* @__PURE__ */ Cn.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: stickerFromString(fm.icon, props2.plugin)
    }
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-inline-title inline-title"
  }, fileNameToString(name)), /* @__PURE__ */ Cn.createElement(NoteSpacesBar, {
    path: file.path,
    plugin: props2.plugin
  })))), !collapsed ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component"
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-section"
  }, /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, columns.map((f4, i4) => /* @__PURE__ */ Cn.createElement("div", {
    key: i4,
    className: "mk-file-context-row"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-field"
  }, f4.name), /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-value"
  }, /* @__PURE__ */ Cn.createElement(DataTypeView, {
    plugin: props2.plugin,
    initialValue: values[f4.name],
    file: null,
    column: { ...f4, table: "" },
    editable: false,
    updateValue: () => {
    },
    updateFieldValue: (fieldValue, value) => {
    },
    contextTable: {}
  })))))))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};

// src/components/FileContexts/InlineFileContext/ReadingModeHeader.tsx
init_compat_module();
var ReadingModeHeader = (props2) => {
  const [path, setPath] = h2(props2.filePath);
  const ref2 = _2(null);
  p2(() => {
    setPath(props2.filePath);
  }, [props2.filePath]);
  const changeActiveFile = (evt) => {
    if (ref2.current.closest(".mod-active") && evt.detail.path.type == "file")
      setPath(evt.detail.path.path);
  };
  p2(() => {
    window.addEventListener(eventTypes.activePathChange, changeActiveFile);
    return () => {
      window.removeEventListener(eventTypes.activePathChange, changeActiveFile);
    };
  }, [path]);
  return /* @__PURE__ */ Cn.createElement("div", {
    ref: ref2
  }, /* @__PURE__ */ Cn.createElement(InlineFileContextView, {
    plugin: props2.plugin,
    file: getAbstractFileAtPath(app, path),
    showHeader: true,
    showBanner: true,
    showFolder: true,
    editable: false,
    cacheType: "file"
  }));
};

// src/utils/contexts/markdownPost.tsx
var import_obsidian70 = require("obsidian");
init_compat_module();
var replaceInlineContext = (plugin, el, ctx) => {
  replaceMarkdownForReadingMode(el, (dom) => {
    let element = dom.querySelector(".mod-header");
    if (element) {
      if (!element.hasClass("mk-inline-context") || element.getAttribute("data-path") != ctx.sourcePath) {
        element.innerHTML = "";
        element.setAttribute("data-path", ctx.sourcePath);
        element.toggleClass("mk-inline-context", true);
        const reactEl = createRoot(element);
        ctx.addChild(new import_obsidian70.MarkdownRenderChild(element));
        if (ctx.sourcePath.match(urlRegex)) {
          reactEl.render(
            /* @__PURE__ */ Cn.createElement(FileHeaderContextView, {
              plugin,
              fm: ctx.frontmatter,
              name: filePathToString(ctx.sourcePath)
            })
          );
        } else {
          reactEl.render(
            /* @__PURE__ */ Cn.createElement(ReadingModeHeader, {
              plugin,
              filePath: ctx.sourcePath
            })
          );
        }
      }
    }
  });
};

// src/utils/db/sqljs.js
var import_sql = __toESM(require_sql_wasm());

// wasm-binary:/Users/cen/Documents/GitHub/make-md/src/utils/db/sqljs/sql-wasm.wasm
var sql_wasm_exports = {};
__export(sql_wasm_exports, {
  default: () => sql_wasm_default
});
var sql_wasm_default = __toBinary("");

// src/utils/db/sqljs.js
var loadSQL = async () => {
  const sql = await (0, import_sql.default)({
    wasmBinary: sql_wasm_default
  });
  return sql;
};

// node_modules/monkey-around/mjs/index.js
function around(obj, factories) {
  const removers = Object.keys(factories).map((key2) => around1(obj, key2, factories[key2]));
  return removers.length === 1 ? removers[0] : function() {
    removers.forEach((r3) => r3());
  };
}
function around1(obj, method, createWrapper) {
  const original = obj[method], hadOwn = obj.hasOwnProperty(method);
  let current2 = createWrapper(original);
  if (original)
    Object.setPrototypeOf(current2, original);
  Object.setPrototypeOf(wrapper, current2);
  obj[method] = wrapper;
  return remove;
  function wrapper(...args) {
    if (current2 === original && obj[method] === wrapper)
      remove();
    return current2.apply(this, args);
  }
  function remove() {
    if (obj[method] === wrapper) {
      if (hadOwn)
        obj[method] = original;
      else
        delete obj[method];
    }
    if (current2 === original)
      return;
    current2 = original;
    Object.setPrototypeOf(wrapper, original || Function);
  }
}

// src/utils/spaces/patches.ts
var import_obsidian71 = require("obsidian");
var patchFileExplorer = (plugin) => {
  plugin.register(
    around(import_obsidian71.Workspace.prototype, {
      getLeavesOfType(old) {
        return function(type) {
          if (type == "file-explorer") {
            return old.call(this, FILE_TREE_VIEW_TYPE);
          }
          return old.call(this, type);
        };
      }
    })
  );
};
var patchWorkspace = (plugin) => {
  let layoutChanging = false;
  const uninstaller = around(import_obsidian71.Workspace.prototype, {
    changeLayout(old) {
      return async function(workspace) {
        layoutChanging = true;
        try {
          await old.call(this, workspace);
        } finally {
          layoutChanging = false;
        }
      };
    },
    iterateLeaves(old) {
      return function(arg1, arg2) {
        if (old.call(this, arg1, arg2))
          return true;
        const cb = typeof arg1 === "function" ? arg1 : arg2;
        const parent = typeof arg1 === "function" ? arg2 : arg1;
        if (!parent)
          return false;
        if (layoutChanging)
          return false;
        if (parent === app.workspace.rootSplit || import_obsidian71.WorkspaceContainer && parent instanceof import_obsidian71.WorkspaceContainer) {
          for (const popover of FlowEditor.popoversForWindow(
            parent.win
          )) {
            if (old.call(this, cb, popover.rootSplit))
              return true;
          }
        }
        return false;
      };
    },
    setActiveLeaf(old) {
      return function setActiveLeaf(leaf, params) {
        if (leaf.view.getViewType() == "markdown") {
          this.activeEditor = leaf.view;
          if (leaf.view.file) {
            if (!plugin.settings.spacesDisablePatch)
              this._["file-open"].forEach((cb) => {
                var _a2;
                if ((cb == null ? void 0 : cb.fn) && ((_a2 = cb.ctx) == null ? void 0 : _a2.leaf)) {
                  const bound = cb.fn.bind(cb.ctx);
                  bound(leaf.view.file);
                }
              });
          }
        }
        return old.call(this, leaf, params);
      };
    },
    getActiveViewOfType(old) {
      return function getActiveViewOfType(type) {
        var _a2;
        if (((_a2 = type.prototype) == null ? void 0 : _a2.getViewType) && type.prototype.getViewType() == "markdown") {
          if (this.activeEditor)
            return this.activeEditor;
        }
        return old.call(this, type);
      };
    },
    getDropLocation(old) {
      return function getDropLocation(event) {
        for (const popover of FlowEditor.activePopovers()) {
          const dropLoc = this.recursiveGetTarget(event, popover.rootSplit);
          if (dropLoc) {
            return dropLoc;
          }
        }
        return old.call(this, event);
      };
    },
    onDragLeaf(old) {
      return function(event, leaf) {
        const hoverPopover = FlowEditor.forLeaf(leaf);
        return old.call(this, event, leaf);
      };
    }
  });
  plugin.register(uninstaller);
};

// src/components/FileContextView/Backlinks.tsx
init_compat_module();
var BacklinkItem = (props2) => {
  const file = F2(
    () => getAbstractFileAtPath(app, props2.path),
    [props2.path]
  );
  const [block, setBlock] = h2([null, null]);
  const refreshBlock = (path) => {
    var _a2, _b2;
    const fCache = app.metadataCache.getCache(path);
    const link = [...(_a2 = fCache.links) != null ? _a2 : [], ...(_b2 = fCache.embeds) != null ? _b2 : []].find(
      (f4) => props2.source.includes(f4.displayText)
    );
    if (link) {
      const block2 = fCache.sections.find(
        (f4) => f4.position.start.offset <= link.position.start.offset && f4.position.end.offset >= link.position.end.offset
      );
      setBlock([
        Math.max(1, block2.position.start.line),
        Math.max(block2.position.start.line + 1, block2.position.end.line + 1)
      ]);
    } else {
      setBlock([null, null]);
    }
  };
  p2(() => {
    refreshBlock(props2.path);
  }, []);
  p2(() => {
    refreshBlock(props2.path);
  }, [props2.path]);
  const [collapsed, setCollapsed] = h2(false);
  return /* @__PURE__ */ Cn.createElement(Cn.Fragment, null, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-title"
  }, /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    },
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse"]
    }
  }), /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      openAFile(file, props2.plugin, false);
      e4.stopPropagation();
    }
  }, fileNameToString(file.name))), !collapsed ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-backlink"
  }, /* @__PURE__ */ Cn.createElement(FlowView, {
    plugin: props2.plugin,
    load: true,
    leaf: props2.leaf,
    path: props2.path,
    from: block[0],
    to: block[1]
  })) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null));
};
var Backlinks2 = (props2) => {
  const [collapsed, setCollapsed] = h2(
    !props2.plugin.settings.inlineBacklinksExpanded
  );
  const [backlinks, setBacklinks] = h2([]);
  p2(() => {
    if (!props2.file)
      return;
    const bls = uniq([
      ...props2.plugin.index.linksMap.getInverse(props2.file.path),
      ...Object.keys(app.metadataCache.resolvedLinks).filter(
        (f4) => props2.file.path in app.metadataCache.resolvedLinks[f4]
      )
    ]).filter((f4) => abstractFileAtPathExists(app, f4));
    setBacklinks(bls);
  }, [props2.file]);
  p2(() => {
    props2.plugin.settings.inlineBacklinksExpanded = !collapsed;
    props2.plugin.saveSettings();
  }, [collapsed]);
  const toggleBacklinks = () => {
    setCollapsed(!collapsed);
  };
  p2(() => {
    window.addEventListener(eventTypes.toggleBacklinks, toggleBacklinks);
    return () => {
      window.removeEventListener(eventTypes.toggleBacklinks, toggleBacklinks);
    };
  }, [collapsed]);
  return backlinks.length > 0 && props2.file ? /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-component mk-note-footer"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: "mk-file-context-section"
  }, /* @__PURE__ */ Cn.createElement("div", {
    onClick: (e4) => {
      setCollapsed(!collapsed);
      e4.stopPropagation();
    },
    className: "mk-file-context-title"
  }, /* @__PURE__ */ Cn.createElement("div", {
    className: `mk-icon-xsmall`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-backlink"]
    }
  }), i18n_default.labels.backlinks, /* @__PURE__ */ Cn.createElement("button", {
    className: `mk-collapse mk-inline-button mk-icon-xsmall ${collapsed ? "mk-collapsed" : ""}`,
    dangerouslySetInnerHTML: {
      __html: uiIconSet["mk-ui-collapse-sm"]
    }
  })), /* @__PURE__ */ Cn.createElement("div", null, !collapsed && backlinks.map((f4, i4) => {
    var _a2;
    return /* @__PURE__ */ Cn.createElement(BacklinkItem, {
      path: f4,
      key: i4,
      leaf: props2.leaf,
      plugin: props2.plugin,
      source: (_a2 = props2.file) == null ? void 0 : _a2.path
    });
  })))) : /* @__PURE__ */ Cn.createElement(Cn.Fragment, null);
};

// src/utils/flow/flow.tsx
init_compat_module();
var modifyFlowDom = (plugin) => {
  if (!plugin.settings.makerMode || !plugin.settings.inlineContext || !app.workspace.activeEditor)
    return;
  const contentEl = app.workspace.activeEditor.contentEl;
  const editorView = app.workspace.activeEditor.editor;
  const sizerEl = contentEl.querySelector(".cm-sizer");
  const file = app.workspace.getActiveFile();
  if (sizerEl && file) {
    let inlineContext = contentEl.querySelector(".mk-inline-context");
    if (!inlineContext) {
      inlineContext = document.createElement("div");
      inlineContext.classList.add("mk-inline-context");
      inlineContext.classList.add("embedded-backlinks");
      sizerEl.prepend(inlineContext);
    }
    const inlineContextReactEl = createRoot(inlineContext);
    inlineContextReactEl.render(
      /* @__PURE__ */ Cn.createElement(InlineFileContextView, {
        plugin,
        file,
        cacheType: "file",
        editorView: editorView.cm,
        showHeader: true,
        showBanner: true,
        showFolder: true,
        editable: true
      })
    );
    if (plugin.settings.inlineBacklinks) {
      let backlinksEl = contentEl.querySelector(".mk-backlinks");
      if (!backlinksEl) {
        backlinksEl = document.createElement("div");
        backlinksEl.classList.add("mk-backlinks");
        backlinksEl.classList.add("embedded-backlinks");
        sizerEl.appendChild(backlinksEl);
      }
      const backlinksReactEl = createRoot(backlinksEl);
      backlinksReactEl.render(
        /* @__PURE__ */ Cn.createElement(Backlinks2, {
          plugin,
          file
        })
      );
    }
  }
};

// src/main.ts
var MakeMDPlugin = class extends import_obsidian72.Plugin {
  constructor() {
    super(...arguments);
    this.dataViewAPI = () => (0, import_obsidian_dataview.getAPI)();
    this.spacesDBLastModify = 0;
    this.debouncedRefresh = () => null;
    this.metadataChange = (file) => {
      this.index.metadataChange(file);
    };
    this.onCreate = async (file) => {
      if (!file)
        return;
      this.index.addToVaultQueue(() => onFileCreated(this, file.path, file instanceof import_obsidian72.TFolder));
    };
    this.onDelete = async (file) => {
      if (file instanceof import_obsidian72.TFile && file.extension != "mdb") {
        this.index.addToVaultQueue(() => onFileDeleted(this, file.path));
      } else if (file instanceof import_obsidian72.TFolder) {
        this.index.addToVaultQueue(() => onFolderDeleted(this, file.path));
      }
      this.activeFileChange();
    };
    this.onRename = async (file, oldPath) => {
      if (file instanceof import_obsidian72.TFile && file.extension != "mdb") {
        this.index.addToVaultQueue(() => onFileChanged(this, oldPath, file.path));
      } else if (file instanceof import_obsidian72.TFolder) {
        this.index.addToVaultQueue(() => onFolderChanged(this, oldPath, file.path));
      }
      this.activeFileChange();
    };
    this.openFileTreeLeaf = async (showAfterAttach) => {
      const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
      if (leafs.length == 0) {
        const leaf = this.app.workspace.getLeftLeaf(false);
        await leaf.setViewState({ type: FILE_TREE_VIEW_TYPE });
        if (showAfterAttach && !app.workspace.leftSplit.collapsed)
          this.app.workspace.revealLeaf(leaf);
      } else {
        if (!app.workspace.leftSplit.collapsed && showAfterAttach)
          leafs.forEach((leaf) => this.app.workspace.revealLeaf(leaf));
      }
      if (platformIsMobile()) {
        app.workspace.leftSplit.collapse();
      }
      replaceMobileMainMenu(this);
    };
    this.detachFileTreeLeafs = () => {
      const leafs = this.app.workspace.getLeavesOfType(FILE_TREE_VIEW_TYPE);
      for (const leaf of leafs) {
        if (leaf.view instanceof FileTreeView)
          leaf.view.destroy();
        leaf.detach();
      }
    };
    this.detachFileContextLeafs = () => {
      return;
    };
    this.openFileContextLeaf = async (reveal) => {
      return;
      const leafs = this.app.workspace.getLeavesOfType(FILE_CONTEXT_VIEW_TYPE);
      if (leafs.length == 0) {
        const leaf = this.app.workspace.getRightLeaf(false);
        await leaf.setViewState({ type: FILE_CONTEXT_VIEW_TYPE });
        this.app.workspace.revealLeaf(leaf);
      } else {
        leafs.forEach((leaf) => this.app.workspace.revealLeaf(leaf));
      }
      if (platformIsMobile() && !reveal) {
        app.workspace.rightSplit.collapse();
      }
    };
    this.refreshFileContextLeafs = () => {
      return;
      this.detachFileContextLeafs();
      this.openFileContextLeaf();
    };
  }
  async sqlJS() {
    const sqljs = await loadSQL();
    return sqljs;
  }
  openFlow() {
    const cm = getActiveCM();
    if (cm) {
      const value = cm.state.field(flowEditorInfo, false);
      const currPosition = cm.state.selection.main;
      for (const flowEditor of value) {
        if (flowEditor.from < currPosition.to && flowEditor.to > currPosition.from) {
          cm.dispatch({
            annotations: toggleFlowEditor.of([flowEditor.id, 2])
          });
        }
      }
    }
  }
  closeFlow() {
    const cm = getActiveCM();
    if (cm) {
      const value = cm.state.field(flowEditorInfo, false);
      const currPosition = cm.state.selection.main;
      for (const flowEditor of value) {
        if (flowEditor.from < currPosition.to && flowEditor.to > currPosition.from) {
          cm.dispatch({
            annotations: toggleFlowEditor.of([flowEditor.id, 0])
          });
        }
      }
    }
  }
  reloadExtensions(firstLoad) {
    this.extensions = cmExtensions(this, platformIsMobile());
    if (firstLoad) {
      this.registerEditorExtension(this.extensions);
    } else {
      app.workspace.updateOptions();
    }
  }
  quickOpen() {
    const quickOpenModal = new Blink(this.app, this);
    quickOpenModal.open();
  }
  toggleBold() {
    const cm = getActiveCM();
    if (cm) {
      cm.dispatch({
        annotations: toggleMark.of("strong")
      });
    }
  }
  toggleEm() {
    const cm = getActiveCM();
    if (cm) {
      cm.dispatch({
        annotations: toggleMark.of("em")
      });
    }
  }
  loadSuperState() {
    this.app.workspace.onLayoutReady(async () => {
      if (this.settings.spacesEnabled) {
        await this.index.initializeIndex();
        this.openFileTreeLeaf(this.settings.openSpacesOnLaunch);
      } else {
        await this.index.loadFromCache();
        this.index.initialize();
      }
      this.registerEvent(this.app.vault.on("create", this.onCreate));
      this.registerEvent(this.app.vault.on("delete", this.onDelete));
      this.registerEvent(this.app.vault.on("rename", this.onRename));
      this.app.metadataCache.on("changed", this.metadataChange);
      if (this.dataViewAPI()) {
        this.registerEvent(
          this.app.metadataCache.on("dataview:index-ready", () => {
            this.dataViewReady = true;
          })
        );
        this.registerEvent(
          this.app.metadataCache.on(
            "dataview:metadata-change",
            (type, file, oldPath) => {
              if (type === "update" && this.app.metadataCache.fileCache[file.path].mtime >= this.loadTime && this.dataViewAPI().index.revision !== this.dataViewLastIndex && this.dataViewReady) {
                if (file instanceof import_obsidian72.TFile) {
                  this.metadataChange(file);
                }
                this.dataViewLastIndex = this.dataViewAPI().index.revision;
              }
            }
          )
        );
      }
    });
  }
  async loadSpaces() {
    if (this.settings.spacesEnabled) {
      document.body.classList.toggle("mk-hide-tabs", !this.settings.sidebarTabs);
      document.body.classList.toggle("mk-hide-ribbon", !this.settings.showRibbon);
      document.body.classList.toggle(
        "mk-folder-lines",
        this.settings.folderIndentationLines
      );
      document.body.classList.toggle(
        "mk-spaces-enabled",
        this.settings.spacesEnabled
      );
      if (!this.settings.spacesDisablePatch)
        patchFileExplorer(this);
      this.registerView(FILE_TREE_VIEW_TYPE, (leaf) => {
        return new FileTreeView(leaf, this);
      });
    }
    this.registerEvent(
      app.workspace.on("active-leaf-change", () => this.activeFileChange())
    );
  }
  convertFolderNote() {
    const activeLeaf = app.workspace.activeLeaf;
    if ((activeLeaf == null ? void 0 : activeLeaf.view.getViewType()) == "markdown") {
      const view = app.workspace.getActiveViewOfType(import_obsidian72.MarkdownView);
      if (view instanceof import_obsidian72.MarkdownView && view.file instanceof import_obsidian72.TFile) {
        noteToFolderNote(this, view.file, true);
      }
    } else {
      new import_obsidian72.Notice("The view is not a note");
    }
  }
  getActiveFile() {
    var _a2, _b2, _c2;
    let filePath = null;
    let leaf = (_a2 = app.workspace.getActiveViewOfType(import_obsidian72.MarkdownView)) == null ? void 0 : _a2.leaf;
    if (!leaf) {
      leaf = (_b2 = app.workspace.getActiveViewOfType(SpaceView)) == null ? void 0 : _b2.leaf;
    }
    if (!leaf) {
      leaf = (_c2 = app.workspace.getActiveViewOfType(FrameEditorView)) == null ? void 0 : _c2.leaf;
    }
    const activeView = leaf == null ? void 0 : leaf.view;
    if (!activeView || leaf.isFlowBlock)
      return null;
    if (activeView.getViewType() == SPACE_VIEW_TYPE || activeView.getViewType() == FRAME_EDITOR_TYPE) {
      return activeView.getState().path;
    } else if (activeView.getViewType() == "markdown") {
      filePath = activeView.file.path;
      modifyFlowDom(this);
    }
    return filePath;
  }
  activeFileChange() {
    var _a2;
    const path = this.getActiveFile();
    if (path) {
      const evt = new CustomEvent(eventTypes.activePathChange, {
        detail: { path: uriByString(path) }
      });
      window.dispatchEvent(evt);
      const leaf = (_a2 = app.workspace.getActiveViewOfType(FrameEditorView)) == null ? void 0 : _a2.leaf;
      if (leaf == null ? void 0 : leaf.view) {
        const view = leaf.view;
        const evt2 = new CustomEvent(eventTypes.frameSelected, {
          detail: { path: uriByString(`${view.getState().path}#*${view.getState().schema}`) }
        });
        window.dispatchEvent(evt2);
      }
    }
  }
  loadCommands() {
    if (this.settings.spacesEnabled) {
      this.addCommand({
        id: "mk-collapse-folders",
        name: i18n_default.commandPalette.collapseAllFolders,
        callback: () => {
          this.settings.expandedSpaces = [];
          this.saveSettings();
        }
      });
      this.addCommand({
        id: "mk-reveal-file",
        name: i18n_default.commandPalette.revealFile,
        callback: () => {
          const file = getAbstractFileAtPath(app, this.getActiveFile());
          const evt = new CustomEvent(eventTypes.revealFile, {
            detail: { file }
          });
          window.dispatchEvent(evt);
        }
      });
      this.addCommand({
        id: "mk-spaces-add-file",
        name: i18n_default.commandPalette.addFileSpace,
        callback: () => {
          const vaultChangeModal = new AddToSpaceModal(this, [
            this.getActiveFile()
          ]);
          vaultChangeModal.open();
        }
      });
      this.addCommand({
        id: "mk-spaces-remove-file",
        name: i18n_default.commandPalette.removeFileSpace,
        callback: () => {
          const vaultChangeModal = new RemoveFromSpaceModal(
            this,
            this.getActiveFile()
          );
          vaultChangeModal.open();
        }
      });
      this.addCommand({
        id: "mk-spaces-reload",
        name: i18n_default.commandPalette.reloadSpaces,
        callback: () => this.index.loadSpacesDatabaseFromDisk()
      });
      this.addCommand({
        id: "mk-spaces",
        name: i18n_default.commandPalette.openSpaces,
        callback: () => this.openFileTreeLeaf(true)
      });
    }
    if (this.settings.enableFolderNote) {
      this.addCommand({
        id: "mk-convert-folder-note",
        name: i18n_default.commandPalette.convertFolderNote,
        callback: () => this.convertFolderNote()
      });
    }
    if (this.settings.contextEnabled) {
    }
    if (this.settings.inlineBacklinks) {
      this.addCommand({
        id: "mk-toggle-backlinks",
        name: i18n_default.commandPalette.toggleBacklinks,
        callback: () => {
          const evt = new CustomEvent(eventTypes.toggleBacklinks);
          window.dispatchEvent(evt);
        }
      });
    }
    if (this.settings.blinkEnabled) {
      this.addCommand({
        id: "mk-blink",
        name: i18n_default.commandPalette.blink,
        callback: () => this.quickOpen(),
        hotkeys: [
          {
            modifiers: ["Mod"],
            key: "o"
          }
        ]
      });
    }
    if (this.settings.editorFlow) {
      this.addCommand({
        id: "mk-open-flow",
        name: i18n_default.commandPalette.openFlow,
        callback: () => this.openFlow()
      });
      this.addCommand({
        id: "mk-close-flow",
        name: i18n_default.commandPalette.closeFlow,
        callback: () => this.closeFlow()
      });
    }
    this.addCommand({
      id: "mk-log-metadata",
      name: "log metadata",
      callback: () => {
        const path = this.getActiveFile();
        console.log(app.metadataCache.getFileCache(getAbstractFileAtPath(app, path)));
      }
    });
  }
  loadContext() {
    this.registerView(SPACE_VIEW_TYPE, (leaf) => {
      return new SpaceView(leaf, this, SPACE_VIEW_TYPE);
    });
    if (this.settings.contextEnabled) {
      this.registerView(FILE_VIEW_TYPE, (leaf) => {
        return new FileLinkView(leaf, this, FILE_VIEW_TYPE);
      });
      this.registerView(FRAME_EDITOR_TYPE, (leaf) => {
        return new FrameEditorView(leaf, this, FRAME_EDITOR_TYPE);
      });
      this.app.workspace.onLayoutReady(async () => {
        if (!getAbstractFileAtPath(
          this.app,
          getFolderPathFromString(this.settings.spacesFolder)
        )) {
          this.app.vault.createFolder(this.settings.spacesFolder);
        }
      });
      this.registerView(EMBED_CONTEXT_VIEW_TYPE, (leaf) => {
        return new EmbedContextView2(leaf, this);
      });
      this.registerView(MDB_FILE_VIEWER_TYPE, (leaf) => {
        return new MDBFileViewer(leaf, this);
      });
      this.registerExtensions(["mdb"], MDB_FILE_VIEWER_TYPE);
      this.app.workspace.onLayoutReady(async () => {
        if (this.settings.autoOpenFileContext) {
          await this.openFileContextLeaf();
        }
        setTimeout(() => this.activeFileChange(), 2e3);
      });
    }
  }
  loadFlowEditor() {
    patchWorkspace(this);
    document.body.classList.toggle("mk-flow-replace", this.settings.editorFlow);
    document.body.classList.toggle(
      "mk-flow-" + this.settings.editorFlowStyle,
      true
    );
    this.registerMarkdownPostProcessor((element, context) => {
      const removeAllFlowMarks = (el) => {
        const embeds = el.querySelectorAll(".internal-embed");
        for (let index = 0; index < embeds.length; index++) {
          const embed = embeds.item(index);
          if (embed.previousSibling && embed.previousSibling.textContent.slice(-1) == "!")
            embed.previousSibling.textContent = embed.previousSibling.textContent.slice(0, -1);
        }
      };
      removeAllFlowMarks(element);
      replaceAllTables(this, element, context);
      replaceAllEmbed(element, context, this);
    });
    window.addEventListener(
      eventTypes.spawnPortal,
      this.spawnPortal.bind(this)
    );
    window.addEventListener(
      eventTypes.loadPortal,
      this.loadPortal.bind(this)
    );
    window.addEventListener(
      eventTypes.focusPortal,
      this.focusPortal.bind(this)
    );
    window.addEventListener(
      eventTypes.openFilePortal,
      this.openFileFromPortal.bind(this)
    );
  }
  loadMakerMode() {
    if (this.settings.makerMode) {
      if (this.settings.inlineContext) {
        this.registerMarkdownPostProcessor((element, context) => {
          replaceInlineContext(this, element, context);
        });
        document.body.classList.toggle(
          "mk-inline-context-enabled",
          this.settings.inlineContext
        );
      }
      if (this.settings.editorFlow) {
        this.loadFlowEditor();
      }
      if (this.settings.flowMenuEnabled) {
        this.registerEditorSuggest(new MakeMenu(this.app, this));
      }
      if (this.settings.inlineStickerMenu) {
        this.registerEditorSuggest(new StickerMenu(this.app, this));
      }
      if (platformIsMobile() && this.settings.mobileMakeBar && this.settings.inlineStyler)
        loadStylerIntoContainer(app.mobileToolbar.containerEl, this);
    }
  }
  async onload() {
    console.time("Loading Make.md");
    this.loadTime = Date.now();
    (0, import_obsidian72.addIcon)("mk-logo", mkLogo);
    await this.loadSettings();
    this.index = this.addChild(
      Superstate.create(this.app, "0.9", () => {
        this.debouncedRefresh();
      }, this)
    );
    this.spacesDBPath = (0, import_obsidian72.normalizePath)(
      app.vault.configDir + "/plugins/make-md/Spaces.mdb"
    );
    this.loadSuperState();
    this.addSettingTab(new MakeMDPluginSettingsTab(this.app, this));
    await this.loadSpaces();
    this.loadContext();
    this.loadMakerMode();
    this.reloadExtensions(true);
    this.loadCommands();
    console.timeEnd("Loading Make.md");
  }
  openFileFromPortal(e4) {
    openFileFromPortal(this, e4);
  }
  loadPortal(e4) {
    loadFlowEditorByDOM2(this, e4.detail.el, e4.detail.view, e4.detail.id);
  }
  spawnPortal(e4) {
    spawnNewPortal(this, e4);
  }
  focusPortal(e4) {
    focusPortal(this, e4);
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
    const userConfig = safelyParseJSON(await defaultConfigFile(this.app));
    this.settings.newFileFolderPath = userConfig.newFileFolderPath;
    this.settings.newFileLocation = userConfig.newFileLocation;
    this.saveSettings();
  }
  async saveSettings(refresh = true) {
    await this.saveData(this.settings);
    if (refresh) {
      const evt = new CustomEvent(eventTypes.settingsChanged, {});
      window.dispatchEvent(evt);
    }
  }
  onunload() {
    console.log("Unloading Make.md");
    window.removeEventListener(eventTypes.spawnPortal, this.spawnPortal);
    window.removeEventListener(eventTypes.loadPortal, this.loadPortal);
    window.removeEventListener(eventTypes.focusPortal, this.focusPortal);
    window.removeEventListener(
      eventTypes.openFilePortal,
      this.openFileFromPortal
    );
    this.detachFileTreeLeafs();
  }
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/*!
    localForage -- Offline Storage, Improved
    Version 1.10.0
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
*/
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
/**
 * react-table
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * react-virtual
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
